-- ============================================================
-- ASTRO Reference Database (reference_db)
-- Version: 1.0
-- Description: Static reference data for ASTRO platform
-- ============================================================

CREATE DATABASE reference_db 
    CHARACTER SET utf8mb4 
    COLLATE utf8mb4_unicode_ci;

USE reference_db;

-- =====================================================
-- SECTION 1: STATUS LOOKUPS
-- =====================================================

-- =====================================================
-- ACTION TYPE
-- =====================================================
CREATE TABLE IF NOT EXISTS action_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO action_type (code, name, description, display_order) VALUES
('CREATE', 'Create', 'Create new record', 10),
('UPDATE', 'Update', 'Update existing record', 20),
('DELETE', 'Delete', 'Delete record', 30),
('APPROVE', 'Approve', 'Approve action or request', 40),
('REJECT', 'Reject', 'Reject action or request', 50),
('SUBMIT', 'Submit', 'Submit for processing', 60),
('CANCEL', 'Cancel', 'Cancel operation', 70),
('RESTORE', 'Restore', 'Restore deleted record', 80),
('ARCHIVE', 'Archive', 'Archive record', 90),
('UNARCHIVE', 'Unarchive', 'Unarchive record', 100),
('ASSIGN', 'Assign', 'Assign to user or entity', 110),
('UNASSIGN', 'Unassign', 'Remove assignment', 120),
('PUBLISH', 'Publish', 'Publish content', 130),
('UNPUBLISH', 'Unpublish', 'Unpublish content', 140),
('REGISTER', 'Register', 'Register with collection society', 150),
('CLAIM', 'Claim', 'Claim ownership or rights', 160),
('RELEASE', 'Release', 'Release rights or content', 170),
('TRANSFER', 'Transfer', 'Transfer ownership', 180),
('SPLIT', 'Split', 'Split royalties or rights', 190),
('MERGE', 'Merge', 'Merge records', 200);

-- =====================================================
-- CHANGE TYPE
-- =====================================================
CREATE TABLE IF NOT EXISTS change_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO change_type (code, name, description, display_order) VALUES
('METADATA', 'Metadata Change', 'Change to song or recording metadata', 10),
('OWNERSHIP', 'Ownership Change', 'Change in ownership percentages', 20),
('CONTRIBUTOR', 'Contributor Change', 'Add, remove, or modify contributors', 30),
('RIGHTS', 'Rights Change', 'Change in rights ownership or administration', 40),
('TERRITORY', 'Territory Change', 'Change in territorial rights', 50),
('DURATION', 'Duration Change', 'Change in rights duration or term', 60),
('SPLIT', 'Split Change', 'Change in royalty splits', 70),
('PUBLISHER', 'Publisher Change', 'Change in publishing administration', 80),
('LABEL', 'Label Change', 'Change in record label', 90),
('STATUS', 'Status Change', 'Change in work or recording status', 100),
('TITLE', 'Title Change', 'Change in work or recording title', 110),
('ISRC', 'ISRC Change', 'Change in ISRC code', 120),
('ISWC', 'ISWC Change', 'Change in ISWC code', 130),
('RELEASE_DATE', 'Release Date Change', 'Change in release date', 140),
('AGREEMENT', 'Agreement Change', 'Change in contractual agreement', 150);

-- =====================================================
-- AGREEMENT STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS agreement_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO agreement_status (code, name, description, display_order) VALUES
('DRAFT', 'Draft', 'Agreement is being drafted', 10),
('PENDING_REVIEW', 'Pending Review', 'Awaiting legal or management review', 20),
('PENDING_SIGNATURE', 'Pending Signature', 'Sent for signatures', 30),
('PARTIALLY_SIGNED', 'Partially Signed', 'Some parties have signed', 40),
('FULLY_SIGNED', 'Fully Signed', 'All parties have signed', 50),
('ACTIVE', 'Active', 'Agreement is in effect', 60),
('AMENDED', 'Amended', 'Agreement has been amended', 70),
('RENEWED', 'Renewed', 'Agreement has been renewed', 80),
('EXPIRING', 'Expiring Soon', 'Agreement expires within 90 days', 90),
('EXPIRED', 'Expired', 'Agreement has expired', 100),
('TERMINATED', 'Terminated', 'Agreement was terminated', 110),
('SUSPENDED', 'Suspended', 'Agreement is temporarily suspended', 120),
('DISPUTED', 'Disputed', 'Agreement is under dispute', 130),
('SUPERSEDED', 'Superseded', 'Replaced by newer agreement', 140),
('CANCELLED', 'Cancelled', 'Agreement was cancelled before execution', 150);

-- =====================================================
-- APPROVAL STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS approval_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO approval_status (code, name, description, display_order) VALUES
('PENDING', 'Pending Approval', 'Awaiting approval', 10),
('IN_REVIEW', 'In Review', 'Currently being reviewed', 20),
('APPROVED', 'Approved', 'Approved by authorized party', 30),
('REJECTED', 'Rejected', 'Rejected by authorized party', 40),
('CONDITIONAL', 'Conditional Approval', 'Approved with conditions', 50),
('ESCALATED', 'Escalated', 'Escalated to higher authority', 60),
('AUTO_APPROVED', 'Auto-Approved', 'Automatically approved by system', 70),
('RECALLED', 'Recalled', 'Approval request recalled', 80),
('EXPIRED', 'Expired', 'Approval request expired', 90),
('PARTIAL', 'Partially Approved', 'Some items approved, others pending', 100);

-- =====================================================
-- ARCHIVE STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS archive_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO archive_status (code, name, description, display_order) VALUES
('ACTIVE', 'Active', 'Not archived, actively used', 10),
('ARCHIVED', 'Archived', 'Archived for long-term storage', 20),
('SCHEDULED', 'Scheduled for Archive', 'Will be archived on specified date', 30),
('RESTORED', 'Restored', 'Restored from archive', 40),
('PERMANENT', 'Permanently Archived', 'Cannot be restored', 50),
('COLD_STORAGE', 'Cold Storage', 'Moved to offline storage', 60),
('COMPLIANCE_HOLD', 'Compliance Hold', 'Archived for compliance reasons', 70),
('LEGAL_HOLD', 'Legal Hold', 'Archived for legal reasons', 80);

-- =====================================================
-- AUDIT ACTION TYPE
-- =====================================================
CREATE TABLE IF NOT EXISTS audit_action_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO audit_action_type (code, name, description, display_order) VALUES
('LOGIN', 'User Login', 'User logged into system', 10),
('LOGOUT', 'User Logout', 'User logged out of system', 20),
('VIEW', 'View Record', 'User viewed record', 30),
('CREATE', 'Create Record', 'User created new record', 40),
('UPDATE', 'Update Record', 'User updated record', 50),
('DELETE', 'Delete Record', 'User deleted record', 60),
('EXPORT', 'Export Data', 'User exported data', 70),
('IMPORT', 'Import Data', 'User imported data', 80),
('DOWNLOAD', 'Download File', 'User downloaded file', 90),
('UPLOAD', 'Upload File', 'User uploaded file', 100),
('PERMISSION_CHANGE', 'Permission Change', 'User permissions modified', 110),
('PASSWORD_CHANGE', 'Password Change', 'User changed password', 120),
('FAILED_LOGIN', 'Failed Login', 'Failed login attempt', 130),
('API_ACCESS', 'API Access', 'API endpoint accessed', 140),
('BULK_OPERATION', 'Bulk Operation', 'Bulk operation performed', 150),
('SYSTEM_CONFIG', 'System Configuration', 'System configuration changed', 160),
('ROYALTY_CALCULATION', 'Royalty Calculation', 'Royalty calculation performed', 170),
('PAYMENT_PROCESSED', 'Payment Processed', 'Payment transaction processed', 180),
('CONTRACT_SIGNED', 'Contract Signed', 'Digital contract signed', 190),
('RIGHTS_TRANSFER', 'Rights Transfer', 'Rights ownership transferred', 200);

-- =====================================================
-- AUTHENTICATION STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS authentication_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO authentication_status (code, name, description, display_order) VALUES
('PENDING', 'Pending', 'Authentication pending', 10),
('AUTHENTICATED', 'Authenticated', 'Successfully authenticated', 20),
('FAILED', 'Failed', 'Authentication failed', 30),
('EXPIRED', 'Expired', 'Authentication expired', 40),
('LOCKED', 'Locked', 'Account locked due to failures', 50),
('MFA_REQUIRED', 'MFA Required', 'Multi-factor authentication required', 60),
('MFA_PENDING', 'MFA Pending', 'Awaiting MFA verification', 70),
('PASSWORD_RESET', 'Password Reset Required', 'User must reset password', 80),
('SUSPENDED', 'Suspended', 'Account temporarily suspended', 90),
('REVOKED', 'Revoked', 'Authentication revoked', 100);

-- =====================================================
-- BLOCKCHAIN STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS blockchain_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO blockchain_status (code, name, description, display_order) VALUES
('PENDING', 'Pending', 'Transaction pending submission', 10),
('SUBMITTED', 'Submitted', 'Transaction submitted to blockchain', 20),
('CONFIRMING', 'Confirming', 'Awaiting blockchain confirmations', 30),
('CONFIRMED', 'Confirmed', 'Transaction confirmed on blockchain', 40),
('FAILED', 'Failed', 'Transaction failed', 50),
('REJECTED', 'Rejected', 'Transaction rejected by network', 60),
('MINTED', 'Minted', 'NFT successfully minted', 70),
('BURNED', 'Burned', 'NFT burned/destroyed', 80),
('TRANSFERRED', 'Transferred', 'Asset transferred on blockchain', 90),
('GAS_INSUFFICIENT', 'Insufficient Gas', 'Transaction failed due to insufficient gas', 100),
('TIMEOUT', 'Timeout', 'Transaction timed out', 110),
('ORPHANED', 'Orphaned', 'Transaction orphaned due to reorg', 120);

-- =====================================================
-- CALCULATION STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS calculation_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO calculation_status (code, name, description, display_order) VALUES
('PENDING', 'Pending', 'Calculation pending', 10),
('IN_PROGRESS', 'In Progress', 'Calculation in progress', 20),
('COMPLETED', 'Completed', 'Calculation completed successfully', 30),
('FAILED', 'Failed', 'Calculation failed', 40),
('PARTIAL', 'Partially Complete', 'Some calculations completed', 50),
('VALIDATING', 'Validating', 'Validating calculation results', 60),
('APPROVED', 'Approved', 'Calculation results approved', 70),
('DISPUTED', 'Disputed', 'Calculation results disputed', 80),
('RECALCULATING', 'Recalculating', 'Recalculation in progress', 90),
('CANCELLED', 'Cancelled', 'Calculation cancelled', 100);

-- =====================================================
-- COMPLIANCE STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS compliance_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO compliance_status (code, name, description, display_order) VALUES
('COMPLIANT', 'Compliant', 'Meets all compliance requirements', 10),
('NON_COMPLIANT', 'Non-Compliant', 'Does not meet requirements', 20),
('PENDING_REVIEW', 'Pending Review', 'Awaiting compliance review', 30),
('IN_REMEDIATION', 'In Remediation', 'Working to achieve compliance', 40),
('EXEMPTED', 'Exempted', 'Exempted from compliance requirements', 50),
('PARTIALLY_COMPLIANT', 'Partially Compliant', 'Meets some requirements', 60),
('EXPIRED', 'Expired', 'Compliance certification expired', 70),
('WARNING', 'Warning', 'At risk of non-compliance', 80),
('CERTIFIED', 'Certified', 'Compliance certified by authority', 90),
('AUDIT_REQUIRED', 'Audit Required', 'Requires compliance audit', 100);

-- =====================================================
-- CONTENT STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS content_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO content_status (code, name, description, display_order) VALUES
('DRAFT', 'Draft', 'Content in draft state', 10),
('READY', 'Ready for Release', 'Content ready for distribution', 20),
('RELEASED', 'Released', 'Content publicly released', 30),
('LIVE', 'Live', 'Content currently live on platforms', 40),
('TAKEDOWN_REQUESTED', 'Takedown Requested', 'Takedown requested from platforms', 50),
('TAKEN_DOWN', 'Taken Down', 'Content removed from platforms', 60),
('ARCHIVED', 'Archived', 'Content archived', 70),
('EMBARGO', 'Embargoed', 'Content under embargo until date', 80),
('RESTRICTED', 'Restricted', 'Content has distribution restrictions', 90),
('DELETED', 'Deleted', 'Content deleted', 100),
('PROCESSING', 'Processing', 'Content being processed', 110),
('ERROR', 'Error', 'Content has processing errors', 120);

-- =====================================================
-- DELIVERY STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS delivery_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO delivery_status (code, name, description, display_order) VALUES
('PENDING', 'Pending', 'Delivery pending', 10),
('QUEUED', 'Queued', 'In delivery queue', 20),
('IN_PROGRESS', 'In Progress', 'Delivery in progress', 30),
('DELIVERED', 'Delivered', 'Successfully delivered', 40),
('FAILED', 'Failed', 'Delivery failed', 50),
('PARTIAL', 'Partially Delivered', 'Some items delivered', 60),
('REJECTED', 'Rejected', 'Delivery rejected by recipient', 70),
('RETRYING', 'Retrying', 'Retrying failed delivery', 80),
('CANCELLED', 'Cancelled', 'Delivery cancelled', 90),
('EXPIRED', 'Expired', 'Delivery window expired', 100),
('ACKNOWLEDGED', 'Acknowledged', 'Delivery acknowledged by recipient', 110);

-- =====================================================
-- DISPUTE STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS dispute_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO dispute_status (code, name, description, display_order) VALUES
('OPEN', 'Open', 'Dispute is open', 10),
('INVESTIGATING', 'Under Investigation', 'Dispute being investigated', 20),
('PENDING_EVIDENCE', 'Pending Evidence', 'Awaiting evidence submission', 30),
('MEDIATION', 'In Mediation', 'Dispute in mediation', 40),
('ESCALATED', 'Escalated', 'Dispute escalated to higher authority', 50),
('RESOLVED', 'Resolved', 'Dispute resolved', 60),
('CLOSED', 'Closed', 'Dispute closed', 70),
('WITHDRAWN', 'Withdrawn', 'Dispute withdrawn by claimant', 80),
('REJECTED', 'Rejected', 'Dispute claim rejected', 90),
('LEGAL_PROCEEDINGS', 'Legal Proceedings', 'Moved to legal proceedings', 100),
('SETTLED', 'Settled', 'Dispute settled between parties', 110);

-- =====================================================
-- EXPORT STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS export_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO export_status (code, name, description, display_order) VALUES
('PENDING', 'Pending', 'Export pending', 10),
('QUEUED', 'Queued', 'Export in queue', 20),
('PROCESSING', 'Processing', 'Export being processed', 30),
('COMPLETED', 'Completed', 'Export completed successfully', 40),
('FAILED', 'Failed', 'Export failed', 50),
('PARTIAL', 'Partial', 'Partial export completed', 60),
('CANCELLED', 'Cancelled', 'Export cancelled', 70),
('EXPIRED', 'Expired', 'Export link expired', 80),
('READY', 'Ready', 'Export ready for download', 90),
('DOWNLOADED', 'Downloaded', 'Export file downloaded', 100);

-- =====================================================
-- IMPORT STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS import_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO import_status (code, name, description, display_order) VALUES
('PENDING', 'Pending', 'Import pending', 10),
('UPLOADING', 'Uploading', 'File uploading', 20),
('VALIDATING', 'Validating', 'Validating import data', 30),
('PROCESSING', 'Processing', 'Processing import', 40),
('COMPLETED', 'Completed', 'Import completed successfully', 50),
('FAILED', 'Failed', 'Import failed', 60),
('PARTIAL', 'Partial Success', 'Some records imported successfully', 70),
('REJECTED', 'Rejected', 'Import rejected due to errors', 80),
('CANCELLED', 'Cancelled', 'Import cancelled', 90),
('MAPPING', 'Mapping Fields', 'Mapping import fields', 100);

-- =====================================================
-- JOB STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS job_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO job_status (code, name, description, display_order) VALUES
('PENDING', 'Pending', 'Job pending execution', 10),
('SCHEDULED', 'Scheduled', 'Job scheduled for future', 20),
('RUNNING', 'Running', 'Job currently running', 30),
('COMPLETED', 'Completed', 'Job completed successfully', 40),
('FAILED', 'Failed', 'Job failed', 50),
('CANCELLED', 'Cancelled', 'Job cancelled', 60),
('PAUSED', 'Paused', 'Job paused', 70),
('RETRYING', 'Retrying', 'Job being retried', 80),
('TIMEOUT', 'Timeout', 'Job timed out', 90),
('QUEUED', 'Queued', 'Job in queue', 100);

-- =====================================================
-- NOTIFICATION STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS notification_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO notification_status (code, name, description, display_order) VALUES
('PENDING', 'Pending', 'Notification pending delivery', 10),
('SENT', 'Sent', 'Notification sent', 20),
('DELIVERED', 'Delivered', 'Notification delivered', 30),
('READ', 'Read', 'Notification read by recipient', 40),
('UNREAD', 'Unread', 'Notification not yet read', 50),
('FAILED', 'Failed', 'Notification delivery failed', 60),
('BOUNCED', 'Bounced', 'Notification bounced', 70),
('ARCHIVED', 'Archived', 'Notification archived', 80),
('DELETED', 'Deleted', 'Notification deleted', 90),
('SNOOZED', 'Snoozed', 'Notification snoozed', 100);

-- =====================================================
-- PAYMENT STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS payment_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO payment_status (code, name, description, display_order) VALUES
('PENDING', 'Pending', 'Payment pending', 10),
('PROCESSING', 'Processing', 'Payment being processed', 20),
('COMPLETED', 'Completed', 'Payment completed successfully', 30),
('FAILED', 'Failed', 'Payment failed', 40),
('CANCELLED', 'Cancelled', 'Payment cancelled', 50),
('REFUNDED', 'Refunded', 'Payment refunded', 60),
('PARTIAL_REFUND', 'Partially Refunded', 'Payment partially refunded', 70),
('DISPUTED', 'Disputed', 'Payment disputed', 80),
('HOLD', 'On Hold', 'Payment on hold', 90),
('REVERSED', 'Reversed', 'Payment reversed', 100),
('AUTHORIZED', 'Authorized', 'Payment authorized but not captured', 110),
('VOIDED', 'Voided', 'Payment voided', 120);

-- =====================================================
-- PROCESSING STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS processing_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO processing_status (code, name, description, display_order) VALUES
('PENDING', 'Pending', 'Processing pending', 10),
('QUEUED', 'Queued', 'In processing queue', 20),
('IN_PROGRESS', 'In Progress', 'Currently processing', 30),
('COMPLETED', 'Completed', 'Processing completed', 40),
('FAILED', 'Failed', 'Processing failed', 50),
('PARTIAL', 'Partial', 'Partially processed', 60),
('CANCELLED', 'Cancelled', 'Processing cancelled', 70),
('PAUSED', 'Paused', 'Processing paused', 80),
('RETRYING', 'Retrying', 'Retrying processing', 90),
('ERROR', 'Error', 'Processing error', 100);

-- =====================================================
-- REGISTRATION STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS registration_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO registration_status (code, name, description, display_order) VALUES
('NOT_REGISTERED', 'Not Registered', 'Work not registered with any society', 10),
('PENDING', 'Pending Registration', 'Registration submitted, awaiting confirmation', 20),
('REGISTERED', 'Registered', 'Successfully registered', 30),
('REJECTED', 'Rejected', 'Registration rejected', 40),
('SUSPENDED', 'Suspended', 'Registration suspended', 50),
('REVOKED', 'Revoked', 'Registration revoked', 60),
('EXPIRED', 'Expired', 'Registration expired', 70),
('CONFLICTED', 'Conflicted', 'Registration conflicts exist', 80),
('UPDATING', 'Updating', 'Registration being updated', 90),
('DUPLICATE', 'Duplicate', 'Duplicate registration detected', 100);

-- =====================================================
-- RELEASE STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS release_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO release_status (code, name, description, display_order) VALUES
('DRAFT', 'Draft', 'Release in draft state', 10),
('SCHEDULED', 'Scheduled', 'Release scheduled for future date', 20),
('PRE_RELEASE', 'Pre-Release', 'Available for pre-release', 30),
('RELEASED', 'Released', 'Officially released', 40),
('LIVE', 'Live', 'Live on all platforms', 50),
('TAKEN_DOWN', 'Taken Down', 'Removed from platforms', 60),
('CANCELLED', 'Cancelled', 'Release cancelled', 70),
('HOLD', 'On Hold', 'Release on hold', 80),
('RE_RELEASED', 'Re-Released', 'Re-released after modifications', 90),
('DELISTED', 'Delisted', 'Delisted from stores', 100);

-- =====================================================
-- ROYALTY STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS royalty_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO royalty_status (code, name, description, display_order) VALUES
('PENDING_CALCULATION', 'Pending Calculation', 'Awaiting royalty calculation', 10),
('CALCULATED', 'Calculated', 'Royalties calculated', 20),
('PENDING_APPROVAL', 'Pending Approval', 'Awaiting approval', 30),
('APPROVED', 'Approved', 'Royalties approved for payment', 40),
('PENDING_PAYMENT', 'Pending Payment', 'Awaiting payment processing', 50),
('PAID', 'Paid', 'Royalties paid', 60),
('HELD', 'Held', 'Royalties held', 70),
('DISPUTED', 'Disputed', 'Royalties under dispute', 80),
('ADJUSTED', 'Adjusted', 'Royalties adjusted', 90),
('REJECTED', 'Rejected', 'Royalty claim rejected', 100),
('RECOUPED', 'Recouped', 'Applied to recoupment', 110),
('FORFEITED', 'Forfeited', 'Royalties forfeited', 120);

-- =====================================================
-- SESSION STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS session_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO session_status (code, name, description, display_order) VALUES
('ACTIVE', 'Active', 'Session is active', 10),
('IDLE', 'Idle', 'Session is idle', 20),
('EXPIRED', 'Expired', 'Session has expired', 30),
('TERMINATED', 'Terminated', 'Session was terminated', 40),
('LOCKED', 'Locked', 'Session is locked', 50),
('SUSPENDED', 'Suspended', 'Session is suspended', 60),
('REFRESHED', 'Refreshed', 'Session was refreshed', 70);

-- =====================================================
-- SYNC STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS sync_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO sync_status (code, name, description, display_order) VALUES
('AVAILABLE', 'Available', 'Available for sync licensing', 10),
('NOT_AVAILABLE', 'Not Available', 'Not available for sync', 20),
('PENDING_APPROVAL', 'Pending Approval', 'Sync request pending approval', 30),
('APPROVED', 'Approved', 'Sync use approved', 40),
('REJECTED', 'Rejected', 'Sync request rejected', 50),
('LICENSED', 'Licensed', 'Currently licensed for sync', 60),
('EXPIRED', 'Expired', 'Sync license expired', 70),
('EXCLUSIVE', 'Exclusive', 'Under exclusive sync agreement', 80),
('RESERVED', 'Reserved', 'Reserved for specific use', 90),
('NEGOTIATING', 'Negotiating', 'Sync terms being negotiated', 100);

-- =====================================================
-- TASK STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS task_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO task_status (code, name, description, display_order) VALUES
('NEW', 'New', 'New task created', 10),
('ASSIGNED', 'Assigned', 'Task assigned to user', 20),
('IN_PROGRESS', 'In Progress', 'Task in progress', 30),
('PENDING_REVIEW', 'Pending Review', 'Task pending review', 40),
('COMPLETED', 'Completed', 'Task completed', 50),
('CANCELLED', 'Cancelled', 'Task cancelled', 60),
('ON_HOLD', 'On Hold', 'Task on hold', 70),
('BLOCKED', 'Blocked', 'Task blocked by dependency', 80),
('DEFERRED', 'Deferred', 'Task deferred to later date', 90),
('FAILED', 'Failed', 'Task failed', 100);

-- =====================================================
-- TRANSACTION STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS transaction_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO transaction_status (code, name, description, display_order) VALUES
('PENDING', 'Pending', 'Transaction pending', 10),
('PROCESSING', 'Processing', 'Transaction processing', 20),
('COMPLETED', 'Completed', 'Transaction completed', 30),
('FAILED', 'Failed', 'Transaction failed', 40),
('CANCELLED', 'Cancelled', 'Transaction cancelled', 50),
('REVERSED', 'Reversed', 'Transaction reversed', 60),
('DISPUTED', 'Disputed', 'Transaction disputed', 70),
('REFUNDED', 'Refunded', 'Transaction refunded', 80),
('VOID', 'Void', 'Transaction voided', 90),
('EXPIRED', 'Expired', 'Transaction expired', 100);

-- =====================================================
-- TRANSFER STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS transfer_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO transfer_status (code, name, description, display_order) VALUES
('INITIATED', 'Initiated', 'Transfer initiated', 10),
('PENDING_APPROVAL', 'Pending Approval', 'Awaiting approval', 20),
('APPROVED', 'Approved', 'Transfer approved', 30),
('IN_PROGRESS', 'In Progress', 'Transfer in progress', 40),
('COMPLETED', 'Completed', 'Transfer completed', 50),
('FAILED', 'Failed', 'Transfer failed', 60),
('REJECTED', 'Rejected', 'Transfer rejected', 70),
('CANCELLED', 'Cancelled', 'Transfer cancelled', 80),
('REVERSED', 'Reversed', 'Transfer reversed', 90),
('PARTIAL', 'Partial', 'Partial transfer completed', 100);

-- =====================================================
-- UPLOAD STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS upload_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO upload_status (code, name, description, display_order) VALUES
('PENDING', 'Pending', 'Upload pending', 10),
('UPLOADING', 'Uploading', 'Currently uploading', 20),
('PROCESSING', 'Processing', 'Processing uploaded file', 30),
('COMPLETED', 'Completed', 'Upload completed successfully', 40),
('FAILED', 'Failed', 'Upload failed', 50),
('CANCELLED', 'Cancelled', 'Upload cancelled', 60),
('VIRUS_DETECTED', 'Virus Detected', 'Virus detected in upload', 70),
('INVALID_FORMAT', 'Invalid Format', 'Invalid file format', 80),
('SIZE_EXCEEDED', 'Size Exceeded', 'File size limit exceeded', 90),
('CORRUPTED', 'Corrupted', 'File corrupted', 100);

-- =====================================================
-- VALIDATION STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS validation_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO validation_status (code, name, description, display_order) VALUES
('PENDING', 'Pending', 'Validation pending', 10),
('IN_PROGRESS', 'In Progress', 'Validation in progress', 20),
('PASSED', 'Passed', 'Validation passed', 30),
('FAILED', 'Failed', 'Validation failed', 40),
('WARNING', 'Warning', 'Validation passed with warnings', 50),
('PARTIAL', 'Partial', 'Partially validated', 60),
('SKIPPED', 'Skipped', 'Validation skipped', 70),
('ERROR', 'Error', 'Validation error occurred', 80),
('MANUAL_REVIEW', 'Manual Review Required', 'Requires manual validation', 90),
('OVERRIDDEN', 'Overridden', 'Validation overridden by admin', 100);

-- =====================================================
-- VERIFICATION STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS verification_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO verification_status (code, name, description, display_order) VALUES
('UNVERIFIED', 'Unverified', 'Not yet verified', 10),
('PENDING', 'Pending Verification', 'Verification pending', 20),
('IN_PROGRESS', 'In Progress', 'Verification in progress', 30),
('VERIFIED', 'Verified', 'Successfully verified', 40),
('FAILED', 'Failed', 'Verification failed', 50),
('EXPIRED', 'Expired', 'Verification expired', 60),
('REVOKED', 'Revoked', 'Verification revoked', 70),
('DISPUTED', 'Disputed', 'Verification disputed', 80),
('MANUAL_REQUIRED', 'Manual Required', 'Manual verification required', 90),
('TRUSTED', 'Trusted', 'Trusted source, auto-verified', 100);

-- =====================================================
-- WORKFLOW STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS workflow_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO workflow_status (code, name, description, display_order) VALUES
('DRAFT', 'Draft', 'Workflow in draft state', 10),
('ACTIVE', 'Active', 'Workflow is active', 20),
('PAUSED', 'Paused', 'Workflow is paused', 30),
('COMPLETED', 'Completed', 'Workflow completed', 40),
('CANCELLED', 'Cancelled', 'Workflow cancelled', 50),
('FAILED', 'Failed', 'Workflow failed', 60),
('PENDING_APPROVAL', 'Pending Approval', 'Awaiting workflow approval', 70),
('APPROVED', 'Approved', 'Workflow approved', 80),
('REJECTED', 'Rejected', 'Workflow rejected', 90),
('ARCHIVED', 'Archived', 'Workflow archived', 100);

-- =====================================================
-- ADDITIONAL MUSIC INDUSTRY SPECIFIC STATUS TABLES
-- =====================================================

-- =====================================================
-- COPYRIGHT STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS copyright_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO copyright_status (code, name, description, display_order) VALUES
('PROTECTED', 'Copyright Protected', 'Work is under copyright protection', 10),
('PUBLIC_DOMAIN', 'Public Domain', 'Work is in public domain', 20),
('PENDING_REGISTRATION', 'Pending Registration', 'Copyright registration pending', 30),
('REGISTERED', 'Registered', 'Copyright registered with authority', 40),
('DISPUTED', 'Disputed', 'Copyright ownership disputed', 50),
('EXPIRED', 'Expired', 'Copyright has expired', 60),
('TRANSFERRED', 'Transferred', 'Copyright ownership transferred', 70),
('SHARED', 'Shared', 'Copyright shared among multiple parties', 80),
('UNKNOWN', 'Unknown', 'Copyright status unknown', 90),
('INFRINGEMENT_CLAIM', 'Infringement Claim', 'Subject to infringement claim', 100);

-- =====================================================
-- DISTRIBUTION STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS distribution_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO distribution_status (code, name, description, display_order) VALUES
('NOT_DISTRIBUTED', 'Not Distributed', 'Not yet distributed to platforms', 10),
('PENDING_DISTRIBUTION', 'Pending Distribution', 'Awaiting distribution', 20),
('DISTRIBUTING', 'Distributing', 'Currently being distributed', 30),
('DISTRIBUTED', 'Distributed', 'Successfully distributed', 40),
('PARTIAL_DISTRIBUTION', 'Partial Distribution', 'Distributed to some platforms', 50),
('FAILED', 'Failed', 'Distribution failed', 60),
('RECALLED', 'Recalled', 'Recalled from distribution', 70),
('TERRITORIAL_RESTRICTION', 'Territorial Restriction', 'Limited territorial distribution', 80),
('PLATFORM_RESTRICTION', 'Platform Restriction', 'Limited platform distribution', 90),
('WINDOWED', 'Windowed Release', 'Staggered distribution schedule', 100);

-- =====================================================
-- METADATA STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS metadata_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO metadata_status (code, name, description, display_order) VALUES
('INCOMPLETE', 'Incomplete', 'Missing required metadata', 10),
('COMPLETE', 'Complete', 'All required metadata present', 20),
('VALIDATED', 'Validated', 'Metadata validated successfully', 30),
('INVALID', 'Invalid', 'Metadata validation failed', 40),
('ENRICHED', 'Enriched', 'Metadata enhanced with additional info', 50),
('CONFLICTED', 'Conflicted', 'Metadata conflicts detected', 60),
('UPDATED', 'Updated', 'Metadata recently updated', 70),
('LOCKED', 'Locked', 'Metadata locked from editing', 80),
('AI_PROCESSED', 'AI Processed', 'Processed by AI validation', 90),
('MANUAL_REVIEW', 'Manual Review', 'Requires manual metadata review', 100);

-- =====================================================
-- QUALITY CONTROL STATUS
-- =====================================================
CREATE TABLE IF NOT EXISTS quality_control_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED NOT NULL DEFAULT 999,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO quality_control_status (code, name, description, display_order) VALUES
('PENDING_QC', 'Pending QC', 'Awaiting quality control', 10),
('IN_QC', 'In QC', 'Quality control in progress', 20),
('PASSED', 'Passed QC', 'Passed quality control', 30),
('FAILED', 'Failed QC', 'Failed quality control', 40),
('CONDITIONAL_PASS', 'Conditional Pass', 'Passed with conditions', 50),
('RESUBMITTED', 'Resubmitted', 'Resubmitted after QC failure', 60),
('EXEMPTED', 'QC Exempted', 'Exempted from QC process', 70),
('ESCALATED', 'Escalated', 'Escalated for senior review', 80),
('AUTO_PASSED', 'Auto-Passed', 'Automatically passed QC', 90),
('MANUAL_OVERRIDE', 'Manual Override', 'QC manually overridden', 100);

-- =====================================================
-- SECTION 2: GEOGRAPHIC LOOKUPS
-- =====================================================

-- Create reference_db schema if not exists
CREATE SCHEMA IF NOT EXISTS reference_db DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE reference_db;

-- =====================================================
-- TABLE: continent
-- =====================================================
CREATE TABLE continent (
    continent_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    continent_code CHAR(2) NOT NULL UNIQUE COMMENT 'AF, AN, AS, EU, NA, OC, SA',
    continent_name VARCHAR(50) NOT NULL,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    INDEX idx_continent_code (continent_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Continent reference data';

-- Initial data for continent
INSERT INTO continent (continent_code, continent_name) VALUES
('AF', 'Africa'),
('AN', 'Antarctica'),
('AS', 'Asia'),
('EU', 'Europe'),
('NA', 'North America'),
('OC', 'Oceania'),
('SA', 'South America');

-- =====================================================
-- TABLE: country
-- =====================================================
CREATE TABLE country (
    country_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    iso_alpha_2 CHAR(2) NOT NULL UNIQUE COMMENT 'ISO 3166-1 alpha-2',
    iso_alpha_3 CHAR(3) NOT NULL UNIQUE COMMENT 'ISO 3166-1 alpha-3',
    iso_numeric CHAR(3) NOT NULL UNIQUE COMMENT 'ISO 3166-1 numeric',
    country_name VARCHAR(100) NOT NULL COMMENT 'English name',
    official_name VARCHAR(200) COMMENT 'Official name in English',
    native_name VARCHAR(200) COMMENT 'Name in native language',
    continent_id INT UNSIGNED,
    capital_city VARCHAR(100),
    population BIGINT UNSIGNED,
    area_sq_km DECIMAL(10,2),
    gdp_usd DECIMAL(15,2),
    independence_date DATE,
    un_member BOOLEAN DEFAULT FALSE,
    sovereignty_status VARCHAR(50) DEFAULT 'independent' COMMENT 'independent, dependent, disputed',
    calling_code VARCHAR(10),
    tld VARCHAR(10) COMMENT 'Top-level domain',
    currency_code CHAR(3) COMMENT 'Primary currency',
    languages JSON COMMENT 'Array of official language codes',
    timezones JSON COMMENT 'Array of timezone names',
    borders JSON COMMENT 'Array of bordering country codes',
    is_active BOOLEAN DEFAULT TRUE,
    music_market_size VARCHAR(20) COMMENT 'major, medium, emerging, minor',
    pro_territories JSON COMMENT 'PRO coverage in this country',
    copyright_term_years INT COMMENT 'Standard copyright duration',
    neighboring_rights BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    FOREIGN KEY (continent_id) REFERENCES continent(continent_id),
    INDEX idx_iso_codes (iso_alpha_2, iso_alpha_3),
    INDEX idx_continent (continent_id),
    INDEX idx_active (is_active),
    INDEX idx_market_size (music_market_size)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='ISO 3166-1 Country data with music industry extensions';

-- Initial data for country (First 30 of 249 ISO countries)
INSERT INTO country (iso_alpha_2, iso_alpha_3, iso_numeric, country_name, official_name, continent_id, calling_code, tld, currency_code, is_active, copyright_term_years) VALUES
('AF', 'AFG', '004', 'Afghanistan', 'Islamic Republic of Afghanistan', 3, '+93', '.af', 'AFN', TRUE, 50),
('AX', 'ALA', '248', 'Åland Islands', 'Åland Islands', 4, '+358', '.ax', 'EUR', TRUE, 70),
('AL', 'ALB', '008', 'Albania', 'Republic of Albania', 4, '+355', '.al', 'ALL', TRUE, 70),
('DZ', 'DZA', '012', 'Algeria', 'People\'s Democratic Republic of Algeria', 1, '+213', '.dz', 'DZD', TRUE, 50),
('AS', 'ASM', '016', 'American Samoa', 'American Samoa', 6, '+1-684', '.as', 'USD', TRUE, 95),
('AD', 'AND', '020', 'Andorra', 'Principality of Andorra', 4, '+376', '.ad', 'EUR', TRUE, 70),
('AO', 'AGO', '024', 'Angola', 'Republic of Angola', 1, '+244', '.ao', 'AOA', TRUE, 50),
('AI', 'AIA', '660', 'Anguilla', 'Anguilla', 5, '+1-264', '.ai', 'XCD', TRUE, 50),
('AQ', 'ATA', '010', 'Antarctica', 'Antarctica', 2, NULL, '.aq', NULL, TRUE, NULL),
('AG', 'ATG', '028', 'Antigua and Barbuda', 'Antigua and Barbuda', 5, '+1-268', '.ag', 'XCD', TRUE, 50),
('AR', 'ARG', '032', 'Argentina', 'Argentine Republic', 7, '+54', '.ar', 'ARS', TRUE, 70),
('AM', 'ARM', '051', 'Armenia', 'Republic of Armenia', 3, '+374', '.am', 'AMD', TRUE, 70),
('AW', 'ABW', '533', 'Aruba', 'Aruba', 5, '+297', '.aw', 'AWG', TRUE, 50),
('AU', 'AUS', '036', 'Australia', 'Commonwealth of Australia', 6, '+61', '.au', 'AUD', TRUE, 70),
('AT', 'AUT', '040', 'Austria', 'Republic of Austria', 4, '+43', '.at', 'EUR', TRUE, 70),
('AZ', 'AZE', '031', 'Azerbaijan', 'Republic of Azerbaijan', 3, '+994', '.az', 'AZN', TRUE, 50),
('BS', 'BHS', '044', 'Bahamas', 'Commonwealth of The Bahamas', 5, '+1-242', '.bs', 'BSD', TRUE, 50),
('BH', 'BHR', '048', 'Bahrain', 'Kingdom of Bahrain', 3, '+973', '.bh', 'BHD', TRUE, 50),
('BD', 'BGD', '050', 'Bangladesh', 'People\'s Republic of Bangladesh', 3, '+880', '.bd', 'BDT', TRUE, 60),
('BB', 'BRB', '052', 'Barbados', 'Barbados', 5, '+1-246', '.bb', 'BBD', TRUE, 50),
('BY', 'BLR', '112', 'Belarus', 'Republic of Belarus', 4, '+375', '.by', 'BYN', TRUE, 50),
('BE', 'BEL', '056', 'Belgium', 'Kingdom of Belgium', 4, '+32', '.be', 'EUR', TRUE, 70),
('BZ', 'BLZ', '084', 'Belize', 'Belize', 5, '+501', '.bz', 'BZD', TRUE, 50),
('BJ', 'BEN', '204', 'Benin', 'Republic of Benin', 1, '+229', '.bj', 'XOF', TRUE, 50),
('BM', 'BMU', '060', 'Bermuda', 'Bermuda', 5, '+1-441', '.bm', 'BMD', TRUE, 50),
('BT', 'BTN', '064', 'Bhutan', 'Kingdom of Bhutan', 3, '+975', '.bt', 'BTN', TRUE, 50),
('BO', 'BOL', '068', 'Bolivia', 'Plurinational State of Bolivia', 7, '+591', '.bo', 'BOB', TRUE, 50),
('BQ', 'BES', '535', 'Bonaire, Sint Eustatius and Saba', 'Bonaire, Sint Eustatius and Saba', 5, '+599', '.bq', 'USD', TRUE, 50),
('BA', 'BIH', '070', 'Bosnia and Herzegovina', 'Bosnia and Herzegovina', 4, '+387', '.ba', 'BAM', TRUE, 70),
('BW', 'BWA', '072', 'Botswana', 'Republic of Botswana', 1, '+267', '.bw', 'BWP', TRUE, 50);
-- Note: Complete list continues for remaining 219 ISO countries

-- =====================================================
-- TABLE: country_subdivision
-- =====================================================
CREATE TABLE country_subdivision (
    subdivision_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    country_id INT UNSIGNED NOT NULL,
    subdivision_code VARCHAR(10) NOT NULL COMMENT 'ISO 3166-2 code',
    subdivision_name VARCHAR(100) NOT NULL,
    subdivision_type VARCHAR(50) COMMENT 'state, province, region, territory',
    parent_subdivision_id INT UNSIGNED,
    capital VARCHAR(100),
    timezone VARCHAR(50),
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    FOREIGN KEY (country_id) REFERENCES country(country_id),
    FOREIGN KEY (parent_subdivision_id) REFERENCES country_subdivision(subdivision_id),
    UNIQUE KEY uk_country_subdivision (country_id, subdivision_code),
    INDEX idx_country (country_id),
    INDEX idx_parent (parent_subdivision_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='ISO 3166-2 Country subdivisions';

-- Initial data for country_subdivision (Sample US states - first 10)
INSERT INTO country_subdivision (country_id, subdivision_code, subdivision_name, subdivision_type, timezone) VALUES
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 'US-AL', 'Alabama', 'state', 'America/Chicago'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 'US-AK', 'Alaska', 'state', 'America/Anchorage'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 'US-AZ', 'Arizona', 'state', 'America/Phoenix'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 'US-AR', 'Arkansas', 'state', 'America/Chicago'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 'US-CA', 'California', 'state', 'America/Los_Angeles'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 'US-CO', 'Colorado', 'state', 'America/Denver'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 'US-CT', 'Connecticut', 'state', 'America/New_York'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 'US-DE', 'Delaware', 'state', 'America/New_York'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 'US-FL', 'Florida', 'state', 'America/New_York'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 'US-GA', 'Georgia', 'state', 'America/New_York');
-- Note: Complete list would include all subdivisions for all countries

-- =====================================================
-- TABLE: region
-- =====================================================
CREATE TABLE region (
    region_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    region_code VARCHAR(20) NOT NULL UNIQUE,
    region_name VARCHAR(100) NOT NULL,
    region_type VARCHAR(50) COMMENT 'geographic, economic, cultural, music_industry',
    parent_region_id INT UNSIGNED,
    countries JSON COMMENT 'Array of country codes in this region',
    description TEXT,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    FOREIGN KEY (parent_region_id) REFERENCES region(region_id),
    INDEX idx_region_type (region_type),
    INDEX idx_parent (parent_region_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Geographic and economic regions';

-- Initial data for region
INSERT INTO region (region_code, region_name, region_type, countries, description) VALUES
('EU', 'European Union', 'economic', '["AT","BE","BG","HR","CY","CZ","DK","EE","FI","FR","DE","GR","HU","IE","IT","LV","LT","LU","MT","NL","PL","PT","RO","SK","SI","ES","SE"]', 'Economic and political union of 27 member states'),
('ASEAN', 'Association of Southeast Asian Nations', 'economic', '["BN","KH","ID","LA","MY","MM","PH","SG","TH","VN"]', 'Regional intergovernmental organization'),
('BRICS', 'BRICS', 'economic', '["BR","RU","IN","CN","ZA"]', 'Association of five major emerging economies'),
('NAFTA', 'North American Free Trade Agreement', 'trade', '["CA","MX","US"]', 'Trade agreement between North American countries'),
('MERCOSUR', 'Southern Common Market', 'trade', '["AR","BR","PY","UY","VE"]', 'South American trade bloc'),
('ARAB_LEAGUE', 'Arab League', 'political', '["DZ","BH","KM","DJ","EG","IQ","JO","KW","LB","LY","MR","MA","OM","PS","QA","SA","SO","SD","SY","TN","AE","YE"]', 'Regional organization of Arab states'),
('COMMONWEALTH', 'Commonwealth of Nations', 'political', '["AG","AU","BS","BD","BB","BZ","BW","BN","CM","CA","CY","DM","FJ","GM","GH","GD","GY","IN","JM","KE","KI","LS","MW","MY","MV","MT","MU","MZ","NA","NR","NZ","NG","PK","PG","RW","KN","LC","VC","WS","SC","SL","SG","SB","ZA","LK","SZ","TZ","TO","TT","TV","UG","GB","VU","ZM"]', 'Political association of 54 member states'),
('DACH', 'Germany, Austria, Switzerland', 'cultural', '["DE","AT","CH"]', 'German-speaking countries of Central Europe'),
('BENELUX', 'Belgium, Netherlands, Luxembourg', 'economic', '["BE","NL","LU"]', 'Political and economic union'),
('NORDICS', 'Nordic Countries', 'cultural', '["DK","FI","IS","NO","SE"]', 'Cultural and political region in Northern Europe'),
('CARICOM', 'Caribbean Community', 'economic', '["AG","BB","BS","BZ","DM","GD","GY","HT","JM","KN","LC","VC","SR","TT"]', 'Caribbean regional organization'),
('GCC', 'Gulf Cooperation Council', 'economic', '["BH","KW","OM","QA","SA","AE"]', 'Regional intergovernmental political and economic union');

-- =====================================================
-- TABLE: timezone
-- =====================================================
CREATE TABLE timezone (
    timezone_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    timezone_name VARCHAR(50) NOT NULL UNIQUE COMMENT 'IANA timezone name',
    utc_offset VARCHAR(10) NOT NULL COMMENT 'UTC offset like +05:30',
    dst_offset VARCHAR(10) COMMENT 'DST offset if applicable',
    abbreviation VARCHAR(10),
    is_dst_active BOOLEAN DEFAULT FALSE,
    country_codes JSON COMMENT 'Array of countries using this timezone',
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    INDEX idx_utc_offset (utc_offset),
    INDEX idx_dst_active (is_dst_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='IANA Timezone database';

-- Initial data for timezone (First 30 of ~600 IANA timezones)
INSERT INTO timezone (timezone_name, utc_offset, abbreviation, country_codes) VALUES
('Africa/Abidjan', '+00:00', 'GMT', '["CI","BF","GM","GN","ML","MR","SH","SL","SN","TG"]'),
('Africa/Accra', '+00:00', 'GMT', '["GH"]'),
('Africa/Addis_Ababa', '+03:00', 'EAT', '["ET"]'),
('Africa/Algiers', '+01:00', 'CET', '["DZ"]'),
('Africa/Asmara', '+03:00', 'EAT', '["ER"]'),
('Africa/Bamako', '+00:00', 'GMT', '["ML"]'),
('Africa/Bangui', '+01:00', 'WAT', '["CF"]'),
('Africa/Banjul', '+00:00', 'GMT', '["GM"]'),
('Africa/Bissau', '+00:00', 'GMT', '["GW"]'),
('Africa/Blantyre', '+02:00', 'CAT', '["MW"]'),
('Africa/Brazzaville', '+01:00', 'WAT', '["CG"]'),
('Africa/Bujumbura', '+02:00', 'CAT', '["BI"]'),
('Africa/Cairo', '+02:00', 'EET', '["EG"]'),
('Africa/Casablanca', '+01:00', 'WEST', '["MA"]'),
('Africa/Ceuta', '+01:00', 'CET', '["ES"]'),
('Africa/Conakry', '+00:00', 'GMT', '["GN"]'),
('Africa/Dakar', '+00:00', 'GMT', '["SN"]'),
('Africa/Dar_es_Salaam', '+03:00', 'EAT', '["TZ"]'),
('Africa/Djibouti', '+03:00', 'EAT', '["DJ"]'),
('Africa/Douala', '+01:00', 'WAT', '["CM"]'),
('Africa/El_Aaiun', '+01:00', 'WEST', '["EH"]'),
('Africa/Freetown', '+00:00', 'GMT', '["SL"]'),
('Africa/Gaborone', '+02:00', 'CAT', '["BW"]'),
('Africa/Harare', '+02:00', 'CAT', '["ZW"]'),
('Africa/Johannesburg', '+02:00', 'SAST', '["ZA"]'),
('Africa/Juba', '+03:00', 'EAT', '["SS"]'),
('Africa/Kampala', '+03:00', 'EAT', '["UG"]'),
('Africa/Khartoum', '+02:00', 'CAT', '["SD"]'),
('Africa/Kigali', '+02:00', 'CAT', '["RW"]'),
('Africa/Kinshasa', '+01:00', 'WAT', '["CD"]');
-- Note: Complete list continues for all IANA timezones

-- =====================================================
-- TABLE: language
-- =====================================================
CREATE TABLE language (
    language_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    iso_639_1 CHAR(2) UNIQUE COMMENT 'Two-letter code',
    iso_639_2t CHAR(3) UNIQUE COMMENT 'Three-letter terminological',
    iso_639_2b CHAR(3) UNIQUE COMMENT 'Three-letter bibliographic',
    iso_639_3 CHAR(3) UNIQUE COMMENT 'Three-letter comprehensive',
    language_name VARCHAR(100) NOT NULL COMMENT 'English name',
    native_name VARCHAR(100) COMMENT 'Name in native script',
    language_family VARCHAR(50),
    script_code CHAR(4) COMMENT 'ISO 15924 script code',
    speakers_count BIGINT UNSIGNED COMMENT 'Approximate native speakers',
    countries JSON COMMENT 'Array of countries where official',
    is_active BOOLEAN DEFAULT TRUE,
    is_right_to_left BOOLEAN DEFAULT FALSE,
    metadata_support BOOLEAN DEFAULT TRUE COMMENT 'Supported for music metadata',
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    INDEX idx_iso_codes (iso_639_1, iso_639_3),
    INDEX idx_active (is_active),
    INDEX idx_metadata_support (metadata_support)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='ISO 639 Language codes';

-- Initial data for language (First 30 of 184 ISO 639-1 languages)
INSERT INTO language (iso_639_1, iso_639_2t, iso_639_2b, iso_639_3, language_name, native_name, is_active, is_right_to_left, metadata_support) VALUES
('aa', 'aar', 'aar', 'aar', 'Afar', 'Afaraf', TRUE, FALSE, FALSE),
('ab', 'abk', 'abk', 'abk', 'Abkhazian', 'аҧсуа бызшәа', TRUE, FALSE, FALSE),
('ae', 'ave', 'ave', 'ave', 'Avestan', 'avesta', TRUE, FALSE, FALSE),
('af', 'afr', 'afr', 'afr', 'Afrikaans', 'Afrikaans', TRUE, FALSE, TRUE),
('ak', 'aka', 'aka', 'aka', 'Akan', 'Akan', TRUE, FALSE, FALSE),
('am', 'amh', 'amh', 'amh', 'Amharic', 'አማርኛ', TRUE, FALSE, TRUE),
('an', 'arg', 'arg', 'arg', 'Aragonese', 'aragonés', TRUE, FALSE, FALSE),
('ar', 'ara', 'ara', 'ara', 'Arabic', 'العربية', TRUE, TRUE, TRUE),
('as', 'asm', 'asm', 'asm', 'Assamese', 'অসমীয়া', TRUE, FALSE, FALSE),
('av', 'ava', 'ava', 'ava', 'Avaric', 'авар мацӀ', TRUE, FALSE, FALSE),
('ay', 'aym', 'aym', 'aym', 'Aymara', 'aymar aru', TRUE, FALSE, FALSE),
('az', 'aze', 'aze', 'aze', 'Azerbaijani', 'azərbaycan dili', TRUE, FALSE, TRUE),
('ba', 'bak', 'bak', 'bak', 'Bashkir', 'башҡорт теле', TRUE, FALSE, FALSE),
('be', 'bel', 'bel', 'bel', 'Belarusian', 'беларуская мова', TRUE, FALSE, TRUE),
('bg', 'bul', 'bul', 'bul', 'Bulgarian', 'български език', TRUE, FALSE, TRUE),
('bh', 'bih', 'bih', 'bih', 'Bihari languages', 'भोजपुरी', TRUE, FALSE, FALSE),
('bi', 'bis', 'bis', 'bis', 'Bislama', 'Bislama', TRUE, FALSE, FALSE),
('bm', 'bam', 'bam', 'bam', 'Bambara', 'bamanankan', TRUE, FALSE, FALSE),
('bn', 'ben', 'ben', 'ben', 'Bengali', 'বাংলা', TRUE, FALSE, TRUE),
('bo', 'bod', 'tib', 'bod', 'Tibetan', 'བོད་ཡིག', TRUE, FALSE, FALSE),
('br', 'bre', 'bre', 'bre', 'Breton', 'brezhoneg', TRUE, FALSE, FALSE),
('bs', 'bos', 'bos', 'bos', 'Bosnian', 'bosanski jezik', TRUE, FALSE, TRUE),
('ca', 'cat', 'cat', 'cat', 'Catalan', 'català', TRUE, FALSE, TRUE),
('ce', 'che', 'che', 'che', 'Chechen', 'нохчийн мотт', TRUE, FALSE, FALSE),
('ch', 'cha', 'cha', 'cha', 'Chamorro', 'Chamoru', TRUE, FALSE, FALSE),
('co', 'cos', 'cos', 'cos', 'Corsican', 'corsu', TRUE, FALSE, FALSE),
('cr', 'cre', 'cre', 'cre', 'Cree', 'ᓀᐦᐃᔭᐍᐏᐣ', TRUE, FALSE, FALSE),
('cs', 'ces', 'cze', 'ces', 'Czech', 'čeština', TRUE, FALSE, TRUE),
('cu', 'chu', 'chu', 'chu', 'Church Slavic', 'ѩзыкъ словѣньскъ', TRUE, FALSE, FALSE),
('cv', 'chv', 'chv', 'chv', 'Chuvash', 'чӑваш чӗлхи', TRUE, FALSE, FALSE);
-- Note: Complete list continues for all ISO 639-1 languages

-- =====================================================
-- TABLE: language_script
-- =====================================================
CREATE TABLE language_script (
    script_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    script_code CHAR(4) NOT NULL UNIQUE COMMENT 'ISO 15924 code',
    script_name VARCHAR(50) NOT NULL,
    numeric_code CHAR(3) NOT NULL UNIQUE,
    direction VARCHAR(3) DEFAULT 'ltr' COMMENT 'ltr or rtl',
    unicode_range VARCHAR(50),
    sample_text TEXT,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    INDEX idx_direction (direction)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='ISO 15924 Script codes';

-- Initial data for language_script
INSERT INTO language_script (script_code, script_name, numeric_code, direction, unicode_range) VALUES
('Arab', 'Arabic', '160', 'rtl', 'U+0600–U+06FF'),
('Armn', 'Armenian', '230', 'ltr', 'U+0530–U+058F'),
('Beng', 'Bengali', '325', 'ltr', 'U+0980–U+09FF'),
('Cyrl', 'Cyrillic', '220', 'ltr', 'U+0400–U+04FF'),
('Deva', 'Devanagari', '315', 'ltr', 'U+0900–U+097F'),
('Ethi', 'Ethiopic', '430', 'ltr', 'U+1200–U+137F'),
('Geor', 'Georgian', '240', 'ltr', 'U+10A0–U+10FF'),
('Grek', 'Greek', '200', 'ltr', 'U+0370–U+03FF'),
('Gujr', 'Gujarati', '320', 'ltr', 'U+0A80–U+0AFF'),
('Guru', 'Gurmukhi', '310', 'ltr', 'U+0A00–U+0A7F'),
('Hang', 'Hangul', '286', 'ltr', 'U+AC00–U+D7AF'),
('Hani', 'Han', '500', 'ltr', 'U+4E00–U+9FFF'),
('Hebr', 'Hebrew', '125', 'rtl', 'U+0590–U+05FF'),
('Hira', 'Hiragana', '410', 'ltr', 'U+3040–U+309F'),
('Jpan', 'Japanese', '413', 'ltr', 'Multiple'),
('Kana', 'Katakana', '411', 'ltr', 'U+30A0–U+30FF'),
('Knda', 'Kannada', '345', 'ltr', 'U+0C80–U+0CFF'),
('Kore', 'Korean', '287', 'ltr', 'Multiple'),
('Latn', 'Latin', '215', 'ltr', 'U+0000–U+024F'),
('Mlym', 'Malayalam', '347', 'ltr', 'U+0D00–U+0D7F'),
('Mymr', 'Myanmar', '350', 'ltr', 'U+1000–U+109F'),
('Orya', 'Oriya', '327', 'ltr', 'U+0B00–U+0B7F'),
('Sinh', 'Sinhala', '348', 'ltr', 'U+0D80–U+0DFF'),
('Taml', 'Tamil', '346', 'ltr', 'U+0B80–U+0BFF'),
('Telu', 'Telugu', '340', 'ltr', 'U+0C00–U+0C7F'),
('Thai', 'Thai', '352', 'ltr', 'U+0E00–U+0E7F'),
('Tibt', 'Tibetan', '330', 'ltr', 'U+0F00–U+0FFF'),
('Zmth', 'Mathematical notation', '995', 'ltr', 'Multiple'),
('Zsye', 'Emoji', '993', 'ltr', 'Multiple'),
('Zsym', 'Symbols', '996', 'ltr', 'Multiple');

-- =====================================================
-- TABLE: currency
-- =====================================================
CREATE TABLE currency (
    currency_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    currency_code CHAR(3) NOT NULL UNIQUE COMMENT 'ISO 4217 code',
    numeric_code CHAR(3) UNIQUE COMMENT 'ISO 4217 numeric',
    currency_name VARCHAR(100) NOT NULL,
    symbol VARCHAR(10),
    symbol_native VARCHAR(10),
    decimal_digits TINYINT DEFAULT 2,
    rounding DECIMAL(3,2) DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    is_crypto BOOLEAN DEFAULT FALSE,
    countries JSON COMMENT 'Array of countries using this currency',
    exchange_rate_usd DECIMAL(20,10) COMMENT 'Current rate to USD',
    last_rate_update DATETIME(6),
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    INDEX idx_active (is_active),
    INDEX idx_crypto (is_crypto),
    INDEX idx_code (currency_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='ISO 4217 Currency codes plus cryptocurrencies';

-- Initial data for currency (First 30 of 180 ISO currencies plus major cryptocurrencies)
INSERT INTO currency (currency_code, numeric_code, currency_name, symbol, decimal_digits, is_active, is_crypto) VALUES
('AED', '784', 'UAE Dirham', 'د.إ', 2, TRUE, FALSE),
('AFN', '971', 'Afghani', '؋', 2, TRUE, FALSE),
('ALL', '008', 'Lek', 'L', 2, TRUE, FALSE),
('AMD', '051', 'Armenian Dram', '֏', 2, TRUE, FALSE),
('ANG', '532', 'Netherlands Antillean Guilder', 'ƒ', 2, TRUE, FALSE),
('AOA', '973', 'Kwanza', 'Kz', 2, TRUE, FALSE),
('ARS', '032', 'Argentine Peso', '$', 2, TRUE, FALSE),
('AUD', '036', 'Australian Dollar', '$', 2, TRUE, FALSE),
('AWG', '533', 'Aruban Florin', 'ƒ', 2, TRUE, FALSE),
('AZN', '944', 'Azerbaijan Manat', '₼', 2, TRUE, FALSE),
('BAM', '977', 'Convertible Mark', 'KM', 2, TRUE, FALSE),
('BBD', '052', 'Barbados Dollar', '$', 2, TRUE, FALSE),
('BDT', '050', 'Taka', '৳', 2, TRUE, FALSE),
('BGN', '975', 'Bulgarian Lev', 'лв', 2, TRUE, FALSE),
('BHD', '048', 'Bahraini Dinar', '.د.ب', 3, TRUE, FALSE),
('BIF', '108', 'Burundi Franc', 'FBu', 0, TRUE, FALSE),
('BMD', '060', 'Bermudian Dollar', '$', 2, TRUE, FALSE),
('BND', '096', 'Brunei Dollar', '$', 2, TRUE, FALSE),
('BOB', '068', 'Boliviano', 'Bs.', 2, TRUE, FALSE),
('BOV', '984', 'Mvdol', NULL, 2, TRUE, FALSE),
('BRL', '986', 'Brazilian Real', 'R$', 2, TRUE, FALSE),
('BSD', '044', 'Bahamian Dollar', '$', 2, TRUE, FALSE),
('BTN', '064', 'Ngultrum', 'Nu.', 2, TRUE, FALSE),
('BWP', '072', 'Pula', 'P', 2, TRUE, FALSE),
('BYN', '933', 'Belarusian Ruble', 'Br', 2, TRUE, FALSE),
('BZD', '084', 'Belize Dollar', 'BZ$', 2, TRUE, FALSE),
('CAD', '124', 'Canadian Dollar', '$', 2, TRUE, FALSE),
('CDF', '976', 'Congolese Franc', 'FC', 2, TRUE, FALSE),
('CHE', '947', 'WIR Euro', NULL, 2, TRUE, FALSE),
('CHF', '756', 'Swiss Franc', 'Fr', 2, TRUE, FALSE),
-- Cryptocurrencies
('BTC', NULL, 'Bitcoin', '₿', 8, TRUE, TRUE),
('ETH', NULL, 'Ethereum', 'Ξ', 18, TRUE, TRUE),
('USDT', NULL, 'Tether', '₮', 6, TRUE, TRUE),
('BNB', NULL, 'Binance Coin', 'BNB', 8, TRUE, TRUE),
('XRP', NULL, 'Ripple', 'XRP', 6, TRUE, TRUE);
-- Note: Complete list continues for all ISO 4217 currencies

-- =====================================================
-- TABLE: calling_code
-- =====================================================
CREATE TABLE calling_code (
    calling_code_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    country_id INT UNSIGNED NOT NULL,
    calling_code VARCHAR(10) NOT NULL,
    trunk_prefix VARCHAR(5),
    international_prefix VARCHAR(10),
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    FOREIGN KEY (country_id) REFERENCES country(country_id),
    INDEX idx_calling_code (calling_code),
    INDEX idx_country (country_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='ITU E.164 International calling codes';

-- Initial data for calling_code
INSERT INTO calling_code (country_id, calling_code, trunk_prefix, international_prefix) VALUES
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '+1', '1', '011'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'CA'), '+1', '1', '011'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'GB'), '+44', '0', '00'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'FR'), '+33', '0', '00'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'DE'), '+49', '0', '00'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'JP'), '+81', '0', '010'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'CN'), '+86', '0', '00'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'IN'), '+91', '0', '00'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'BR'), '+55', '0', '00'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'RU'), '+7', '8', '810'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'AU'), '+61', '0', '0011'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'KR'), '+82', '0', '00'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'MX'), '+52', '01', '00'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'ES'), '+34', NULL, '00'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'IT'), '+39', NULL, '00');

-- =====================================================
-- TABLE: postal_code_format
-- =====================================================
CREATE TABLE postal_code_format (
    format_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    country_id INT UNSIGNED NOT NULL,
    format_pattern VARCHAR(50) COMMENT 'Regex pattern',
    format_example VARCHAR(20),
    format_description VARCHAR(200),
    is_mandatory BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    FOREIGN KEY (country_id) REFERENCES country(country_id),
    UNIQUE KEY uk_country_postal (country_id),
    INDEX idx_mandatory (is_mandatory)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Postal code formats by country';

-- Initial data for postal_code_format
INSERT INTO postal_code_format (country_id, format_pattern, format_example, format_description, is_mandatory) VALUES
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '^\\d{5}(-\\d{4})?$', '12345 or 12345-6789', 'Five digits, optionally followed by hyphen and four digits', TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'CA'), '^[A-Z]\\d[A-Z] \\d[A-Z]\\d$', 'K1A 0B1', 'Letter-number-letter space number-letter-number', TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'GB'), '^[A-Z]{1,2}\\d{1,2}[A-Z]? \\d[A-Z]{2}$', 'SW1A 1AA', 'Various formats with letters and numbers', TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'FR'), '^\\d{5}$', '75001', 'Five digits', TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'DE'), '^\\d{5}$', '10115', 'Five digits', TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'JP'), '^\\d{3}-\\d{4}$', '100-0001', 'Three digits, hyphen, four digits', TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'AU'), '^\\d{4}$', '2000', 'Four digits', TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'BR'), '^\\d{5}-\\d{3}$', '01310-100', 'Five digits, hyphen, three digits', TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'IN'), '^\\d{6}$', '110001', 'Six digits', TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'CN'), '^\\d{6}$', '100000', 'Six digits', TRUE);

-- =====================================================
-- TABLE: country_group
-- =====================================================
CREATE TABLE country_group (
    group_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    group_code VARCHAR(20) NOT NULL UNIQUE,
    group_name VARCHAR(100) NOT NULL,
    group_type VARCHAR(50) COMMENT 'economic, political, trade, cultural',
    members JSON COMMENT 'Array of country codes',
    established_date DATE,
    headquarters VARCHAR(100),
    official_languages JSON,
    website VARCHAR(255),
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    INDEX idx_group_type (group_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Economic and political country groups (EU, ASEAN, etc)';

-- Initial data for country_group
INSERT INTO country_group (group_code, group_name, group_type, members, established_date, headquarters) VALUES
('EU', 'European Union', 'economic', '["AT","BE","BG","HR","CY","CZ","DK","EE","FI","FR","DE","GR","HU","IE","IT","LV","LT","LU","MT","NL","PL","PT","RO","SK","SI","ES","SE"]', '1993-11-01', 'Brussels, Belgium'),
('G7', 'Group of Seven', 'economic', '["CA","FR","DE","IT","JP","GB","US"]', '1975-01-01', NULL),
('G20', 'Group of Twenty', 'economic', '["AR","AU","BR","CA","CN","FR","DE","IN","ID","IT","JP","KR","MX","RU","SA","ZA","TR","GB","US","EU"]', '1999-09-26', NULL),
('OECD', 'Organisation for Economic Co-operation and Development', 'economic', '["AU","AT","BE","CA","CL","CO","CZ","DK","EE","FI","FR","DE","GR","HU","IS","IE","IL","IT","JP","KR","LV","LT","LU","MX","NL","NZ","NO","PL","PT","SK","SI","ES","SE","CH","TR","GB","US"]', '1961-09-30', 'Paris, France'),
('UN', 'United Nations', 'political', NULL, '1945-10-24', 'New York, USA'),
('NATO', 'North Atlantic Treaty Organization', 'political', '["AL","BE","BG","CA","HR","CZ","DK","EE","FR","DE","GR","HU","IS","IT","LV","LT","LU","ME","NL","MK","NO","PL","PT","RO","SK","SI","ES","TR","GB","US"]', '1949-04-04', 'Brussels, Belgium'),
('APEC', 'Asia-Pacific Economic Cooperation', 'economic', '["AU","BN","CA","CL","CN","HK","ID","JP","KR","MY","MX","NZ","PG","PE","PH","RU","SG","TW","TH","US","VN"]', '1989-11-01', 'Singapore'),
('OPEC', 'Organization of the Petroleum Exporting Countries', 'economic', '["DZ","AO","CG","GQ","GA","IR","IQ","KW","LY","NG","SA","AE","VE"]', '1960-09-14', 'Vienna, Austria'),
('AFRICAN_UNION', 'African Union', 'political', '["DZ","AO","BJ","BW","BF","BI","CM","CV","CF","TD","KM","CG","CD","DJ","EG","GQ","ER","ET","GA","GM","GH","GN","GW","CI","KE","LS","LR","LY","MG","MW","ML","MR","MU","MA","MZ","NA","NE","NG","RW","ST","SN","SC","SL","SO","ZA","SS","SD","SZ","TZ","TG","TN","UG","ZM","ZW"]', '2002-07-09', 'Addis Ababa, Ethiopia'),
('BRICS', 'BRICS', 'economic', '["BR","RU","IN","CN","ZA"]', '2009-06-16', NULL);

-- =====================================================
-- TABLE: music_territory
-- =====================================================
CREATE TABLE music_territory (
    territory_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    territory_code VARCHAR(50) NOT NULL UNIQUE,
    territory_name VARCHAR(200) NOT NULL,
    territory_type VARCHAR(50) COMMENT 'single_country, multi_country, regional, worldwide',
    countries JSON COMMENT 'Array of included country codes',
    excluded_countries JSON COMMENT 'Array of excluded country codes',
    parent_territory_id INT UNSIGNED,
    cisac_tis_code VARCHAR(20) COMMENT 'CISAC Territory code',
    is_standard BOOLEAN DEFAULT TRUE COMMENT 'Industry standard territory',
    usage_context VARCHAR(50) COMMENT 'licensing, distribution, collection',
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    FOREIGN KEY (parent_territory_id) REFERENCES music_territory(territory_id),
    INDEX idx_territory_type (territory_type),
    INDEX idx_standard (is_standard),
    INDEX idx_usage (usage_context)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Music industry standard territories';

-- Initial data for music_territory
INSERT INTO music_territory (territory_code, territory_name, territory_type, countries, excluded_countries, usage_context, is_standard) VALUES
('WORLD', 'World', 'worldwide', '[]', NULL, 'licensing', TRUE),
('WORLD_EX_US', 'World excluding United States', 'worldwide', NULL, '["US"]', 'licensing', TRUE),
('WORLD_EX_US_CA', 'World excluding United States and Canada', 'worldwide', NULL, '["US","CA"]', 'licensing', TRUE),
('WORLD_EX_US_CA_MX', 'World excluding North America', 'worldwide', NULL, '["US","CA","MX"]', 'licensing', TRUE),
('EUROPE', 'Europe', 'regional', '["AD","AL","AT","BA","BE","BG","BY","CH","CY","CZ","DE","DK","EE","ES","FI","FR","GB","GR","HR","HU","IE","IS","IT","LI","LT","LU","LV","MC","MD","ME","MK","MT","NL","NO","PL","PT","RO","RS","RU","SE","SI","SK","SM","UA","VA"]', NULL, 'licensing', TRUE),
('EUROPE_EX_UK', 'Europe excluding United Kingdom', 'regional', '["AD","AL","AT","BA","BE","BG","BY","CH","CY","CZ","DE","DK","EE","ES","FI","FR","GR","HR","HU","IE","IS","IT","LI","LT","LU","LV","MC","MD","ME","MK","MT","NL","NO","PL","PT","RO","RS","RU","SE","SI","SK","SM","UA","VA"]', NULL, 'licensing', TRUE),
('NORTH_AMERICA', 'North America', 'regional', '["CA","MX","US"]', NULL, 'licensing', TRUE),
('SOUTH_AMERICA', 'South America', 'regional', '["AR","BO","BR","CL","CO","EC","FK","GF","GY","PY","PE","SR","UY","VE"]', NULL, 'licensing', TRUE),
('ASIA', 'Asia', 'regional', '["AF","AM","AZ","BH","BD","BT","BN","KH","CN","CY","GE","IN","ID","IR","IQ","IL","JP","JO","KZ","KP","KR","KW","KG","LA","LB","MY","MV","MN","MM","NP","OM","PK","PS","PH","QA","SA","SG","LK","SY","TJ","TH","TL","TR","TM","AE","UZ","VN","YE"]', NULL, 'licensing', TRUE),
('AFRICA', 'Africa', 'regional', '["DZ","AO","BJ","BW","BF","BI","CM","CV","CF","TD","KM","CG","CD","DJ","EG","GQ","ER","ET","GA","GM","GH","GN","GW","CI","KE","LS","LR","LY","MG","MW","ML","MR","MU","YT","MA","MZ","NA","NE","NG","RE","RW","SH","ST","SN","SC","SL","SO","ZA","SS","SD","SZ","TZ","TG","TN","UG","EH","ZM","ZW"]', NULL, 'licensing', TRUE),
('OCEANIA', 'Oceania', 'regional', '["AS","AU","CK","FJ","PF","GU","KI","MH","FM","NR","NC","NZ","NU","NF","MP","PW","PG","PN","WS","SB","TK","TO","TV","UM","VU","WF"]', NULL, 'licensing', TRUE),
('GSA', 'Germany, Switzerland, Austria', 'multi_country', '["DE","CH","AT"]', NULL, 'distribution', TRUE),
('UK_IRELAND', 'United Kingdom and Ireland', 'multi_country', '["GB","IE"]', NULL, 'distribution', TRUE),
('BENELUX', 'Belgium, Netherlands, Luxembourg', 'multi_country', '["BE","NL","LU"]', NULL, 'distribution', TRUE),
('SCANDINAVIA', 'Scandinavia', 'multi_country', '["DK","NO","SE"]', NULL, 'distribution', TRUE),
('NORDICS', 'Nordic Countries', 'multi_country', '["DK","FI","IS","NO","SE"]', NULL, 'distribution', TRUE),
('LATAM', 'Latin America', 'regional', '["AR","BO","BR","CL","CO","CR","CU","DO","EC","SV","GT","HN","MX","NI","PA","PY","PE","UY","VE"]', NULL, 'distribution', TRUE),
('MENA', 'Middle East and North Africa', 'regional', '["DZ","BH","EG","IR","IQ","IL","JO","KW","LB","LY","MA","OM","PS","QA","SA","SY","TN","AE","YE"]', NULL, 'distribution', TRUE),
('APAC', 'Asia-Pacific', 'regional', '["AF","AU","BD","BT","BN","KH","CN","FJ","HK","IN","ID","JP","KP","KR","LA","MO","MY","MV","MN","MM","NP","NZ","PK","PG","PH","SG","LK","TW","TH","TL","VN"]', NULL, 'distribution', TRUE);

-- =====================================================
-- TABLE: city
-- =====================================================
CREATE TABLE city (
    city_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    city_name VARCHAR(100) NOT NULL,
    ascii_name VARCHAR(100),
    country_id INT UNSIGNED NOT NULL,
    subdivision_id INT UNSIGNED,
    latitude DECIMAL(10,7),
    longitude DECIMAL(10,7),
    population BIGINT UNSIGNED,
    elevation_m INT,
    timezone_id INT UNSIGNED,
    is_capital BOOLEAN DEFAULT FALSE,
    music_scene_rating TINYINT COMMENT '1-10 scale',
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    FOREIGN KEY (country_id) REFERENCES country(country_id),
    FOREIGN KEY (subdivision_id) REFERENCES country_subdivision(subdivision_id),
    FOREIGN KEY (timezone_id) REFERENCES timezone(timezone_id),
    INDEX idx_country (country_id),
    INDEX idx_population (population),
    INDEX idx_capital (is_capital),
    INDEX idx_coordinates (latitude, longitude)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Major cities with coordinates';

-- Initial data for city (Major music industry cities)
INSERT INTO city (city_name, ascii_name, country_id, latitude, longitude, population, is_capital, music_scene_rating) VALUES
('Los Angeles', 'Los Angeles', (SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 34.0522, -118.2437, 3898747, FALSE, 10),
('New York', 'New York', (SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 40.7128, -74.0060, 8336817, FALSE, 10),
('Nashville', 'Nashville', (SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 36.1627, -86.7816, 689447, FALSE, 10),
('London', 'London', (SELECT country_id FROM country WHERE iso_alpha_2 = 'GB'), 51.5074, -0.1278, 8982000, TRUE, 10),
('Tokyo', 'Tokyo', (SELECT country_id FROM country WHERE iso_alpha_2 = 'JP'), 35.6762, 139.6503, 13960000, TRUE, 9),
('Seoul', 'Seoul', (SELECT country_id FROM country WHERE iso_alpha_2 = 'KR'), 37.5665, 126.9780, 9733509, TRUE, 9),
('Mumbai', 'Mumbai', (SELECT country_id FROM country WHERE iso_alpha_2 = 'IN'), 19.0760, 72.8777, 12442373, FALSE, 8),
('Paris', 'Paris', (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR'), 48.8566, 2.3522, 2161000, TRUE, 8),
('Berlin', 'Berlin', (SELECT country_id FROM country WHERE iso_alpha_2 = 'DE'), 52.5200, 13.4050, 3769495, TRUE, 9),
('Stockholm', 'Stockholm', (SELECT country_id FROM country WHERE iso_alpha_2 = 'SE'), 59.3293, 18.0686, 975551, TRUE, 8),
('Toronto', 'Toronto', (SELECT country_id FROM country WHERE iso_alpha_2 = 'CA'), 43.6532, -79.3832, 2930000, FALSE, 8),
('Sydney', 'Sydney', (SELECT country_id FROM country WHERE iso_alpha_2 = 'AU'), -33.8688, 151.2093, 5312163, FALSE, 7),
('Rio de Janeiro', 'Rio de Janeiro', (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR'), -22.9068, -43.1729, 6748000, FALSE, 8),
('Mexico City', 'Mexico City', (SELECT country_id FROM country WHERE iso_alpha_2 = 'MX'), 19.4326, -99.1332, 8918653, TRUE, 7),
('Miami', 'Miami', (SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 25.7617, -80.1918, 470914, FALSE, 8);

-- =====================================================
-- TABLE: address_format
-- =====================================================
CREATE TABLE address_format (
    format_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    country_id INT UNSIGNED NOT NULL,
    format_template TEXT COMMENT 'Address format template',
    required_fields JSON COMMENT 'Array of required address fields',
    field_labels JSON COMMENT 'Localized field labels',
    postal_code_position VARCHAR(20) COMMENT 'before_city, after_city, last_line',
    state_label VARCHAR(50) COMMENT 'state, province, prefecture, etc',
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    FOREIGN KEY (country_id) REFERENCES country(country_id),
    UNIQUE KEY uk_country_address (country_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Country-specific address formatting rules';

-- Initial data for address_format
INSERT INTO address_format (country_id, format_template, required_fields, postal_code_position, state_label) VALUES
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '{name}\n{company}\n{street_address}\n{city}, {state} {postal_code}\n{country}', '["street_address","city","state","postal_code"]', 'after_city', 'State'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'GB'), '{name}\n{company}\n{street_address}\n{city}\n{postal_code}\n{country}', '["street_address","city","postal_code"]', 'last_line', 'County'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'JP'), '〒{postal_code}\n{prefecture}{city}{street_address}\n{name}', '["postal_code","prefecture","city","street_address"]', 'first_line', 'Prefecture'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'DE'), '{name}\n{company}\n{street_address}\n{postal_code} {city}\n{country}', '["street_address","postal_code","city"]', 'before_city', 'State'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'FR'), '{name}\n{company}\n{street_address}\n{postal_code} {city}\n{country}', '["street_address","postal_code","city"]', 'before_city', 'Region');

-- =====================================================
-- TABLE: date_format
-- =====================================================
CREATE TABLE date_format (
    format_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    country_id INT UNSIGNED,
    language_id INT UNSIGNED,
    date_format VARCHAR(50) COMMENT 'strftime format',
    time_format VARCHAR(50),
    datetime_format VARCHAR(50),
    first_day_of_week TINYINT DEFAULT 1 COMMENT '1=Monday, 7=Sunday',
    week_numbering VARCHAR(10) DEFAULT 'ISO' COMMENT 'ISO, US, Arabic',
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    FOREIGN KEY (country_id) REFERENCES country(country_id),
    FOREIGN KEY (language_id) REFERENCES language(language_id),
    INDEX idx_country_language (country_id, language_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Regional date and time formatting preferences';

-- Initial data for date_format
INSERT INTO date_format (country_id, date_format, time_format, datetime_format, first_day_of_week) VALUES
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '%m/%d/%Y', '%I:%M %p', '%m/%d/%Y %I:%M %p', 7),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'GB'), '%d/%m/%Y', '%H:%M', '%d/%m/%Y %H:%M', 1),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'FR'), '%d/%m/%Y', '%H:%M', '%d/%m/%Y %H:%M', 1),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'DE'), '%d.%m.%Y', '%H:%M', '%d.%m.%Y %H:%M', 1),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'JP'), '%Y年%m月%d日', '%H:%M', '%Y年%m月%d日 %H:%M', 7),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'CN'), '%Y年%m月%d日', '%H:%M', '%Y年%m月%d日 %H:%M', 1),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'KR'), '%Y년 %m월 %d일', '%H:%M', '%Y년 %m월 %d일 %H:%M', 7),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'BR'), '%d/%m/%Y', '%H:%M', '%d/%m/%Y %H:%M', 7),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'IN'), '%d-%m-%Y', '%H:%M', '%d-%m-%Y %H:%M', 7),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'AU'), '%d/%m/%Y', '%H:%M', '%d/%m/%Y %H:%M', 1);

-- =====================================================
-- TABLE: number_format
-- =====================================================
CREATE TABLE number_format (
    format_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    country_id INT UNSIGNED,
    language_id INT UNSIGNED,
    decimal_separator CHAR(1) DEFAULT '.',
    thousands_separator CHAR(1) DEFAULT ',',
    grouping_pattern VARCHAR(10) DEFAULT '3',
    positive_sign CHAR(1) DEFAULT '+',
    negative_sign CHAR(1) DEFAULT '-',
    percent_symbol VARCHAR(5) DEFAULT '%',
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    FOREIGN KEY (country_id) REFERENCES country(country_id),
    FOREIGN KEY (language_id) REFERENCES language(language_id),
    INDEX idx_country_language (country_id, language_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Regional number formatting preferences';

-- Initial data for number_format
INSERT INTO number_format (country_id, decimal_separator, thousands_separator) VALUES
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '.', ','),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'GB'), '.', ','),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'FR'), ',', ' '),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'DE'), ',', '.'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'ES'), ',', '.'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'IT'), ',', '.'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'BR'), ',', '.'),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'IN'), '.', ','),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'CN'), '.', ','),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'JP'), '.', ',');

-- =====================================================
-- TABLE: holiday_calendar
-- =====================================================
CREATE TABLE holiday_calendar (
    holiday_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    country_id INT UNSIGNED NOT NULL,
    holiday_date DATE NOT NULL,
    holiday_name VARCHAR(100) NOT NULL,
    holiday_type VARCHAR(50) COMMENT 'national, religious, cultural, bank',
    is_public BOOLEAN DEFAULT TRUE,
    is_bank_holiday BOOLEAN DEFAULT TRUE,
    impacts_business BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    FOREIGN KEY (country_id) REFERENCES country(country_id),
    INDEX idx_country_date (country_id, holiday_date),
    INDEX idx_holiday_type (holiday_type),
    INDEX idx_bank_holiday (is_bank_holiday)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Public holidays by country';

-- Initial data for holiday_calendar (2025 holidays)
INSERT INTO holiday_calendar (country_id, holiday_date, holiday_name, holiday_type, is_public, is_bank_holiday) VALUES
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '2025-01-01', 'New Year\'s Day', 'national', TRUE, TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '2025-01-20', 'Martin Luther King Jr. Day', 'national', TRUE, TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '2025-02-17', 'Presidents\' Day', 'national', TRUE, TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '2025-05-26', 'Memorial Day', 'national', TRUE, TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '2025-06-19', 'Juneteenth', 'national', TRUE, TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '2025-07-04', 'Independence Day', 'national', TRUE, TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '2025-09-01', 'Labor Day', 'national', TRUE, TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '2025-10-13', 'Columbus Day', 'national', TRUE, TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '2025-11-11', 'Veterans Day', 'national', TRUE, TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '2025-11-27', 'Thanksgiving Day', 'national', TRUE, TRUE),
((SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), '2025-12-25', 'Christmas Day', 'national', TRUE, TRUE);

-- =====================================================
-- TABLE: geographic_alias
-- =====================================================
CREATE TABLE geographic_alias (
    alias_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    entity_type VARCHAR(20) NOT NULL COMMENT 'country, city, region',
    entity_id INT UNSIGNED NOT NULL,
    alias_name VARCHAR(200) NOT NULL,
    language_id INT UNSIGNED,
    alias_type VARCHAR(50) COMMENT 'official, common, historical, abbreviation',
    is_preferred BOOLEAN DEFAULT FALSE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    FOREIGN KEY (language_id) REFERENCES language(language_id),
    INDEX idx_entity (entity_type, entity_id),
    INDEX idx_alias_name (alias_name),
    INDEX idx_preferred (is_preferred)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Alternative names and spellings for geographic entities';

-- Initial data for geographic_alias
INSERT INTO geographic_alias (entity_type, entity_id, alias_name, language_id, alias_type, is_preferred) VALUES
('country', (SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 'USA', (SELECT language_id FROM language WHERE iso_639_1 = 'en'), 'abbreviation', TRUE),
('country', (SELECT country_id FROM country WHERE iso_alpha_2 = 'US'), 'United States of America', (SELECT language_id FROM language WHERE iso_639_1 = 'en'), 'official', FALSE),
('country', (SELECT country_id FROM country WHERE iso_alpha_2 = 'GB'), 'UK', (SELECT language_id FROM language WHERE iso_639_1 = 'en'), 'abbreviation', TRUE),
('country', (SELECT country_id FROM country WHERE iso_alpha_2 = 'GB'), 'Britain', (SELECT language_id FROM language WHERE iso_639_1 = 'en'), 'common', FALSE),
('country', (SELECT country_id FROM country WHERE iso_alpha_2 = 'GB'), 'Great Britain', (SELECT language_id FROM language WHERE iso_639_1 = 'en'), 'common', FALSE),
('country', (SELECT country_id FROM country WHERE iso_alpha_2 = 'DE'), 'Deutschland', (SELECT language_id FROM language WHERE iso_639_1 = 'de'), 'official', TRUE),
('country', (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR'), 'République française', (SELECT language_id FROM language WHERE iso_639_1 = 'fr'), 'official', TRUE),
('country', (SELECT country_id FROM country WHERE iso_alpha_2 = 'ES'), 'España', (SELECT language_id FROM language WHERE iso_639_1 = 'es'), 'official', TRUE),
('country', (SELECT country_id FROM country WHERE iso_alpha_2 = 'CN'), '中国', (SELECT language_id FROM language WHERE iso_639_1 = 'zh'), 'official', TRUE),
('country', (SELECT country_id FROM country WHERE iso_alpha_2 = 'JP'), '日本', (SELECT language_id FROM language WHERE iso_639_1 = 'ja'), 'official', TRUE);

-- =====================================================
-- TABLE: territory_relationship
-- =====================================================
CREATE TABLE territory_relationship (
    relationship_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    parent_territory_id INT UNSIGNED NOT NULL,
    child_territory_id INT UNSIGNED NOT NULL,
    relationship_type VARCHAR(50) COMMENT 'contains, overlaps, excludes',
    start_date DATE,
    end_date DATE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    FOREIGN KEY (parent_territory_id) REFERENCES music_territory(territory_id),
    FOREIGN KEY (child_territory_id) REFERENCES music_territory(territory_id),
    UNIQUE KEY uk_territory_relationship (parent_territory_id, child_territory_id),
    INDEX idx_relationship_type (relationship_type),
    INDEX idx_dates (start_date, end_date)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Hierarchical relationships between territories';

-- Initial data for territory_relationship
INSERT INTO territory_relationship (parent_territory_id, child_territory_id, relationship_type) VALUES
((SELECT territory_id FROM music_territory WHERE territory_code = 'WORLD'), (SELECT territory_id FROM music_territory WHERE territory_code = 'EUROPE'), 'contains'),
((SELECT territory_id FROM music_territory WHERE territory_code = 'WORLD'), (SELECT territory_id FROM music_territory WHERE territory_code = 'NORTH_AMERICA'), 'contains'),
((SELECT territory_id FROM music_territory WHERE territory_code = 'WORLD'), (SELECT territory_id FROM music_territory WHERE territory_code = 'SOUTH_AMERICA'), 'contains'),
((SELECT territory_id FROM music_territory WHERE territory_code = 'WORLD'), (SELECT territory_id FROM music_territory WHERE territory_code = 'ASIA'), 'contains'),
((SELECT territory_id FROM music_territory WHERE territory_code = 'WORLD'), (SELECT territory_id FROM music_territory WHERE territory_code = 'AFRICA'), 'contains'),
((SELECT territory_id FROM music_territory WHERE territory_code = 'WORLD'), (SELECT territory_id FROM music_territory WHERE territory_code = 'OCEANIA'), 'contains'),
((SELECT territory_id FROM music_territory WHERE territory_code = 'EUROPE'), (SELECT territory_id FROM music_territory WHERE territory_code = 'GSA'), 'contains'),
((SELECT territory_id FROM music_territory WHERE territory_code = 'EUROPE'), (SELECT territory_id FROM music_territory WHERE territory_code = 'BENELUX'), 'contains'),
((SELECT territory_id FROM music_territory WHERE territory_code = 'EUROPE'), (SELECT territory_id FROM music_territory WHERE territory_code = 'NORDICS'), 'contains');

-- =====================================================
-- TABLE: currency_exchange_rate
-- =====================================================
CREATE TABLE currency_exchange_rate (
    rate_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    from_currency_id INT UNSIGNED NOT NULL,
    to_currency_id INT UNSIGNED NOT NULL,
    exchange_rate DECIMAL(20,10) NOT NULL,
    rate_date DATE NOT NULL,
    rate_source VARCHAR(50),
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    FOREIGN KEY (from_currency_id) REFERENCES currency(currency_id),
    FOREIGN KEY (to_currency_id) REFERENCES currency(currency_id),
    UNIQUE KEY uk_currency_rate_date (from_currency_id, to_currency_id, rate_date),
    INDEX idx_rate_date (rate_date),
    INDEX idx_currencies (from_currency_id, to_currency_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Historical currency exchange rates';

-- Sample exchange rates (USD as base)
INSERT INTO currency_exchange_rate (from_currency_id, to_currency_id, exchange_rate, rate_date, rate_source) VALUES
((SELECT currency_id FROM currency WHERE currency_code = 'USD'), (SELECT currency_id FROM currency WHERE currency_code = 'EUR'), 0.9234, '2025-05-31', 'ECB'),
((SELECT currency_id FROM currency WHERE currency_code = 'USD'), (SELECT currency_id FROM currency WHERE currency_code = 'GBP'), 0.7943, '2025-05-31', 'BOE'),
((SELECT currency_id FROM currency WHERE currency_code = 'USD'), (SELECT currency_id FROM currency WHERE currency_code = 'JPY'), 156.89, '2025-05-31', 'BOJ'),
((SELECT currency_id FROM currency WHERE currency_code = 'USD'), (SELECT currency_id FROM currency WHERE currency_code = 'CNY'), 7.2456, '2025-05-31', 'PBOC'),
((SELECT currency_id FROM currency WHERE currency_code = 'USD'), (SELECT currency_id FROM currency WHERE currency_code = 'BRL'), 5.0123, '2025-05-31', 'BCB');

-- =====================================================
-- TABLE: performing_rights_organization
-- =====================================================
CREATE TABLE performing_rights_organization (
    pro_id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    cisac_code INT NOT NULL UNIQUE COMMENT 'CISAC society code',
    society_name VARCHAR(200) NOT NULL,
    society_acronym VARCHAR(50),
    former_name VARCHAR(200),
    country_id INT UNSIGNED NOT NULL,
    membership_status VARCHAR(50),
    main_repertoire VARCHAR(100),
    secondary_repertoires JSON COMMENT 'Array of secondary repertoire types',
    foundation_year YEAR,
    ending_year YEAR,
    membership_type VARCHAR(50),
    membership_end_date DATE,
    address_line_1 VARCHAR(255),
    address_line_2 VARCHAR(255),
    city VARCHAR(100),
    postal_code VARCHAR(20),
    phone VARCHAR(50),
    email VARCHAR(255),
    website VARCHAR(255),
    territories_covered JSON COMMENT 'Array of territory codes',
    reciprocal_agreements JSON COMMENT 'Array of partner PRO codes',
    collection_types JSON COMMENT 'Array: performance, mechanical, sync, etc',
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    FOREIGN KEY (country_id) REFERENCES country(country_id),
    INDEX idx_cisac_code (cisac_code),
    INDEX idx_country (country_id),
    INDEX idx_active (is_active),
    INDEX idx_society_name (society_name)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Complete list of Performing Rights Organizations worldwide';

-- Insert all 385 PROs from CSV file
INSERT INTO performing_rights_organization (cisac_code, society_name, society_acronym, former_name, country_id, membership_status, main_repertoire, secondary_repertoires, foundation_year, ending_year, membership_type, membership_end_date, address_line_1, address_line_2, city, postal_code, phone, email, website, territories_covered, reciprocal_agreements, collection_types, is_active) VALUES
(001, 'ACUM', 'ACUM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'IL' LIMIT 1), 'Member', 'Musical', '["Literary"]', 1936, NULL, '1949', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(002, 'ADDAF', 'ADDAF', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Member', 'Musical', NULL, 1958, NULL, '2000', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(003, 'AEPI', 'AEPI', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GR' LIMIT 1), 'No longer in existence', 'Musical', NULL, 1930, 2018, '1933', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(004, 'AGADU', 'AGADU', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'UY' LIMIT 1), 'Member', 'Musical', '["Audiovisual - Dramatic - AGP"]', 1929, NULL, '1933', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(005, 'AKM', 'AKM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AT' LIMIT 1), 'Member', 'Musical', NULL, 1897, NULL, '1945', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(006, 'BUCADA', 'BUCADA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 1985, NULL, '1988', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(007, 'APDAYC', 'APDAYC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'PE' LIMIT 1), 'Member', 'Musical', '["Dramatic"]', 1952, NULL, '1964', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(008, 'APRA', 'APRA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AU' LIMIT 1), 'Member', 'Musical', NULL, 1926, NULL, '1966', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(009, 'ARTISJUS', 'ARTISJUS', 'MARS', (SELECT country_id FROM country WHERE iso_alpha_2 = 'HU' LIMIT 1), 'Member', 'Musical', '["Literary"]', NULL, NULL, '1954', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(010, 'ASCAP', 'ASCAP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Member', 'Musical', NULL, 1914, NULL, '1967', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(011, 'AUSTRO-MECHANA (AUME)', 'AUME', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AT' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 1936, NULL, '1952', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(012, 'AMCOS', 'AMCOS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AU' LIMIT 1), 'Member', 'Musical', NULL, 1979, NULL, '1980', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(013, 'AWA', 'AWA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'DE' LIMIT 1), 'No longer in existence', 'Musical', NULL, 1950, 1990, '1966', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(014, 'ARGENTORES', 'ARGENTORES', 'Sociedad Argentina de Autores Dramáticos', (SELECT country_id FROM country WHERE iso_alpha_2 = 'AR' LIMIT 1), 'Member', 'Audiovisual', '["Dramatic"]', 1910, NULL, '1934', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(015, 'APA', 'APA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'PY' LIMIT 1), 'Member', 'Musical', NULL, 1951, NULL, '1968', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(016, 'BUMDA', 'BUMDA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ML' LIMIT 1), 'Provisional', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', 1978, NULL, '1986', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(017, 'AMRA', 'AMRA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Member', 'Musical', NULL, 1960, NULL, '6/27/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(018, 'BGDA', 'BGDA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GN' LIMIT 1), 'Provisional', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', 1980, NULL, '1982', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(019, 'BMDAV', 'BMDAV', 'BMDA', (SELECT country_id FROM country WHERE iso_alpha_2 = 'MA' LIMIT 1), 'Member', 'Musical', '["Dramatic - Literary"]', 1965, NULL, '1969', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(020, 'SOCAN RR', 'SOCAN', 'SODRAC', (SELECT country_id FROM country WHERE iso_alpha_2 = 'CA' LIMIT 1), 'Related to CISAC', 'Musical', '["AGP"]', 1985, 2018, '1986', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(021, 'BMI', 'BMI', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Client RME ', 'Musical', NULL, 1940, NULL, '1964', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(022, 'MCSN', 'MCSN', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NG' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, '1990', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(023, 'BUMA', 'BUMA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NL' LIMIT 1), 'Member', 'Musical', NULL, 1913, NULL, '1932', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(024, 'BURIDA', 'BURIDA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CI' LIMIT 1), 'Member', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', 1981, NULL, '1982', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(025, 'SODAV', 'SODAV', 'BSDA  ', (SELECT country_id FROM country WHERE iso_alpha_2 = 'SN' LIMIT 1), 'Provisional', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', 1972, NULL, '1974', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(026, 'CASH', 'CASH', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'HK' LIMIT 1), 'Member', 'Musical', NULL, 1977, NULL, '1978', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(027, 'CAPAC', 'CAPAC', 'CPRS', (SELECT country_id FROM country WHERE iso_alpha_2 = 'CA' LIMIT 1), 'No longer in existence', 'Musical', NULL, 1925, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(028, 'LITA', 'LITA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'SK' LIMIT 1), 'Member', 'Audiovisual', '["Dramatic - Literary - AGP"]', NULL, NULL, '1970', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(029, 'SCD', 'SCD', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CL' LIMIT 1), 'Member', 'Musical', NULL, 1987, NULL, '1988', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(030, 'AMAR', 'AMAR', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Member', 'Musical', NULL, NULL, NULL, '1994', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(031, 'DILIA', 'DILIA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CZ' LIMIT 1), 'Member', 'Audiovisual', '["Literary"]', 1949, NULL, '1952', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(032, 'FILSCAP', 'FILSCAP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'PH' LIMIT 1), 'Member', 'Musical', NULL, 1965, NULL, '1986', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(033, 'OMDA', 'OMDA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'MG' LIMIT 1), 'Provisional', 'Musical', '["Audiovisual - Dramatic - Literary"]', 1984, NULL, '1989', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(034, 'HFA', 'HFA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 1927, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(035, 'GEMA', 'GEMA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'DE' LIMIT 1), 'Member', 'Musical', NULL, 1903, NULL, '1934', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(036, 'IPRS', 'IPRS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'IN' LIMIT 1), 'Member', 'Musical', NULL, 1969, NULL, '1970', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(037, 'BUBEDRA', 'BUBEDRA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BJ' LIMIT 1), 'Provisional', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', 1986, NULL, '1988', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(038, 'JASRAC', 'JASRAC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'JP' LIMIT 1), 'Member', 'Musical', NULL, 1940, NULL, '1960', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(039, 'MUSICAUTOR', 'MUSICAUTOR', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BG' LIMIT 1), 'Member', 'Musical', NULL, 1993, NULL, '1993', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(040, 'KODA', 'KODA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'DK' LIMIT 1), 'Member', 'Musical', NULL, 1926, NULL, '1932', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(041, 'LITERAR-MECHANA', 'LITERAR-MECHANA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AT' LIMIT 1), 'Member', 'Literary', '["Audiovisual"]', 1959, NULL, '1964', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(042, 'LVG', 'LVG', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AT' LIMIT 1), 'No longer in existence', 'Literary', NULL, 1937, 2007, '1937', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(043, 'MCSK', 'MCSK', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'KE' LIMIT 1), 'Provisional', 'Musical', NULL, 1983, NULL, '1985', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(044, 'MCPS', 'MCPS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GB' LIMIT 1), 'Client RME ', 'Musical', NULL, 1911, NULL, 'CISAC 1965 - Client RME 2021', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(045, 'BBDA', 'BBDA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BF' LIMIT 1), 'Provisional', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', 1985, NULL, '1989', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(046, 'MRS', 'MRS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GB' LIMIT 1), 'No longer in existence', 'Musical', NULL, NULL, 2003, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(047, 'BCDA', 'BCDA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CG' LIMIT 1), 'Provisional', 'Musical', '["Audiovisual - Dramatic - Literary"]', 1986, NULL, '1987', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(048, 'NCB', 'NCB', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'DK' LIMIT 1), 'Member', 'Musical', NULL, 1915, NULL, '1933', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(049, 'ONDA', 'ONDA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'DZ' LIMIT 1), 'Member', 'Musical', '["Audiovisual - Dramatic - Literary"]', 1973, NULL, '1977', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(050, 'OSA', 'OSA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CZ' LIMIT 1), 'Member', 'Musical', NULL, 1919, NULL, '1948', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(051, 'PROLITTERIS', 'PROLITTERIS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CH' LIMIT 1), 'Member', 'Literary', '["AGP"]', 1982, NULL, '1984', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(052, 'PRS', 'PRS', 'MCPS-PRS Alliance', (SELECT country_id FROM country WHERE iso_alpha_2 = 'GB' LIMIT 1), 'Member', 'Musical', NULL, 1914, NULL, '1966', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(053, 'PROCAN', 'PROCAN', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CA' LIMIT 1), 'No longer in existence', 'Musical', NULL, 1940, 1989, '1980', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(054, 'ALCS', 'ALCS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GB' LIMIT 1), 'Member', 'Literary', '["Audiovisual","AGP"]', 1977, NULL, '1979', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(055, 'SABAM', 'SABAM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BE' LIMIT 1), 'Member', 'Musical', '["Audiovisual-Dramatic-Literary-AGP"]', 1922, NULL, '1930', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(056, 'SACD', 'SACD', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Member', 'Audiovisual', '["Dramatic"]', 1829, NULL, '1926', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(057, 'SACERAU', 'SACERAU', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'EG' LIMIT 1), 'Provisional', 'Musical', '["Audiovisual"]', NULL, NULL, '1965', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(058, 'SACEM', 'SACEM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Member', 'Musical', NULL, 1851, NULL, '1930', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(059, 'SACM', 'SACM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'MX' LIMIT 1), 'Member', 'Musical', NULL, NULL, NULL, '1960', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(060, 'SACVEN', 'SACVEN', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'VE' LIMIT 1), 'Provisional', 'Musical', '["Dramatic"]', NULL, NULL, '1964', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(061, 'SADAIC', 'SADAIC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AR' LIMIT 1), 'Member', 'Musical', NULL, 1936, NULL, '1936', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(062, 'SADEMBRA', 'SADEMBRA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 1957, 2017, '1985', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(063, 'SAMRO', 'SAMRO', 'SAFCA ', (SELECT country_id FROM country WHERE iso_alpha_2 = 'ZA' LIMIT 1), 'Member', 'Musical', NULL, 1962, NULL, '1964', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(064, 'SOKOJ', 'SOKOJ', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Member', 'Musical', NULL, 1950, NULL, '1956', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(065, 'SAYCE', 'SAYCE', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'EC' LIMIT 1), 'Member', 'Musical', NULL, 1973, NULL, '1979', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(066, 'SBACEM', 'SBACEM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Member', 'Musical', NULL, 1946, NULL, '1985', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(067, 'SBAT', 'SBAT', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Related to CISAC', 'Dramatic', '["Literary"]', 1917, NULL, '1929', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(068, 'SDRM', 'SDRM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 1936, NULL, '1936', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(069, 'SPA', 'SPA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'PT' LIMIT 1), 'Member', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', 1925, NULL, '1932', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(070, 'SOGEM', 'SOGEM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'MX' LIMIT 1), 'Provisional', 'Audiovisual', '["Dramatic - Literary"]', 1976, NULL, '1977', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(071, 'SESAC Inc.', 'SESAC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Client RME ', 'Musical', NULL, 1930, NULL, '1967', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(072, 'SGAE', 'SGAE', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ES' LIMIT 1), 'Member', 'Musical', '["Audiovisual - Dramatic - Literary"]', 1901, NULL, '1932', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(073, 'SCAM', 'SCAM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Member', 'Audiovisual', NULL, 1981, NULL, '1984', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(074, 'SIAE', 'SIAE', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'IT' LIMIT 1), 'Member', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', 1882, NULL, '1932', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(075, 'SUISSIMAGE', 'SUISSIMAGE', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CH' LIMIT 1), 'Member', 'Audiovisual', NULL, 1981, NULL, '1987', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(076, 'ACEMLA', 'ACEMLA', 'SPACEM', (SELECT country_id FROM country WHERE iso_alpha_2 = 'PR' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 1951, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(077, 'STEF', 'STEF', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'IS' LIMIT 1), 'Member', 'Musical', NULL, 1948, NULL, '1950', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(078, 'STEMRA', 'STEMRA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NL' LIMIT 1), 'Member', 'Musical', NULL, 1900, NULL, '1938', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(079, 'STIM', 'STIM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'SE' LIMIT 1), 'Member', 'Musical', NULL, 1923, NULL, '1932', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(080, 'SUISA', 'SUISA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CH' LIMIT 1), 'Member', 'Musical', NULL, 1941, NULL, '1948', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(081, 'SARRAL', 'SARRAL', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ZA' LIMIT 1), 'No longer in existence', 'Musical', NULL, 1963, 2013, '1976', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(082, 'OTDAV', 'OTDAV', 'OTPDA / SODACT', (SELECT country_id FROM country WHERE iso_alpha_2 = 'TN' LIMIT 1), 'Provisional', 'Musical', '["Dramatic - Literary"]', 1997, NULL, '1997', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(083, 'SONECA', 'SONECA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'No longer in existence', 'Musical', NULL, 1930, 2013, '1970', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(084, 'SAYCO', 'SAYCO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CO' LIMIT 1), 'Member', 'Musical', '["Dramatic"]', 1946, NULL, '1952', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(085, 'SOZA', 'SOZA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'SK' LIMIT 1), 'Member', 'Musical', NULL, 1922, NULL, '1970', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(086, 'SICAM', 'SICAM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Member', 'Musical', NULL, 1960, NULL, '1980', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(087, 'SPACEM', 'SPACEM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'No longer in existence', 'Musical', NULL, 1981, 2005, '1978', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(088, 'CMRRA', 'CMRRA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CA' LIMIT 1), 'Client RME ', 'Musical', NULL, 1975, NULL, 'CISAC 1997-Client RME 2021', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(089, 'TEOSTO', 'TEOSTO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FI' LIMIT 1), 'Member', 'Musical', NULL, 1928, NULL, '1929', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(090, 'TONO', 'TONO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NO' LIMIT 1), 'Member', 'Musical', NULL, 1929, NULL, '1930', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(091, 'SSA', 'SSA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CH' LIMIT 1), 'Member', 'Audiovisual', '["Dramatic"]', 1985, NULL, '1987', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(092, 'SOCINADA', 'SOCINADA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CM' LIMIT 1), 'No longer in existence', 'Musical', NULL, 1990, 2002, '1992', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(093, 'UBC', 'UBC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Member', 'Musical', NULL, 1942, NULL, '1946', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(094, 'RAO', 'RAO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Member', 'Musical', '["Dramatic - AGP"]', 1993, NULL, '1993', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(095, 'VG WORT', 'VG', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'DE' LIMIT 1), 'Related to CISAC', 'Audiovisual', '["Dramatic - Literary"]', 1958, NULL, '1966', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(096, 'COTT', 'COTT', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'TT' LIMIT 1), 'Member', 'Musical', NULL, 1984, NULL, '1988', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(097, 'ZAIKS', 'ZAIKS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'PL' LIMIT 1), 'Member', 'Musical', '["Dramatic - Literary"]', 1918, NULL, '1932', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(098, 'ZIMURA', 'ZIMURA', 'ZIMRA', (SELECT country_id FROM country WHERE iso_alpha_2 = 'ZW' LIMIT 1), 'Member', 'Musical', NULL, 1982, NULL, '1986', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(101, 'SOCAN', 'SOCAN', 'PROCAN -CAPAC', (SELECT country_id FROM country WHERE iso_alpha_2 = 'CA' LIMIT 1), 'Member', 'Musical', '["AGP"]', 1989, NULL, '1990', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(102, 'NASCAM', 'NASCAM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NA' LIMIT 1), 'Member', 'Musical', NULL, 1994, NULL, '1995', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(103, 'ACDAM', 'ACDAM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CU' LIMIT 1), 'Member', 'Musical', NULL, 1986, NULL, '1991', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(104, 'MACP', 'MACP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'MY' LIMIT 1), 'Member', 'Musical', NULL, 1989, NULL, '1990', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(105, 'MASA ', 'MASA', 'MASA - MRMS ', (SELECT country_id FROM country WHERE iso_alpha_2 = 'MU' LIMIT 1), 'Provisional', 'Musical', NULL, 1989, NULL, '1991', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(106, 'COMPASS', 'COMPASS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'SG' LIMIT 1), 'Member', 'Musical', NULL, 1987, NULL, '1993', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(107, 'ACAM', 'ACAM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CR' LIMIT 1), 'Member', 'Musical', NULL, NULL, NULL, '1992', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(108, 'CHA', 'CHA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'No longer in existence', 'Musical', NULL, NULL, 2009, '1990', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(109, 'KCI', 'KCI', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ID' LIMIT 1), 'Related to CISAC ', 'Musical', NULL, 1990, 2012, '1992', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(110, 'LATGA', 'LATGA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'LT' LIMIT 1), 'Member', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', 1990, NULL, '1992', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(111, 'HDS-ZAMP', 'HDS-ZAMP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'HR' LIMIT 1), 'Member', 'Musical', NULL, 1945, NULL, '1992', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(112, 'SAZAS', 'SAZAS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'SI' LIMIT 1), 'Member', 'Musical', NULL, 1993, NULL, '1996', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(113, 'LAA', 'LAA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'LV' LIMIT 1), 'No longer in existence', 'Musical', NULL, 1992, NULL, '1996', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(114, 'AGAYC', 'AGAYC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GT' LIMIT 1), 'No longer in existence', 'Musical', NULL, 1947, 2007, '1992', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(115, 'UCMR-ADA', 'UCMR-ADA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'RO' LIMIT 1), 'Member', 'Musical', NULL, 1920, NULL, '1992', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(116, 'EAU', 'EAU', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'EE' LIMIT 1), 'Member', 'Musical', '["Audiovisual - Dramatic - AGP"]', 1991, NULL, '1993', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(117, 'MESAM', 'MESAM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'TR' LIMIT 1), 'Member', 'Musical', NULL, 1987, NULL, '1989', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(118, 'KOMCA', 'KOMCA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Member', 'Musical', NULL, 1964, NULL, '1987', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(119, 'MCSC', 'MCSC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CN' LIMIT 1), 'Member', 'Musical', NULL, 1992, NULL, '2004', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(120, 'LIRA', 'LIRA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NL' LIMIT 1), 'Member', 'Literary', '["Audiovisual"]', 1986, NULL, '1987', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(121, 'VDFS', 'VDFS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AT' LIMIT 1), 'Member', 'Audiovisual', NULL, 1992, NULL, '1994', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(122, 'AKKA-LAA', 'AKKA-LAA', 'LAA', (SELECT country_id FROM country WHERE iso_alpha_2 = 'LV' LIMIT 1), 'Member', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', 1995, NULL, '1996', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(123, 'COSGA', 'COSGA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GH' LIMIT 1), 'No longer in existence', 'Musical', NULL, 1992, NULL, '1992', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(124, 'COSOMA', 'COSOMA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'MW' LIMIT 1), 'Provisional', 'Musical', '["Literary"]', 1992, NULL, '1993', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(125, 'BNDA', 'BNDA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NE' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 1995, NULL, '1997', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(126, 'MCT', 'MCT', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'TH' LIMIT 1), 'Member', 'Musical', NULL, 1994, NULL, '1997', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(127, 'ALBAUTOR', 'ALBAUTOR', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AL' LIMIT 1), 'Provisional', 'Musical', '["Audiovisual"]', 1992, NULL, '2016', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(128, 'IMRO', 'IMRO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'IE' LIMIT 1), 'Member', 'Musical', NULL, 1989, NULL, '1997', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(129, 'SOBODAYCOM', 'SOBODAYCOM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BO' LIMIT 1), 'Member', 'Musical', NULL, 1941, NULL, '1992', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(130, 'BUTODRA', 'BUTODRA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'TG' LIMIT 1), 'Related to CISAC', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', 1991, NULL, '1995', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(131, 'ATHINA-SADA', 'ATHINA-SADA', 'SADA', (SELECT country_id FROM country WHERE iso_alpha_2 = 'GR' LIMIT 1), 'Provisional', 'Audiovisual', NULL, 1994, NULL, '2015', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(132, 'VG BILD-KUNST', 'VG', 'BILD-KUNST', (SELECT country_id FROM country WHERE iso_alpha_2 = 'DE' LIMIT 1), 'Member', 'AGP', '["Audiovisual"]', NULL, NULL, '1979', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(133, 'ZAMCOPS', 'ZAMCOPS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ZM' LIMIT 1), 'Provisional', 'Musical', NULL, 1994, NULL, '1997', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(134, 'SLPRS', 'SLPRS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'LK' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(135, 'SADH', 'SADH', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GR' LIMIT 1), 'No longer in existence', 'Musical', NULL, NULL, 2014, '1980', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(136, 'ZAMP - Macédoine', 'ZAMP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Member', 'Musical', NULL, 1963, NULL, '1976', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(137, 'SOFAM', 'SOFAM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BE' LIMIT 1), 'Member', 'AGP', NULL, 1978, NULL, '1979', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(138, 'KOPIOSTO', 'KOPIOSTO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FI' LIMIT 1), 'Member', 'Audiovisual', '["Literary - AGP"]', 1978, NULL, '1989', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(139, 'VISDA', 'VISDA', 'COPY-DAN BILLEDER - COPY-DAN BILLEDKUNST', (SELECT country_id FROM country WHERE iso_alpha_2 = 'DK' LIMIT 1), 'Member', 'AGP', NULL, NULL, NULL, '6/27/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(140, 'NGO-UACRR', 'NGO-UACRR', 'UACRR', (SELECT country_id FROM country WHERE iso_alpha_2 = 'UA' LIMIT 1), 'Provisional', 'Musical', '["Dramatic"]', NULL, NULL, '7/10/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(141, 'ATN', 'ATN', 'GESATCH', (SELECT country_id FROM country WHERE iso_alpha_2 = 'CL' LIMIT 1), 'Member', 'Dramatic', '["Audiovisual"]', 1996, NULL, '1997', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(142, 'DALRO', 'DALRO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ZA' LIMIT 1), 'Client RME ', 'Literary', '["Dramatic - AGP"]', 1967, NULL, '1975', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(143, 'TEATERAUTOR', 'TEATERAUTOR', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BG' LIMIT 1), 'No longer in existence', 'Dramatic', NULL, 1992, 2013, '1995', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(144, 'HAA', 'HAA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'HR' LIMIT 1), 'Related to CISAC', 'AGP', NULL, 1955, 2006, '1992', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(145, 'DIRECTORS UK', 'DIRECTORS', 'DPRS', (SELECT country_id FROM country WHERE iso_alpha_2 = 'GB' LIMIT 1), 'Member', 'Audiovisual', NULL, 1995, NULL, '1996', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(146, 'SPAC', 'SPAC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'PA' LIMIT 1), 'Member', 'Musical', NULL, NULL, NULL, '1997', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(147, 'FILMAUTOR', 'FILMAUTOR', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BG' LIMIT 1), 'Member', 'Audiovisual', NULL, NULL, NULL, '1998', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(148, 'ADAGP', 'ADAGP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Member', 'AGP', NULL, 1953, NULL, '1987', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(149, 'ARS', 'ARS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Member', 'AGP', NULL, 1986, NULL, '1988', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(150, 'BEELDRECHT', 'BEELDRECHT', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NL' LIMIT 1), 'No longer in existence', NULL, NULL, 1977, 2008, '1978', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(151, 'BONO', 'BONO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NO' LIMIT 1), 'Member', 'AGP', NULL, 1992, NULL, '1996', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(152, 'Bildupphovsrätt (Visual Copyright Society)', 'Visual Copyright Society', 'BUS', (SELECT country_id FROM country WHERE iso_alpha_2 = 'SE' LIMIT 1), 'Member', 'AGP', NULL, NULL, NULL, '1992', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(153, 'DACS', 'DACS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GB' LIMIT 1), 'Member', 'AGP', NULL, NULL, NULL, '1984', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(154, 'HUNGART', 'HUNGART', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'HU' LIMIT 1), 'Member', 'AGP', NULL, 1983, NULL, '1988', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(155, 'SOMAAP', 'SOMAAP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'MX' LIMIT 1), 'Member', 'AGP', NULL, 1982, NULL, '1991', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(156, 'VAGA', 'VAGA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Related to CISAC', 'AGP', NULL, 1936, 2019, '1952', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(157, 'BILDRECHT GmbH', 'BILDRECHT', 'VBK', (SELECT country_id FROM country WHERE iso_alpha_2 = 'AT' LIMIT 1), 'Member', 'AGP', NULL, 1950, NULL, '1979', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(158, 'VEGAP', 'VEGAP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ES' LIMIT 1), 'Member', 'AGP', NULL, 1990, NULL, '1991', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(159, 'VISCOPY', 'VISCOPY', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AU' LIMIT 1), 'No longer in existence', 'AGP', NULL, 1995, 2018, '1997', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(160, 'NCIP', 'NCIP', 'RUPIS, CASP, BELAT', (SELECT country_id FROM country WHERE iso_alpha_2 = 'BY' LIMIT 1), 'Provisional', 'Musical', '["Dramatic"]', NULL, NULL, '2002', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(161, 'MÜST', 'MÜST', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Member', 'Musical', NULL, 1999, NULL, '1999', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(162, 'AMPAL', 'AMPAL', 'CORS', (SELECT country_id FROM country WHERE iso_alpha_2 = 'AU' LIMIT 1), 'No longer in existence', 'Musical', NULL, NULL, NULL, '1967', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(163, 'APG-Japan', 'APG-Japan', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'JP' LIMIT 1), 'Associate', 'AGP', NULL, NULL, NULL, '1999', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(164, 'APSAV', 'APSAV', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'PE' LIMIT 1), 'Provisional', 'AGP', NULL, 1999, NULL, '2002', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(166, 'AUTORARTE', 'AUTORARTE', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'VE' LIMIT 1), 'No longer in existence', 'AGP', NULL, NULL, 2019, '1999', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(167, 'BURAFO', 'BURAFO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NL' LIMIT 1), 'No longer in existence', 'AGP', NULL, 1980, 2008, '1984', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(168, 'Copyright Agency', 'Copyright', 'CAL - CA', (SELECT country_id FROM country WHERE iso_alpha_2 = 'AU' LIMIT 1), 'Member', 'Literary', '["AGP"]', 1974, NULL, '2011', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(169, 'COSCAP', 'COSCAP', 'BACAP', (SELECT country_id FROM country WHERE iso_alpha_2 = 'BB' LIMIT 1), 'Member', 'Musical', NULL, 1997, NULL, '1999', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(170, 'CPSN', 'CPSN', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NP' LIMIT 1), 'Associate', 'Musical', NULL, NULL, NULL, '1998', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(171, 'CREAIMAGEN', 'CREAIMAGEN', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CL' LIMIT 1), 'Provisional', 'AGP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(172, 'DGA', 'DGA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Associate', 'Audiovisual', NULL, 1936, NULL, '1999', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(173, 'DIRECTORES', 'DIRECTORES', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'MX' LIMIT 1), 'Member', 'Audiovisual', NULL, 1963, NULL, '1976', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(174, 'FILMJUS', 'FILMJUS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'HU' LIMIT 1), 'Member', 'Audiovisual', NULL, 1996, NULL, '1999', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(175, 'CopyRo', 'CopyRo', 'Fondul Literar', (SELECT country_id FROM country WHERE iso_alpha_2 = 'RO' LIMIT 1), 'Related to CISAC', 'Literary', NULL, 1996, 2007, '1999', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(176, 'JACAP', 'JACAP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'JM' LIMIT 1), 'Member', 'Musical', NULL, 1998, NULL, '1999', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(177, 'KazAK', 'KazAK', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Provisional', 'Musical', '["Dramatic - Literary"]', 1998, NULL, '1999', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(178, 'KOSA', 'KOSA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'No longer in existence', 'Literary', '["AGP"]', 1984, 2020, '1995', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(179, 'KUVASTO', 'KUVASTO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FI' LIMIT 1), 'Member', 'AGP', NULL, NULL, NULL, '1988', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(180, 'MUSIKEDITION', 'MUSIKEDITION', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AT' LIMIT 1), 'No longer in existence', 'Musical', NULL, 1987, 2006, '1994', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(181, 'NMPA', 'NMPA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 1917, 2014, '1973', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(182, 'PAPPRI', 'PAPPRI', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ID' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 1986, 2019, '1989', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(183, 'SACK', 'SACK', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Member', 'AGP', NULL, 1997, NULL, '1998', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(184, 'SARTEC', 'SARTEC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CA' LIMIT 1), 'Associate', 'Audiovisual', NULL, 1949, NULL, '1971', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(185, 'SESAM', 'SESAM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'No longer in existence', 'No repertoire', NULL, NULL, 2015, '1998', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(186, 'SGDL', 'SGDL', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Related to CISAC', 'Literary', NULL, 1838, 2019, '1936', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(187, 'SNAC', 'SNAC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Related to CISAC', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', 1946, 2014, '1966', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(188, 'Société de l''Image', 'Société', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'No longer in existence', 'AGP', NULL, NULL, 2002, '1993', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(189, 'SOCINPRO', 'SOCINPRO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Member', 'Musical', NULL, 1962, NULL, '1998', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(190, 'SOPE', 'SOPE', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GR' LIMIT 1), 'Related to CISAC', 'Dramatic', NULL, NULL, NULL, '1972', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(191, 'SPACQ-AE', 'SPACQ-AE', 'SPACQ', (SELECT country_id FROM country WHERE iso_alpha_2 = 'CA' LIMIT 1), 'Associate', 'Musical', NULL, 1981, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(192, 'SFF', 'SFF', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'SE' LIMIT 1), 'Related to CISAC ', 'AGP', NULL, 1895, 2004, '1999', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(193, 'The Society of Authors (SOA)', 'SOA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GB' LIMIT 1), 'Related to CISAC', 'Literary', NULL, 1884, 2017, '2015', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(194, 'UFFICIO GIURIDICO', 'UFFICIO', 'UFFICIO LEGALE', (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Associate', 'No repertoire', NULL, 1932, NULL, '1936', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(195, 'VEVAM', 'VEVAM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NL' LIMIT 1), 'Member', 'Audiovisual', NULL, 1983, NULL, '1986', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(196, 'WGAW', 'WGAW', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Related to CISAC', 'Audiovisual', NULL, NULL, NULL, '1998', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(197, 'WGJ', 'WGJ', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'JP' LIMIT 1), 'Related to CISAC', 'Audiovisual', NULL, 1966, NULL, '1987', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(198, 'ZAMP Association of Slovenia', 'ZAMP', 'ZAMP Slovenia', (SELECT country_id FROM country WHERE iso_alpha_2 = 'SI' LIMIT 1), 'Member', 'Literary', NULL, 1996, NULL, '1999', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(199, 'SFP-ZAPA', 'SFP-ZAPA', 'ZAPA', (SELECT country_id FROM country WHERE iso_alpha_2 = 'PL' LIMIT 1), 'Member', 'Audiovisual', NULL, 1995, NULL, '1999', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(200, 'MSG', 'MSG', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'TR' LIMIT 1), 'Member', 'Musical', NULL, 1998, NULL, '2000', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(201, 'ABRAMUS', 'ABRAMUS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Member', 'Musical', NULL, 1982, NULL, '2000', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(202, 'AsDAC', 'AsDAC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', 1999, 2019, '2000', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(203, 'AWGACS', 'AWGACS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AU' LIMIT 1), 'Member', 'Audiovisual', NULL, 1996, NULL, '2000', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(204, 'GCA', 'GCA', 'GESAP', (SELECT country_id FROM country WHERE iso_alpha_2 = 'GE' LIMIT 1), 'Member', 'Musical', '["Dramatic - Literary"]', 1999, NULL, '2000', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(205, 'SODART', 'SODART', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CA' LIMIT 1), 'No longer in existence', 'AGP', NULL, 1998, 2008, '2000', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(206, 'UFW ', 'UFW', 'Suomen Kirjailijaliitto then KIRJAILIJA', (SELECT country_id FROM country WHERE iso_alpha_2 = 'FI' LIMIT 1), 'Related to CISAC', 'Literary', NULL, 1897, 2018, '2000', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(207, 'The Author''s Registry Inc.', 'The', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Related to CISAC', 'Literary', NULL, 1995, 2016, '2000', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(208, 'SGA', 'SGA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GW' LIMIT 1), 'Related to CISAC', 'Musical', '["Literary"]', 1996, 2005, '2002', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(209, 'ARMAUTHOR NGO', 'ARMAUTHOR', 'ARMAUTOR', (SELECT country_id FROM country WHERE iso_alpha_2 = 'AM' LIMIT 1), 'Member', 'Dramatic', '["Musical"]', 2001, NULL, '2001', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(210, 'ACCESS COPYRIGHT', 'ACCESS', 'CANCOPY', (SELECT country_id FROM country WHERE iso_alpha_2 = 'CA' LIMIT 1), 'Related to CISAC', 'Literary', NULL, 1988, 2015, '2001', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(212, 'CSCS', 'CSCS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CA' LIMIT 1), 'Member', 'Audiovisual', NULL, 1998, NULL, '2000', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(213, 'DRCC', 'DRCC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CA' LIMIT 1), 'Member', 'Audiovisual', NULL, 1998, NULL, '2000', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(214, 'ECCO', 'ECCO', 'HMS', (SELECT country_id FROM country WHERE iso_alpha_2 = 'LC' LIMIT 1), 'Provisional', 'Musical', NULL, 2000, NULL, '2000', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(215, 'Kyrgyzpatent', 'Kyrgyzpatent', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'KG' LIMIT 1), 'Related to CISAC', 'Musical', '["Dramatic"]', 1996, 2019, '2000', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(216, 'SQN', 'SQN', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BA' LIMIT 1), 'No longer in existence', 'Musical', NULL, 1997, 2016, '2000', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(217, 'ABRAC', 'ABRAC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 1985, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(218, 'ANACIM', 'ANACIM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(219, 'ASSIM', 'ASSIM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Member', 'Musical', NULL, 1978, NULL, '2002', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(220, 'ATIDA', 'ATIDA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(221, 'SABEM', 'SABEM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(222, 'FONOPERU', 'FONOPERU', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'PE' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(223, 'COSOTA', 'COSOTA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Provisional', 'Musical', NULL, NULL, NULL, '6/24/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(224, 'SOMAS', 'SOMAS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'MZ' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 1998, NULL, '2004', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(225, 'SAIF', 'SAIF', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Member', 'AGP', NULL, 1999, NULL, '2012', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(226, 'AACIMH', 'AACIMH', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'HN' LIMIT 1), 'Member', 'Musical', NULL, 2002, NULL, '2002', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(227, 'SGACEDOM', 'SGACEDOM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'DO' LIMIT 1), 'Member', 'Musical', NULL, 1996, NULL, '2002', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(228, 'ROMS', 'ROMS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 2000, 2004, '2002', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(229, 'ICG', 'ICG', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'No longer in existence', NULL, NULL, 1990, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(230, 'ADAVIS', 'ADAVIS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CU' LIMIT 1), 'Related to CISAC', 'AGP', NULL, 2001, 2019, '2005', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(231, 'AUTVIS', 'AUTVIS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Member', 'AGP', NULL, 2002, NULL, '2003', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(232, 'GESTOR', 'GESTOR', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CZ' LIMIT 1), 'Member', 'AGP', NULL, 1997, NULL, '2003', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(233, 'SACEMLUXEMBOURG', 'SACEMLUXEMBOURG', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'LU' LIMIT 1), 'Member', 'Musical', NULL, 2003, NULL, '2003', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(234, 'UPRS', 'UPRS', 'UCOSO', (SELECT country_id FROM country WHERE iso_alpha_2 = 'UG' LIMIT 1), 'Provisional', 'Musical', NULL, 2003, NULL, '2004', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(235, 'SACENC', 'SACENC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Member', 'Musical', NULL, 2004, NULL, '2006', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(236, 'ARTEGESTION', 'ARTEGESTION', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'EC' LIMIT 1), 'Provisional', 'AGP', NULL, NULL, NULL, '6/27/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(237, 'TALI', 'TALI', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'IL' LIMIT 1), 'Member', 'Audiovisual', NULL, 1999, NULL, '2005', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(238, 'BSCAP', 'BSCAP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 2005, NULL, '2006', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(239, 'CMC', 'CMC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CM' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 2003, NULL, '2006', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(240, 'DAMA', 'DAMA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ES' LIMIT 1), 'Member', 'Audiovisual', NULL, 1999, NULL, '2006', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(241, 'NICAUTOR', 'NICAUTOR', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NI' LIMIT 1), 'No longer in existence', 'Musical', NULL, NULL, 2015, '2006', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(242, 'SACIM', 'SACIM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'SV' LIMIT 1), 'Provisional', 'Musical', NULL, 1980, NULL, '2006', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(243, 'SADIA', 'SADIA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AO' LIMIT 1), 'Related to CISAC', 'Musical', '["Audiovisual"]', 1993, 2018, '2006', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(244, 'SASUR', 'SASUR', 'SAS-MBBS', (SELECT country_id FROM country WHERE iso_alpha_2 = 'SR' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 2004, NULL, '2006', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(245, 'SETEM', 'SETEM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'TR' LIMIT 1), 'Related to CISAC', 'Audiovisual', NULL, NULL, 2019, '2006', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(246, 'VCPMC', 'VCPMC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Member', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(247, 'IVARO', 'IVARO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'IE' LIMIT 1), 'Provisional', 'AGP', NULL, 1963, NULL, '2007', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(248, 'DAC', 'DAC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AR' LIMIT 1), 'Member', 'Audiovisual', NULL, 1958, NULL, '2007', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(249, 'PAM CG', 'PAM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ME' LIMIT 1), 'Member', 'Musical', NULL, 2006, NULL, '2011', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(250, 'AEI-GUATEMALA', 'AEI-GUATEMALA', 'AEI', (SELECT country_id FROM country WHERE iso_alpha_2 = 'GT' LIMIT 1), 'Member', 'Musical', NULL, NULL, NULL, '2008', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(251, 'ASDACS', 'ASDACS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AU' LIMIT 1), 'Member', 'Audiovisual', NULL, NULL, NULL, '2008', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(252, 'COLCCMA', 'COLCCMA', 'COLCIA', (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', 'Literary', NULL, 2006, 2014, '2008', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(253, 'AAS', 'AAS', 'MPRMWA', (SELECT country_id FROM country WHERE iso_alpha_2 = 'AZ' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, '2008', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(254, 'SOCILADRA', 'SOCILADRA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CM' LIMIT 1), 'Related to CISAC', 'Dramatic', NULL, NULL, NULL, '2008', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(255, 'SODOMAPLA', 'SODOMAPLA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'DO' LIMIT 1), 'Related to CISAC', 'AGP', NULL, NULL, NULL, '2008', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(256, 'PICTORIGHT', 'PICTORIGHT', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NL' LIMIT 1), 'Member', 'AGP', NULL, NULL, NULL, '2008', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(257, 'SAVA', 'SAVA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AR' LIMIT 1), 'Provisional', 'Musical', NULL, 2007, NULL, '2009', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(258, 'MRCSN', 'MRCSN', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NP' LIMIT 1), 'Provisional', 'Musical', NULL, NULL, NULL, '2009', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(259, 'SDCSI', 'SDCSI', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'IE' LIMIT 1), 'Related to CISAC', 'Audiovisual', NULL, 2005, 2017, '2009', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(260, 'ACS', 'ACS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GB' LIMIT 1), 'Member', 'AGP', NULL, 2006, NULL, '2009', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(261, 'GAI Uz', 'GAI', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'UZ' LIMIT 1), 'Related to CISAC', 'Musical', '["Audiovisual - Dramatic"]', 2006, 2018, '2010', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(262, 'SINEBIR', 'SINEBIR', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'TR' LIMIT 1), 'Related to CISAC', 'Audiovisual', NULL, NULL, NULL, '2010', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(263, 'SACS', 'SACS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'SC' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 2005, NULL, '2010', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(264, 'CARCC', 'CARCC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CA' LIMIT 1), 'Member', 'AGP', NULL, 1990, NULL, '2010', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(265, 'MACA', 'MACA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'MO' LIMIT 1), 'Member', 'Musical', NULL, NULL, NULL, '2010', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(266, 'BeAT', 'BeAT', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BN' LIMIT 1), 'Related to CISAC', 'Musical', '["Audiovisual - Dramatic - Literary"]', 2010, 2017, '2010', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(267, 'UPRAVIS', 'UPRAVIS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', 'AGP', NULL, 2008, NULL, '2011', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(268, 'COSON', 'COSON', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NG' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 2009, NULL, '2012', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(269, 'WAMI', 'WAMI', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ID' LIMIT 1), 'Member', 'Musical', NULL, 2006, NULL, '2012', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(270, 'JASPAR', 'JASPAR', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'JP' LIMIT 1), 'Member', 'AGP', NULL, 2012, NULL, '2012', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(271, 'DHFA', 'DHFA', 'DHFR', (SELECT country_id FROM country WHERE iso_alpha_2 = 'HR' LIMIT 1), 'Member', 'Audiovisual', NULL, 1995, NULL, '2012', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(272, 'MOSCAP', 'MOSCAP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'MN' LIMIT 1), 'Provisional', 'Musical', NULL, 2011, NULL, '2012', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(273, 'AMUS', 'AMUS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BA' LIMIT 1), 'Provisional', 'Musical', NULL, 2012, NULL, '2013', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(274, 'AuPO CINEMA', 'AuPO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'UA' LIMIT 1), 'Related to CISAC', 'Audiovisual', NULL, NULL, NULL, '2013', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(275, 'AUTODIA', 'AUTODIA', 'AUTODIAHIRISI', (SELECT country_id FROM country WHERE iso_alpha_2 = 'GR' LIMIT 1), 'Member', 'Musical', NULL, 2003, NULL, '2014', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(276, 'DASC', 'DASC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CO' LIMIT 1), 'Member', 'Audiovisual', NULL, NULL, NULL, '2014', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(277, 'RSAU', 'RSAU', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'RW' LIMIT 1), 'Provisional', 'Musical', NULL, 2010, NULL, '2014', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(278, 'RUR', 'RUR', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', 'Audiovisual', NULL, 2009, NULL, '2014', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(279, 'SDADV', 'SDADV', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Provisional', 'Audiovisual', NULL, NULL, NULL, '2014', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(280, 'SANASTO', 'SANASTO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FI' LIMIT 1), 'Member', 'Literary', NULL, NULL, NULL, '2014', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(282, 'UNAC-SA', 'UNAC-SA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AO' LIMIT 1), 'Provisional', 'Musical', NULL, NULL, NULL, '2015', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(283, 'CAPASSO', 'CAPASSO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ZA' LIMIT 1), 'Member', 'Musical', NULL, 2014, NULL, '2017', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(284, 'COSOZA', 'COSOZA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, '2016', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(285, 'GHAMRO', 'GHAMRO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GH' LIMIT 1), 'Provisional', 'Musical', NULL, NULL, NULL, '2016', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(286, 'ODDA', 'ODDA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, '2016', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(287, 'KOLAA', 'KOLAA', 'KORRA', (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Member', 'Literary', NULL, NULL, NULL, '2016', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(288, 'ABYROY', 'ABYROY', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'KZ' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, '2016', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(289, 'AIPA', 'AIPA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'SI' LIMIT 1), 'Provisional', 'Audiovisual', NULL, NULL, NULL, '2016', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(290, 'AZDG', 'AZDG', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AZ' LIMIT 1), 'Provisional', 'Audiovisual', NULL, NULL, NULL, '2016', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(291, 'OFA', 'OFA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'RS' LIMIT 1), 'Provisional', 'AGP', NULL, NULL, NULL, '2016', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(292, 'ZPAP', 'ZPAP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'PL' LIMIT 1), 'Related to CISAC', 'AGP', NULL, 1911, 2020, '2016', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(293, 'DBCA', 'DBCA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Provisional', 'Audiovisual', NULL, NULL, NULL, '2016', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(294, 'REDES SGC', 'REDES', 'REDES', (SELECT country_id FROM country WHERE iso_alpha_2 = 'CO' LIMIT 1), 'Member', 'Audiovisual', NULL, 2014, NULL, '2016', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(295, 'SAGCRYT', 'SAGCRYT', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'MX' LIMIT 1), 'Related to CISAC', 'Audiovisual', NULL, NULL, 2020, '2016', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(296, 'DACIN-SARA', 'DACIN-SARA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'RO' LIMIT 1), 'Provisional', NULL, NULL, 1996, NULL, '2017', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(297, 'GEDAR', 'GEDAR', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Provisional', NULL, NULL, 2016, NULL, '2017', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(298, 'OOA-S', 'OOA-S', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CZ' LIMIT 1), 'Member', 'Audiovisual', '["AGP"]', 1997, NULL, '2017', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(299, 'SCM-COOPERATIVA', 'SCM-COOPERATIVA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CV' LIMIT 1), 'Member', 'Musical', NULL, 2013, NULL, '2017', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(300, 'WID Centre', 'WID', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(301, 'GESAC', 'GESAC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BE' LIMIT 1), 'Associate', 'No repertoire', NULL, 1990, NULL, '1991', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(302, 'LATINAUTOR', 'LATINAUTOR', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'UY' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(303, 'NORD-DOC', 'NORD-DOC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'SE' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(304, 'SONGCODE', 'SONGCODE', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(305, 'IMJV', 'IMJV', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NL' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 1998, 2002, '2000', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(306, 'ACCS', 'ACCS', 'CCL', (SELECT country_id FROM country WHERE iso_alpha_2 = 'TT' LIMIT 1), 'Associate', 'Musical', NULL, 2000, NULL, '6/23/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(307, 'MIS@ASIA', 'MIS@ASIA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'SG' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(308, 'ECAD', 'ECAD', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BR' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(309, 'LatinNet', 'LatinNet', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ES' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(310, 'DIVA', 'DIVA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'HK' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(311, 'MCPS-PRS Alliance', 'MCPS-PRS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GB' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(312, 'CISAC', 'CISAC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Secretariat', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(313, 'FastTrack DCN', 'FastTrack', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(314, 'IDA', 'IDA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Related to CISAC', 'Audiovisual', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(315, 'CSI', 'CSI', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(316, 'CIS-Net AVI', 'CIS-Net', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(317, 'INTL-REP', 'INTL-REP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Related to CISAC', NULL, NULL, 2008, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(318, 'SGS', 'SGS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(319, 'ICE Services AB', 'ICE', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'SE' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(320, 'ARMONIA', 'ARMONIA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(321, 'PUBLISHERS', 'PUBLISHERS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(322, 'EVA', 'EVA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BE' LIMIT 1), 'Associate', 'No repertoire', NULL, 1997, NULL, '2017', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(323, 'ANCO', 'ANCO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Provisional', 'Musical', NULL, 2004, NULL, '2018', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(324, 'CNRCMSE', 'CNRCMSE', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ET' LIMIT 1), 'Related to CISAC', 'Musical', NULL, 2017, 2020, '2018', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(325, 'CRSEA', 'CRSEA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'RU' LIMIT 1), 'Associate', 'No repertoire', NULL, 2017, NULL, '2018', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(326, 'IMPF', 'IMPF', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BE' LIMIT 1), 'Associate', 'Musical', NULL, 2013, NULL, '2018', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(327, 'OAZA', 'OAZA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CZ' LIMIT 1), 'Member', 'Audiovisual', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(328, 'SAA', 'SAA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BE' LIMIT 1), 'Associate', 'Audiovisual', NULL, 2010, NULL, '2018', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(329, 'ICSC', 'ICSC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CN' LIMIT 1), 'Provisional', 'AGP', NULL, 2009, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(330, 'SINGCAPS ', 'SINGCAPS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'SG' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(331, 'COSBOTS', 'COSBOTS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BW' LIMIT 1), 'Provisional', 'Musical', NULL, NULL, NULL, '2020', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(332, 'DEGANZ', 'DEGANZ', 'DEGNZ', (SELECT country_id FROM country WHERE iso_alpha_2 = 'NZ' LIMIT 1), 'Associate', 'Audiovisual', NULL, 1997, NULL, '2020', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(333, 'DGK', 'DGK', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'KR' LIMIT 1), 'Provisional', 'Audiovisual', NULL, NULL, NULL, '2020', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(334, 'ASCRL', 'ASCRL', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Provisional', 'AGP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(335, 'ISOCRATIS', 'ISOCRATIS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GR' LIMIT 1), 'Provisional', 'Audiovisual', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(336, 'KOSCAP', 'KOSCAP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'KR' LIMIT 1), 'Provisional', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(337, 'COPYSWEDE', 'COPYSWEDE', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'SE' LIMIT 1), 'Provisional', 'Audiovisual', NULL, NULL, NULL, '7/14/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(338, 'EDEM', 'EDEM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GR' LIMIT 1), 'Provisional', 'Musical', NULL, NULL, NULL, '7/14/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(339, 'EKKI', 'EKKI', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ES' LIMIT 1), 'Provisional', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', NULL, NULL, '7/14/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(340, 'MYNDSTEF', 'MYNDSTEF', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'IS' LIMIT 1), 'Provisional', 'AGP', NULL, NULL, NULL, '7/14/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(341, 'AVTE', 'AVTE', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'FR' LIMIT 1), 'Associate', 'Audiovisual', NULL, NULL, NULL, '7/15/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(342, 'DGJ', 'DGJ', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'JP' LIMIT 1), 'Associate', 'Audiovisual', NULL, NULL, NULL, '7/15/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(343, 'Mali Maliki Institute', 'Mali', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GH' LIMIT 1), 'Associate', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', NULL, NULL, '7/15/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(344, 'SEDA', 'SEDA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'ES' LIMIT 1), 'Provisional', 'Musical', NULL, NULL, NULL, '7/15/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(345, 'SIIP', 'SIIP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'UZ' LIMIT 1), 'Provisional', 'Musical', '["Dramatic - Literary - AGP"]', NULL, NULL, '7/15/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(346, 'TAMRISO', 'TAMRISO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', 'Musical', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(347, 'IAF', 'IAF', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GB' LIMIT 1), 'Associate', 'Audiovisual', NULL, NULL, NULL, '7/16/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(348, 'AVRS', 'AVRS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NG' LIMIT 1), 'Provisional', 'Audiovisual', NULL, NULL, NULL, '7/16/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(349, 'DYGA', 'DYGA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CL' LIMIT 1), 'Provisional', 'Audiovisual', NULL, NULL, NULL, '7/16/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(350, 'LESCOSAA', 'LESCOSAA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Provisional', 'Musical', '["Audiovisual - Dramatic - Literary - AGP"]', NULL, NULL, '7/16/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(351, 'SEF', 'SEF', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'TR' LIMIT 1), 'Provisional', 'Audiovisual', NULL, NULL, NULL, '7/16/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(352, 'VISARTA', 'VISARTA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'RO' LIMIT 1), 'Provisional', 'AGP', NULL, NULL, NULL, '7/16/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(353, 'RRA', 'RRA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'NZ' LIMIT 1), 'Related to CISAC', 'AGP', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(555, 'GRD', 'GRD', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(590, 'SACEM Deal Multi territorial', 'SACEM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, 2009, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(591, 'SACEM Deal', 'SACEM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, 2018, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(592, 'BACKOFFICE', 'BACKOFFICE', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(635, 'GEMA-US', 'GEMA-US', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(658, 'SACEM-US', 'SACEM-US', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(672, 'SGAE-NY', 'SGAE-NY', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(700, 'WIPO', 'WIPO', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(701, 'SONY', 'SONY', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(702, 'BMG', 'BMG', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(703, 'UNIVERSAL', 'UNIVERSAL', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(704, 'DISCOVERY', 'DISCOVERY', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(705, 'KOBALT', 'KOBALT', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(707, 'MusicMark', 'MusicMark', 'NASC', (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Related to CISAC', NULL, NULL, 2013, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(708, 'MLC', 'MLC', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(710, 'ISAN', 'ISAN', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'CH' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(758, 'SACEM-LIBAN', 'SACEM-LIBAN', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(775, 'Solar EMI', 'Solar', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, 2014, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(776, 'Solar Sony', 'Solar', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, 2014, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(777, 'CELAS', 'CELAS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, 2007, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(778, 'GMR', 'GMR', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Related to CISAC', NULL, NULL, 2013, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(779, 'Polaris Nordic ', 'Polaris', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, 2014, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(780, 'UNISON', 'UNISON', 'IME Licensing Services, S.L.', (SELECT country_id FROM country WHERE iso_alpha_2 = 'ES' LIMIT 1), 'Client RME ', 'Musical', NULL, 2016, NULL, '2021', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(781, 'SOUNDREEF', 'SOUNDREEF', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Client RME ', 'Musical', NULL, 2008, NULL, '2021', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(782, 'NexTone', 'NexTone', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'JP' LIMIT 1), 'Client RME ', 'Musical', NULL, 2000, NULL, '2021', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(783, 'HEXACORP LTD ', 'HEXACORP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Client RME ', 'Musical', NULL, 2014, NULL, '2021', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(784, 'ESMAA ', 'ESMAA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'AE' LIMIT 1), 'Client RME ', 'Musical', NULL, 2020, NULL, '2021', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(785, 'LEA', 'LEA', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'IT' LIMIT 1), 'Related to CISAC', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(786, 'ALLTRACK', 'ALLTRACK', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'US' LIMIT 1), 'Client RME ', 'Musical', NULL, 2017, NULL, '7/14/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(787, 'ORFIUM Greece', 'ORFIUM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'GR' LIMIT 1), 'Out of CISAC', 'Musical', NULL, 2020, NULL, '7/14/05', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(788, 'MINT', 'MINT', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, 2017, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(789, 'GDSDX', 'GDSDX', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, 2022, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(790, 'MESAM / MSG ', 'MESAM', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'TR' LIMIT 1), 'Related to CISAC', NULL, NULL, 2022, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(791, 'ATLAS', 'ATLAS', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'XX' LIMIT 1), 'Related to CISAC', NULL, NULL, 2022, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(792, 'BRIDGER', 'BRIDGER', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'BE' LIMIT 1), 'Related to CISAC', NULL, NULL, 2022, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),
(793, 'NMP', 'NMP', NULL, (SELECT country_id FROM country WHERE iso_alpha_2 = 'SE' LIMIT 1), 'Related to CISAC', NULL, NULL, 2023, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, TRUE),

-- =====================================================
-- VIEWS: Common Territory Groupings
-- =====================================================

-- View: Countries by continent
CREATE VIEW v_countries_by_continent AS
SELECT 
    c.continent_name,
    co.iso_alpha_2,
    co.iso_alpha_3,
    co.country_name,
    co.capital_city,
    co.currency_code,
    co.calling_code
FROM country co
JOIN continent c ON co.continent_id = c.continent_id
WHERE co.is_active = TRUE
ORDER BY c.continent_name, co.country_name;

-- View: Countries with PRO coverage
CREATE VIEW v_countries_with_pro AS
SELECT 
    c.iso_alpha_2,
    c.country_name,
    pro.cisac_code,
    pro.society_name,
    pro.society_acronym,
    pro.main_repertoire,
    pro.is_active AS pro_active
FROM country c
JOIN performing_rights_organization pro ON c.country_id = pro.country_id
WHERE c.is_active = TRUE
ORDER BY c.country_name, pro.society_name;

-- View: Music territories expanded
CREATE VIEW v_music_territories_expanded AS
SELECT 
    mt.territory_code,
    mt.territory_name,
    mt.territory_type,
    c.iso_alpha_2,
    c.country_name
FROM music_territory mt
CROSS JOIN country c
WHERE c.is_active = TRUE
    AND (
        -- Include countries in the countries array
        JSON_CONTAINS(mt.countries, JSON_QUOTE(c.iso_alpha_2))
        -- Or if territory is worldwide and country not in excluded
        OR (mt.territory_type = 'worldwide' 
            AND (mt.excluded_countries IS NULL 
                OR NOT JSON_CONTAINS(mt.excluded_countries, JSON_QUOTE(c.iso_alpha_2))))
    );

-- View: Language coverage by country
CREATE VIEW v_country_languages AS
SELECT 
    c.iso_alpha_2,
    c.country_name,
    l.iso_639_1,
    l.language_name,
    l.native_name,
    l.script_code,
    l.metadata_support
FROM country c
CROSS JOIN language l
WHERE c.is_active = TRUE 
    AND l.is_active = TRUE
    AND JSON_CONTAINS(c.languages, JSON_QUOTE(l.iso_639_1));

-- =====================================================
-- FUNCTIONS: Territory and Format Utilities
-- =====================================================

-- Function: Check if country is in territory
DELIMITER $
CREATE FUNCTION is_country_in_territory(
    p_country_code CHAR(2),
    p_territory_code VARCHAR(50)
) RETURNS BOOLEAN
READS SQL DATA
DETERMINISTIC
BEGIN
    DECLARE v_in_territory BOOLEAN DEFAULT FALSE;
    DECLARE v_territory_type VARCHAR(50);
    DECLARE v_countries JSON;
    DECLARE v_excluded JSON;
    
    SELECT territory_type, countries, excluded_countries
    INTO v_territory_type, v_countries, v_excluded
    FROM music_territory
    WHERE territory_code = p_territory_code;
    
    IF v_territory_type = 'worldwide' THEN
        -- Check if not in excluded list
        SET v_in_territory = v_excluded IS NULL 
            OR NOT JSON_CONTAINS(v_excluded, JSON_QUOTE(p_country_code));
    ELSE
        -- Check if in included list
        SET v_in_territory = v_countries IS NOT NULL 
            AND JSON_CONTAINS(v_countries, JSON_QUOTE(p_country_code));
    END IF;
    
    RETURN v_in_territory;
END$
DELIMITER ;

-- Function: Format phone number
DELIMITER $
CREATE FUNCTION format_phone_number(
    p_country_code CHAR(2),
    p_phone_number VARCHAR(50)
) RETURNS VARCHAR(50)
READS SQL DATA
DETERMINISTIC
BEGIN
    DECLARE v_calling_code VARCHAR(10);
    DECLARE v_formatted VARCHAR(50);
    
    SELECT cc.calling_code INTO v_calling_code
    FROM country c
    JOIN calling_code cc ON c.country_id = cc.country_id
    WHERE c.iso_alpha_2 = p_country_code
    LIMIT 1;
    
    -- Remove any existing country code
    SET v_formatted = REGEXP_REPLACE(p_phone_number, '^[+]?[0-9]{1,4}[-. ]?', '');
    
    -- Add the country code
    SET v_formatted = CONCAT(v_calling_code, ' ', v_formatted);
    
    RETURN v_formatted;
END$
DELIMITER ;

-- Function: Convert currency amount
DELIMITER $
CREATE FUNCTION convert_currency(
    p_amount DECIMAL(20,4),
    p_from_currency CHAR(3),
    p_to_currency CHAR(3),
    p_date DATE
) RETURNS DECIMAL(20,4)
READS SQL DATA
DETERMINISTIC
BEGIN
    DECLARE v_rate DECIMAL(20,10);
    
    IF p_from_currency = p_to_currency THEN
        RETURN p_amount;
    END IF;
    
    -- Get the exchange rate for the specific date
    SELECT exchange_rate INTO v_rate
    FROM currency_exchange_rate cer
    JOIN currency cf ON cer.from_currency_id = cf.currency_id
    JOIN currency ct ON cer.to_currency_id = ct.currency_id
    WHERE cf.currency_code = p_from_currency
        AND ct.currency_code = p_to_currency
        AND cer.rate_date <= p_date
    ORDER BY cer.rate_date DESC
    LIMIT 1;
    
    IF v_rate IS NULL THEN
        -- Try reverse rate
        SELECT 1/exchange_rate INTO v_rate
        FROM currency_exchange_rate cer
        JOIN currency cf ON cer.from_currency_id = cf.currency_id
        JOIN currency ct ON cer.to_currency_id = ct.currency_id
        WHERE cf.currency_code = p_to_currency
            AND ct.currency_code = p_from_currency
            AND cer.rate_date <= p_date
        ORDER BY cer.rate_date DESC
        LIMIT 1;
    END IF;
    
    RETURN p_amount * IFNULL(v_rate, 1);
END$
DELIMITER ;

-- =====================================================
-- PROCEDURES: Data Management
-- =====================================================

-- Procedure: Add new country
DELIMITER $
CREATE PROCEDURE add_country(
    IN p_iso_alpha_2 CHAR(2),
    IN p_iso_alpha_3 CHAR(3),
    IN p_iso_numeric CHAR(3),
    IN p_country_name VARCHAR(100),
    IN p_continent_code CHAR(2),
    IN p_currency_code CHAR(3),
    IN p_calling_code VARCHAR(10),
    IN p_languages JSON
)
BEGIN
    DECLARE v_continent_id INT UNSIGNED;
    DECLARE v_country_id INT UNSIGNED;
    
    -- Get continent ID
    SELECT continent_id INTO v_continent_id
    FROM continent
    WHERE continent_code = p_continent_code;
    
    -- Insert country
    INSERT INTO country (
        iso_alpha_2, iso_alpha_3, iso_numeric, 
        country_name, continent_id, currency_code,
        calling_code, languages, is_active
    ) VALUES (
        p_iso_alpha_2, p_iso_alpha_3, p_iso_numeric,
        p_country_name, v_continent_id, p_currency_code,
        p_calling_code, p_languages, TRUE
    );
    
    SET v_country_id = LAST_INSERT_ID();
    
    -- Insert calling code
    IF p_calling_code IS NOT NULL THEN
        INSERT INTO calling_code (country_id, calling_code)
        VALUES (v_country_id, p_calling_code);
    END IF;
    
    SELECT v_country_id AS country_id;
END$
DELIMITER ;

-- Procedure: Update exchange rates
DELIMITER $
CREATE PROCEDURE update_exchange_rates(
    IN p_base_currency CHAR(3),
    IN p_rates JSON,
    IN p_rate_date DATE
)
BEGIN
    DECLARE v_base_currency_id INT UNSIGNED;
    DECLARE v_currency_code CHAR(3);
    DECLARE v_rate DECIMAL(20,10);
    DECLARE v_idx INT DEFAULT 0;
    DECLARE v_count INT;
    
    -- Get base currency ID
    SELECT currency_id INTO v_base_currency_id
    FROM currency
    WHERE currency_code = p_base_currency;
    
    -- Get count of rates
    SET v_count = JSON_LENGTH(p_rates);
    
    -- Loop through rates
    WHILE v_idx < v_count DO
        SET v_currency_code = JSON_UNQUOTE(JSON_EXTRACT(JSON_KEYS(p_rates), CONCAT('$[', v_idx, ']')));
        SET v_rate = JSON_EXTRACT(p_rates, CONCAT('$.', v_currency_code));
        
        INSERT INTO currency_exchange_rate (
            from_currency_id,
            to_currency_id,
            exchange_rate,
            rate_date,
            rate_source
        )
        SELECT 
            v_base_currency_id,
            c.currency_id,
            v_rate,
            p_rate_date,
            'API Update'
        FROM currency c
        WHERE c.currency_code = v_currency_code
        ON DUPLICATE KEY UPDATE
            exchange_rate = v_rate,
            created_at = CURRENT_TIMESTAMP(6);
        
        SET v_idx = v_idx + 1;
    END WHILE;
END$
DELIMITER ;

-- =====================================================
-- TRIGGERS: Data Integrity
-- =====================================================

-- Trigger: Validate country languages
DELIMITER $
CREATE TRIGGER validate_country_languages
BEFORE INSERT ON country
FOR EACH ROW
BEGIN
    DECLARE v_lang_count INT;
    
    IF NEW.languages IS NOT NULL THEN
        -- Check if all language codes exist
        SET v_lang_count = (
            SELECT COUNT(DISTINCT l.iso_639_1)
            FROM language l
            WHERE JSON_CONTAINS(NEW.languages, JSON_QUOTE(l.iso_639_1))
        );
        
        IF v_lang_count != JSON_LENGTH(NEW.languages) THEN
            SIGNAL SQLSTATE '45000'
            SET MESSAGE_TEXT = 'Invalid language code in languages array';
        END IF;
    END IF;
END$
DELIMITER ;

-- Trigger: Update currency last rate update
DELIMITER $
CREATE TRIGGER update_currency_rate_timestamp
AFTER INSERT ON currency_exchange_rate
FOR EACH ROW
BEGIN
    UPDATE currency
    SET last_rate_update = NEW.created_at
    WHERE currency_id IN (NEW.from_currency_id, NEW.to_currency_id);
END$
DELIMITER ;

-- =====================================================
-- INDEXES: Performance Optimization
-- =====================================================

-- Additional indexes for common queries
CREATE INDEX idx_country_currency ON country(currency_code);
CREATE INDEX idx_country_music_market ON country(music_market_size);
CREATE INDEX idx_pro_repertoire ON performing_rights_organization(main_repertoire);
CREATE INDEX idx_pro_foundation ON performing_rights_organization(foundation_year);
CREATE INDEX idx_territory_cisac ON music_territory(cisac_tis_code);
CREATE INDEX idx_city_music_scene ON city(music_scene_rating);
CREATE INDEX idx_language_family ON language(language_family);
CREATE INDEX idx_currency_update ON currency(last_rate_update);

-- =====================================================
-- INITIAL CONFIGURATION DATA
-- =====================================================

-- Default number formats for major markets
INSERT INTO number_format (country_id, decimal_separator, thousands_separator) 
SELECT country_id, '.', ','
FROM country 
WHERE iso_alpha_2 IN ('US', 'GB', 'AU', 'CA', 'NZ', 'IE', 'IN', 'PK', 'BD', 'NG', 'KE', 'GH', 'ZA')
AND NOT EXISTS (
    SELECT 1 FROM number_format nf 
    WHERE nf.country_id = country.country_id
);

-- Default date formats for major markets
INSERT INTO date_format (country_id, date_format, time_format, datetime_format, first_day_of_week) 
SELECT country_id, '%Y-%m-%d', '%H:%M:%S', '%Y-%m-%d %H:%M:%S', 1
FROM country 
WHERE iso_alpha_2 IN ('CN', 'JP', 'KR', 'HU', 'LT', 'MN', 'SE')
AND NOT EXISTS (
    SELECT 1 FROM date_format df 
    WHERE df.country_id = country.country_id
);

-- Music market classifications
UPDATE country SET music_market_size = 'major' 
WHERE iso_alpha_2 IN ('US', 'JP', 'GB', 'DE', 'FR', 'CA', 'KR', 'AU', 'BR', 'IT', 'NL', 'ES', 'SE', 'MX', 'NO', 'CH', 'BE', 'DK', 'AT', 'FI');

UPDATE country SET music_market_size = 'medium' 
WHERE iso_alpha_2 IN ('PL', 'AR', 'IN', 'RU', 'ZA', 'CN', 'TW', 'CO', 'NZ', 'IE', 'CL', 'PT', 'CZ', 'GR', 'HU', 'IL', 'SG', 'MY', 'TH', 'TR');

UPDATE country SET music_market_size = 'emerging' 
WHERE music_market_size IS NULL AND gdp_usd > 100000000000;

UPDATE country SET music_market_size = 'minor' 
WHERE music_market_size IS NULL;

-- =====================================================
-- GRANTS: Security Permissions (adjust as needed)
-- =====================================================
-- Example grants for application user
-- GRANT SELECT ON reference_db.* TO 'astro_app'@'%';
-- GRANT INSERT, UPDATE ON reference_db.currency_exchange_rate TO 'astro_app'@'%';
-- GRANT EXECUTE ON FUNCTION reference_db.is_country_in_territory TO 'astro_app'@'%';
-- GRANT EXECUTE ON FUNCTION reference_db.format_phone_number TO 'astro_app'@'%';
-- GRANT EXECUTE ON FUNCTION reference_db.convert_currency TO 'astro_app'@'%';

-- =====================================================

SELECT 'Section 2: GEOGRAPHIC LOOKUPS created successfully!' AS status;
SELECT 
    (SELECT COUNT(*) FROM continent) AS continents,
    (SELECT COUNT(*) FROM country) AS countries,
    (SELECT COUNT(*) FROM language) AS languages,
    (SELECT COUNT(*) FROM currency) AS currencies,
    (SELECT COUNT(*) FROM timezone) AS timezones,
    (SELECT COUNT(*) FROM performing_rights_organization) AS pros,
    (SELECT COUNT(*) FROM music_territory) AS territories;


-- =====================================================
-- SECTION 3: TERRITORY MANAGEMENT
-- =====================================================

-- 3.1: Territory Types
CREATE TABLE IF NOT EXISTS territory_type (
    territory_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    hierarchy_level TINYINT UNSIGNED NOT NULL DEFAULT 1,
    can_have_children BOOLEAN NOT NULL DEFAULT FALSE,
    is_licensable BOOLEAN NOT NULL DEFAULT TRUE,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (territory_type_id),
    UNIQUE KEY uk_territory_type_code (code),
    KEY idx_territory_type_active (is_active),
    KEY idx_territory_type_sort (sort_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Territory type definitions for music rights';

-- Insert territory types
INSERT INTO territory_type (code, name, description, hierarchy_level, can_have_children, is_licensable, sort_order) VALUES
('WORLD', 'World', 'Global territory covering all countries', 1, TRUE, TRUE, 1),
('CONTINENT', 'Continent', 'Continental regions', 2, TRUE, TRUE, 10),
('REGION', 'Region', 'Regional groupings (e.g., European Union)', 3, TRUE, TRUE, 20),
('SUBREGION', 'Sub-Region', 'Sub-regional groupings', 4, TRUE, TRUE, 30),
('COUNTRY', 'Country', 'Individual countries', 5, TRUE, TRUE, 40),
('SUBDIVISION', 'Subdivision', 'States, provinces, territories', 6, FALSE, TRUE, 50),
('CUSTOM', 'Custom Territory', 'Custom-defined territories for specific licensing', 7, TRUE, TRUE, 60),
('EXCLUSION', 'Exclusion Zone', 'Territory defined by exclusions', 7, FALSE, TRUE, 70),
('DIGITAL', 'Digital Territory', 'Online/digital-only territories', 5, FALSE, TRUE, 80),
('HISTORICAL', 'Historical', 'No longer existing territories', 5, FALSE, TRUE, 90),
('UNION', 'Union', 'Economic or political unions', 3, TRUE, TRUE, 25),
('LANGUAGE', 'Language Territory', 'Language-based territories', 4, TRUE, TRUE, 35);

-- 3.2: Main Territory Table
CREATE TABLE IF NOT EXISTS territory (
    territory_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    territory_type_id INT UNSIGNED NOT NULL,
    code VARCHAR(50) NOT NULL,
    iso_alpha2 CHAR(2) DEFAULT NULL,
    iso_alpha3 CHAR(3) DEFAULT NULL,
    iso_numeric CHAR(3) DEFAULT NULL,
    cisac_code VARCHAR(10) DEFAULT NULL,
    ddex_code VARCHAR(10) DEFAULT NULL,
    name_en VARCHAR(255) NOT NULL,
    name_local VARCHAR(255) DEFAULT NULL,
    official_name VARCHAR(500) DEFAULT NULL,
    is_digital_only BOOLEAN NOT NULL DEFAULT FALSE,
    is_physical_only BOOLEAN NOT NULL DEFAULT FALSE,
    valid_from DATE DEFAULT NULL,
    valid_to DATE DEFAULT NULL,
    is_historical BOOLEAN NOT NULL DEFAULT FALSE,
    population BIGINT UNSIGNED DEFAULT NULL,
    gdp_usd DECIMAL(15,2) DEFAULT NULL,
    music_market_size_usd DECIMAL(12,2) DEFAULT NULL,
    streaming_penetration DECIMAL(5,2) DEFAULT NULL,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    metadata JSON DEFAULT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (territory_id),
    UNIQUE KEY uk_territory_code (code),
    UNIQUE KEY uk_territory_iso_alpha2 (iso_alpha2),
    UNIQUE KEY uk_territory_iso_alpha3 (iso_alpha3),
    KEY idx_territory_type (territory_type_id),
    KEY idx_territory_cisac (cisac_code),
    KEY idx_territory_ddex (ddex_code),
    KEY idx_territory_active (is_active),
    KEY idx_territory_historical (is_historical),
    KEY idx_territory_dates (valid_from, valid_to),
    CONSTRAINT fk_territory_type FOREIGN KEY (territory_type_id) 
        REFERENCES territory_type (territory_type_id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Music industry territories for rights administration';

-- Insert core territories (showing first 30 as requested)
INSERT INTO territory (territory_type_id, code, iso_alpha2, iso_alpha3, iso_numeric, cisac_code, ddex_code, name_en, is_active, sort_order) VALUES
-- World
((SELECT territory_type_id FROM territory_type WHERE code = 'WORLD'), 'WORLD', NULL, NULL, NULL, '2136', 'Worldwide', 'World', TRUE, 1),

-- Continents
((SELECT territory_type_id FROM territory_type WHERE code = 'CONTINENT'), 'AFRICA', NULL, NULL, NULL, NULL, NULL, 'Africa', TRUE, 10),
((SELECT territory_type_id FROM territory_type WHERE code = 'CONTINENT'), 'ASIA', NULL, NULL, NULL, NULL, NULL, 'Asia', TRUE, 20),
((SELECT territory_type_id FROM territory_type WHERE code = 'CONTINENT'), 'EUROPE', NULL, NULL, NULL, NULL, NULL, 'Europe', TRUE, 30),
((SELECT territory_type_id FROM territory_type WHERE code = 'CONTINENT'), 'NORTH_AMERICA', NULL, NULL, NULL, NULL, NULL, 'North America', TRUE, 40),
((SELECT territory_type_id FROM territory_type WHERE code = 'CONTINENT'), 'SOUTH_AMERICA', NULL, NULL, NULL, NULL, NULL, 'South America', TRUE, 50),
((SELECT territory_type_id FROM territory_type WHERE code = 'CONTINENT'), 'OCEANIA', NULL, NULL, NULL, NULL, NULL, 'Oceania', TRUE, 60),

-- Major Regions/Unions
((SELECT territory_type_id FROM territory_type WHERE code = 'UNION'), 'EU', NULL, NULL, NULL, '2140', 'EU', 'European Union', TRUE, 100),
((SELECT territory_type_id FROM territory_type WHERE code = 'REGION'), 'APAC', NULL, NULL, NULL, NULL, 'APAC', 'Asia Pacific', TRUE, 110),
((SELECT territory_type_id FROM territory_type WHERE code = 'REGION'), 'LATAM', NULL, NULL, NULL, NULL, 'LATAM', 'Latin America', TRUE, 120),
((SELECT territory_type_id FROM territory_type WHERE code = 'REGION'), 'MENA', NULL, NULL, NULL, NULL, 'MENA', 'Middle East and North Africa', TRUE, 130),
((SELECT territory_type_id FROM territory_type WHERE code = 'REGION'), 'SSA', NULL, NULL, NULL, NULL, 'SSA', 'Sub-Saharan Africa', TRUE, 140),
((SELECT territory_type_id FROM territory_type WHERE code = 'REGION'), 'GCC', NULL, NULL, NULL, NULL, 'GCC', 'Gulf Cooperation Council', TRUE, 150),

-- Custom music industry territories
((SELECT territory_type_id FROM territory_type WHERE code = 'CUSTOM'), 'WORLD_EX_USA', NULL, NULL, NULL, NULL, NULL, 'World excluding USA', TRUE, 200),
((SELECT territory_type_id FROM territory_type WHERE code = 'CUSTOM'), 'WORLD_EX_NA', NULL, NULL, NULL, NULL, NULL, 'World excluding North America', TRUE, 210),
((SELECT territory_type_id FROM territory_type WHERE code = 'CUSTOM'), 'EU_PLUS_CH', NULL, NULL, NULL, NULL, NULL, 'European Union plus Switzerland', TRUE, 220),

-- Major Countries (first entries)
((SELECT territory_type_id FROM territory_type WHERE code = 'COUNTRY'), 'US', 'US', 'USA', '840', '0840', 'US', 'United States', TRUE, 1000),
((SELECT territory_type_id FROM territory_type WHERE code = 'COUNTRY'), 'GB', 'GB', 'GBR', '826', '0826', 'GB', 'United Kingdom', TRUE, 1010),
((SELECT territory_type_id FROM territory_type WHERE code = 'COUNTRY'), 'CA', 'CA', 'CAN', '124', '0124', 'CA', 'Canada', TRUE, 1020),
((SELECT territory_type_id FROM territory_type WHERE code = 'COUNTRY'), 'AU', 'AU', 'AUS', '036', '0036', 'AU', 'Australia', TRUE, 1030),
((SELECT territory_type_id FROM territory_type WHERE code = 'COUNTRY'), 'JP', 'JP', 'JPN', '392', '0392', 'JP', 'Japan', TRUE, 1040),
((SELECT territory_type_id FROM territory_type WHERE code = 'COUNTRY'), 'DE', 'DE', 'DEU', '276', '0276', 'DE', 'Germany', TRUE, 1050),
((SELECT territory_type_id FROM territory_type WHERE code = 'COUNTRY'), 'FR', 'FR', 'FRA', '250', '0250', 'FR', 'France', TRUE, 1060),
((SELECT territory_type_id FROM territory_type WHERE code = 'COUNTRY'), 'IT', 'IT', 'ITA', '380', '0380', 'IT', 'Italy', TRUE, 1070),
((SELECT territory_type_id FROM territory_type WHERE code = 'COUNTRY'), 'ES', 'ES', 'ESP', '724', '0724', 'ES', 'Spain', TRUE, 1080),
((SELECT territory_type_id FROM territory_type WHERE code = 'COUNTRY'), 'BR', 'BR', 'BRA', '076', '0076', 'BR', 'Brazil', TRUE, 1090),
((SELECT territory_type_id FROM territory_type WHERE code = 'COUNTRY'), 'MX', 'MX', 'MEX', '484', '0484', 'MX', 'Mexico', TRUE, 1100),
((SELECT territory_type_id FROM territory_type WHERE code = 'COUNTRY'), 'KR', 'KR', 'KOR', '410', '0410', 'KR', 'South Korea', TRUE, 1110),
((SELECT territory_type_id FROM territory_type WHERE code = 'COUNTRY'), 'CN', 'CN', 'CHN', '156', '0156', 'CN', 'China', TRUE, 1120);

-- 3.3: Territory Groups
CREATE TABLE IF NOT EXISTS territory_group (
    territory_group_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    group_type VARCHAR(50) NOT NULL,
    is_standard BOOLEAN NOT NULL DEFAULT FALSE,
    created_by VARCHAR(100) DEFAULT NULL,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    metadata JSON DEFAULT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (territory_group_id),
    UNIQUE KEY uk_territory_group_code (code),
    KEY idx_territory_group_type (group_type),
    KEY idx_territory_group_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Territory groupings for music licensing';

-- Insert standard territory groups
INSERT INTO territory_group (code, name, description, group_type, is_standard, sort_order) VALUES
('BRICS', 'BRICS Nations', 'Brazil, Russia, India, China, South Africa', 'ECONOMIC', TRUE, 10),
('G7', 'G7 Countries', 'Group of Seven major economies', 'ECONOMIC', TRUE, 20),
('G20', 'G20 Countries', 'Group of Twenty major economies', 'ECONOMIC', TRUE, 30),
('OECD', 'OECD Countries', 'Organisation for Economic Co-operation and Development', 'ECONOMIC', TRUE, 40),
('COMMONWEALTH', 'Commonwealth Nations', 'Commonwealth of Nations', 'POLITICAL', TRUE, 50),
('ARAB_LEAGUE', 'Arab League', 'League of Arab States', 'POLITICAL', TRUE, 60),
('ASEAN', 'ASEAN', 'Association of Southeast Asian Nations', 'ECONOMIC', TRUE, 70),
('MERCOSUR', 'Mercosur', 'Southern Common Market', 'ECONOMIC', TRUE, 80),
('NAFTA', 'NAFTA/USMCA', 'North American Free Trade Agreement', 'ECONOMIC', TRUE, 90),
('ANGLO', 'Anglophone', 'English-speaking territories', 'LANGUAGE', TRUE, 100),
('FRANCO', 'Francophone', 'French-speaking territories', 'LANGUAGE', TRUE, 110),
('HISPANIC', 'Hispanic', 'Spanish-speaking territories', 'LANGUAGE', TRUE, 120),
('LUSOPHONE', 'Lusophone', 'Portuguese-speaking territories', 'LANGUAGE', TRUE, 130),
('MAJOR_MARKETS', 'Major Music Markets', 'Top 10 music markets by revenue', 'MARKET', TRUE, 140),
('EMERGING_MARKETS', 'Emerging Markets', 'High-growth music markets', 'MARKET', TRUE, 150);

-- 3.4: Territory Hierarchy
CREATE TABLE IF NOT EXISTS territory_hierarchy (
    territory_hierarchy_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    parent_territory_id INT UNSIGNED NOT NULL,
    child_territory_id INT UNSIGNED NOT NULL,
    hierarchy_type VARCHAR(50) NOT NULL DEFAULT 'GEOGRAPHIC',
    hierarchy_level TINYINT UNSIGNED NOT NULL DEFAULT 1,
    is_primary BOOLEAN NOT NULL DEFAULT TRUE,
    valid_from DATE DEFAULT NULL,
    valid_to DATE DEFAULT NULL,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (territory_hierarchy_id),
    UNIQUE KEY uk_territory_hierarchy (parent_territory_id, child_territory_id, hierarchy_type),
    KEY idx_parent_territory (parent_territory_id),
    KEY idx_child_territory (child_territory_id),
    KEY idx_hierarchy_type (hierarchy_type),
    KEY idx_hierarchy_dates (valid_from, valid_to),
    CONSTRAINT fk_parent_territory FOREIGN KEY (parent_territory_id) 
        REFERENCES territory (territory_id) ON UPDATE CASCADE,
    CONSTRAINT fk_child_territory FOREIGN KEY (child_territory_id) 
        REFERENCES territory (territory_id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Parent-child relationships between territories';

-- Insert basic hierarchy relationships
INSERT INTO territory_hierarchy (parent_territory_id, child_territory_id, hierarchy_type, hierarchy_level) VALUES
-- World contains all continents
((SELECT territory_id FROM territory WHERE code = 'WORLD'), (SELECT territory_id FROM territory WHERE code = 'AFRICA'), 'GEOGRAPHIC', 1),
((SELECT territory_id FROM territory WHERE code = 'WORLD'), (SELECT territory_id FROM territory WHERE code = 'ASIA'), 'GEOGRAPHIC', 1),
((SELECT territory_id FROM territory WHERE code = 'WORLD'), (SELECT territory_id FROM territory WHERE code = 'EUROPE'), 'GEOGRAPHIC', 1),
((SELECT territory_id FROM territory WHERE code = 'WORLD'), (SELECT territory_id FROM territory WHERE code = 'NORTH_AMERICA'), 'GEOGRAPHIC', 1),
((SELECT territory_id FROM territory WHERE code = 'WORLD'), (SELECT territory_id FROM territory WHERE code = 'SOUTH_AMERICA'), 'GEOGRAPHIC', 1),
((SELECT territory_id FROM territory WHERE code = 'WORLD'), (SELECT territory_id FROM territory WHERE code = 'OCEANIA'), 'GEOGRAPHIC', 1),

-- North America contains US, CA, MX
((SELECT territory_id FROM territory WHERE code = 'NORTH_AMERICA'), (SELECT territory_id FROM territory WHERE code = 'US'), 'GEOGRAPHIC', 2),
((SELECT territory_id FROM territory WHERE code = 'NORTH_AMERICA'), (SELECT territory_id FROM territory WHERE code = 'CA'), 'GEOGRAPHIC', 2),
((SELECT territory_id FROM territory WHERE code = 'NORTH_AMERICA'), (SELECT territory_id FROM territory WHERE code = 'MX'), 'GEOGRAPHIC', 2),

-- EU contains member countries
((SELECT territory_id FROM territory WHERE code = 'EU'), (SELECT territory_id FROM territory WHERE code = 'DE'), 'POLITICAL', 2),
((SELECT territory_id FROM territory WHERE code = 'EU'), (SELECT territory_id FROM territory WHERE code = 'FR'), 'POLITICAL', 2),
((SELECT territory_id FROM territory WHERE code = 'EU'), (SELECT territory_id FROM territory WHERE code = 'IT'), 'POLITICAL', 2),
((SELECT territory_id FROM territory WHERE code = 'EU'), (SELECT territory_id FROM territory WHERE code = 'ES'), 'POLITICAL', 2);

-- 3.5: Territory Group Members
CREATE TABLE IF NOT EXISTS territory_group_member (
    territory_group_member_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    territory_group_id INT UNSIGNED NOT NULL,
    territory_id INT UNSIGNED NOT NULL,
    is_excluded BOOLEAN NOT NULL DEFAULT FALSE,
    valid_from DATE DEFAULT NULL,
    valid_to DATE DEFAULT NULL,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (territory_group_member_id),
    UNIQUE KEY uk_group_member (territory_group_id, territory_id),
    KEY idx_territory_group (territory_group_id),
    KEY idx_territory (territory_id),
    KEY idx_group_member_dates (valid_from, valid_to),
    CONSTRAINT fk_group_member_group FOREIGN KEY (territory_group_id) 
        REFERENCES territory_group (territory_group_id) ON UPDATE CASCADE,
    CONSTRAINT fk_group_member_territory FOREIGN KEY (territory_id) 
        REFERENCES territory (territory_id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Members of territory groups';

-- 3.6: Territory Exclusions (for complex definitions)
CREATE TABLE IF NOT EXISTS territory_exclusion (
    territory_exclusion_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    base_territory_id INT UNSIGNED NOT NULL,
    excluded_territory_id INT UNSIGNED NOT NULL,
    exclusion_name VARCHAR(255) NOT NULL,
    description TEXT,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (territory_exclusion_id),
    UNIQUE KEY uk_territory_exclusion (base_territory_id, excluded_territory_id),
    KEY idx_base_territory (base_territory_id),
    KEY idx_excluded_territory (excluded_territory_id),
    CONSTRAINT fk_exclusion_base FOREIGN KEY (base_territory_id) 
        REFERENCES territory (territory_id) ON UPDATE CASCADE,
    CONSTRAINT fk_exclusion_excluded FOREIGN KEY (excluded_territory_id) 
        REFERENCES territory (territory_id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Territory exclusions for complex licensing definitions';

-- Insert common exclusions
INSERT INTO territory_exclusion (base_territory_id, excluded_territory_id, exclusion_name) VALUES
-- World excluding USA
((SELECT territory_id FROM territory WHERE code = 'WORLD_EX_USA'), (SELECT territory_id FROM territory WHERE code = 'US'), 'World excluding USA'),
-- World excluding North America
((SELECT territory_id FROM territory WHERE code = 'WORLD_EX_NA'), (SELECT territory_id FROM territory WHERE code = 'US'), 'World excluding North America'),
((SELECT territory_id FROM territory WHERE code = 'WORLD_EX_NA'), (SELECT territory_id FROM territory WHERE code = 'CA'), 'World excluding North America'),
((SELECT territory_id FROM territory WHERE code = 'WORLD_EX_NA'), (SELECT territory_id FROM territory WHERE code = 'MX'), 'World excluding North America');

-- 3.7: Territory Aliases
CREATE TABLE IF NOT EXISTS territory_alias (
    territory_alias_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    territory_id INT UNSIGNED NOT NULL,
    alias_name VARCHAR(255) NOT NULL,
    alias_type VARCHAR(50) NOT NULL,
    language_code CHAR(2) DEFAULT 'en',
    is_primary BOOLEAN NOT NULL DEFAULT FALSE,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (territory_alias_id),
    KEY idx_territory_alias_territory (territory_id),
    KEY idx_territory_alias_name (alias_name),
    KEY idx_territory_alias_type (alias_type),
    KEY idx_territory_alias_language (language_code),
    CONSTRAINT fk_alias_territory FOREIGN KEY (territory_id) 
        REFERENCES territory (territory_id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Alternative names for territories';

-- Insert common aliases
INSERT INTO territory_alias (territory_id, alias_name, alias_type, language_code, is_primary) VALUES
((SELECT territory_id FROM territory WHERE code = 'US'), 'USA', 'ABBREVIATION', 'en', TRUE),
((SELECT territory_id FROM territory WHERE code = 'US'), 'United States of America', 'FULL_NAME', 'en', FALSE),
((SELECT territory_id FROM territory WHERE code = 'US'), 'Estados Unidos', 'TRANSLATION', 'es', FALSE),
((SELECT territory_id FROM territory WHERE code = 'GB'), 'UK', 'ABBREVIATION', 'en', TRUE),
((SELECT territory_id FROM territory WHERE code = 'GB'), 'Great Britain', 'ALTERNATE', 'en', FALSE),
((SELECT territory_id FROM territory WHERE code = 'GB'), 'United Kingdom of Great Britain and Northern Ireland', 'FULL_NAME', 'en', FALSE);

-- 3.8: Territory Currency Mapping
CREATE TABLE IF NOT EXISTS territory_currency (
    territory_currency_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    territory_id INT UNSIGNED NOT NULL,
    currency_code CHAR(3) NOT NULL,
    is_primary BOOLEAN NOT NULL DEFAULT TRUE,
    valid_from DATE DEFAULT NULL,
    valid_to DATE DEFAULT NULL,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (territory_currency_id),
    UNIQUE KEY uk_territory_currency (territory_id, currency_code),
    KEY idx_territory_currency_territory (territory_id),
    KEY idx_territory_currency_code (currency_code),
    KEY idx_territory_currency_dates (valid_from, valid_to),
    CONSTRAINT fk_currency_territory FOREIGN KEY (territory_id) 
        REFERENCES territory (territory_id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Currency associations for territories';

-- Insert primary currencies for major territories
INSERT INTO territory_currency (territory_id, currency_code, is_primary) VALUES
((SELECT territory_id FROM territory WHERE code = 'US'), 'USD', TRUE),
((SELECT territory_id FROM territory WHERE code = 'GB'), 'GBP', TRUE),
((SELECT territory_id FROM territory WHERE code = 'EU'), 'EUR', TRUE),
((SELECT territory_id FROM territory WHERE code = 'CA'), 'CAD', TRUE),
((SELECT territory_id FROM territory WHERE code = 'AU'), 'AUD', TRUE),
((SELECT territory_id FROM territory WHERE code = 'JP'), 'JPY', TRUE),
((SELECT territory_id FROM territory WHERE code = 'CN'), 'CNY', TRUE),
((SELECT territory_id FROM territory WHERE code = 'KR'), 'KRW', TRUE),
((SELECT territory_id FROM territory WHERE code = 'BR'), 'BRL', TRUE),
((SELECT territory_id FROM territory WHERE code = 'MX'), 'MXN', TRUE);

-- 3.9: Territory Language Mapping
CREATE TABLE IF NOT EXISTS territory_language (
    territory_language_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    territory_id INT UNSIGNED NOT NULL,
    language_code VARCHAR(10) NOT NULL,
    is_primary BOOLEAN NOT NULL DEFAULT FALSE,
    is_official BOOLEAN NOT NULL DEFAULT FALSE,
    percentage_speakers DECIMAL(5,2) DEFAULT NULL,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (territory_language_id),
    UNIQUE KEY uk_territory_language (territory_id, language_code),
    KEY idx_territory_language_territory (territory_id),
    KEY idx_territory_language_code (language_code),
    CONSTRAINT fk_language_territory FOREIGN KEY (territory_id) 
        REFERENCES territory (territory_id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Language associations for territories';

-- Insert primary languages
INSERT INTO territory_language (territory_id, language_code, is_primary, is_official) VALUES
((SELECT territory_id FROM territory WHERE code = 'US'), 'en', TRUE, TRUE),
((SELECT territory_id FROM territory WHERE code = 'US'), 'es', FALSE, FALSE),
((SELECT territory_id FROM territory WHERE code = 'GB'), 'en', TRUE, TRUE),
((SELECT territory_id FROM territory WHERE code = 'CA'), 'en', TRUE, TRUE),
((SELECT territory_id FROM territory WHERE code = 'CA'), 'fr', TRUE, TRUE),
((SELECT territory_id FROM territory WHERE code = 'FR'), 'fr', TRUE, TRUE),
((SELECT territory_id FROM territory WHERE code = 'ES'), 'es', TRUE, TRUE),
((SELECT territory_id FROM territory WHERE code = 'MX'), 'es', TRUE, TRUE),
((SELECT territory_id FROM territory WHERE code = 'BR'), 'pt', TRUE, TRUE),
((SELECT territory_id FROM territory WHERE code = 'JP'), 'ja', TRUE, TRUE),
((SELECT territory_id FROM territory WHERE code = 'CN'), 'zh', TRUE, TRUE),
((SELECT territory_id FROM territory WHERE code = 'KR'), 'ko', TRUE, TRUE),
((SELECT territory_id FROM territory WHERE code = 'DE'), 'de', TRUE, TRUE),
((SELECT territory_id FROM territory WHERE code = 'IT'), 'it', TRUE, TRUE);

-- 3.10: Territory Metadata
CREATE TABLE IF NOT EXISTS territory_metadata (
    territory_metadata_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    territory_id INT UNSIGNED NOT NULL,
    metadata_key VARCHAR(100) NOT NULL,
    metadata_value TEXT NOT NULL,
    metadata_type VARCHAR(50) NOT NULL DEFAULT 'STRING',
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (territory_metadata_id),
    UNIQUE KEY uk_territory_metadata (territory_id, metadata_key),
    KEY idx_territory_metadata_territory (territory_id),
    KEY idx_territory_metadata_key (metadata_key),
    KEY idx_territory_metadata_type (metadata_type),
    CONSTRAINT fk_metadata_territory FOREIGN KEY (territory_id) 
        REFERENCES territory (territory_id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Additional metadata for territories';

-- 3.11: Territory PRO/CMO Mapping
CREATE TABLE IF NOT EXISTS territory_pro (
    territory_pro_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    territory_id INT UNSIGNED NOT NULL,
    pro_code VARCHAR(50) NOT NULL,
    pro_name VARCHAR(255) NOT NULL,
    pro_type VARCHAR(50) NOT NULL,
    is_primary BOOLEAN NOT NULL DEFAULT FALSE,
    rights_type VARCHAR(50) DEFAULT NULL,
    valid_from DATE DEFAULT NULL,
    valid_to DATE DEFAULT NULL,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (territory_pro_id),
    UNIQUE KEY uk_territory_pro (territory_id, pro_code, rights_type),
    KEY idx_territory_pro_territory (territory_id),
    KEY idx_territory_pro_code (pro_code),
    KEY idx_territory_pro_type (pro_type),
    KEY idx_territory_pro_dates (valid_from, valid_to),
    CONSTRAINT fk_pro_territory FOREIGN KEY (territory_id) 
        REFERENCES territory (territory_id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='PRO/CMO associations for territories';

-- Insert major PRO mappings
INSERT INTO territory_pro (territory_id, pro_code, pro_name, pro_type, is_primary, rights_type) VALUES
((SELECT territory_id FROM territory WHERE code = 'US'), 'ASCAP', 'American Society of Composers, Authors and Publishers', 'PRO', TRUE, 'PERFORMANCE'),
((SELECT territory_id FROM territory WHERE code = 'US'), 'BMI', 'Broadcast Music, Inc.', 'PRO', TRUE, 'PERFORMANCE'),
((SELECT territory_id FROM territory WHERE code = 'US'), 'SESAC', 'SESAC', 'PRO', FALSE, 'PERFORMANCE'),
((SELECT territory_id FROM territory WHERE code = 'US'), 'SOUNDEXCHANGE', 'SoundExchange', 'CMO', TRUE, 'DIGITAL_PERFORMANCE'),
((SELECT territory_id FROM territory WHERE code = 'US'), 'MLC', 'Mechanical Licensing Collective', 'CMO', TRUE, 'MECHANICAL'),
((SELECT territory_id FROM territory WHERE code = 'GB'), 'PRS', 'PRS for Music', 'PRO', TRUE, 'PERFORMANCE'),
((SELECT territory_id FROM territory WHERE code = 'GB'), 'MCPS', 'Mechanical-Copyright Protection Society', 'CMO', TRUE, 'MECHANICAL'),
((SELECT territory_id FROM territory WHERE code = 'GB'), 'PPL', 'Phonographic Performance Limited', 'CMO', TRUE, 'NEIGHBORING'),
((SELECT territory_id FROM territory WHERE code = 'CA'), 'SOCAN', 'Society of Composers, Authors and Music Publishers of Canada', 'PRO', TRUE, 'PERFORMANCE'),
((SELECT territory_id FROM territory WHERE code = 'CA'), 'CMRRA', 'Canadian Musical Reproduction Rights Agency', 'CMO', TRUE, 'MECHANICAL'),
((SELECT territory_id FROM territory WHERE code = 'FR'), 'SACEM', 'Société des auteurs, compositeurs et éditeurs de musique', 'PRO', TRUE, 'PERFORMANCE'),
((SELECT territory_id FROM territory WHERE code = 'DE'), 'GEMA', 'Gesellschaft für musikalische Aufführungs- und mechanische Vervielfältigungsrechte', 'PRO', TRUE, 'PERFORMANCE'),
((SELECT territory_id FROM territory WHERE code = 'JP'), 'JASRAC', 'Japanese Society for Rights of Authors, Composers and Publishers', 'PRO', TRUE, 'PERFORMANCE'),
((SELECT territory_id FROM territory WHERE code = 'AU'), 'APRA_AMCOS', 'APRA AMCOS', 'PRO', TRUE, 'PERFORMANCE'),
((SELECT territory_id FROM territory WHERE code = 'BR'), 'ECAD', 'Escritório Central de Arrecadação e Distribuição', 'PRO', TRUE, 'PERFORMANCE');

-- 3.12: Historical Territories (for legacy contracts)
CREATE TABLE IF NOT EXISTS territory_historical (
    territory_historical_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    original_code VARCHAR(50) NOT NULL,
    original_name VARCHAR(255) NOT NULL,
    successor_territory_id INT UNSIGNED DEFAULT NULL,
    dissolution_date DATE DEFAULT NULL,
    formation_date DATE DEFAULT NULL,
    description TEXT,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (territory_historical_id),
    UNIQUE KEY uk_territory_historical_code (original_code),
    KEY idx_successor_territory (successor_territory_id),
    KEY idx_historical_dates (formation_date, dissolution_date),
    CONSTRAINT fk_historical_successor FOREIGN KEY (successor_territory_id) 
        REFERENCES territory (territory_id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Historical territories for legacy rights management';

-- Insert historical territories
INSERT INTO territory_historical (original_code, original_name, dissolution_date, description) VALUES
('USSR', 'Union of Soviet Socialist Republics', '1991-12-26', 'Former Soviet Union'),
('YU', 'Yugoslavia', '1992-04-27', 'Former Yugoslavia'),
('CS', 'Czechoslovakia', '1993-01-01', 'Former Czechoslovakia'),
('DD', 'East Germany (DDR)', '1990-10-03', 'German Democratic Republic'),
('YD', 'South Yemen', '1990-05-22', 'People\'s Democratic Republic of Yemen');

-- 3.13: Territory Timezone Mapping
CREATE TABLE IF NOT EXISTS territory_timezone (
    territory_timezone_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    territory_id INT UNSIGNED NOT NULL,
    timezone_name VARCHAR(100) NOT NULL,
    utc_offset VARCHAR(10) NOT NULL,
    is_primary BOOLEAN NOT NULL DEFAULT FALSE,
    observes_dst BOOLEAN NOT NULL DEFAULT FALSE,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (territory_timezone_id),
    KEY idx_territory_timezone_territory (territory_id),
    KEY idx_territory_timezone_name (timezone_name),
    CONSTRAINT fk_timezone_territory FOREIGN KEY (territory_id) 
        REFERENCES territory (territory_id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Timezone associations for territories';

-- 3.14: Create indexes for performance
CREATE INDEX idx_territory_search ON territory (name_en, code, iso_alpha2, iso_alpha3);
CREATE INDEX idx_territory_market ON territory (music_market_size_usd DESC, streaming_penetration DESC);
CREATE INDEX idx_territory_population ON territory (population DESC);

-- 3.15: Create views for common queries
CREATE OR REPLACE VIEW v_territory_full AS
SELECT 
    t.territory_id,
    t.code,
    t.name_en,
    tt.name AS territory_type,
    t.iso_alpha2,
    t.iso_alpha3,
    t.cisac_code,
    t.ddex_code,
    t.is_digital_only,
    t.is_physical_only,
    t.is_historical,
    t.valid_from,
    t.valid_to,
    t.population,
    t.music_market_size_usd,
    t.streaming_penetration,
    COUNT(DISTINCT th.child_territory_id) AS child_count,
    GROUP_CONCAT(DISTINCT tc.currency_code) AS currencies,
    GROUP_CONCAT(DISTINCT tl.language_code) AS languages,
    GROUP_CONCAT(DISTINCT tp.pro_code) AS pros,
    t.is_active
FROM territory t
JOIN territory_type tt ON t.territory_type_id = tt.territory_type_id
LEFT JOIN territory_hierarchy th ON t.territory_id = th.parent_territory_id AND th.is_active = TRUE
LEFT JOIN territory_currency tc ON t.territory_id = tc.territory_id AND tc.is_active = TRUE
LEFT JOIN territory_language tl ON t.territory_id = tl.territory_id AND tl.is_active = TRUE
LEFT JOIN territory_pro tp ON t.territory_id = tp.territory_id AND tp.is_active = TRUE
GROUP BY t.territory_id;

-- 3.16: Create stored procedures for common operations
DELIMITER //

CREATE PROCEDURE sp_get_territory_children(
    IN p_territory_code VARCHAR(50),
    IN p_include_inactive BOOLEAN
)
BEGIN
    WITH RECURSIVE territory_tree AS (
        SELECT 
            t.territory_id,
            t.code,
            t.name_en,
            0 AS level,
            CAST(t.code AS CHAR(1000)) AS path
        FROM territory t
        WHERE t.code = p_territory_code
          AND (p_include_inactive = TRUE OR t.is_active = TRUE)
        
        UNION ALL
        
        SELECT 
            t.territory_id,
            t.code,
            t.name_en,
            tt.level + 1,
            CONCAT(tt.path, ' > ', t.code)
        FROM territory t
        JOIN territory_hierarchy th ON t.territory_id = th.child_territory_id
        JOIN territory_tree tt ON th.parent_territory_id = tt.territory_id
        WHERE (p_include_inactive = TRUE OR t.is_active = TRUE)
          AND (p_include_inactive = TRUE OR th.is_active = TRUE)
    )
    SELECT * FROM territory_tree
    ORDER BY level, code;
END //

CREATE PROCEDURE sp_check_territory_inclusion(
    IN p_territory_code VARCHAR(50),
    IN p_check_code VARCHAR(50),
    OUT p_is_included BOOLEAN
)
BEGIN
    DECLARE v_count INT;
    
    -- Check if territory is directly included or through hierarchy
    WITH RECURSIVE territory_tree AS (
        SELECT territory_id
        FROM territory
        WHERE code = p_territory_code
        
        UNION ALL
        
        SELECT th.child_territory_id
        FROM territory_hierarchy th
        JOIN territory_tree tt ON th.parent_territory_id = tt.territory_id
        WHERE th.is_active = TRUE
    )
    SELECT COUNT(*) INTO v_count
    FROM territory_tree tt
    JOIN territory t ON tt.territory_id = t.territory_id
    WHERE t.code = p_check_code;
    
    -- Check exclusions
    IF v_count > 0 THEN
        SELECT COUNT(*) INTO v_count
        FROM territory_exclusion te
        JOIN territory t1 ON te.base_territory_id = t1.territory_id
        JOIN territory t2 ON te.excluded_territory_id = t2.territory_id
        WHERE t1.code = p_territory_code
          AND t2.code = p_check_code
          AND te.is_active = TRUE;
        
        SET p_is_included = (v_count = 0);
    ELSE
        SET p_is_included = FALSE;
    END IF;
END //

DELIMITER ;

-- =====================================================
-- SECTION 4: MUSIC METADATA
-- =====================================================

-- Genre table with hierarchical structure
CREATE TABLE IF NOT EXISTS genre (
    genre_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    parent_genre_id INT UNSIGNED DEFAULT NULL,
    genre_code VARCHAR(20) NOT NULL UNIQUE,
    genre_name VARCHAR(100) NOT NULL,
    genre_name_es VARCHAR(100),
    genre_name_fr VARCHAR(100),
    genre_name_de VARCHAR(100),
    genre_name_ja VARCHAR(100),
    genre_name_ko VARCHAR(100),
    genre_name_zh VARCHAR(100),
    genre_name_pt VARCHAR(100),
    genre_name_ru VARCHAR(100),
    genre_name_ar VARCHAR(100),
    genre_name_hi VARCHAR(100),
    description TEXT,
    musicbrainz_id VARCHAR(36),
    spotify_genre_id VARCHAR(50),
    apple_music_genre_id VARCHAR(50),
    hierarchy_level TINYINT UNSIGNED DEFAULT 0,
    sort_order INT UNSIGNED DEFAULT 1000,
    is_primary BOOLEAN DEFAULT TRUE,
    supports_nft BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (genre_id),
    KEY idx_parent_genre (parent_genre_id),
    KEY idx_genre_code (genre_code),
    KEY idx_musicbrainz (musicbrainz_id),
    KEY idx_hierarchy (hierarchy_level, sort_order),
    CONSTRAINT fk_genre_parent FOREIGN KEY (parent_genre_id) 
        REFERENCES genre(genre_id) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert primary genres (showing first 30 of comprehensive set)
INSERT INTO genre (genre_code, genre_name, genre_name_es, genre_name_fr, genre_name_de, genre_name_ja, genre_name_ko, genre_name_zh, hierarchy_level, sort_order) VALUES
('POP', 'Pop', 'Pop', 'Pop', 'Pop', 'ポップ', '팝', '流行音乐', 0, 100),
('ROCK', 'Rock', 'Rock', 'Rock', 'Rock', 'ロック', '록', '摇滚乐', 0, 200),
('HIPHOP', 'Hip Hop', 'Hip Hop', 'Hip-Hop', 'Hip-Hop', 'ヒップホップ', '힙합', '嘻哈音乐', 0, 300),
('RNB', 'R&B', 'R&B', 'R&B', 'R&B', 'R&B', 'R&B', '节奏布鲁斯', 0, 400),
('ELECTRONIC', 'Electronic', 'Electrónica', 'Électronique', 'Elektronisch', 'エレクトロニック', '일렉트로닉', '电子音乐', 0, 500),
('JAZZ', 'Jazz', 'Jazz', 'Jazz', 'Jazz', 'ジャズ', '재즈', '爵士乐', 0, 600),
('CLASSICAL', 'Classical', 'Clásica', 'Classique', 'Klassik', 'クラシック', '클래식', '古典音乐', 0, 700),
('COUNTRY', 'Country', 'Country', 'Country', 'Country', 'カントリー', '컨트리', '乡村音乐', 0, 800),
('LATIN', 'Latin', 'Latina', 'Latin', 'Latin', 'ラテン', '라틴', '拉丁音乐', 0, 900),
('KPOP', 'K-Pop', 'K-Pop', 'K-Pop', 'K-Pop', 'K-POP', '케이팝', '韩国流行音乐', 0, 1000),
('JPOP', 'J-Pop', 'J-Pop', 'J-Pop', 'J-Pop', 'J-POP', '제이팝', '日本流行音乐', 0, 1100),
('INDIE', 'Indie', 'Indie', 'Indie', 'Indie', 'インディー', '인디', '独立音乐', 0, 1200),
('METAL', 'Metal', 'Metal', 'Metal', 'Metal', 'メタル', '메탈', '金属乐', 0, 1300),
('REGGAE', 'Reggae', 'Reggae', 'Reggae', 'Reggae', 'レゲエ', '레게', '雷鬼音乐', 0, 1400),
('BLUES', 'Blues', 'Blues', 'Blues', 'Blues', 'ブルース', '블루스', '蓝调音乐', 0, 1500),
('SOUL', 'Soul', 'Soul', 'Soul', 'Soul', 'ソウル', '소울', '灵魂乐', 0, 1600),
('FUNK', 'Funk', 'Funk', 'Funk', 'Funk', 'ファンク', '펑크', '放克音乐', 0, 1700),
('FOLK', 'Folk', 'Folk', 'Folk', 'Folk', 'フォーク', '포크', '民谣', 0, 1800),
('WORLD', 'World', 'Mundial', 'Monde', 'Welt', 'ワールド', '월드', '世界音乐', 0, 1900),
('AFROBEAT', 'Afrobeat', 'Afrobeat', 'Afrobeat', 'Afrobeat', 'アフロビート', '아프로비트', '非洲节拍', 0, 2000),
('BOLLYWOOD', 'Bollywood', 'Bollywood', 'Bollywood', 'Bollywood', 'ボリウッド', '볼리우드', '宝莱坞', 0, 2100),
('CPOP', 'C-Pop', 'C-Pop', 'C-Pop', 'C-Pop', 'C-POP', '씨팝', '华语流行音乐', 0, 2200),
('REGGAETON', 'Reggaeton', 'Reggaeton', 'Reggaeton', 'Reggaeton', 'レゲトン', '레게톤', '雷鬼顿', 0, 2300),
('TRAP', 'Trap', 'Trap', 'Trap', 'Trap', 'トラップ', '트랩', '陷阱音乐', 0, 2400),
('AMBIENT', 'Ambient', 'Ambiental', 'Ambient', 'Ambient', 'アンビエント', '앰비언트', '环境音乐', 0, 2500),
('GOSPEL', 'Gospel', 'Gospel', 'Gospel', 'Gospel', 'ゴスペル', '가스펠', '福音音乐', 0, 2600),
('PUNK', 'Punk', 'Punk', 'Punk', 'Punk', 'パンク', '펑크', '朋克音乐', 0, 2700),
('AI_GENERATED', 'AI Generated', 'Generada por IA', 'Générée par IA', 'KI-generiert', 'AI生成', 'AI 생성', 'AI生成音乐', 0, 2800),
('WEB3', 'Web3 Music', 'Música Web3', 'Musique Web3', 'Web3-Musik', 'Web3音楽', 'Web3 음악', 'Web3音乐', 0, 2900),
('INDIAN_CLASSICAL', 'Indian Classical', 'Clásica India', 'Classique Indienne', 'Indische Klassik', 'インド古典', '인도 고전', '印度古典音乐', 0, 3000);

-- Subgenre table
CREATE TABLE IF NOT EXISTS subgenre (
    subgenre_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    genre_id INT UNSIGNED NOT NULL,
    subgenre_code VARCHAR(30) NOT NULL UNIQUE,
    subgenre_name VARCHAR(100) NOT NULL,
    subgenre_name_es VARCHAR(100),
    subgenre_name_fr VARCHAR(100),
    subgenre_name_de VARCHAR(100),
    subgenre_name_ja VARCHAR(100),
    subgenre_name_ko VARCHAR(100),
    subgenre_name_zh VARCHAR(100),
    subgenre_name_pt VARCHAR(100),
    subgenre_name_ru VARCHAR(100),
    subgenre_name_ar VARCHAR(100),
    subgenre_name_hi VARCHAR(100),
    description TEXT,
    musicbrainz_id VARCHAR(36),
    sort_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (subgenre_id),
    KEY idx_genre (genre_id),
    KEY idx_subgenre_code (subgenre_code),
    CONSTRAINT fk_subgenre_genre FOREIGN KEY (genre_id) 
        REFERENCES genre(genre_id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Mood category table for grouping moods
CREATE TABLE IF NOT EXISTS mood_category (
    mood_category_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    category_code VARCHAR(30) NOT NULL UNIQUE,
    category_name VARCHAR(100) NOT NULL,
    category_name_es VARCHAR(100),
    category_name_fr VARCHAR(100),
    category_name_de VARCHAR(100),
    category_name_ja VARCHAR(100),
    category_name_ko VARCHAR(100),
    category_name_zh VARCHAR(100),
    description TEXT,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (mood_category_id),
    KEY idx_category_code (category_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert mood categories
INSERT INTO mood_category (category_code, category_name, category_name_es, category_name_fr, sort_order) VALUES
('EMOTIONAL', 'Emotional', 'Emocional', 'Émotionnel', 100),
('ENERGETIC', 'Energetic', 'Enérgico', 'Énergique', 200),
('ATMOSPHERIC', 'Atmospheric', 'Atmosférico', 'Atmosphérique', 300),
('CONTEMPLATIVE', 'Contemplative', 'Contemplativo', 'Contemplatif', 400),
('SOCIAL', 'Social', 'Social', 'Social', 500);

-- Mood table
CREATE TABLE IF NOT EXISTS mood (
    mood_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    mood_category_id INT UNSIGNED NOT NULL,
    mood_code VARCHAR(30) NOT NULL UNIQUE,
    mood_name VARCHAR(100) NOT NULL,
    mood_name_es VARCHAR(100),
    mood_name_fr VARCHAR(100),
    mood_name_de VARCHAR(100),
    mood_name_ja VARCHAR(100),
    mood_name_ko VARCHAR(100),
    mood_name_zh VARCHAR(100),
    mood_name_pt VARCHAR(100),
    mood_name_ru VARCHAR(100),
    mood_name_ar VARCHAR(100),
    mood_name_hi VARCHAR(100),
    valence DECIMAL(3,2) COMMENT 'Emotional positivity 0-1',
    arousal DECIMAL(3,2) COMMENT 'Energy level 0-1',
    dominance DECIMAL(3,2) COMMENT 'Control/power 0-1',
    spotify_mood_id VARCHAR(50),
    apple_mood_id VARCHAR(50),
    sort_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (mood_id),
    KEY idx_mood_category (mood_category_id),
    KEY idx_mood_code (mood_code),
    KEY idx_valence_arousal (valence, arousal),
    CONSTRAINT fk_mood_category FOREIGN KEY (mood_category_id) 
        REFERENCES mood_category(mood_category_id) ON DELETE RESTRICT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert moods (showing first 30)
INSERT INTO mood (mood_category_id, mood_code, mood_name, mood_name_es, mood_name_fr, valence, arousal, dominance, sort_order) VALUES
(1, 'HAPPY', 'Happy', 'Feliz', 'Heureux', 0.90, 0.75, 0.70, 100),
(1, 'SAD', 'Sad', 'Triste', 'Triste', 0.20, 0.30, 0.20, 200),
(1, 'ANGRY', 'Angry', 'Enojado', 'En colère', 0.15, 0.85, 0.80, 300),
(1, 'PEACEFUL', 'Peaceful', 'Pacífico', 'Paisible', 0.70, 0.20, 0.50, 400),
(1, 'ROMANTIC', 'Romantic', 'Romántico', 'Romantique', 0.80, 0.40, 0.40, 500),
(1, 'MELANCHOLIC', 'Melancholic', 'Melancólico', 'Mélancolique', 0.30, 0.25, 0.30, 600),
(1, 'NOSTALGIC', 'Nostalgic', 'Nostálgico', 'Nostalgique', 0.50, 0.35, 0.40, 700),
(1, 'HOPEFUL', 'Hopeful', 'Esperanzado', 'Plein d\'espoir', 0.75, 0.60, 0.60, 800),
(2, 'ENERGETIC', 'Energetic', 'Enérgico', 'Énergique', 0.80, 0.90, 0.80, 900),
(2, 'PUMPED', 'Pumped', 'Emocionado', 'Pompé', 0.85, 0.95, 0.85, 1000),
(2, 'AGGRESSIVE', 'Aggressive', 'Agresivo', 'Agressif', 0.20, 0.90, 0.90, 1100),
(2, 'INTENSE', 'Intense', 'Intenso', 'Intense', 0.40, 0.85, 0.85, 1200),
(2, 'POWERFUL', 'Powerful', 'Poderoso', 'Puissant', 0.70, 0.80, 0.90, 1300),
(3, 'DREAMY', 'Dreamy', 'Soñador', 'Rêveur', 0.65, 0.30, 0.30, 1400),
(3, 'ETHEREAL', 'Ethereal', 'Etéreo', 'Éthéré', 0.70, 0.25, 0.25, 1500),
(3, 'MYSTICAL', 'Mystical', 'Místico', 'Mystique', 0.60, 0.40, 0.50, 1600),
(3, 'AMBIENT', 'Ambient', 'Ambiental', 'Ambiant', 0.50, 0.20, 0.30, 1700),
(3, 'SPACEY', 'Spacey', 'Espacial', 'Spatial', 0.55, 0.35, 0.35, 1800),
(4, 'REFLECTIVE', 'Reflective', 'Reflexivo', 'Réfléchi', 0.50, 0.30, 0.40, 1900),
(4, 'INTROSPECTIVE', 'Introspective', 'Introspectivo', 'Introspectif', 0.45, 0.25, 0.35, 2000),
(4, 'MEDITATIVE', 'Meditative', 'Meditativo', 'Méditatif', 0.60, 0.15, 0.30, 2100),
(4, 'THOUGHTFUL', 'Thoughtful', 'Pensativo', 'Pensif', 0.55, 0.35, 0.45, 2200),
(5, 'PARTY', 'Party', 'Fiesta', 'Fête', 0.90, 0.95, 0.85, 2300),
(5, 'CELEBRATORY', 'Celebratory', 'Celebratorio', 'Festif', 0.95, 0.85, 0.80, 2400),
(5, 'UPLIFTING', 'Uplifting', 'Edificante', 'Édifiant', 0.85, 0.70, 0.70, 2500),
(5, 'GROOVY', 'Groovy', 'Groovy', 'Groovy', 0.80, 0.75, 0.65, 2600),
(5, 'PLAYFUL', 'Playful', 'Juguetón', 'Ludique', 0.85, 0.65, 0.60, 2700),
(5, 'CONFIDENT', 'Confident', 'Confiado', 'Confiant', 0.75, 0.70, 0.80, 2800),
(1, 'ANXIOUS', 'Anxious', 'Ansioso', 'Anxieux', 0.25, 0.70, 0.25, 2900),
(1, 'LONELY', 'Lonely', 'Solitario', 'Solitaire', 0.25, 0.20, 0.20, 3000);

-- Tempo table
CREATE TABLE IF NOT EXISTS tempo (
    tempo_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    tempo_code VARCHAR(20) NOT NULL UNIQUE,
    tempo_name VARCHAR(50) NOT NULL,
    tempo_name_es VARCHAR(50),
    tempo_name_fr VARCHAR(50),
    tempo_name_de VARCHAR(50),
    tempo_name_ja VARCHAR(50),
    tempo_name_ko VARCHAR(50),
    tempo_name_zh VARCHAR(50),
    bpm_min INT UNSIGNED NOT NULL,
    bpm_max INT UNSIGNED NOT NULL,
    classical_term VARCHAR(50),
    description TEXT,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (tempo_id),
    KEY idx_tempo_code (tempo_code),
    KEY idx_bpm_range (bpm_min, bpm_max)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert tempo ranges
INSERT INTO tempo (tempo_code, tempo_name, tempo_name_es, tempo_name_fr, bpm_min, bpm_max, classical_term, sort_order) VALUES
('GRAVE', 'Extremely Slow', 'Extremadamente Lento', 'Extrêmement Lent', 20, 40, 'Grave', 100),
('LARGO', 'Very Slow', 'Muy Lento', 'Très Lent', 40, 60, 'Largo', 200),
('LENTO', 'Slow', 'Lento', 'Lent', 45, 60, 'Lento', 300),
('LARGHETTO', 'Rather Slow', 'Bastante Lento', 'Assez Lent', 60, 66, 'Larghetto', 400),
('ADAGIO', 'Slow and Stately', 'Lento y Majestuoso', 'Lent et Majestueux', 66, 76, 'Adagio', 500),
('ANDANTE', 'Walking Speed', 'Velocidad de Caminar', 'Vitesse de Marche', 76, 108, 'Andante', 600),
('MODERATO', 'Moderate', 'Moderado', 'Modéré', 108, 120, 'Moderato', 700),
('ALLEGRETTO', 'Moderately Fast', 'Moderadamente Rápido', 'Modérément Rapide', 112, 120, 'Allegretto', 800),
('ALLEGRO', 'Fast', 'Rápido', 'Rapide', 120, 156, 'Allegro', 900),
('VIVACE', 'Lively', 'Vivaz', 'Vif', 156, 176, 'Vivace', 1000),
('PRESTO', 'Very Fast', 'Muy Rápido', 'Très Rapide', 168, 200, 'Presto', 1100),
('PRESTISSIMO', 'Extremely Fast', 'Extremadamente Rápido', 'Extrêmement Rapide', 200, 300, 'Prestissimo', 1200);

-- Tempo feel table (descriptive tempo characteristics)
CREATE TABLE IF NOT EXISTS tempo_feel (
    tempo_feel_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    feel_code VARCHAR(30) NOT NULL UNIQUE,
    feel_name VARCHAR(100) NOT NULL,
    feel_name_es VARCHAR(100),
    feel_name_fr VARCHAR(100),
    feel_name_de VARCHAR(100),
    feel_name_ja VARCHAR(100),
    feel_name_ko VARCHAR(100),
    feel_name_zh VARCHAR(100),
    description TEXT,
    sort_order INT UNSIGNED DEFAULT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (tempo_feel_id),
    KEY idx_feel_code (feel_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert tempo feels
INSERT INTO tempo_feel (feel_code, feel_name, feel_name_es, feel_name_fr, sort_order) VALUES
('STEADY', 'Steady', 'Constante', 'Constant', 100),
('SWINGING', 'Swinging', 'Swinging', 'Swingant', 200),
('SYNCOPATED', 'Syncopated', 'Sincopado', 'Syncopé', 300),
('RUBATO', 'Rubato', 'Rubato', 'Rubato', 400),
('ACCELERANDO', 'Accelerating', 'Acelerando', 'Accélérant', 500),
('RITARDANDO', 'Slowing Down', 'Retardando', 'Ralentissant', 600),
('POLYRHYTHMIC', 'Polyrhythmic', 'Polirítmico', 'Polyrythmique', 700);

-- Key signature table
CREATE TABLE IF NOT EXISTS key_signature (
    key_signature_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    key_code VARCHAR(10) NOT NULL UNIQUE,
    key_name VARCHAR(50) NOT NULL,
    key_name_es VARCHAR(50),
    key_name_fr VARCHAR(50),
    key_name_de VARCHAR(50),
    key_name_ja VARCHAR(50),
    key_name_ko VARCHAR(50),
    key_name_zh VARCHAR(50),
    is_major BOOLEAN NOT NULL,
    relative_key VARCHAR(10),
    camelot_code VARCHAR(3),
    open_key_code VARCHAR(3),
    sharps_flats INT,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (key_signature_id),
    KEY idx_key_code (key_code),
    KEY idx_camelot (camelot_code),
    KEY idx_major_minor (is_major)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert key signatures
INSERT INTO key_signature (key_code, key_name, key_name_es, key_name_fr, is_major, relative_key, camelot_code, open_key_code, sharps_flats, sort_order) VALUES
('C_MAJ', 'C Major', 'Do Mayor', 'Do Majeur', TRUE, 'A_MIN', '8B', '1d', 0, 100),
('A_MIN', 'A Minor', 'La Menor', 'La Mineur', FALSE, 'C_MAJ', '8A', '1m', 0, 110),
('G_MAJ', 'G Major', 'Sol Mayor', 'Sol Majeur', TRUE, 'E_MIN', '9B', '2d', 1, 200),
('E_MIN', 'E Minor', 'Mi Menor', 'Mi Mineur', FALSE, 'G_MAJ', '9A', '2m', 1, 210),
('D_MAJ', 'D Major', 'Re Mayor', 'Ré Majeur', TRUE, 'B_MIN', '10B', '3d', 2, 300),
('B_MIN', 'B Minor', 'Si Menor', 'Si Mineur', FALSE, 'D_MAJ', '10A', '3m', 2, 310),
('A_MAJ', 'A Major', 'La Mayor', 'La Majeur', TRUE, 'F#_MIN', '11B', '4d', 3, 400),
('F#_MIN', 'F# Minor', 'Fa# Menor', 'Fa# Mineur', FALSE, 'A_MAJ', '11A', '4m', 3, 410),
('E_MAJ', 'E Major', 'Mi Mayor', 'Mi Majeur', TRUE, 'C#_MIN', '12B', '5d', 4, 500),
('C#_MIN', 'C# Minor', 'Do# Menor', 'Do# Mineur', FALSE, 'E_MAJ', '12A', '5m', 4, 510),
('B_MAJ', 'B Major', 'Si Mayor', 'Si Majeur', TRUE, 'G#_MIN', '1B', '6d', 5, 600),
('G#_MIN', 'G# Minor', 'Sol# Menor', 'Sol# Mineur', FALSE, 'B_MAJ', '1A', '6m', 5, 610),
('F#_MAJ', 'F# Major', 'Fa# Mayor', 'Fa# Majeur', TRUE, 'D#_MIN', '2B', '7d', 6, 700),
('D#_MIN', 'D# Minor', 'Re# Menor', 'Ré# Mineur', FALSE, 'F#_MAJ', '2A', '7m', 6, 710),
('F_MAJ', 'F Major', 'Fa Mayor', 'Fa Majeur', TRUE, 'D_MIN', '7B', '12d', -1, 800),
('D_MIN', 'D Minor', 'Re Menor', 'Ré Mineur', FALSE, 'F_MAJ', '7A', '12m', -1, 810),
('Bb_MAJ', 'Bb Major', 'Sib Mayor', 'Sib Majeur', TRUE, 'G_MIN', '6B', '11d', -2, 900),
('G_MIN', 'G Minor', 'Sol Menor', 'Sol Mineur', FALSE, 'Bb_MAJ', '6A', '11m', -2, 910),
('Eb_MAJ', 'Eb Major', 'Mib Mayor', 'Mib Majeur', TRUE, 'C_MIN', '5B', '10d', -3, 1000),
('C_MIN', 'C Minor', 'Do Menor', 'Do Mineur', FALSE, 'Eb_MAJ', '5A', '10m', -3, 1010),
('Ab_MAJ', 'Ab Major', 'Lab Mayor', 'Lab Majeur', TRUE, 'F_MIN', '4B', '9d', -4, 1100),
('F_MIN', 'F Minor', 'Fa Menor', 'Fa Mineur', FALSE, 'Ab_MAJ', '4A', '9m', -4, 1110),
('Db_MAJ', 'Db Major', 'Reb Mayor', 'Réb Majeur', TRUE, 'Bb_MIN', '3B', '8d', -5, 1200),
('Bb_MIN', 'Bb Minor', 'Sib Menor', 'Sib Mineur', FALSE, 'Db_MAJ', '3A', '8m', -5, 1210);

-- Time signature table
CREATE TABLE IF NOT EXISTS time_signature (
    time_signature_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    signature_code VARCHAR(10) NOT NULL UNIQUE,
    beats_per_bar TINYINT UNSIGNED NOT NULL,
    beat_unit TINYINT UNSIGNED NOT NULL,
    signature_display VARCHAR(10) NOT NULL,
    signature_name VARCHAR(50),
    signature_name_es VARCHAR(50),
    signature_name_fr VARCHAR(50),
    signature_name_de VARCHAR(50),
    feel VARCHAR(30),
    is_compound BOOLEAN DEFAULT FALSE,
    is_complex BOOLEAN DEFAULT FALSE,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (time_signature_id),
    KEY idx_signature_code (signature_code),
    KEY idx_beats_unit (beats_per_bar, beat_unit)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert time signatures
INSERT INTO time_signature (signature_code, beats_per_bar, beat_unit, signature_display, signature_name, signature_name_es, feel, is_compound, is_complex, sort_order) VALUES
('2_4', 2, 4, '2/4', 'Two Four', 'Dos Cuartos', 'Duple', FALSE, FALSE, 100),
('3_4', 3, 4, '3/4', 'Three Four', 'Tres Cuartos', 'Triple', FALSE, FALSE, 200),
('4_4', 4, 4, '4/4', 'Four Four', 'Cuatro Cuartos', 'Quadruple', FALSE, FALSE, 300),
('5_4', 5, 4, '5/4', 'Five Four', 'Cinco Cuartos', 'Quintuple', FALSE, TRUE, 400),
('6_4', 6, 4, '6/4', 'Six Four', 'Seis Cuartos', 'Compound Duple', TRUE, FALSE, 500),
('7_4', 7, 4, '7/4', 'Seven Four', 'Siete Cuartos', 'Septuple', FALSE, TRUE, 600),
('3_8', 3, 8, '3/8', 'Three Eight', 'Tres Octavos', 'Triple', FALSE, FALSE, 700),
('6_8', 6, 8, '6/8', 'Six Eight', 'Seis Octavos', 'Compound Duple', TRUE, FALSE, 800),
('9_8', 9, 8, '9/8', 'Nine Eight', 'Nueve Octavos', 'Compound Triple', TRUE, FALSE, 900),
('12_8', 12, 8, '12/8', 'Twelve Eight', 'Doce Octavos', 'Compound Quadruple', TRUE, FALSE, 1000),
('5_8', 5, 8, '5/8', 'Five Eight', 'Cinco Octavos', 'Quintuple', FALSE, TRUE, 1100),
('7_8', 7, 8, '7/8', 'Seven Eight', 'Siete Octavos', 'Septuple', FALSE, TRUE, 1200),
('2_2', 2, 2, '2/2', 'Cut Time', 'Compasillo', 'Duple', FALSE, FALSE, 1300),
('11_8', 11, 8, '11/8', 'Eleven Eight', 'Once Octavos', 'Complex', FALSE, TRUE, 1400),
('13_8', 13, 8, '13/8', 'Thirteen Eight', 'Trece Octavos', 'Complex', FALSE, TRUE, 1500);

-- Instrument category table
CREATE TABLE IF NOT EXISTS instrument_category (
    instrument_category_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    category_code VARCHAR(30) NOT NULL UNIQUE,
    category_name VARCHAR(100) NOT NULL,
    category_name_es VARCHAR(100),
    category_name_fr VARCHAR(100),
    category_name_de VARCHAR(100),
    category_name_ja VARCHAR(100),
    category_name_ko VARCHAR(100),
    category_name_zh VARCHAR(100),
    category_name_pt VARCHAR(100),
    category_name_ru VARCHAR(100),
    category_name_ar VARCHAR(100),
    category_name_hi VARCHAR(100),
    parent_category_id INT UNSIGNED DEFAULT NULL,
    midi_program_start INT UNSIGNED,
    midi_program_end INT UNSIGNED,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (instrument_category_id),
    KEY idx_category_code (category_code),
    KEY idx_parent_category (parent_category_id),
    CONSTRAINT fk_instrument_category_parent FOREIGN KEY (parent_category_id) 
        REFERENCES instrument_category(instrument_category_id) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert instrument categories
INSERT INTO instrument_category (category_code, category_name, category_name_es, category_name_fr, midi_program_start, midi_program_end, sort_order) VALUES
('STRING', 'String Instruments', 'Instrumentos de Cuerda', 'Instruments à Cordes', 1, 16, 100),
('WIND', 'Wind Instruments', 'Instrumentos de Viento', 'Instruments à Vent', 17, 32, 200),
('BRASS', 'Brass Instruments', 'Instrumentos de Metal', 'Cuivres', 57, 64, 300),
('PERCUSSION', 'Percussion', 'Percusión', 'Percussion', 113, 120, 400),
('KEYBOARD', 'Keyboard Instruments', 'Instrumentos de Teclado', 'Claviers', 1, 8, 500),
('ELECTRONIC', 'Electronic Instruments', 'Instrumentos Electrónicos', 'Instruments Électroniques', 81, 104, 600),
('VOCAL', 'Vocal', 'Vocal', 'Vocal', NULL, NULL, 700),
('WORLD', 'World Instruments', 'Instrumentos del Mundo', 'Instruments du Monde', 105, 112, 800),
('DIGITAL', 'Digital/Software', 'Digital/Software', 'Numérique/Logiciel', NULL, NULL, 900);

-- Instrument table
CREATE TABLE IF NOT EXISTS instrument (
    instrument_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    instrument_category_id INT UNSIGNED NOT NULL,
    instrument_code VARCHAR(50) NOT NULL UNIQUE,
    instrument_name VARCHAR(100) NOT NULL,
    instrument_name_es VARCHAR(100),
    instrument_name_fr VARCHAR(100),
    instrument_name_de VARCHAR(100),
    instrument_name_ja VARCHAR(100),
    instrument_name_ko VARCHAR(100),
    instrument_name_zh VARCHAR(100),
    instrument_name_pt VARCHAR(100),
    instrument_name_ru VARCHAR(100),
    instrument_name_ar VARCHAR(100),
    instrument_name_hi VARCHAR(100),
    midi_program INT UNSIGNED,
    frequency_range_low DECIMAL(8,2),
    frequency_range_high DECIMAL(8,2),
    musicbrainz_id VARCHAR(36),
    is_transposing BOOLEAN DEFAULT FALSE,
    transposition_interval INT,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (instrument_id),
    KEY idx_instrument_category (instrument_category_id),
    KEY idx_instrument_code (instrument_code),
    KEY idx_midi_program (midi_program),
    CONSTRAINT fk_instrument_category FOREIGN KEY (instrument_category_id) 
        REFERENCES instrument_category(instrument_category_id) ON DELETE RESTRICT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert instruments (showing first 30)
INSERT INTO instrument (instrument_category_id, instrument_code, instrument_name, instrument_name_es, instrument_name_fr, midi_program, frequency_range_low, frequency_range_high, sort_order) VALUES
(5, 'PIANO', 'Piano', 'Piano', 'Piano', 1, 27.50, 4186.00, 100),
(5, 'ELECTRIC_PIANO', 'Electric Piano', 'Piano Eléctrico', 'Piano Électrique', 5, 27.50, 4186.00, 200),
(1, 'ACOUSTIC_GUITAR', 'Acoustic Guitar', 'Guitarra Acústica', 'Guitare Acoustique', 25, 82.41, 1975.00, 300),
(1, 'ELECTRIC_GUITAR', 'Electric Guitar', 'Guitarra Eléctrica', 'Guitare Électrique', 27, 82.41, 1975.00, 400),
(1, 'BASS_GUITAR', 'Bass Guitar', 'Bajo Eléctrico', 'Guitare Basse', 34, 41.20, 392.00, 500),
(1, 'VIOLIN', 'Violin', 'Violín', 'Violon', 41, 196.00, 3520.00, 600),
(1, 'VIOLA', 'Viola', 'Viola', 'Alto', 42, 130.81, 2093.00, 700),
(1, 'CELLO', 'Cello', 'Violonchelo', 'Violoncelle', 43, 65.41, 1046.50, 800),
(1, 'DOUBLE_BASS', 'Double Bass', 'Contrabajo', 'Contrebasse', 44, 41.20, 392.00, 900),
(4, 'DRUM_KIT', 'Drum Kit', 'Batería', 'Batterie', 128, 40.00, 5000.00, 1000),
(4, 'TAMBOURINE', 'Tambourine', 'Pandereta', 'Tambourin', 116, 200.00, 10000.00, 1100),
(4, 'CONGAS', 'Congas', 'Congas', 'Congas', 117, 90.00, 1000.00, 1200),
(4, 'BONGOS', 'Bongos', 'Bongos', 'Bongos', 117, 200.00, 1500.00, 1300),
(4, 'TABLA', 'Tabla', 'Tabla', 'Tabla', 117, 100.00, 1000.00, 1400),
(2, 'FLUTE', 'Flute', 'Flauta', 'Flûte', 74, 261.63, 3951.00, 1500),
(2, 'CLARINET', 'Clarinet', 'Clarinete', 'Clarinette', 72, 146.83, 1975.00, 1600),
(2, 'SAXOPHONE', 'Saxophone', 'Saxofón', 'Saxophone', 67, 103.83, 1479.98, 1700),
(3, 'TRUMPET', 'Trumpet', 'Trompeta', 'Trompette', 57, 164.81, 1174.66, 1800),
(3, 'TROMBONE', 'Trombone', 'Trombón', 'Trombone', 58, 73.42, 698.46, 1900),
(3, 'FRENCH_HORN', 'French Horn', 'Corno Francés', 'Cor Français', 61, 61.74, 880.00, 2000),
(7, 'MALE_VOCAL', 'Male Vocal', 'Voz Masculina', 'Voix Masculine', NULL, 85.00, 700.00, 2100),
(7, 'FEMALE_VOCAL', 'Female Vocal', 'Voz Femenina', 'Voix Féminine', NULL, 165.00, 1100.00, 2200),
(6, 'SYNTHESIZER', 'Synthesizer', 'Sintetizador', 'Synthétiseur', 82, 20.00, 20000.00, 2300),
(6, 'SAMPLER', 'Sampler', 'Sampler', 'Échantillonneur', NULL, 20.00, 20000.00, 2400),
(8, 'SITAR', 'Sitar', 'Sitar', 'Sitar', 105, 100.00, 1500.00, 2500),
(8, 'KOTO', 'Koto', 'Koto', 'Koto', 108, 65.00, 2100.00, 2600),
(8, 'ERHU', 'Erhu', 'Erhu', 'Erhu', 111, 196.00, 1500.00, 2700),
(8, 'DJEMBE', 'Djembe', 'Djembe', 'Djembé', 117, 60.00, 1000.00, 2800),
(9, 'AI_VOICE', 'AI Voice', 'Voz IA', 'Voix IA', NULL, 20.00, 20000.00, 2900),
(9, 'VST_PLUGIN', 'VST Plugin', 'Plugin VST', 'Plugin VST', NULL, 20.00, 20000.00, 3000);

-- Vocal type table
CREATE TABLE IF NOT EXISTS vocal_type (
    vocal_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    vocal_code VARCHAR(30) NOT NULL UNIQUE,
    vocal_name VARCHAR(100) NOT NULL,
    vocal_name_es VARCHAR(100),
    vocal_name_fr VARCHAR(100),
    vocal_name_de VARCHAR(100),
    vocal_name_ja VARCHAR(100),
    vocal_name_ko VARCHAR(100),
    vocal_name_zh VARCHAR(100),
    gender VARCHAR(20),
    range_low_note VARCHAR(5),
    range_high_note VARCHAR(5),
    tessitura VARCHAR(50),
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (vocal_type_id),
    KEY idx_vocal_code (vocal_code),
    KEY idx_gender (gender)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert vocal types
INSERT INTO vocal_type (vocal_code, vocal_name, vocal_name_es, vocal_name_fr, gender, range_low_note, range_high_note, tessitura, sort_order) VALUES
('SOPRANO', 'Soprano', 'Soprano', 'Soprano', 'Female', 'C4', 'C6', 'High Female', 100),
('MEZZO_SOPRANO', 'Mezzo-Soprano', 'Mezzosoprano', 'Mezzo-Soprano', 'Female', 'A3', 'A5', 'Middle Female', 200),
('ALTO', 'Alto', 'Contralto', 'Alto', 'Female', 'F3', 'F5', 'Low Female', 300),
('TENOR', 'Tenor', 'Tenor', 'Ténor', 'Male', 'C3', 'C5', 'High Male', 400),
('BARITONE', 'Baritone', 'Barítono', 'Baryton', 'Male', 'A2', 'A4', 'Middle Male', 500),
('BASS', 'Bass', 'Bajo', 'Basse', 'Male', 'E2', 'E4', 'Low Male', 600),
('COUNTERTENOR', 'Countertenor', 'Contratenor', 'Contre-ténor', 'Male', 'G3', 'E5', 'High Male Alt', 700),
('CHILD', 'Child Voice', 'Voz Infantil', 'Voix d\'Enfant', 'Neutral', 'A3', 'F5', 'Child', 800),
('VOCAL_FRY', 'Vocal Fry', 'Registro Vocal Fry', 'Voix Craquée', 'Neutral', 'E2', 'A3', 'Low Register', 900),
('FALSETTO', 'Falsetto', 'Falsete', 'Falsetto', 'Neutral', 'C4', 'C6', 'Head Voice', 1000),
('WHISTLE', 'Whistle Register', 'Registro Silbido', 'Registre de Sifflet', 'Neutral', 'C6', 'D8', 'Highest', 1100),
('AI_GENERATED', 'AI Generated', 'Generada por IA', 'Générée par IA', 'Neutral', 'C1', 'C8', 'Artificial', 1200);

-- Production style table
CREATE TABLE IF NOT EXISTS production_style (
    production_style_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    style_code VARCHAR(30) NOT NULL UNIQUE,
    style_name VARCHAR(100) NOT NULL,
    style_name_es VARCHAR(100),
    style_name_fr VARCHAR(100),
    style_name_de VARCHAR(100),
    style_name_ja VARCHAR(100),
    style_name_ko VARCHAR(100),
    style_name_zh VARCHAR(100),
    description TEXT,
    era_start YEAR,
    era_end YEAR,
    is_digital BOOLEAN DEFAULT FALSE,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (production_style_id),
    KEY idx_style_code (style_code),
    KEY idx_era (era_start, era_end)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert production styles
INSERT INTO production_style (style_code, style_name, style_name_es, style_name_fr, era_start, is_digital, sort_order) VALUES
('ANALOG', 'Analog', 'Analógico', 'Analogique', 1950, FALSE, 100),
('DIGITAL', 'Digital', 'Digital', 'Numérique', 1980, TRUE, 200),
('LO_FI', 'Lo-Fi', 'Lo-Fi', 'Lo-Fi', 1990, TRUE, 300),
('HI_FI', 'Hi-Fi', 'Hi-Fi', 'Hi-Fi', 1970, FALSE, 400),
('WALL_OF_SOUND', 'Wall of Sound', 'Muro de Sonido', 'Mur de Son', 1960, FALSE, 500),
('BEDROOM', 'Bedroom Production', 'Producción Casera', 'Production Maison', 2000, TRUE, 600),
('STUDIO', 'Professional Studio', 'Estudio Profesional', 'Studio Professionnel', 1950, FALSE, 700),
('LIVE', 'Live Recording', 'Grabación en Vivo', 'Enregistrement Live', 1950, FALSE, 800),
('FIELD', 'Field Recording', 'Grabación de Campo', 'Enregistrement sur Terrain', 1960, FALSE, 900),
('VIRTUAL', 'Virtual/In-the-Box', 'Virtual/En la Caja', 'Virtuel/Dans la Boîte', 2000, TRUE, 1000),
('HYBRID', 'Hybrid Analog-Digital', 'Híbrido Analógico-Digital', 'Hybride Analogique-Numérique', 1990, TRUE, 1100),
('AI_ASSISTED', 'AI Assisted', 'Asistido por IA', 'Assisté par IA', 2020, TRUE, 1200),
('BINAURAL', '3D/Binaural', '3D/Binaural', '3D/Binaural', 2010, TRUE, 1300),
('ATMOS', 'Dolby Atmos', 'Dolby Atmos', 'Dolby Atmos', 2012, TRUE, 1400),
('NFT_READY', 'NFT/Web3 Ready', 'Listo para NFT/Web3', 'Prêt pour NFT/Web3', 2021, TRUE, 1500);

-- Production era table
CREATE TABLE IF NOT EXISTS production_era (
    production_era_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    era_code VARCHAR(30) NOT NULL UNIQUE,
    era_name VARCHAR(100) NOT NULL,
    era_name_es VARCHAR(100),
    era_name_fr VARCHAR(100),
    era_name_de VARCHAR(100),
    era_name_ja VARCHAR(100),
    era_name_ko VARCHAR(100),
    era_name_zh VARCHAR(100),
    year_start INT UNSIGNED NOT NULL,
    year_end INT UNSIGNED,
    description TEXT,
    key_characteristics TEXT,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (production_era_id),
    KEY idx_era_code (era_code),
    KEY idx_years (year_start, year_end)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert production eras
INSERT INTO production_era (era_code, era_name, era_name_es, era_name_fr, year_start, year_end, sort_order) VALUES
('PRE_ELECTRIC', 'Pre-Electric Era', 'Era Pre-Eléctrica', 'Ère Pré-Électrique', 1877, 1925, 100),
('ELECTRIC', 'Electric Era', 'Era Eléctrica', 'Ère Électrique', 1925, 1945, 200),
('MAGNETIC_TAPE', 'Magnetic Tape Era', 'Era de Cinta Magnética', 'Ère de Bande Magnétique', 1945, 1975, 300),
('MULTITRACK', 'Multitrack Era', 'Era Multipista', 'Ère Multipiste', 1955, 1980, 400),
('DIGITAL_DAWN', 'Digital Dawn', 'Amanecer Digital', 'Aube Numérique', 1979, 1990, 500),
('DAW_REVOLUTION', 'DAW Revolution', 'Revolución DAW', 'Révolution DAW', 1990, 2000, 600),
('STREAMING_ERA', 'Streaming Era', 'Era del Streaming', 'Ère du Streaming', 2005, NULL, 700),
('AI_ERA', 'AI Era', 'Era de IA', 'Ère de l\'IA', 2020, NULL, 800);

-- Music era table (historical/style periods)
CREATE TABLE IF NOT EXISTS music_era (
    music_era_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    era_code VARCHAR(30) NOT NULL UNIQUE,
    era_name VARCHAR(100) NOT NULL,
    era_name_es VARCHAR(100),
    era_name_fr VARCHAR(100),
    era_name_de VARCHAR(100),
    era_name_ja VARCHAR(100),
    era_name_ko VARCHAR(100),
    era_name_zh VARCHAR(100),
    era_name_pt VARCHAR(100),
    era_name_ru VARCHAR(100),
    era_name_ar VARCHAR(100),
    era_name_hi VARCHAR(100),
    year_start INT,
    year_end INT,
    description TEXT,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (music_era_id),
    KEY idx_era_code (era_code),
    KEY idx_years (year_start, year_end)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert music eras
INSERT INTO music_era (era_code, era_name, era_name_es, era_name_fr, year_start, year_end, sort_order) VALUES
('ANCIENT', 'Ancient', 'Antigua', 'Ancienne', -3000, 500, 100),
('MEDIEVAL', 'Medieval', 'Medieval', 'Médiévale', 500, 1400, 200),
('RENAISSANCE', 'Renaissance', 'Renacimiento', 'Renaissance', 1400, 1600, 300),
('BAROQUE', 'Baroque', 'Barroco', 'Baroque', 1600, 1750, 400),
('CLASSICAL', 'Classical', 'Clásico', 'Classique', 1750, 1820, 500),
('ROMANTIC', 'Romantic', 'Romántico', 'Romantique', 1820, 1910, 600),
('MODERN', 'Modern', 'Moderno', 'Moderne', 1910, 1950, 700),
('CONTEMPORARY', 'Contemporary', 'Contemporáneo', 'Contemporain', 1950, NULL, 800),
('JAZZ_AGE', 'Jazz Age', 'Era del Jazz', 'Âge du Jazz', 1920, 1930, 900),
('SWING_ERA', 'Swing Era', 'Era del Swing', 'Ère du Swing', 1935, 1945, 1000),
('ROCK_N_ROLL', 'Rock n Roll Era', 'Era del Rock n Roll', 'Ère du Rock n Roll', 1950, 1960, 1100),
('BRITISH_INVASION', 'British Invasion', 'Invasión Británica', 'Invasion Britannique', 1964, 1970, 1200),
('DISCO_ERA', 'Disco Era', 'Era Disco', 'Ère Disco', 1970, 1980, 1300),
('MTV_ERA', 'MTV Era', 'Era MTV', 'Ère MTV', 1981, 1991, 1400),
('DIGITAL_AGE', 'Digital Age', 'Era Digital', 'Ère Numérique', 1990, 2010, 1500),
('STREAMING_AGE', 'Streaming Age', 'Era del Streaming', 'Ère du Streaming', 2010, NULL, 1600);

-- Cultural region table
CREATE TABLE IF NOT EXISTS cultural_region (
    cultural_region_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    region_code VARCHAR(30) NOT NULL UNIQUE,
    region_name VARCHAR(100) NOT NULL,
    region_name_es VARCHAR(100),
    region_name_fr VARCHAR(100),
    region_name_de VARCHAR(100),
    region_name_ja VARCHAR(100),
    region_name_ko VARCHAR(100),
    region_name_zh VARCHAR(100),
    region_name_pt VARCHAR(100),
    region_name_ru VARCHAR(100),
    region_name_ar VARCHAR(100),
    region_name_hi VARCHAR(100),
    parent_region_id INT UNSIGNED DEFAULT NULL,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (cultural_region_id),
    KEY idx_region_code (region_code),
    KEY idx_parent_region (parent_region_id),
    CONSTRAINT fk_cultural_region_parent FOREIGN KEY (parent_region_id) 
        REFERENCES cultural_region(cultural_region_id) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert cultural regions
INSERT INTO cultural_region (region_code, region_name, region_name_es, region_name_fr, sort_order) VALUES
('GLOBAL', 'Global', 'Global', 'Global', 100),
('AFRICA', 'Africa', 'África', 'Afrique', 200),
('ASIA', 'Asia', 'Asia', 'Asie', 300),
('EUROPE', 'Europe', 'Europa', 'Europe', 400),
('NORTH_AMERICA', 'North America', 'América del Norte', 'Amérique du Nord', 500),
('SOUTH_AMERICA', 'South America', 'América del Sur', 'Amérique du Sud', 600),
('OCEANIA', 'Oceania', 'Oceanía', 'Océanie', 700),
('MIDDLE_EAST', 'Middle East', 'Medio Oriente', 'Moyen-Orient', 800),
('CARIBBEAN', 'Caribbean', 'Caribe', 'Caraïbes', 900),
('CENTRAL_AMERICA', 'Central America', 'América Central', 'Amérique Centrale', 1000);

-- Music culture table
CREATE TABLE IF NOT EXISTS music_culture (
    music_culture_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    cultural_region_id INT UNSIGNED NOT NULL,
    culture_code VARCHAR(50) NOT NULL UNIQUE,
    culture_name VARCHAR(100) NOT NULL,
    culture_name_es VARCHAR(100),
    culture_name_fr VARCHAR(100),
    culture_name_de VARCHAR(100),
    culture_name_ja VARCHAR(100),
    culture_name_ko VARCHAR(100),
    culture_name_zh VARCHAR(100),
    culture_name_pt VARCHAR(100),
    culture_name_ru VARCHAR(100),
    culture_name_ar VARCHAR(100),
    culture_name_hi VARCHAR(100),
    country_codes VARCHAR(255) COMMENT 'Comma-separated ISO country codes',
    description TEXT,
    traditional_instruments TEXT,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (music_culture_id),
    KEY idx_cultural_region (cultural_region_id),
    KEY idx_culture_code (culture_code),
    CONSTRAINT fk_music_culture_region FOREIGN KEY (cultural_region_id) 
        REFERENCES cultural_region(cultural_region_id) ON DELETE RESTRICT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert music cultures (showing first 30)
INSERT INTO music_culture (cultural_region_id, culture_code, culture_name, culture_name_es, culture_name_fr, country_codes, sort_order) VALUES
(5, 'AMERICAN', 'American', 'Estadounidense', 'Américain', 'US', 100),
(5, 'CANADIAN', 'Canadian', 'Canadiense', 'Canadien', 'CA', 200),
(6, 'BRAZILIAN', 'Brazilian', 'Brasileño', 'Brésilien', 'BR', 300),
(6, 'ARGENTINIAN', 'Argentinian', 'Argentino', 'Argentin', 'AR', 400),
(5, 'MEXICAN', 'Mexican', 'Mexicano', 'Mexicain', 'MX', 500),
(9, 'JAMAICAN', 'Jamaican', 'Jamaicano', 'Jamaïcain', 'JM', 600),
(9, 'CUBAN', 'Cuban', 'Cubano', 'Cubain', 'CU', 700),
(9, 'PUERTO_RICAN', 'Puerto Rican', 'Puertorriqueño', 'Portoricain', 'PR', 800),
(4, 'BRITISH', 'British', 'Británico', 'Britannique', 'GB', 900),
(4, 'FRENCH', 'French', 'Francés', 'Français', 'FR', 1000),
(4, 'GERMAN', 'German', 'Alemán', 'Allemand', 'DE', 1100),
(4, 'ITALIAN', 'Italian', 'Italiano', 'Italien', 'IT', 1200),
(4, 'SPANISH', 'Spanish', 'Español', 'Espagnol', 'ES', 1300),
(4, 'RUSSIAN', 'Russian', 'Ruso', 'Russe', 'RU', 1400),
(3, 'JAPANESE', 'Japanese', 'Japonés', 'Japonais', 'JP', 1500),
(3, 'KOREAN', 'Korean', 'Coreano', 'Coréen', 'KR', 1600),
(3, 'CHINESE', 'Chinese', 'Chino', 'Chinois', 'CN', 1700),
(3, 'INDIAN', 'Indian', 'Indio', 'Indien', 'IN', 1800),
(8, 'ARABIC', 'Arabic', 'Árabe', 'Arabe', 'SA,AE,EG,LB,SY,JO', 1900),
(8, 'TURKISH', 'Turkish', 'Turco', 'Turc', 'TR', 2000),
(8, 'PERSIAN', 'Persian', 'Persa', 'Persan', 'IR', 2100),
(2, 'NIGERIAN', 'Nigerian', 'Nigeriano', 'Nigérian', 'NG', 2200),
(2, 'SOUTH_AFRICAN', 'South African', 'Sudafricano', 'Sud-Africain', 'ZA', 2300),
(2, 'GHANAIAN', 'Ghanaian', 'Ghanés', 'Ghanéen', 'GH', 2400),
(2, 'KENYAN', 'Kenyan', 'Keniano', 'Kényan', 'KE', 2500),
(2, 'ETHIOPIAN', 'Ethiopian', 'Etíope', 'Éthiopien', 'ET', 2600),
(7, 'AUSTRALIAN', 'Australian', 'Australiano', 'Australien', 'AU', 2700),
(7, 'NEW_ZEALAND', 'New Zealand', 'Neozelandés', 'Néo-Zélandais', 'NZ', 2800),
(4, 'NORDIC', 'Nordic', 'Nórdico', 'Nordique', 'SE,NO,DK,FI,IS', 2900),
(1, 'INTERNET', 'Internet Culture', 'Cultura de Internet', 'Culture Internet', 'GLOBAL', 3000);

-- Harmonic complexity table (for music theory analysis)
CREATE TABLE IF NOT EXISTS harmonic_complexity (
    harmonic_complexity_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    complexity_code VARCHAR(30) NOT NULL UNIQUE,
    complexity_name VARCHAR(100) NOT NULL,
    complexity_name_es VARCHAR(100),
    complexity_name_fr VARCHAR(100),
    complexity_level TINYINT UNSIGNED NOT NULL COMMENT '1-10 scale',
    description TEXT,
    chord_types TEXT,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (harmonic_complexity_id),
    KEY idx_complexity_code (complexity_code),
    KEY idx_complexity_level (complexity_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert harmonic complexity levels
INSERT INTO harmonic_complexity (complexity_code, complexity_name, complexity_name_es, complexity_name_fr, complexity_level, chord_types, sort_order) VALUES
('SIMPLE', 'Simple', 'Simple', 'Simple', 1, 'Major, Minor triads', 100),
('BASIC', 'Basic', 'Básico', 'Basique', 2, 'Triads with inversions', 200),
('MODERATE', 'Moderate', 'Moderado', 'Modéré', 3, '7th chords', 300),
('INTERMEDIATE', 'Intermediate', 'Intermedio', 'Intermédiaire', 4, '9th chords, sus chords', 400),
('ADVANCED', 'Advanced', 'Avanzado', 'Avancé', 5, '11th, 13th chords', 500),
('COMPLEX', 'Complex', 'Complejo', 'Complexe', 6, 'Altered chords, modal interchange', 600),
('SOPHISTICATED', 'Sophisticated', 'Sofisticado', 'Sophistiqué', 7, 'Extended harmony, chromatic', 700),
('JAZZ_LEVEL', 'Jazz Level', 'Nivel Jazz', 'Niveau Jazz', 8, 'Bebop changes, substitutions', 800),
('AVANT_GARDE', 'Avant-Garde', 'Vanguardista', 'Avant-Garde', 9, 'Atonal, quartal, clusters', 900),
('EXPERIMENTAL', 'Experimental', 'Experimental', 'Expérimental', 10, 'Microtonal, spectral', 1000);

-- Energy level table (for playlist targeting)
CREATE TABLE IF NOT EXISTS energy_level (
    energy_level_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    level_code VARCHAR(30) NOT NULL UNIQUE,
    level_name VARCHAR(100) NOT NULL,
    level_name_es VARCHAR(100),
    level_name_fr VARCHAR(100),
    energy_value DECIMAL(3,2) NOT NULL COMMENT '0.00-1.00',
    description TEXT,
    typical_use_cases TEXT,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (energy_level_id),
    KEY idx_level_code (level_code),
    KEY idx_energy_value (energy_value)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert energy levels
INSERT INTO energy_level (level_code, level_name, level_name_es, level_name_fr, energy_value, typical_use_cases, sort_order) VALUES
('VERY_LOW', 'Very Low', 'Muy Bajo', 'Très Bas', 0.10, 'Sleep, Meditation', 100),
('LOW', 'Low', 'Bajo', 'Bas', 0.25, 'Relaxation, Study', 200),
('MODERATE_LOW', 'Moderate Low', 'Moderado Bajo', 'Modérément Bas', 0.40, 'Background, Reading', 300),
('MODERATE', 'Moderate', 'Moderado', 'Modéré', 0.50, 'Casual Listening', 400),
('MODERATE_HIGH', 'Moderate High', 'Moderado Alto', 'Modérément Élevé', 0.60, 'Walking, Light Activity', 500),
('HIGH', 'High', 'Alto', 'Élevé', 0.75, 'Exercise, Dancing', 600),
('VERY_HIGH', 'Very High', 'Muy Alto', 'Très Élevé', 0.90, 'Intense Workout, Party', 700),
('EXTREME', 'Extreme', 'Extremo', 'Extrême', 1.00, 'Peak Performance', 800);

-- Danceability level table
CREATE TABLE IF NOT EXISTS danceability_level (
    danceability_level_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    level_code VARCHAR(30) NOT NULL UNIQUE,
    level_name VARCHAR(100) NOT NULL,
    level_name_es VARCHAR(100),
    level_name_fr VARCHAR(100),
    danceability_value DECIMAL(3,2) NOT NULL COMMENT '0.00-1.00',
    description TEXT,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (danceability_level_id),
    KEY idx_level_code (level_code),
    KEY idx_danceability_value (danceability_value)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert danceability levels
INSERT INTO danceability_level (level_code, level_name, level_name_es, level_name_fr, danceability_value, sort_order) VALUES
('NOT_DANCEABLE', 'Not Danceable', 'No Bailable', 'Non Dansable', 0.10, 100),
('BARELY_DANCEABLE', 'Barely Danceable', 'Apenas Bailable', 'À Peine Dansable', 0.25, 200),
('SOMEWHAT_DANCEABLE', 'Somewhat Danceable', 'Algo Bailable', 'Quelque Peu Dansable', 0.40, 300),
('MODERATELY_DANCEABLE', 'Moderately Danceable', 'Moderadamente Bailable', 'Modérément Dansable', 0.55, 400),
('DANCEABLE', 'Danceable', 'Bailable', 'Dansable', 0.70, 500),
('VERY_DANCEABLE', 'Very Danceable', 'Muy Bailable', 'Très Dansable', 0.85, 600),
('EXTREMELY_DANCEABLE', 'Extremely Danceable', 'Extremadamente Bailable', 'Extrêmement Dansable', 0.95, 700);

-- Sync placement type table (for sync licensing)
CREATE TABLE IF NOT EXISTS sync_placement_type (
    sync_placement_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    placement_code VARCHAR(50) NOT NULL UNIQUE,
    placement_name VARCHAR(100) NOT NULL,
    placement_name_es VARCHAR(100),
    placement_name_fr VARCHAR(100),
    placement_category VARCHAR(50),
    typical_duration_min INT UNSIGNED COMMENT 'Seconds',
    typical_duration_max INT UNSIGNED COMMENT 'Seconds',
    typical_use TEXT,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (sync_placement_type_id),
    KEY idx_placement_code (placement_code),
    KEY idx_placement_category (placement_category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert sync placement types
INSERT INTO sync_placement_type (placement_code, placement_name, placement_name_es, placement_name_fr, placement_category, typical_duration_min, typical_duration_max, sort_order) VALUES
('FILM_OPENING', 'Film Opening Credits', 'Créditos de Apertura', 'Générique d\'Ouverture', 'Film', 60, 180, 100),
('FILM_CLOSING', 'Film Closing Credits', 'Créditos de Cierre', 'Générique de Fin', 'Film', 120, 300, 200),
('FILM_SCENE', 'Film Scene', 'Escena de Película', 'Scène de Film', 'Film', 30, 240, 300),
('TV_THEME', 'TV Theme Song', 'Tema de TV', 'Thème TV', 'Television', 30, 60, 400),
('TV_EPISODE', 'TV Episode Scene', 'Escena de Episodio', 'Scène d\'Épisode', 'Television', 15, 180, 500),
('TV_PROMO', 'TV Promo', 'Promo de TV', 'Promo TV', 'Television', 15, 30, 600),
('AD_NATIONAL', 'National Advertisement', 'Anuncio Nacional', 'Publicité Nationale', 'Advertising', 15, 60, 700),
('AD_REGIONAL', 'Regional Advertisement', 'Anuncio Regional', 'Publicité Régionale', 'Advertising', 15, 30, 800),
('AD_ONLINE', 'Online Advertisement', 'Anuncio Online', 'Publicité en Ligne', 'Advertising', 5, 30, 900),
('GAME_THEME', 'Video Game Theme', 'Tema de Videojuego', 'Thème de Jeu Vidéo', 'Gaming', 120, 300, 1000),
('GAME_LEVEL', 'Game Level Music', 'Música de Nivel', 'Musique de Niveau', 'Gaming', 180, 600, 1100),
('TRAILER', 'Movie/Game Trailer', 'Tráiler', 'Bande-Annonce', 'Trailer', 90, 180, 1200),
('PODCAST_THEME', 'Podcast Theme', 'Tema de Podcast', 'Thème de Podcast', 'Digital', 15, 30, 1300),
('YOUTUBE_INTRO', 'YouTube Intro', 'Intro de YouTube', 'Intro YouTube', 'Digital', 5, 15, 1400),
('TIKTOK', 'TikTok/Short Form', 'TikTok/Formato Corto', 'TikTok/Format Court', 'Digital', 15, 60, 1500);

-- Playlist mood table (for DSP playlist targeting)
CREATE TABLE IF NOT EXISTS playlist_mood (
    playlist_mood_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    mood_code VARCHAR(50) NOT NULL UNIQUE,
    mood_name VARCHAR(100) NOT NULL,
    mood_name_es VARCHAR(100),
    mood_name_fr VARCHAR(100),
    mood_name_de VARCHAR(100),
    mood_name_ja VARCHAR(100),
    mood_name_ko VARCHAR(100),
    mood_name_zh VARCHAR(100),
    description TEXT,
    spotify_category VARCHAR(50),
    apple_category VARCHAR(50),
    typical_contexts TEXT,
    sort_order INT UNSIGNED DEFAULT 1000,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (playlist_mood_id),
    KEY idx_mood_code (mood_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert playlist moods
INSERT INTO playlist_mood (mood_code, mood_name, mood_name_es, mood_name_fr, typical_contexts, sort_order) VALUES
('WORKOUT', 'Workout', 'Entrenamiento', 'Entraînement', 'Gym, Running, Sports', 100),
('FOCUS', 'Focus', 'Concentración', 'Concentration', 'Study, Work, Reading', 200),
('PARTY', 'Party', 'Fiesta', 'Fête', 'Parties, Celebrations', 300),
('CHILL', 'Chill', 'Relajado', 'Détente', 'Relaxation, Lounging', 400),
('SLEEP', 'Sleep', 'Dormir', 'Sommeil', 'Bedtime, Rest', 500),
('ROMANCE', 'Romance', 'Romance', 'Romance', 'Date Night, Intimate', 600),
('MOTIVATION', 'Motivation', 'Motivación', 'Motivation', 'Morning, Productivity', 700),
('TRAVEL', 'Travel', 'Viaje', 'Voyage', 'Road Trip, Commute', 800),
('GAMING', 'Gaming', 'Gaming', 'Gaming', 'Video Games, Esports', 900),
('COOKING', 'Cooking', 'Cocina', 'Cuisine', 'Kitchen, Dining', 1000),
('MEDITATION', 'Meditation', 'Meditación', 'Méditation', 'Yoga, Mindfulness', 1100),
('SEASONAL', 'Seasonal', 'Estacional', 'Saisonnier', 'Holiday, Weather', 1200),
('MOOD_BOOST', 'Mood Boost', 'Mejorar Ánimo', 'Boost d\'Humeur', 'Happy, Uplifting', 1300),
('NOSTALGIA', 'Nostalgia', 'Nostalgia', 'Nostalgie', 'Memories, Throwback', 1400),
('DISCOVER', 'Discover', 'Descubrir', 'Découvrir', 'New Music, Exploration', 1500);

-- Create indexes for foreign key relationships that will be established in main database
CREATE INDEX idx_genre_hierarchy ON genre (parent_genre_id, hierarchy_level);
CREATE INDEX idx_mood_emotional_dims ON mood (valence, arousal, dominance);
CREATE INDEX idx_tempo_bpm ON tempo (bpm_min, bpm_max);
CREATE INDEX idx_key_relationships ON key_signature (relative_key, camelot_code);
CREATE INDEX idx_instrument_frequency ON instrument (frequency_range_low, frequency_range_high);
CREATE INDEX idx_culture_countries ON music_culture (country_codes);
CREATE INDEX idx_production_digital ON production_style (is_digital, era_start);

-- =====================================================
-- SECTION 5: CONTENT RATINGS
-- =====================================================

-- Content Rating Systems (Global Standards)
CREATE TABLE IF NOT EXISTS content_rating_system (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    organization VARCHAR(100),
    country_code CHAR(2) COMMENT 'ISO 3166-1 alpha-2',
    region VARCHAR(50),
    content_type VARCHAR(50) COMMENT 'audio, video, game, broadcast, streaming',
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    INDEX idx_code (code),
    INDEX idx_country (country_code),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Explicit Content Rating Levels
CREATE TABLE IF NOT EXISTS explicit_content_rating (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL UNIQUE,
    level INT NOT NULL COMMENT '0=Clean, 1=Edited, 2=Explicit',
    name VARCHAR(50) NOT NULL,
    description TEXT,
    color_code VARCHAR(7) COMMENT 'Hex color for UI display',
    icon_class VARCHAR(50) COMMENT 'CSS class for icon',
    spotify_value VARCHAR(20),
    apple_music_value VARCHAR(20),
    youtube_value VARCHAR(20),
    tiktok_value VARCHAR(20),
    is_default BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    INDEX idx_code (code),
    INDEX idx_level (level),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Parental Advisory Types (RIAA Standard + Global)
CREATE TABLE IF NOT EXISTS parental_advisory_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    label_required BOOLEAN DEFAULT FALSE,
    sticker_type VARCHAR(50) COMMENT 'standard, edited, clean',
    riaa_compliant BOOLEAN DEFAULT TRUE,
    global_equivalent VARCHAR(50),
    display_color VARCHAR(7),
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    INDEX idx_code (code),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Content Warning Types (Comprehensive)
CREATE TABLE IF NOT EXISTS content_warning_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(30) NOT NULL UNIQUE,
    category VARCHAR(50) NOT NULL COMMENT 'violence, language, substance, sexual, sensitive',
    name VARCHAR(100) NOT NULL,
    description TEXT,
    severity_level INT DEFAULT 1 COMMENT '1=Mild, 2=Moderate, 3=Strong, 4=Extreme',
    trigger_warning BOOLEAN DEFAULT FALSE,
    cultural_sensitivity BOOLEAN DEFAULT FALSE,
    platform_restrictions JSON COMMENT 'Platform-specific restrictions',
    icon_class VARCHAR(50),
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    INDEX idx_code (code),
    INDEX idx_category (category),
    INDEX idx_severity (severity_level),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Age Rating Classifications (Global)
CREATE TABLE IF NOT EXISTS age_rating (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    rating_system_id INT UNSIGNED NOT NULL,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    min_age INT DEFAULT 0,
    max_age INT DEFAULT 99,
    description TEXT,
    content_descriptors JSON COMMENT 'Allowed content types',
    equivalent_ratings JSON COMMENT 'Mappings to other systems',
    color_code VARCHAR(7),
    icon_url VARCHAR(255),
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_system_code (rating_system_id, code),
    INDEX idx_system (rating_system_id),
    INDEX idx_age (min_age, max_age),
    INDEX idx_active (is_active),
    FOREIGN KEY (rating_system_id) REFERENCES content_rating_system(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Censorship Rating Levels
CREATE TABLE IF NOT EXISTS censorship_rating (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    censorship_level INT NOT NULL COMMENT '0=None, 1=Minimal, 2=Moderate, 3=Heavy, 4=Banned',
    edit_type VARCHAR(50) COMMENT 'bleep, mute, blur, cut, replace',
    market_restrictions JSON COMMENT 'Countries/regions with restrictions',
    platform_actions JSON COMMENT 'Platform-specific handling',
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    INDEX idx_code (code),
    INDEX idx_level (censorship_level),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Lyrical Theme Classifications
CREATE TABLE IF NOT EXISTS lyrical_theme (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    category VARCHAR(50) COMMENT 'love, social, political, religious, party, etc',
    description TEXT,
    content_flags JSON COMMENT 'Associated warning flags',
    genre_associations JSON COMMENT 'Common in these genres',
    cultural_notes TEXT,
    ai_keywords JSON COMMENT 'Keywords for AI detection',
    is_sensitive BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    INDEX idx_code (code),
    INDEX idx_category (category),
    INDEX idx_sensitive (is_sensitive),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Visual Content Rating (Music Videos, Artwork, NFTs)
CREATE TABLE IF NOT EXISTS visual_content_rating (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    nudity_level INT DEFAULT 0 COMMENT '0=None, 1=Partial, 2=Full',
    violence_level INT DEFAULT 0 COMMENT '0=None, 1=Mild, 2=Graphic',
    gore_level INT DEFAULT 0 COMMENT '0=None, 1=Mild, 2=Extreme',
    sexual_content_level INT DEFAULT 0 COMMENT '0=None, 1=Suggestive, 2=Explicit',
    substance_use_level INT DEFAULT 0 COMMENT '0=None, 1=Implied, 2=Shown',
    mpaa_equivalent VARCHAR(10),
    youtube_restricted BOOLEAN DEFAULT FALSE,
    instagram_restricted BOOLEAN DEFAULT FALSE,
    tiktok_restricted BOOLEAN DEFAULT FALSE,
    nft_marketplace_rating VARCHAR(20),
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    INDEX idx_code (code),
    INDEX idx_levels (nudity_level, violence_level, sexual_content_level),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Content Flag Reasons (User/AI Reporting)
CREATE TABLE IF NOT EXISTS content_flag_reason (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(30) NOT NULL UNIQUE,
    category VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    severity INT DEFAULT 1 COMMENT '1=Low, 2=Medium, 3=High, 4=Critical',
    auto_action VARCHAR(50) COMMENT 'review, restrict, remove',
    requires_human_review BOOLEAN DEFAULT TRUE,
    legal_implications BOOLEAN DEFAULT FALSE,
    evidence_required BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    INDEX idx_code (code),
    INDEX idx_category (category),
    INDEX idx_severity (severity),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Market Restriction Types
CREATE TABLE IF NOT EXISTS market_restriction_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    restriction_type VARCHAR(50) COMMENT 'legal, cultural, religious, political, commercial',
    affected_countries JSON COMMENT 'ISO country codes',
    affected_platforms JSON COMMENT 'Platform names',
    override_allowed BOOLEAN DEFAULT FALSE,
    documentation_required BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    INDEX idx_code (code),
    INDEX idx_type (restriction_type),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Content Review Status
CREATE TABLE IF NOT EXISTS content_review_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    stage VARCHAR(50) COMMENT 'pending, in_review, approved, rejected, appealed',
    requires_action BOOLEAN DEFAULT FALSE,
    auto_transition_to VARCHAR(20) COMMENT 'Next status if conditions met',
    sla_hours INT COMMENT 'Service level agreement in hours',
    color_code VARCHAR(7),
    icon_class VARCHAR(50),
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    INDEX idx_code (code),
    INDEX idx_stage (stage),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Cultural Sensitivity Types
CREATE TABLE IF NOT EXISTS cultural_sensitivity_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    category VARCHAR(50) COMMENT 'religious, political, social, historical',
    description TEXT,
    affected_regions JSON COMMENT 'Regions where sensitive',
    guidelines TEXT,
    alternative_approach TEXT,
    severity_level INT DEFAULT 1,
    requires_localization BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    INDEX idx_code (code),
    INDEX idx_category (category),
    INDEX idx_severity (severity_level),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Platform Content Policy
CREATE TABLE IF NOT EXISTS platform_content_policy (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    platform_code VARCHAR(30) NOT NULL,
    platform_name VARCHAR(100) NOT NULL,
    policy_version VARCHAR(20),
    effective_date DATE,
    explicit_content_allowed BOOLEAN DEFAULT TRUE,
    age_gate_required BOOLEAN DEFAULT FALSE,
    content_restrictions JSON,
    metadata_requirements JSON,
    appeal_process_url VARCHAR(255),
    documentation_url VARCHAR(255),
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_platform_version (platform_code, policy_version),
    INDEX idx_platform (platform_code),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Multi-language Support Tables
CREATE TABLE IF NOT EXISTS explicit_content_rating_ml (
    explicit_content_rating_id INT UNSIGNED NOT NULL,
    language_code VARCHAR(5) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    PRIMARY KEY (explicit_content_rating_id, language_code),
    FOREIGN KEY (explicit_content_rating_id) REFERENCES explicit_content_rating(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE IF NOT EXISTS parental_advisory_type_ml (
    parental_advisory_type_id INT UNSIGNED NOT NULL,
    language_code VARCHAR(5) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    PRIMARY KEY (parental_advisory_type_id, language_code),
    FOREIGN KEY (parental_advisory_type_id) REFERENCES parental_advisory_type(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE IF NOT EXISTS content_warning_type_ml (
    content_warning_type_id INT UNSIGNED NOT NULL,
    language_code VARCHAR(5) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    PRIMARY KEY (content_warning_type_id, language_code),
    FOREIGN KEY (content_warning_type_id) REFERENCES content_warning_type(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- =====================================================
-- INITIAL DATA - Content Rating Systems
-- =====================================================
INSERT INTO content_rating_system (code, name, organization, country_code, region, content_type, display_order) VALUES
('RIAA', 'Recording Industry Association of America', 'RIAA', 'US', 'North America', 'audio', 1),
('MPAA', 'Motion Picture Association', 'MPA', 'US', 'North America', 'video', 2),
('BBFC', 'British Board of Film Classification', 'BBFC', 'GB', 'Europe', 'video', 3),
('FSK', 'Freiwillige Selbstkontrolle der Filmwirtschaft', 'FSK', 'DE', 'Europe', 'video', 4),
('CNC', 'Centre national du cinéma', 'CNC', 'FR', 'Europe', 'video', 5),
('PEGI', 'Pan European Game Information', 'PEGI', 'EU', 'Europe', 'game', 6),
('ESRB', 'Entertainment Software Rating Board', 'ESRB', 'US', 'North America', 'game', 7),
('CERO', 'Computer Entertainment Rating Organization', 'CERO', 'JP', 'Asia', 'game', 8),
('ACB', 'Australian Classification Board', 'ACB', 'AU', 'Oceania', 'video', 9),
('DJCTQ', 'Department of Justice, Rating, Titles and Qualification', 'Ministry of Justice', 'BR', 'South America', 'video', 10),
('FSA', 'Film Standards Authority', 'FSA', 'IN', 'Asia', 'video', 11),
('KMRB', 'Korea Media Rating Board', 'KMRB', 'KR', 'Asia', 'video', 12),
('NFVCB', 'National Film and Video Censors Board', 'NFVCB', 'NG', 'Africa', 'video', 13),
('FPB', 'Film and Publication Board', 'FPB', 'ZA', 'Africa', 'video', 14),
('GCAM', 'General Commission for Audiovisual Media', 'GCAM', 'SA', 'Middle East', 'video', 15),
('CCC', 'China Central Censorship', 'SAPPRFT', 'CN', 'Asia', 'video', 16),
('DSP_SPOTIFY', 'Spotify Content Guidelines', 'Spotify', NULL, 'Global', 'streaming', 17),
('DSP_APPLE', 'Apple Music Content Guidelines', 'Apple', NULL, 'Global', 'streaming', 18),
('DSP_YOUTUBE', 'YouTube Community Guidelines', 'YouTube', NULL, 'Global', 'streaming', 19),
('DSP_TIKTOK', 'TikTok Community Guidelines', 'TikTok', NULL, 'Global', 'streaming', 20),
('NFT_OPENSEA', 'OpenSea Content Policy', 'OpenSea', NULL, 'Global', 'blockchain', 21),
('WEB3_AUDIUS', 'Audius Protocol Standards', 'Audius', NULL, 'Global', 'blockchain', 22);

-- =====================================================
-- INITIAL DATA - Explicit Content Ratings
-- =====================================================
INSERT INTO explicit_content_rating (code, level, name, description, color_code, icon_class, spotify_value, apple_music_value, youtube_value, tiktok_value, is_default, display_order) VALUES
('CLEAN', 0, 'Clean', 'No explicit content', '#4CAF50', 'fas fa-check-circle', 'false', '0', 'none', 'clean', TRUE, 1),
('EDITED', 1, 'Edited', 'Explicit content removed or censored', '#FFC107', 'fas fa-exclamation-triangle', 'false', '1', 'edited', 'edited', FALSE, 2),
('EXPLICIT', 2, 'Explicit', 'Contains explicit content', '#F44336', 'fas fa-exclamation-circle', 'true', '1', 'explicit', 'explicit', FALSE, 3);

-- =====================================================
-- INITIAL DATA - Parental Advisory Types
-- =====================================================
INSERT INTO parental_advisory_type (code, name, description, label_required, sticker_type, riaa_compliant, display_color, display_order) VALUES
('PA_EXPLICIT', 'Parental Advisory Explicit Content', 'Standard RIAA black and white label', TRUE, 'standard', TRUE, '#000000', 1),
('PA_EDITED', 'Parental Advisory Edited Version', 'Edited version with explicit content removed', TRUE, 'edited', TRUE, '#666666', 2),
('PA_CLEAN', 'Clean Version', 'No parental advisory needed', FALSE, 'clean', TRUE, '#4CAF50', 3),
('PA_STRONG_LANGUAGE', 'Strong Language', 'Contains strong language', TRUE, 'standard', TRUE, '#FF5722', 4),
('PA_VIOLENCE', 'Violent Content', 'Contains violent themes or descriptions', TRUE, 'standard', FALSE, '#D32F2F', 5),
('PA_SEXUAL', 'Sexual Content', 'Contains sexual themes or content', TRUE, 'standard', FALSE, '#E91E63', 6),
('PA_SUBSTANCE', 'Drug/Alcohol Reference', 'Contains references to drugs or alcohol', TRUE, 'standard', FALSE, '#FF9800', 7);

-- =====================================================
-- INITIAL DATA - Content Warning Types (First 30)
-- =====================================================
INSERT INTO content_warning_type (code, category, name, description, severity_level, trigger_warning, cultural_sensitivity, icon_class, display_order) VALUES
-- Language Warnings
('LANG_PROFANITY', 'language', 'Profanity', 'Contains profane language', 2, FALSE, FALSE, 'fas fa-comment-slash', 1),
('LANG_SLURS', 'language', 'Slurs/Hate Speech', 'Contains slurs or hate speech', 4, TRUE, TRUE, 'fas fa-ban', 2),
('LANG_SEXUAL', 'language', 'Sexual Language', 'Contains explicit sexual language', 3, FALSE, TRUE, 'fas fa-comment-dots', 3),
('LANG_BLASPHEMY', 'language', 'Blasphemy', 'Contains blasphemous content', 2, FALSE, TRUE, 'fas fa-cross', 4),

-- Violence Warnings
('VIOL_GRAPHIC', 'violence', 'Graphic Violence', 'Contains graphic violent content', 4, TRUE, FALSE, 'fas fa-skull', 5),
('VIOL_WEAPON', 'violence', 'Weapons', 'Contains weapon references', 2, FALSE, FALSE, 'fas fa-gun', 6),
('VIOL_DOMESTIC', 'violence', 'Domestic Violence', 'References domestic violence', 3, TRUE, TRUE, 'fas fa-home', 7),
('VIOL_SELFHARM', 'violence', 'Self-Harm', 'Contains self-harm references', 4, TRUE, FALSE, 'fas fa-band-aid', 8),
('VIOL_SUICIDE', 'violence', 'Suicide', 'Contains suicide references', 4, TRUE, FALSE, 'fas fa-heart-broken', 9),

-- Substance Warnings
('SUBS_ALCOHOL', 'substance', 'Alcohol', 'Contains alcohol references', 1, FALSE, FALSE, 'fas fa-wine-glass', 10),
('SUBS_TOBACCO', 'substance', 'Tobacco', 'Contains tobacco references', 1, FALSE, FALSE, 'fas fa-smoking', 11),
('SUBS_DRUGS', 'substance', 'Drug Use', 'Contains drug references', 3, FALSE, TRUE, 'fas fa-pills', 12),
('SUBS_ADDICTION', 'substance', 'Addiction', 'Contains addiction themes', 2, TRUE, FALSE, 'fas fa-syringe', 13),

-- Sexual Content Warnings
('SEX_SUGGESTIVE', 'sexual', 'Suggestive Content', 'Contains suggestive themes', 2, FALSE, TRUE, 'fas fa-eye-slash', 14),
('SEX_EXPLICIT', 'sexual', 'Explicit Sexual Content', 'Contains explicit sexual content', 4, FALSE, TRUE, 'fas fa-ban', 15),
('SEX_NUDITY', 'sexual', 'Nudity', 'Contains nudity', 3, FALSE, TRUE, 'fas fa-user-slash', 16),

-- Sensitive Content Warnings
('SENS_RACISM', 'sensitive', 'Racism/Discrimination', 'Contains racist content', 4, TRUE, TRUE, 'fas fa-users-slash', 17),
('SENS_POLITICS', 'sensitive', 'Political Content', 'Contains political themes', 2, FALSE, TRUE, 'fas fa-flag', 18),
('SENS_RELIGION', 'sensitive', 'Religious Content', 'Contains religious themes', 1, FALSE, TRUE, 'fas fa-pray', 19),
('SENS_WAR', 'sensitive', 'War/Conflict', 'Contains war themes', 3, TRUE, TRUE, 'fas fa-bomb', 20),
('SENS_TRAUMA', 'sensitive', 'Trauma/PTSD', 'May trigger trauma', 3, TRUE, FALSE, 'fas fa-brain', 21),
('SENS_MENTAL', 'sensitive', 'Mental Health', 'Contains mental health themes', 2, TRUE, FALSE, 'fas fa-head-side-virus', 22),
('SENS_EATING', 'sensitive', 'Eating Disorders', 'Contains eating disorder references', 3, TRUE, FALSE, 'fas fa-weight', 23),
('SENS_LGBTQ', 'sensitive', 'LGBTQ+ Content', 'Contains LGBTQ+ themes', 1, FALSE, TRUE, 'fas fa-rainbow', 24),
('SENS_DISABILITY', 'sensitive', 'Disability', 'Contains disability themes', 1, FALSE, TRUE, 'fas fa-wheelchair', 25),
('SENS_DEATH', 'sensitive', 'Death/Mortality', 'Contains death themes', 3, TRUE, FALSE, 'fas fa-skull-crossbones', 26),
('SENS_ABUSE', 'sensitive', 'Abuse', 'Contains abuse references', 4, TRUE, TRUE, 'fas fa-user-injured', 27),
('SENS_GAMBLING', 'sensitive', 'Gambling', 'Contains gambling references', 2, FALSE, TRUE, 'fas fa-dice', 28),
('SENS_OCCULT', 'sensitive', 'Occult/Supernatural', 'Contains occult themes', 2, FALSE, TRUE, 'fas fa-ghost', 29),
('SENS_CONSPIRACY', 'sensitive', 'Conspiracy Theories', 'Contains conspiracy content', 2, FALSE, TRUE, 'fas fa-user-secret', 30);

-- =====================================================
-- INITIAL DATA - Age Ratings (First 30 across systems)
-- =====================================================
INSERT INTO age_rating (rating_system_id, code, name, min_age, max_age, description, color_code, display_order) VALUES
-- MPAA (US Film)
(2, 'G', 'General Audiences', 0, 99, 'All ages admitted', '#4CAF50', 1),
(2, 'PG', 'Parental Guidance', 0, 99, 'Some material may not be suitable for children', '#8BC34A', 2),
(2, 'PG-13', 'Parents Strongly Cautioned', 13, 99, 'Some material may be inappropriate for children under 13', '#FFC107', 3),
(2, 'R', 'Restricted', 17, 99, 'Under 17 requires accompanying parent', '#FF5722', 4),
(2, 'NC-17', 'Adults Only', 18, 99, 'No one 17 and under admitted', '#F44336', 5),

-- BBFC (UK)
(3, 'U', 'Universal', 0, 99, 'Suitable for all', '#4CAF50', 1),
(3, 'PG', 'Parental Guidance', 0, 99, 'General viewing with parental guidance', '#8BC34A', 2),
(3, '12A', '12A', 12, 99, 'Suitable for 12 years and over', '#FFC107', 3),
(3, '15', '15', 15, 99, 'Suitable only for 15 years and over', '#FF5722', 4),
(3, '18', '18', 18, 99, 'Suitable only for adults', '#F44336', 5),

-- FSK (Germany)
(4, 'FSK0', 'Without age restriction', 0, 99, 'Approved for all ages', '#4CAF50', 1),
(4, 'FSK6', 'Age 6 and up', 6, 99, 'Approved for ages 6 and up', '#8BC34A', 2),
(4, 'FSK12', 'Age 12 and up', 12, 99, 'Approved for ages 12 and up', '#FFC107', 3),
(4, 'FSK16', 'Age 16 and up', 16, 99, 'Approved for ages 16 and up', '#FF5722', 4),
(4, 'FSK18', 'Adults only', 18, 99, 'Not approved for youth', '#F44336', 5),

-- PEGI (Europe Games)
(6, 'PEGI3', 'PEGI 3', 3, 99, 'Suitable for all ages', '#4CAF50', 1),
(6, 'PEGI7', 'PEGI 7', 7, 99, 'Suitable for ages 7 and older', '#8BC34A', 2),
(6, 'PEGI12', 'PEGI 12', 12, 99, 'Suitable for ages 12 and older', '#FFC107', 3),
(6, 'PEGI16', 'PEGI 16', 16, 99, 'Suitable for ages 16 and older', '#FF5722', 4),
(6, 'PEGI18', 'PEGI 18', 18, 99, 'Suitable for adults only', '#F44336', 5),

-- ESRB (US Games)
(7, 'EC', 'Early Childhood', 3, 99, 'Content suitable for ages 3 and older', '#4CAF50', 1),
(7, 'E', 'Everyone', 6, 99, 'Content suitable for ages 6 and older', '#4CAF50', 2),
(7, 'E10+', 'Everyone 10+', 10, 99, 'Content suitable for ages 10 and older', '#8BC34A', 3),
(7, 'T', 'Teen', 13, 99, 'Content suitable for ages 13 and older', '#FFC107', 4),
(7, 'M', 'Mature 17+', 17, 99, 'Content suitable for ages 17 and older', '#FF5722', 5),
(7, 'AO', 'Adults Only 18+', 18, 99, 'Content suitable only for ages 18 and older', '#F44336', 6),

-- ACB (Australia)
(9, 'G', 'General', 0, 99, 'General', '#4CAF50', 1),
(9, 'PG', 'Parental Guidance', 0, 99, 'Parental Guidance', '#8BC34A', 2),
(9, 'M', 'Mature', 15, 99, 'Recommended for mature audiences', '#FFC107', 3),
(9, 'MA15+', 'Mature Accompanied', 15, 99, 'Not suitable for people under 15', '#FF5722', 4);

-- =====================================================
-- INITIAL DATA - Censorship Ratings
-- =====================================================
INSERT INTO censorship_rating (code, name, description, censorship_level, edit_type, display_order) VALUES
('UNCENSORED', 'Uncensored', 'Original version without edits', 0, NULL, 1),
('RADIO_EDIT', 'Radio Edit', 'Edited for radio broadcast', 1, 'bleep', 2),
('CLEAN_VERSION', 'Clean Version', 'All explicit content removed', 2, 'replace', 3),
('TV_EDIT', 'Television Edit', 'Edited for television broadcast', 2, 'mute', 4),
('INTL_EDIT', 'International Edit', 'Edited for international distribution', 2, 'cut', 5),
('CENSORED_HEAVY', 'Heavily Censored', 'Significant content removed', 3, 'multiple', 6),
('BANNED', 'Banned', 'Banned in certain markets', 4, NULL, 7);

-- =====================================================
-- INITIAL DATA - Lyrical Themes (First 30)
-- =====================================================
INSERT INTO lyrical_theme (code, name, category, description, is_sensitive, display_order) VALUES
-- Love & Relationships
('LOVE_ROMANTIC', 'Romantic Love', 'love', 'Romantic relationships and love', FALSE, 1),
('LOVE_HEARTBREAK', 'Heartbreak', 'love', 'Breakups and lost love', FALSE, 2),
('LOVE_SEXUAL', 'Sexual Themes', 'love', 'Sexual relationships', TRUE, 3),
('LOVE_UNREQUITED', 'Unrequited Love', 'love', 'One-sided love', FALSE, 4),

-- Social Commentary
('SOCIAL_JUSTICE', 'Social Justice', 'social', 'Social justice and equality', FALSE, 5),
('SOCIAL_POVERTY', 'Poverty', 'social', 'Economic hardship themes', FALSE, 6),
('SOCIAL_RACISM', 'Racism', 'social', 'Racial discrimination', TRUE, 7),
('SOCIAL_INEQUALITY', 'Inequality', 'social', 'Social inequality', FALSE, 8),

-- Political Themes
('POL_PROTEST', 'Protest', 'political', 'Political protest and activism', TRUE, 9),
('POL_REVOLUTION', 'Revolution', 'political', 'Revolutionary themes', TRUE, 10),
('POL_CORRUPTION', 'Corruption', 'political', 'Government corruption', TRUE, 11),
('POL_WAR', 'War & Conflict', 'political', 'War and military themes', TRUE, 12),

-- Religious/Spiritual
('REL_CHRISTIAN', 'Christian', 'religious', 'Christian themes', FALSE, 13),
('REL_ISLAMIC', 'Islamic', 'religious', 'Islamic themes', FALSE, 14),
('REL_SPIRITUAL', 'Spiritual', 'religious', 'General spirituality', FALSE, 15),
('REL_ATHEIST', 'Atheist', 'religious', 'Anti-religious themes', TRUE, 16),

-- Party/Lifestyle
('PARTY_CLUB', 'Club/Dance', 'party', 'Nightlife and dancing', FALSE, 17),
('PARTY_DRUGS', 'Drug Culture', 'party', 'Drug use and culture', TRUE, 18),
('PARTY_ALCOHOL', 'Drinking', 'party', 'Alcohol consumption', TRUE, 19),
('PARTY_CELEBRATION', 'Celebration', 'party', 'General celebration', FALSE, 20),

-- Personal Themes
('PERSONAL_STRUGGLE', 'Personal Struggle', 'personal', 'Individual challenges', FALSE, 21),
('PERSONAL_SUCCESS', 'Success/Achievement', 'personal', 'Personal triumph', FALSE, 22),
('PERSONAL_MENTAL', 'Mental Health', 'personal', 'Mental health issues', TRUE, 23),
('PERSONAL_IDENTITY', 'Identity', 'personal', 'Self-identity themes', FALSE, 24),

-- Dark Themes
('DARK_VIOLENCE', 'Violence', 'dark', 'Violent content', TRUE, 25),
('DARK_DEATH', 'Death/Mortality', 'dark', 'Death themes', TRUE, 26),
('DARK_CRIME', 'Crime', 'dark', 'Criminal activity', TRUE, 27),
('DARK_HORROR', 'Horror', 'dark', 'Horror themes', TRUE, 28),

-- Cultural
('CULT_HERITAGE', 'Cultural Heritage', 'cultural', 'Cultural traditions', FALSE, 29),
('CULT_URBAN', 'Urban Life', 'cultural', 'City life themes', FALSE, 30);

-- =====================================================
-- INITIAL DATA - Visual Content Ratings
-- =====================================================
INSERT INTO visual_content_rating (code, name, description, nudity_level, violence_level, gore_level, sexual_content_level, substance_use_level, mpaa_equivalent, youtube_restricted, instagram_restricted, tiktok_restricted, display_order) VALUES
('VIS_CLEAN', 'Clean', 'No concerning visual content', 0, 0, 0, 0, 0, 'G', FALSE, FALSE, FALSE, 1),
('VIS_MILD', 'Mild Content', 'Mild suggestive content', 0, 1, 0, 1, 1, 'PG', FALSE, FALSE, FALSE, 2),
('VIS_MODERATE', 'Moderate Content', 'Moderate mature content', 1, 1, 0, 1, 1, 'PG-13', TRUE, FALSE, FALSE, 3),
('VIS_MATURE', 'Mature Content', 'Mature visual content', 1, 2, 1, 2, 2, 'R', TRUE, TRUE, TRUE, 4),
('VIS_EXPLICIT', 'Explicit Content', 'Explicit visual content', 2, 2, 2, 2, 2, 'NC-17', TRUE, TRUE, TRUE, 5);

-- =====================================================
-- INITIAL DATA - Platform Content Policies
-- =====================================================
INSERT INTO platform_content_policy (platform_code, platform_name, policy_version, effective_date, explicit_content_allowed, age_gate_required, content_restrictions, metadata_requirements, appeal_process_url, documentation_url, display_order) VALUES
('SPOTIFY', 'Spotify', '2025.1', '2025-01-01', TRUE, FALSE, '{"max_track_length": 600, "explicit_filter": true}', '{"isrc_required": true, "language_required": true}', 'https://artists.spotify.com/help/article/content-appeal', 'https://artists.spotify.com/help/article/content-guidelines', 1),
('APPLE_MUSIC', 'Apple Music', '2025.1', '2025-01-01', TRUE, TRUE, '{"explicit_badge": true, "clean_versions_preferred": true}', '{"upc_required": true, "copyright_required": true}', 'https://artists.apple.com/support/content-appeal', 'https://artists.apple.com/support/content-guidelines', 2),
('YOUTUBE_MUSIC', 'YouTube Music', '2025.1', '2025-01-01', TRUE, TRUE, '{"community_guidelines": true, "copyright_strikes": 3}', '{"content_id_required": true}', 'https://support.google.com/youtube/answer/appeals', 'https://support.google.com/youtube/answer/content-guidelines', 3),
('TIKTOK', 'TikTok', '2025.1', '2025-01-01', FALSE, TRUE, '{"max_length": 60, "no_explicit_visuals": true}', '{"sound_copyright_clearance": true}', 'https://support.tiktok.com/content-appeal', 'https://support.tiktok.com/community-guidelines', 4),
('INSTAGRAM', 'Instagram/Reels', '2025.1', '2025-01-01', FALSE, TRUE, '{"max_reel_length": 90, "music_library_only": true}', '{"creator_account_required": true}', 'https://help.instagram.com/appeals', 'https://help.instagram.com/music-guidelines', 5);

-- =====================================================
-- INITIAL DATA - Content Flag Reasons
-- =====================================================
INSERT INTO content_flag_reason (code, category, name, description, severity, auto_action, requires_human_review, legal_implications, evidence_required, display_order) VALUES
('COPYRIGHT_INFRINGEMENT', 'legal', 'Copyright Infringement', 'Unauthorized use of copyrighted material', 4, 'remove', TRUE, TRUE, TRUE, 1),
('TRADEMARK_VIOLATION', 'legal', 'Trademark Violation', 'Unauthorized use of trademarks', 3, 'review', TRUE, TRUE, TRUE, 2),
('DMCA_CLAIM', 'legal', 'DMCA Takedown', 'Digital Millennium Copyright Act claim', 4, 'remove', TRUE, TRUE, TRUE, 3),
('HATE_SPEECH', 'community', 'Hate Speech', 'Content promoting hate or discrimination', 4, 'remove', TRUE, TRUE, TRUE, 4),
('HARASSMENT', 'community', 'Harassment/Bullying', 'Targeted harassment or bullying', 3, 'restrict', TRUE, FALSE, TRUE, 5),
('VIOLENCE_GRAPHIC', 'safety', 'Graphic Violence', 'Extremely violent content', 4, 'remove', TRUE, FALSE, FALSE, 6),
('SEXUAL_EXPLICIT', 'safety', 'Sexually Explicit', 'Pornographic or explicit sexual content', 4, 'remove', TRUE, FALSE, FALSE, 7),
('CHILD_SAFETY', 'safety', 'Child Safety Concern', 'Content potentially harmful to minors', 4, 'remove', TRUE, TRUE, TRUE, 8),
('SELF_HARM', 'safety', 'Self-Harm/Suicide', 'Content promoting self-harm', 4, 'restrict', TRUE, FALSE, FALSE, 9),
('MISINFORMATION', 'accuracy', 'Misinformation', 'False or misleading information', 2, 'review', TRUE, FALSE, TRUE, 10),
('SPAM', 'quality', 'Spam/Repetitive', 'Spam or repetitive content', 1, 'restrict', FALSE, FALSE, FALSE, 11),
('IMPERSONATION', 'authenticity', 'Impersonation', 'Impersonating another artist or entity', 3, 'review', TRUE, TRUE, TRUE, 12);

-- =====================================================
-- INITIAL DATA - Market Restriction Types
-- =====================================================
INSERT INTO market_restriction_type (code, name, description, restriction_type, affected_countries, override_allowed, documentation_required, display_order) VALUES
('SANCTIONS', 'Economic Sanctions', 'Content restricted due to economic sanctions', 'legal', '["IR", "KP", "SY", "CU"]', FALSE, TRUE, 1),
('CENSORSHIP_GOV', 'Government Censorship', 'Government-mandated content restrictions', 'political', '["CN", "RU", "SA", "AE"]', FALSE, TRUE, 2),
('RELIGIOUS_LAW', 'Religious Law', 'Content violates religious laws', 'religious', '["SA", "IR", "AF", "PK"]', FALSE, TRUE, 3),
('CULTURAL_SENSITIVITY', 'Cultural Sensitivity', 'Content culturally inappropriate', 'cultural', '["IN", "ID", "MY", "TH"]', TRUE, FALSE, 4),
('LICENSE_TERRITORY', 'Licensing Territory', 'Licensing restrictions by territory', 'commercial', '[]', TRUE, TRUE, 5),
('DISTRIBUTION_RIGHTS', 'Distribution Rights', 'Distribution rights limitations', 'commercial', '[]', TRUE, TRUE, 6),
('COLLECTION_SOCIETY', 'Collection Society', 'Collection society restrictions', 'commercial', '[]', FALSE, TRUE, 7),
('POLITICAL_CONTENT', 'Political Content', 'Politically sensitive content', 'political', '["CN", "RU", "TR", "EG"]', FALSE, TRUE, 8);

-- =====================================================
-- INITIAL DATA - Content Review Status
-- =====================================================
INSERT INTO content_review_status (code, name, description, stage, requires_action, sla_hours, color_code, icon_class, display_order) VALUES
('PENDING', 'Pending Review', 'Awaiting initial review', 'pending', TRUE, 24, '#9E9E9E', 'fas fa-clock', 1),
('AI_REVIEW', 'AI Review', 'Under automated review', 'in_review', FALSE, 1, '#2196F3', 'fas fa-robot', 2),
('HUMAN_REVIEW', 'Human Review', 'Under human review', 'in_review', FALSE, 48, '#FF9800', 'fas fa-user-check', 3),
('APPROVED', 'Approved', 'Content approved for distribution', 'approved', FALSE, NULL, '#4CAF50', 'fas fa-check-circle', 4),
('CONDITIONAL', 'Conditionally Approved', 'Approved with conditions', 'approved', TRUE, NULL, '#8BC34A', 'fas fa-exclamation-circle', 5),
('REJECTED', 'Rejected', 'Content rejected', 'rejected', TRUE, NULL, '#F44336', 'fas fa-times-circle', 6),
('APPEALED', 'Under Appeal', 'Decision appealed by user', 'appealed', TRUE, 72, '#9C27B0', 'fas fa-gavel', 7),
('SUSPENDED', 'Suspended', 'Temporarily suspended', 'rejected', TRUE, NULL, '#FF5722', 'fas fa-pause-circle', 8);

-- =====================================================
-- INITIAL DATA - Cultural Sensitivity Types
-- =====================================================
INSERT INTO cultural_sensitivity_type (code, name, category, description, affected_regions, severity_level, requires_localization, display_order) VALUES
('REL_BLASPHEMY', 'Religious Blasphemy', 'religious', 'Content considered blasphemous', '["SA", "IR", "PK", "AF", "ID", "MY"]', 4, TRUE, 1),
('REL_IMAGERY', 'Religious Imagery', 'religious', 'Inappropriate use of religious symbols', '["IN", "SA", "IL", "EG"]', 3, TRUE, 2),
('POL_CRITICISM', 'Political Criticism', 'political', 'Criticism of government/leaders', '["CN", "RU", "TR", "SA", "TH"]', 4, TRUE, 3),
('POL_SEPARATISM', 'Separatist Content', 'political', 'Promoting separatist movements', '["CN", "IN", "ES", "RU"]', 4, FALSE, 4),
('HIST_DENIAL', 'Historical Denial', 'historical', 'Denial of historical events', '["DE", "FR", "IL", "PL"]', 4, FALSE, 5),
('CULT_APPROPRIATION', 'Cultural Appropriation', 'social', 'Inappropriate use of cultural elements', '["US", "CA", "AU", "NZ"]', 2, TRUE, 6),
('GENDER_ROLES', 'Gender Roles', 'social', 'Content about gender/sexuality', '["SA", "RU", "UG", "NG"]', 3, TRUE, 7),
('LGBTQ_CONTENT', 'LGBTQ+ Content', 'social', 'LGBTQ+ themes or representation', '["SA", "RU", "CN", "MY", "UG"]', 3, TRUE, 8);

-- Create indexes for multi-language tables
CREATE INDEX idx_ecr_ml_lang ON explicit_content_rating_ml(language_code);
CREATE INDEX idx_pat_ml_lang ON parental_advisory_type_ml(language_code);
CREATE INDEX idx_cwt_ml_lang ON content_warning_type_ml(language_code);

-- =====================================================
-- SECTION 6: WORK & RECORDING TYPES  
-- =====================================================

-- Table: work_type
-- Core work type classifications based on CISAC CWR standards
CREATE TABLE work_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(10) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    cisac_code VARCHAR(10),
    category VARCHAR(50),
    rights_implications TEXT,
    royalty_impact VARCHAR(20),
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    created_by INT UNSIGNED,
    updated_by INT UNSIGNED,
    KEY idx_code (code),
    KEY idx_category (category),
    KEY idx_cisac (cisac_code),
    KEY idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: work_category
-- CISAC CWR work categories
CREATE TABLE work_category (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(10) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    parent_category_id INT UNSIGNED,
    description TEXT,
    cisac_category VARCHAR(10),
    typical_duration_range VARCHAR(50),
    is_instrumental BOOLEAN DEFAULT FALSE,
    is_classical BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_parent (parent_category_id),
    KEY idx_cisac (cisac_category),
    FOREIGN KEY (parent_category_id) REFERENCES work_category(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: work_recording_relationship_type
-- Types of relationships between works and recordings
CREATE TABLE work_recording_relationship_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    royalty_split_impact VARCHAR(50),
    requires_clearance BOOLEAN DEFAULT FALSE,
    chain_of_title_impact VARCHAR(50),
    metadata_requirements JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_clearance (requires_clearance)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: recording_type
-- Core recording type classifications
CREATE TABLE recording_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    typical_format VARCHAR(50),
    production_method VARCHAR(50),
    is_live BOOLEAN DEFAULT FALSE,
    is_acoustic BOOLEAN DEFAULT FALSE,
    is_electronic BOOLEAN DEFAULT FALSE,
    metadata_requirements JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_live (is_live)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: recording_format
-- Audio format specifications
CREATE TABLE recording_format (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    file_extension VARCHAR(10),
    mime_type VARCHAR(50),
    codec VARCHAR(50),
    bit_rate_min INT,
    bit_rate_max INT,
    sample_rate INT,
    bit_depth INT,
    channels INT,
    is_lossless BOOLEAN DEFAULT FALSE,
    is_spatial BOOLEAN DEFAULT FALSE,
    is_compressed BOOLEAN DEFAULT TRUE,
    platform_support JSON,
    quality_tier VARCHAR(20),
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_extension (file_extension),
    KEY idx_quality (quality_tier),
    KEY idx_spatial (is_spatial)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: release_type
-- Album, Single, EP, etc.
CREATE TABLE release_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    ddex_code VARCHAR(20),
    min_tracks INT,
    max_tracks INT,
    min_duration_seconds INT,
    max_duration_seconds INT,
    typical_pricing_tier VARCHAR(20),
    metadata_requirements JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_ddex (ddex_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: release_format
-- Physical, Digital, Streaming, NFT, etc.
CREATE TABLE release_format (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    distribution_method VARCHAR(50),
    is_physical BOOLEAN DEFAULT FALSE,
    is_digital BOOLEAN DEFAULT TRUE,
    is_blockchain BOOLEAN DEFAULT FALSE,
    requires_manufacturing BOOLEAN DEFAULT FALSE,
    typical_lead_time_days INT,
    platform_requirements JSON,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_physical (is_physical),
    KEY idx_blockchain (is_blockchain)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: asset_type
-- Overall asset categorization
CREATE TABLE asset_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50),
    requires_isrc BOOLEAN DEFAULT FALSE,
    requires_iswc BOOLEAN DEFAULT FALSE,
    requires_upc BOOLEAN DEFAULT FALSE,
    typical_rights JSON,
    metadata_schema JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_category (category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: title_type
-- Main, Alternative, Translation, etc.
CREATE TABLE title_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    cisac_code VARCHAR(10),
    is_primary BOOLEAN DEFAULT FALSE,
    language_specific BOOLEAN DEFAULT FALSE,
    territory_specific BOOLEAN DEFAULT FALSE,
    requires_translation BOOLEAN DEFAULT FALSE,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_primary (is_primary)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: version_type
-- Radio Edit, Extended, Remix, etc.
CREATE TABLE version_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    abbreviation VARCHAR(10),
    description TEXT,
    typical_duration_change VARCHAR(20),
    requires_new_isrc BOOLEAN DEFAULT FALSE,
    royalty_rate_modifier DECIMAL(5,4) DEFAULT 1.0000,
    production_method VARCHAR(50),
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_abbrev (abbreviation)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: sample_type
-- Sample, Interpolation, Replay, etc.
CREATE TABLE sample_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    legal_requirements TEXT,
    typical_clearance_process VARCHAR(100),
    royalty_split_method VARCHAR(50),
    requires_master_clearance BOOLEAN DEFAULT TRUE,
    requires_publishing_clearance BOOLEAN DEFAULT TRUE,
    metadata_requirements JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_clearance (requires_master_clearance, requires_publishing_clearance)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: inclusion_type
-- Full, Excerpt, Medley, etc.
CREATE TABLE inclusion_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    typical_duration_percentage VARCHAR(20),
    royalty_calculation_method VARCHAR(50),
    requires_timing_data BOOLEAN DEFAULT FALSE,
    sync_licensing_impact VARCHAR(50),
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: arrangement_type
-- Orchestral, Acoustic, Electronic, etc.
CREATE TABLE arrangement_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    typical_instrumentation JSON,
    requires_arranger_credit BOOLEAN DEFAULT FALSE,
    creates_derivative_work BOOLEAN DEFAULT FALSE,
    royalty_implications VARCHAR(100),
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_derivative (creates_derivative_work)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: distribution_type
-- Physical, Digital, Streaming, NFT, etc.
CREATE TABLE distribution_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    delivery_method VARCHAR(50),
    typical_timeline_days INT,
    requires_upc BOOLEAN DEFAULT TRUE,
    requires_catalog_number BOOLEAN DEFAULT FALSE,
    platform_list JSON,
    metadata_requirements JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: master_type
-- Original, Remaster, Reissue, etc.
CREATE TABLE master_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    requires_new_isrc BOOLEAN DEFAULT FALSE,
    source_requirements VARCHAR(100),
    technical_process VARCHAR(100),
    quality_improvements JSON,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: compilation_type
-- Greatest Hits, Soundtrack, Various Artists, etc.
CREATE TABLE compilation_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    licensing_complexity VARCHAR(50),
    typical_track_count_range VARCHAR(20),
    requires_compilation_copyright BOOLEAN DEFAULT TRUE,
    royalty_distribution_method VARCHAR(100),
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: performance_type
-- Live, Studio, Remote, Virtual, etc.
CREATE TABLE performance_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    venue_type VARCHAR(50),
    audience_presence VARCHAR(50),
    recording_method VARCHAR(100),
    typical_production_elements JSON,
    metadata_requirements JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: stem_type
-- Vocals, Instruments, Drums, Bass, etc.
CREATE TABLE stem_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    typical_elements JSON,
    frequency_range_hz VARCHAR(20),
    typical_processing VARCHAR(100),
    ai_separation_difficulty VARCHAR(20),
    licensing_considerations TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: quality_tier
-- Standard, HD, Lossless, Spatial, etc.
CREATE TABLE quality_tier (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    technical_specs JSON,
    minimum_bit_rate INT,
    minimum_sample_rate INT,
    typical_file_size_mb_per_minute DECIMAL(5,2),
    platform_availability JSON,
    pricing_tier VARCHAR(20),
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_pricing (pricing_tier)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: copyright_type
-- Composition, Recording, Arrangement, etc.
CREATE TABLE copyright_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    symbol VARCHAR(10),
    description TEXT,
    duration_years INT,
    renewal_possible BOOLEAN DEFAULT FALSE,
    territorial_variations JSON,
    registration_requirements TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: generation_method
-- Human, AI-Assisted, Fully AI, etc.
CREATE TABLE generation_method (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    ai_involvement_percentage INT,
    copyright_implications TEXT,
    disclosure_required BOOLEAN DEFAULT FALSE,
    platform_restrictions JSON,
    royalty_eligibility VARCHAR(50),
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_ai_percentage (ai_involvement_percentage)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: usage_restriction_type
-- Clean, Explicit, Radio Edit, etc.
CREATE TABLE usage_restriction_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    content_rating VARCHAR(10),
    parental_advisory BOOLEAN DEFAULT FALSE,
    broadcast_restrictions JSON,
    territory_restrictions JSON,
    platform_handling JSON,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_rating (content_rating)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: sync_type
-- Film, TV, Commercial, Gaming, etc.
CREATE TABLE sync_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    typical_usage VARCHAR(100),
    license_complexity VARCHAR(20),
    typical_term VARCHAR(50),
    territory_scope VARCHAR(50),
    rate_structure VARCHAR(50),
    metadata_requirements JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: remix_type
-- Official, Bootleg, Mashup, VIP, etc.
CREATE TABLE remix_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    authorization_required BOOLEAN DEFAULT TRUE,
    typical_elements_changed JSON,
    royalty_split_standard VARCHAR(50),
    requires_new_isrc BOOLEAN DEFAULT TRUE,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_auth (authorization_required)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: classical_form_type
-- Symphony, Sonata, Concerto, etc.
CREATE TABLE classical_form_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    name_plural VARCHAR(100),
    description TEXT,
    typical_movements INT,
    typical_duration_minutes INT,
    instrumentation_pattern JSON,
    historical_period VARCHAR(50),
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code),
    KEY idx_period (historical_period)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: broadcast_type
-- Radio, Streaming, Podcast, Satellite, etc.
CREATE TABLE broadcast_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    transmission_method VARCHAR(50),
    typical_audience_size VARCHAR(50),
    reporting_frequency VARCHAR(20),
    royalty_collection_method VARCHAR(50),
    technical_requirements JSON,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_code (code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- =====================================================
-- INITIAL CONFIGURATION DATA
-- =====================================================

-- Insert work_type data
INSERT INTO work_type (code, name, description, cisac_code, category, rights_implications, royalty_impact, display_order) VALUES
('ORIG', 'Original Work', 'Original musical composition', 'ORG', 'MUSICAL', 'Full copyright ownership', 'STANDARD', 1),
('ADAPT', 'Adaptation', 'Adaptation of existing work', 'ADP', 'MUSICAL', 'Derivative work rights', 'SPLIT', 2),
('ARR', 'Arrangement', 'New arrangement of existing work', 'ARR', 'MUSICAL', 'Arrangement rights only', 'PARTIAL', 3),
('TRANS', 'Translation', 'Translated lyrics', 'TRA', 'LYRICAL', 'Translation rights', 'SHARED', 4),
('COMP', 'Composite', 'Work using multiple existing works', 'CMP', 'MUSICAL', 'Multiple clearances required', 'COMPLEX', 5),
('JINGLE', 'Jingle', 'Commercial advertising music', 'JNG', 'COMMERCIAL', 'Work-for-hire typical', 'BUYOUT', 6),
('THEME', 'Theme Music', 'Theme for show/program', 'THM', 'BROADCAST', 'Sync and broadcast rights', 'RECURRING', 7),
('SCORE', 'Film Score', 'Original film/TV score', 'SCR', 'AUDIOVISUAL', 'Sync rights included', 'PACKAGE', 8),
('INSTRM', 'Instrumental', 'Instrumental version', 'INS', 'MUSICAL', 'No lyric rights', 'REDUCED', 9),
('MEDLEY', 'Medley', 'Combination of multiple works', 'MDY', 'MUSICAL', 'Multiple work clearances', 'PRORATED', 10);

-- Insert work_category data
INSERT INTO work_category (code, name, description, cisac_category, typical_duration_range, is_instrumental, is_classical, display_order) VALUES
('POP', 'Popular Music', 'Contemporary popular music', 'POP', '2-5 minutes', FALSE, FALSE, 1),
('ROCK', 'Rock Music', 'Rock and alternative music', 'ROK', '3-6 minutes', FALSE, FALSE, 2),
('CLASSICAL', 'Classical Music', 'Traditional classical music', 'CLA', '5-45 minutes', TRUE, TRUE, 3),
('JAZZ', 'Jazz', 'Jazz and related styles', 'JAZ', '3-10 minutes', FALSE, FALSE, 4),
('ELECTRONIC', 'Electronic', 'Electronic dance music', 'ELE', '3-8 minutes', FALSE, FALSE, 5),
('HIPHOP', 'Hip Hop', 'Hip hop and rap music', 'HIP', '2-5 minutes', FALSE, FALSE, 6),
('COUNTRY', 'Country', 'Country and western music', 'CTY', '2-4 minutes', FALSE, FALSE, 7),
('LATIN', 'Latin', 'Latin and regional music', 'LAT', '3-5 minutes', FALSE, FALSE, 8),
('WORLD', 'World Music', 'International and ethnic music', 'WLD', '3-6 minutes', FALSE, FALSE, 9),
('CHILDREN', 'Children\'s Music', 'Music for children', 'CHI', '2-4 minutes', FALSE, FALSE, 10);

-- Insert work_recording_relationship_type data
INSERT INTO work_recording_relationship_type (code, name, description, royalty_split_impact, requires_clearance, chain_of_title_impact, display_order) VALUES
('ORIGINAL', 'Original Recording', 'First recording of the work', 'FULL_RATE', FALSE, 'PRIMARY', 1),
('COVER', 'Cover Version', 'New recording of existing work', 'STANDARD_MECHANICAL', TRUE, 'DERIVATIVE', 2),
('SAMPLE', 'Contains Sample', 'Recording contains sampled content', 'NEGOTIATED_SPLIT', TRUE, 'COMPLEX', 3),
('INTERPOLATION', 'Interpolation', 'Re-recording of melody/lyrics', 'PARTIAL_SPLIT', TRUE, 'DERIVATIVE', 4),
('REMIX', 'Remix', 'Remixed version of recording', 'REMIX_RATE', TRUE, 'DERIVATIVE', 5),
('MASHUP', 'Mashup', 'Combination of multiple recordings', 'MULTI_SPLIT', TRUE, 'COMPLEX', 6),
('LIVE', 'Live Recording', 'Live performance recording', 'PERFORMANCE_RATE', FALSE, 'STANDARD', 7),
('ACOUSTIC', 'Acoustic Version', 'Acoustic arrangement', 'STANDARD_RATE', FALSE, 'STANDARD', 8),
('INSTRUMENTAL', 'Instrumental', 'Instrumental version only', 'NO_LYRIC_RATE', FALSE, 'MODIFIED', 9),
('KARAOKE', 'Karaoke Version', 'Backing track only', 'KARAOKE_RATE', TRUE, 'SPECIAL', 10);

-- Insert recording_type data
INSERT INTO recording_type (code, name, description, typical_format, production_method, is_live, is_acoustic, is_electronic, display_order) VALUES
('STUDIO', 'Studio Recording', 'Professional studio recording', 'MULTITRACK', 'STUDIO', FALSE, FALSE, FALSE, 1),
('LIVE', 'Live Recording', 'Live performance recording', 'STEREO', 'LIVE_VENUE', TRUE, FALSE, FALSE, 2),
('DEMO', 'Demo Recording', 'Demonstration recording', 'STEREO', 'HOME_STUDIO', FALSE, FALSE, FALSE, 3),
('ACOUSTIC', 'Acoustic Recording', 'Acoustic instruments only', 'STEREO', 'MINIMAL', FALSE, TRUE, FALSE, 4),
('ELECTRONIC', 'Electronic Recording', 'Electronic production', 'DIGITAL', 'DAW', FALSE, FALSE, TRUE, 5),
('ORCHESTRAL', 'Orchestral Recording', 'Full orchestra recording', 'SURROUND', 'CONCERT_HALL', FALSE, FALSE, FALSE, 6),
('FIELD', 'Field Recording', 'On-location recording', 'PORTABLE', 'FIELD', FALSE, FALSE, FALSE, 7),
('REMOTE', 'Remote Recording', 'Remote collaboration recording', 'MULTITRACK', 'DISTRIBUTED', FALSE, FALSE, FALSE, 8),
('AI_GENERATED', 'AI Generated', 'AI-generated recording', 'DIGITAL', 'ARTIFICIAL', FALSE, FALSE, TRUE, 9),
('HYBRID', 'Hybrid Recording', 'Mix of real and synthetic', 'MULTITRACK', 'MIXED', FALSE, FALSE, FALSE, 10);

-- Insert recording_format data
INSERT INTO recording_format (code, name, file_extension, mime_type, codec, bit_rate_min, bit_rate_max, sample_rate, bit_depth, channels, is_lossless, is_spatial, quality_tier, display_order) VALUES
('MP3_320', 'MP3 High Quality', 'mp3', 'audio/mpeg', 'MP3', 320, 320, 44100, 16, 2, FALSE, FALSE, 'STANDARD', 1),
('AAC_256', 'AAC Standard', 'm4a', 'audio/aac', 'AAC', 256, 256, 44100, 16, 2, FALSE, FALSE, 'STANDARD', 2),
('FLAC', 'FLAC Lossless', 'flac', 'audio/flac', 'FLAC', 700, 1411, 44100, 16, 2, TRUE, FALSE, 'HD', 3),
('WAV', 'WAV Uncompressed', 'wav', 'audio/wav', 'PCM', 1411, 1411, 44100, 16, 2, TRUE, FALSE, 'HD', 4),
('ALAC', 'Apple Lossless', 'm4a', 'audio/alac', 'ALAC', 700, 1411, 44100, 16, 2, TRUE, FALSE, 'HD', 5),
('OGG', 'OGG Vorbis', 'ogg', 'audio/ogg', 'Vorbis', 128, 320, 44100, 16, 2, FALSE, FALSE, 'STANDARD', 6),
('DOLBY_ATMOS', 'Dolby Atmos', 'mp4', 'audio/mp4', 'EC-3', 768, 768, 48000, 24, 12, FALSE, TRUE, 'SPATIAL', 7),
('SONY_360', 'Sony 360 Audio', 'mp4', 'audio/mp4', 'MPEG-H', 512, 512, 48000, 24, 8, FALSE, TRUE, 'SPATIAL', 8),
('DSD', 'DSD Hi-Res', 'dsf', 'audio/dsd', 'DSD', 2822, 5644, 2822400, 1, 2, TRUE, FALSE, 'HIRES', 9),
('MQA', 'MQA Master', 'flac', 'audio/flac', 'MQA', 1411, 9216, 96000, 24, 2, TRUE, FALSE, 'MASTER', 10);

-- Insert release_type data (First 20 of comprehensive list)
INSERT INTO release_type (code, name, description, ddex_code, min_tracks, max_tracks, min_duration_seconds, max_duration_seconds, typical_pricing_tier, display_order) VALUES
('SINGLE', 'Single', 'Single track release', 'Single', 1, 3, 120, 600, 'SINGLE', 1),
('EP', 'EP', 'Extended play release', 'EP', 4, 8, 600, 1800, 'EP', 2),
('ALBUM', 'Album', 'Full length album', 'Album', 9, 20, 1800, 4800, 'ALBUM', 3),
('COMPILATION', 'Compilation', 'Collection of tracks', 'Compilation', 10, 30, 2400, 7200, 'ALBUM', 4),
('SOUNDTRACK', 'Soundtrack', 'Film/TV soundtrack', 'Soundtrack', 8, 25, 1800, 5400, 'ALBUM', 5),
('MIXTAPE', 'Mixtape', 'DJ or artist mixtape', 'Mixtape', 10, 25, 2400, 5400, 'MIXTAPE', 6),
('LIVE_ALBUM', 'Live Album', 'Live performance album', 'LiveAlbum', 8, 20, 2400, 7200, 'ALBUM', 7),
('REMIX_ALBUM', 'Remix Album', 'Album of remixes', 'RemixAlbum', 8, 16, 2400, 5400, 'ALBUM', 8),
('GREATEST_HITS', 'Greatest Hits', 'Best of compilation', 'GreatestHits', 12, 25, 2700, 6000, 'ALBUM', 9),
('BOX_SET', 'Box Set', 'Multi-disc collection', 'BoxSet', 30, 100, 7200, 18000, 'BOXSET', 10),
('DELUXE', 'Deluxe Edition', 'Expanded album release', 'DeluxeEdition', 15, 30, 3600, 7200, 'DELUXE', 11),
('ACOUSTIC_EP', 'Acoustic EP', 'Acoustic versions EP', 'AcousticEP', 4, 8, 600, 1800, 'EP', 12),
('REMIX_EP', 'Remix EP', 'EP of remixes', 'RemixEP', 3, 6, 900, 2400, 'EP', 13),
('BOOTLEG', 'Bootleg', 'Unofficial release', 'Bootleg', 1, 30, 180, 7200, 'SPECIAL', 14),
('DEMO', 'Demo', 'Demonstration release', 'Demo', 3, 10, 600, 2400, 'PROMO', 15),
('SAMPLER', 'Sampler', 'Promotional sampler', 'Sampler', 5, 15, 900, 3600, 'PROMO', 16),
('DJ_MIX', 'DJ Mix', 'Continuous DJ mix', 'DJMix', 1, 1, 3600, 10800, 'MIX', 17),
('STUDIO_ALBUM', 'Studio Album', 'Standard studio album', 'StudioAlbum', 9, 16, 2100, 4800, 'ALBUM', 18),
('CONCEPT_ALBUM', 'Concept Album', 'Thematic album', 'ConceptAlbum', 10, 20, 2400, 5400, 'ALBUM', 19),
('SPLIT_EP', 'Split EP', 'Multiple artist EP', 'SplitEP', 4, 8, 600, 1800, 'EP', 20);

-- Insert release_format data
INSERT INTO release_format (code, name, description, distribution_method, is_physical, is_digital, is_blockchain, requires_manufacturing, typical_lead_time_days, display_order) VALUES
('CD', 'Compact Disc', 'Physical CD format', 'PHYSICAL', TRUE, FALSE, FALSE, TRUE, 30, 1),
('VINYL_LP', 'Vinyl LP', '12-inch vinyl record', 'PHYSICAL', TRUE, FALSE, FALSE, TRUE, 90, 2),
('VINYL_7', 'Vinyl 7-inch', '7-inch vinyl single', 'PHYSICAL', TRUE, FALSE, FALSE, TRUE, 60, 3),
('CASSETTE', 'Cassette Tape', 'Analog cassette tape', 'PHYSICAL', TRUE, FALSE, FALSE, TRUE, 45, 4),
('DIGITAL', 'Digital Download', 'Standard digital files', 'DOWNLOAD', FALSE, TRUE, FALSE, FALSE, 0, 5),
('STREAMING', 'Streaming Only', 'Streaming platforms only', 'STREAM', FALSE, TRUE, FALSE, FALSE, 0, 6),
('NFT_AUDIO', 'NFT Audio', 'Blockchain NFT audio', 'BLOCKCHAIN', FALSE, TRUE, TRUE, FALSE, 1, 7),
('NFT_BUNDLE', 'NFT Bundle', 'NFT with extras', 'BLOCKCHAIN', FALSE, TRUE, TRUE, FALSE, 3, 8),
('USB', 'USB Drive', 'Physical USB release', 'PHYSICAL', TRUE, TRUE, FALSE, TRUE, 21, 9),
('MINIDISC', 'MiniDisc', 'Sony MiniDisc format', 'PHYSICAL', TRUE, FALSE, FALSE, TRUE, 30, 10);

-- Insert asset_type data
INSERT INTO asset_type (code, name, description, category, requires_isrc, requires_iswc, requires_upc, display_order) VALUES
('SONG', 'Song', 'Musical composition with recording', 'MUSICAL', TRUE, TRUE, FALSE, 1),
('INSTRUMENTAL', 'Instrumental', 'Instrumental composition', 'MUSICAL', TRUE, TRUE, FALSE, 2),
('SPOKEN_WORD', 'Spoken Word', 'Spoken word recording', 'SPOKEN', TRUE, FALSE, FALSE, 3),
('SOUND_EFFECT', 'Sound Effect', 'Sound effect or sample', 'AUDIO', FALSE, FALSE, FALSE, 4),
('RINGTONE', 'Ringtone', 'Mobile phone ringtone', 'DIGITAL', TRUE, FALSE, FALSE, 5),
('PODCAST', 'Podcast Episode', 'Podcast episode', 'SPOKEN', TRUE, FALSE, FALSE, 6),
('AUDIOBOOK', 'Audiobook', 'Audiobook recording', 'SPOKEN', TRUE, FALSE, TRUE, 7),
('STEM', 'Stem Track', 'Individual stem file', 'TECHNICAL', FALSE, FALSE, FALSE, 8),
('LOOP', 'Loop', 'Musical loop or sample', 'TECHNICAL', FALSE, FALSE, FALSE, 9),
('MIDI', 'MIDI File', 'MIDI composition file', 'TECHNICAL', FALSE, TRUE, FALSE, 10);

-- Insert title_type data
INSERT INTO title_type (code, name, description, cisac_code, is_primary, language_specific, territory_specific, display_order) VALUES
('MAIN', 'Main Title', 'Primary title of work', 'MT', TRUE, FALSE, FALSE, 1),
('ORIGINAL', 'Original Title', 'Original language title', 'OT', FALSE, TRUE, FALSE, 2),
('ALTERNATIVE', 'Alternative Title', 'Alternative or working title', 'AT', FALSE, FALSE, FALSE, 3),
('TRANSLATION', 'Translated Title', 'Title in another language', 'TT', FALSE, TRUE, FALSE, 4),
('SUBTITLE', 'Subtitle', 'Subtitle or tagline', 'ST', FALSE, FALSE, FALSE, 5),
('ABBREVIATED', 'Abbreviated Title', 'Short form title', 'AB', FALSE, FALSE, FALSE, 6),
('ACRONYM', 'Acronym', 'Acronym form', 'AC', FALSE, FALSE, FALSE, 7),
('SERIES', 'Series Title', 'Part of series', 'SE', FALSE, FALSE, FALSE, 8),
('MOVEMENT', 'Movement Title', 'Classical movement', 'MV', FALSE, FALSE, FALSE, 9),
('NICKNAME', 'Nickname', 'Common nickname', 'NN', FALSE, FALSE, FALSE, 10);

-- Insert version_type data
INSERT INTO version_type (code, name, abbreviation, description, requires_new_isrc, royalty_rate_modifier, display_order) VALUES
('ORIGINAL', 'Original Version', 'Original', 'Original released version', FALSE, 1.0000, 1),
('RADIO_EDIT', 'Radio Edit', 'Radio', 'Shortened for radio', TRUE, 1.0000, 2),
('EXTENDED', 'Extended Mix', 'Extended', 'Extended version', TRUE, 1.0000, 3),
('REMIX', 'Remix', 'Remix', 'Remixed version', TRUE, 0.8000, 4),
('ACOUSTIC', 'Acoustic Version', 'Acoustic', 'Acoustic arrangement', TRUE, 1.0000, 5),
('LIVE', 'Live Version', 'Live', 'Live performance', TRUE, 0.9000, 6),
('INSTRUMENTAL', 'Instrumental', 'Inst', 'No vocals', TRUE, 0.7500, 7),
('ACAPPELLA', 'A Cappella', 'Acappella', 'Vocals only', TRUE, 0.7500, 8),
('DEMO', 'Demo Version', 'Demo', 'Demonstration version', TRUE, 0.5000, 9),
('CLEAN', 'Clean Version', 'Clean', 'Explicit content removed', TRUE, 1.0000, 10);

-- Insert sample_type data
INSERT INTO sample_type (code, name, description, requires_master_clearance, requires_publishing_clearance, display_order) VALUES
('DIRECT_SAMPLE', 'Direct Sample', 'Direct audio sampling', TRUE, TRUE, 1),
('INTERPOLATION', 'Interpolation', 'Re-recording of melody/lyrics', FALSE, TRUE, 2),
('REPLAY', 'Replay', 'Re-performed sample', FALSE, TRUE, 3),
('MICRO_SAMPLE', 'Micro Sample', 'Very short sample (under 3 sec)', TRUE, TRUE, 4),
('LOOP', 'Loop', 'Repeated sample loop', TRUE, TRUE, 5),
('CHOP', 'Chop', 'Chopped and rearranged sample', TRUE, TRUE, 6),
('PITCHED', 'Pitched Sample', 'Pitch-shifted sample', TRUE, TRUE, 7),
('TIME_STRETCHED', 'Time Stretched', 'Time-stretched sample', TRUE, TRUE, 8),
('VOCAL_SAMPLE', 'Vocal Sample', 'Sampled vocals only', TRUE, TRUE, 9),
('DRUM_BREAK', 'Drum Break', 'Sampled drum pattern', TRUE, FALSE, 10);

-- Insert inclusion_type data
INSERT INTO inclusion_type (code, name, description, typical_duration_percentage, royalty_calculation_method, requires_timing_data, display_order) VALUES
('FULL', 'Full Inclusion', 'Complete work included', '100%', 'FULL_SHARE', FALSE, 1),
('EXCERPT', 'Excerpt', 'Partial work included', '10-50%', 'PRO_RATA', TRUE, 2),
('MEDLEY', 'Medley', 'Part of medley', '5-20%', 'MEDLEY_SHARE', TRUE, 3),
('INTRO', 'Intro/Outro', 'Used as intro or outro', '5-15%', 'FIXED_RATE', TRUE, 4),
('BACKGROUND', 'Background', 'Background music', '100%', 'BACKGROUND_RATE', FALSE, 5),
('FEATURE', 'Featured', 'Featured performance', '100%', 'FEATURED_RATE', FALSE, 6),
('INCIDENTAL', 'Incidental', 'Brief incidental use', '1-5%', 'MINIMAL_RATE', TRUE, 7),
('MONTAGE', 'Montage', 'Part of montage', '5-10%', 'MONTAGE_RATE', TRUE, 8),
('THEME', 'Theme Usage', 'Theme music usage', '100%', 'THEME_RATE', FALSE, 9),
('CROSSFADE', 'Crossfade', 'Crossfaded transition', '10-30%', 'TRANSITION_RATE', TRUE, 10);

-- Insert arrangement_type data
INSERT INTO arrangement_type (code, name, description, requires_arranger_credit, creates_derivative_work, display_order) VALUES
('ORCHESTRAL', 'Orchestral', 'Full orchestra arrangement', TRUE, TRUE, 1),
('CHAMBER', 'Chamber', 'Chamber ensemble arrangement', TRUE, TRUE, 2),
('ACOUSTIC', 'Acoustic', 'Acoustic instruments', FALSE, FALSE, 3),
('ELECTRONIC', 'Electronic', 'Electronic arrangement', FALSE, TRUE, 4),
('JAZZ', 'Jazz Arrangement', 'Jazz style arrangement', TRUE, TRUE, 5),
('CHORAL', 'Choral', 'Choir arrangement', TRUE, TRUE, 6),
('BIGBAND', 'Big Band', 'Big band arrangement', TRUE, TRUE, 7),
('STRIPPED', 'Stripped Down', 'Minimal arrangement', FALSE, FALSE, 8),
('SYMPHONIC', 'Symphonic', 'Symphony orchestra', TRUE, TRUE, 9),
('MARCHING', 'Marching Band', 'Marching band arrangement', TRUE, TRUE, 10);

-- Insert distribution_type data
INSERT INTO distribution_type (code, name, description, delivery_method, typical_timeline_days, requires_upc, display_order) VALUES
('PHYSICAL_RETAIL', 'Physical Retail', 'Traditional retail distribution', 'PHYSICAL', 90, TRUE, 1),
('DIGITAL_STORES', 'Digital Stores', 'iTunes, Amazon, etc.', 'DIGITAL', 7, TRUE, 2),
('STREAMING', 'Streaming Services', 'Spotify, Apple Music, etc.', 'STREAM', 3, TRUE, 3),
('DIRECT_FAN', 'Direct to Fan', 'Bandcamp, website sales', 'DIRECT', 1, FALSE, 4),
('NFT_MARKETPLACE', 'NFT Marketplace', 'OpenSea, Rarible, etc.', 'BLOCKCHAIN', 1, FALSE, 5),
('SYNC_LIBRARY', 'Sync Library', 'Music library distribution', 'B2B', 14, FALSE, 6),
('RADIO_PROMO', 'Radio Promotion', 'Radio servicing', 'BROADCAST', 21, FALSE, 7),
('CLUB_PROMO', 'Club/DJ Promo', 'DJ pool distribution', 'PROMO', 7, FALSE, 8),
('LICENSING', 'Licensing Platform', 'B2B licensing', 'LICENSE', 30, TRUE, 9),
('SOCIAL_MEDIA', 'Social Media', 'TikTok, Instagram, etc.', 'SOCIAL', 1, FALSE, 10);

-- Insert master_type data
INSERT INTO master_type (code, name, description, requires_new_isrc, source_requirements, technical_process, display_order) VALUES
('ORIGINAL', 'Original Master', 'Original master recording', FALSE, 'Original multitrack', 'Original mix', 1),
('REMASTER', 'Remastered', 'Digitally remastered', TRUE, 'Original master tape', 'Digital enhancement', 2),
('REISSUE', 'Reissue', 'Re-released master', FALSE, 'Existing master', 'No changes', 3),
('RESTORED', 'Restored', 'Restored from archive', TRUE, 'Archive source', 'Restoration process', 4),
('REMIX_MASTER', 'Remixed Master', 'New mix from multitracks', TRUE, 'Original stems', 'Complete remix', 5),
('ANNIVERSARY', 'Anniversary Edition', 'Special anniversary master', TRUE, 'Enhanced master', 'Special processing', 6),
('MONO', 'Mono Master', 'Monophonic master', FALSE, 'Mono source', 'Mono mix', 7),
('STEREO', 'Stereo Master', 'Stereophonic master', FALSE, 'Stereo source', 'Stereo mix', 8),
('SURROUND', 'Surround Master', '5.1/7.1 surround', TRUE, 'Multitrack source', 'Surround mix', 9),
('SPATIAL', 'Spatial Audio Master', 'Dolby Atmos master', TRUE, 'Multitrack stems', 'Spatial mix', 10);

-- Insert compilation_type data
INSERT INTO compilation_type (code, name, description, licensing_complexity, requires_compilation_copyright, display_order) VALUES
('GREATEST_HITS', 'Greatest Hits', 'Artist\'s hit collection', 'LOW', TRUE, 1),
('BEST_OF', 'Best Of', 'Curated best tracks', 'LOW', TRUE, 2),
('VARIOUS_ARTISTS', 'Various Artists', 'Multiple artist compilation', 'HIGH', TRUE, 3),
('SOUNDTRACK', 'Soundtrack', 'Film/TV soundtrack', 'HIGH', TRUE, 4),
('TRIBUTE', 'Tribute Album', 'Tribute to artist/band', 'MEDIUM', TRUE, 5),
('GENRE_COMP', 'Genre Compilation', 'Genre-specific collection', 'MEDIUM', TRUE, 6),
('LABEL_COMP', 'Label Compilation', 'Label roster compilation', 'LOW', TRUE, 7),
('CHARITY', 'Charity Compilation', 'Benefit compilation', 'HIGH', TRUE, 8),
('REMIX_COMP', 'Remix Compilation', 'Collection of remixes', 'MEDIUM', TRUE, 9),
('RETROSPECTIVE', 'Retrospective', 'Career retrospective', 'MEDIUM', TRUE, 10);

-- Insert remaining core type tables with initial data
INSERT INTO performance_type (code, name, description, venue_type, audience_presence, recording_method, display_order) VALUES
('LIVE_VENUE', 'Live Venue', 'Traditional live performance', 'PHYSICAL', 'IN_PERSON', 'MULTITRACK', 1),
('LIVESTREAM', 'Livestream', 'Streamed live performance', 'VIRTUAL', 'ONLINE', 'DIRECT_FEED', 2),
('STUDIO_LIVE', 'Studio Live', 'Live in studio', 'STUDIO', 'LIMITED', 'STUDIO_GEAR', 3),
('BROADCAST', 'Broadcast', 'TV/Radio broadcast', 'BROADCAST', 'REMOTE', 'BROADCAST_FEED', 4),
('FESTIVAL', 'Festival', 'Festival performance', 'OUTDOOR', 'LARGE', 'MOBILE_RIG', 5),
('INTIMATE', 'Intimate/Unplugged', 'Small venue performance', 'SMALL_VENUE', 'LIMITED', 'MINIMAL', 6),
('VIRTUAL_CONCERT', 'Virtual Concert', 'VR/Metaverse concert', 'METAVERSE', 'AVATAR', 'MOTION_CAPTURE', 7),
('REHEARSAL', 'Rehearsal', 'Rehearsal recording', 'PRACTICE', 'NONE', 'BASIC', 8),
('BUSKING', 'Street Performance', 'Street/busking performance', 'PUBLIC', 'PASSERBY', 'PORTABLE', 9),
('HYBRID', 'Hybrid Event', 'In-person + virtual', 'MIXED', 'BOTH', 'MULTI_FEED', 10);

INSERT INTO stem_type (code, name, description, frequency_range_hz, ai_separation_difficulty, display_order) VALUES
('VOCALS_LEAD', 'Lead Vocals', 'Main vocal track', '80-15000', 'EASY', 1),
('VOCALS_BACKING', 'Backing Vocals', 'Harmony and backing vocals', '100-12000', 'MEDIUM', 2),
('DRUMS', 'Drums', 'Full drum kit', '20-20000', 'EASY', 3),
('BASS', 'Bass', 'Bass guitar/synth', '20-500', 'EASY', 4),
('GUITAR', 'Guitar', 'All guitar parts', '80-8000', 'MEDIUM', 5),
('KEYS', 'Keys/Piano', 'Keyboard instruments', '30-15000', 'MEDIUM', 6),
('STRINGS', 'Strings', 'String section', '40-15000', 'HARD', 7),
('BRASS', 'Brass', 'Brass instruments', '80-12000', 'HARD', 8),
('SYNTH', 'Synthesizers', 'Electronic synths', '20-20000', 'MEDIUM', 9),
('OTHER', 'Other/Misc', 'Other instruments', '20-20000', 'HARD', 10);

INSERT INTO quality_tier (code, name, description, minimum_bit_rate, minimum_sample_rate, typical_file_size_mb_per_minute, pricing_tier, display_order) VALUES
('STANDARD', 'Standard Quality', 'Standard streaming quality', 128, 44100, 1.0, 'BASIC', 1),
('HIGH', 'High Quality', 'High quality streaming', 320, 44100, 2.4, 'PREMIUM', 2),
('LOSSLESS', 'Lossless', 'CD quality lossless', 1411, 44100, 10.6, 'HIFI', 3),
('HIRES', 'Hi-Res Audio', '24-bit high resolution', 4608, 96000, 34.6, 'HIRES', 4),
('MASTER', 'Master Quality', 'Studio master quality', 9216, 192000, 69.1, 'MASTER', 5),
('SPATIAL', 'Spatial Audio', 'Immersive spatial audio', 768, 48000, 5.8, 'SPATIAL', 6),
('MOBILE', 'Mobile Optimized', 'Low bandwidth mobile', 64, 44100, 0.5, 'MOBILE', 7),
('RADIO', 'Radio Quality', 'Broadcast quality', 256, 44100, 1.9, 'BROADCAST', 8),
('PREVIEW', 'Preview Quality', 'Sample/preview quality', 96, 22050, 0.7, 'FREE', 9),
('ARCHIVAL', 'Archival Quality', 'Preservation quality', 9216, 192000, 69.1, 'ARCHIVE', 10);

INSERT INTO copyright_type (code, name, symbol, description, duration_years, renewal_possible, display_order) VALUES
('COMPOSITION', 'Musical Composition', '©', 'Copyright in musical work', 70, FALSE, 1),
('SOUND_RECORDING', 'Sound Recording', '℗', 'Copyright in recording', 70, FALSE, 2),
('ARRANGEMENT', 'Arrangement', '©', 'Copyright in arrangement', 70, FALSE, 3),
('LYRICS', 'Lyrics', '©', 'Copyright in lyrics', 70, FALSE, 4),
('TRANSLATION', 'Translation', '©', 'Copyright in translation', 70, FALSE, 5),
('COMPILATION', 'Compilation', '©', 'Copyright in compilation', 25, TRUE, 6),
('PERFORMANCE', 'Performance', '℗', 'Performance rights', 50, FALSE, 7),
('SYNCHRONIZATION', 'Synchronization', '©/℗', 'Sync rights', 70, FALSE, 8),
('MECHANICAL', 'Mechanical', '©', 'Mechanical rights', 70, FALSE, 9),
('GRAND_RIGHTS', 'Grand Rights', '©', 'Dramatic performance rights', 70, FALSE, 10);

INSERT INTO generation_method (code, name, description, ai_involvement_percentage, disclosure_required, royalty_eligibility, display_order) VALUES
('HUMAN', 'Human Created', 'Entirely human created', 0, FALSE, 'FULL', 1),
('AI_ASSISTED', 'AI Assisted', 'Human with AI tools', 25, TRUE, 'FULL', 2),
('AI_COLLABORATIVE', 'AI Collaborative', 'Human-AI collaboration', 50, TRUE, 'PARTIAL', 3),
('AI_GENERATED', 'AI Generated', 'Primarily AI generated', 75, TRUE, 'LIMITED', 4),
('FULL_AI', 'Fully AI', 'Completely AI generated', 100, TRUE, 'NONE', 5),
('AI_VOICE', 'AI Voice Clone', 'AI voice synthesis', 50, TRUE, 'SPECIAL', 6),
('AI_INSTRUMENTAL', 'AI Instrumental', 'AI generated instruments', 50, TRUE, 'PARTIAL', 7),
('AI_ARRANGEMENT', 'AI Arrangement', 'AI created arrangement', 30, TRUE, 'FULL', 8),
('AI_MASTERED', 'AI Mastered', 'AI mastering only', 10, FALSE, 'FULL', 9),
('HYBRID', 'Hybrid Creation', 'Mixed human/AI creation', 40, TRUE, 'CASE_BY_CASE', 10);

INSERT INTO usage_restriction_type (code, name, description, content_rating, parental_advisory, display_order) VALUES
('CLEAN', 'Clean', 'No explicit content', 'G', FALSE, 1),
('EXPLICIT', 'Explicit', 'Contains explicit content', 'E', TRUE, 2),
('RADIO_EDIT', 'Radio Edit', 'Edited for broadcast', 'PG', FALSE, 3),
('CENSORED', 'Censored', 'Explicit content removed', 'PG-13', FALSE, 4),
('INSTRUMENTAL', 'Instrumental Only', 'No lyrical content', 'G', FALSE, 5),
('EDUCATIONAL', 'Educational Use', 'Approved for education', 'G', FALSE, 6),
('RESTRICTED', 'Age Restricted', 'Age restrictions apply', 'R', TRUE, 7),
('FAMILY', 'Family Friendly', 'Suitable for all ages', 'G', FALSE, 8),
('MATURE', 'Mature Themes', 'Adult themes present', 'PG-13', FALSE, 9),
('BROADCAST_SAFE', 'Broadcast Safe', 'Cleared for broadcast', 'PG', FALSE, 10);

INSERT INTO sync_type (code, name, description, typical_usage, license_complexity, typical_term, display_order) VALUES
('FILM', 'Film', 'Motion picture sync', 'Feature films', 'HIGH', 'PERPETUAL', 1),
('TV_SERIES', 'TV Series', 'Television series', 'TV episodes', 'MEDIUM', 'TERM', 2),
('COMMERCIAL', 'Commercial', 'Advertising use', 'TV/Online ads', 'MEDIUM', '1-2_YEARS', 3),
('VIDEO_GAME', 'Video Game', 'Gaming sync', 'In-game music', 'HIGH', 'PERPETUAL', 4),
('TRAILER', 'Trailer', 'Movie/game trailer', 'Promotional', 'HIGH', 'LIMITED', 5),
('WEB_SERIES', 'Web Series', 'Online series', 'Streaming shows', 'LOW', 'TERM', 6),
('CORPORATE', 'Corporate', 'Corporate video', 'Internal use', 'LOW', '1_YEAR', 7),
('SOCIAL_MEDIA', 'Social Media', 'Social platform use', 'Posts/Stories', 'LOW', 'VARIOUS', 8),
('PODCAST', 'Podcast', 'Podcast usage', 'Intro/outro/bed', 'LOW', 'PERPETUAL', 9),
('VR_AR', 'VR/AR Experience', 'Virtual/Augmented reality', 'Immersive media', 'HIGH', 'PERPETUAL', 10);

-- =====================================================
-- VIEWS FOR COMMON TYPE GROUPINGS
-- =====================================================

-- View: Active work types with categories
CREATE VIEW v_active_work_types AS
SELECT 
    wt.id,
    wt.code,
    wt.name,
    wt.description,
    wt.cisac_code,
    wt.category,
    wt.rights_implications,
    wt.royalty_impact,
    wc.name as category_name,
    wc.cisac_category
FROM work_type wt
LEFT JOIN work_category wc ON wt.category = wc.code
WHERE wt.is_active = TRUE
ORDER BY wt.display_order;

-- View: Recording format quality tiers
CREATE VIEW v_recording_formats_by_quality AS
SELECT 
    rf.id,
    rf.code,
    rf.name,
    rf.file_extension,
    rf.bit_rate_max,
    rf.sample_rate,
    rf.is_lossless,
    rf.is_spatial,
    qt.name as quality_tier_name,
    qt.pricing_tier
FROM recording_format rf
LEFT JOIN quality_tier qt ON rf.quality_tier = qt.code
WHERE rf.is_active = TRUE
ORDER BY qt.display_order, rf.display_order;

-- View: Content types requiring clearance
CREATE VIEW v_clearance_required_types AS
SELECT 
    'RELATIONSHIP' as type_category,
    code,
    name,
    'Requires clearance' as clearance_type,
    chain_of_title_impact
FROM work_recording_relationship_type
WHERE requires_clearance = TRUE
UNION ALL
SELECT 
    'SAMPLE' as type_category,
    code,
    name,
    CASE 
        WHEN requires_master_clearance AND requires_publishing_clearance THEN 'Master & Publishing'
        WHEN requires_master_clearance THEN 'Master Only'
        WHEN requires_publishing_clearance THEN 'Publishing Only'
    END as clearance_type,
    typical_clearance_process as chain_of_title_impact
FROM sample_type
WHERE requires_master_clearance = TRUE OR requires_publishing_clearance = TRUE;

-- =====================================================
-- FUNCTIONS FOR TYPE OPERATIONS
-- =====================================================

-- Function: Get compatible recording formats for a quality tier
DELIMITER //
CREATE FUNCTION fn_get_compatible_formats(p_quality_tier VARCHAR(20))
RETURNS JSON
DETERMINISTIC
READS SQL DATA
BEGIN
    DECLARE v_formats JSON;
    
    SELECT JSON_ARRAYAGG(
        JSON_OBJECT(
            'code', code,
            'name', name,
            'extension', file_extension,
            'is_lossless', is_lossless,
            'is_spatial', is_spatial
        )
    ) INTO v_formats
    FROM recording_format
    WHERE quality_tier = p_quality_tier
    AND is_active = TRUE;
    
    RETURN v_formats;
END//
DELIMITER ;

-- Function: Check if work type requires special licensing
DELIMITER //
CREATE FUNCTION fn_requires_special_licensing(p_work_type_code VARCHAR(10))
RETURNS BOOLEAN
DETERMINISTIC
READS SQL DATA
BEGIN
    DECLARE v_requires_licensing BOOLEAN DEFAULT FALSE;
    
    SELECT CASE 
        WHEN category IN ('COMMERCIAL', 'BROADCAST', 'AUDIOVISUAL') THEN TRUE
        WHEN rights_implications LIKE '%clearance%' THEN TRUE
        ELSE FALSE
    END INTO v_requires_licensing
    FROM work_type
    WHERE code = p_work_type_code;
    
    RETURN v_requires_licensing;
END//
DELIMITER ;

-- Function: Calculate royalty rate modifier for version type
DELIMITER //
CREATE FUNCTION fn_get_version_royalty_modifier(p_version_type_code VARCHAR(20))
RETURNS DECIMAL(5,4)
DETERMINISTIC
READS SQL DATA
BEGIN
    DECLARE v_modifier DECIMAL(5,4) DEFAULT 1.0000;
    
    SELECT royalty_rate_modifier INTO v_modifier
    FROM version_type
    WHERE code = p_version_type_code
    AND is_active = TRUE;
    
    RETURN v_modifier;
END//
DELIMITER ;

-- =====================================================
-- INDEXES FOR PERFORMANCE
-- =====================================================

-- Additional performance indexes
CREATE INDEX idx_work_type_category_active ON work_type(category, is_active);
CREATE INDEX idx_recording_format_quality_active ON recording_format(quality_tier, is_active);
CREATE INDEX idx_sample_type_clearance ON sample_type(requires_master_clearance, requires_publishing_clearance);
CREATE INDEX idx_version_type_modifier ON version_type(royalty_rate_modifier);
CREATE INDEX idx_generation_method_ai ON generation_method(ai_involvement_percentage);

-- =====================================================
-- SECTION 7: ROLES & RELATIONSHIPS
-- =====================================================

-- Person Type (Artist, Writer, Producer, Executive, etc.)
CREATE TABLE IF NOT EXISTS person_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL COMMENT 'Multi-language support',
    description TEXT,
    category VARCHAR(50) COMMENT 'Creative, Business, Technical, Legal',
    is_creative BOOLEAN DEFAULT TRUE,
    is_rights_holder BOOLEAN DEFAULT TRUE,
    requires_ipi BOOLEAN DEFAULT FALSE,
    requires_isni BOOLEAN DEFAULT FALSE,
    metadata JSON DEFAULT NULL COMMENT 'Flexible additional fields',
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_person_type_code (code),
    KEY idx_person_type_active (is_active),
    KEY idx_person_type_category (category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Alias Type (Stage Name, Pen Name, Legal Name, etc.)
CREATE TABLE IF NOT EXISTS alias_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    is_legal BOOLEAN DEFAULT FALSE,
    is_primary BOOLEAN DEFAULT FALSE,
    requires_verification BOOLEAN DEFAULT FALSE,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_alias_type_code (code),
    KEY idx_alias_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Writer Role (Composer, Lyricist, Arranger, etc.)
CREATE TABLE IF NOT EXISTS writer_role (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    cisac_code VARCHAR(10) DEFAULT NULL COMMENT 'CISAC CWR role code',
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    category VARCHAR(50) COMMENT 'Musical, Lyrical, Arrangement, Translation',
    default_split_percentage DECIMAL(5,2) DEFAULT NULL,
    is_primary_writer BOOLEAN DEFAULT FALSE,
    requires_pro_affiliation BOOLEAN DEFAULT TRUE,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_writer_role_code (code),
    KEY idx_writer_role_cisac (cisac_code),
    KEY idx_writer_role_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Writer Type (Primary, Co-writer, Ghost, etc.)
CREATE TABLE IF NOT EXISTS writer_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    hierarchy_level INT DEFAULT 1 COMMENT 'For role hierarchies',
    requires_credit BOOLEAN DEFAULT TRUE,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_writer_type_code (code),
    KEY idx_writer_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Publisher Role (Admin, Sub-pub, Co-pub, etc.)
CREATE TABLE IF NOT EXISTS publisher_role (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    cisac_code VARCHAR(10) DEFAULT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    rights_type VARCHAR(50) COMMENT 'Admin, Collection, Sub-publishing',
    territory_scope VARCHAR(50) COMMENT 'Global, Regional, National',
    default_admin_fee DECIMAL(5,2) DEFAULT NULL,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_publisher_role_code (code),
    KEY idx_publisher_role_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Publisher Type (Major, Independent, Admin, etc.)
CREATE TABLE IF NOT EXISTS publisher_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    size_category VARCHAR(50) COMMENT 'Major, Independent, Boutique, Admin',
    requires_cae BOOLEAN DEFAULT TRUE,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_publisher_type_code (code),
    KEY idx_publisher_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Artist Type (Solo, Group, Orchestra, etc.)
CREATE TABLE IF NOT EXISTS artist_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    member_count VARCHAR(20) COMMENT 'Solo, Duo, Group, Orchestra',
    formation_type VARCHAR(50) COMMENT 'Band, Collective, Project, Virtual',
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_artist_type_code (code),
    KEY idx_artist_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Artist Role (Lead, Featured, Background, etc.)
CREATE TABLE IF NOT EXISTS artist_role (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    ddex_code VARCHAR(10) DEFAULT NULL COMMENT 'DDEX standard role code',
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    performance_type VARCHAR(50) COMMENT 'Lead, Featured, Background, Guest',
    royalty_tier INT DEFAULT 1,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_artist_role_code (code),
    KEY idx_artist_role_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Recording Role (Main Artist, Featured, Remixer, etc.)
CREATE TABLE IF NOT EXISTS recording_role (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    credit_level VARCHAR(50) COMMENT 'Primary, Secondary, Additional',
    affects_isrc BOOLEAN DEFAULT FALSE,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_recording_role_code (code),
    KEY idx_recording_role_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Contributor Role (comprehensive - all creative contributions)
CREATE TABLE IF NOT EXISTS contributor_role (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(30) NOT NULL,
    cisac_code VARCHAR(10) DEFAULT NULL,
    ddex_code VARCHAR(10) DEFAULT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    category VARCHAR(50) COMMENT 'Writing, Performance, Production, Technical, Visual',
    subcategory VARCHAR(50),
    is_creative BOOLEAN DEFAULT TRUE,
    is_technical BOOLEAN DEFAULT FALSE,
    union_affiliated VARCHAR(100) DEFAULT NULL COMMENT 'AFM, SAG-AFTRA, etc.',
    default_credit_position INT DEFAULT NULL,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_contributor_role_code (code),
    KEY idx_contributor_role_category (category),
    KEY idx_contributor_role_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Credit Role (Producer, Engineer, Mixer, etc.)
CREATE TABLE IF NOT EXISTS credit_role (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    department VARCHAR(50) COMMENT 'Production, Engineering, Mixing, Mastering',
    credit_tier INT DEFAULT 1,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_credit_role_code (code),
    KEY idx_credit_role_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Producer Role (Executive, Recording, Co-producer, etc.)
CREATE TABLE IF NOT EXISTS producer_role (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    hierarchy_level INT DEFAULT 1,
    has_master_rights BOOLEAN DEFAULT FALSE,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_producer_role_code (code),
    KEY idx_producer_role_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Label Type (Major, Independent, Imprint, etc.)
CREATE TABLE IF NOT EXISTS label_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    parent_category VARCHAR(50) COMMENT 'Major, Independent, Digital-only',
    distribution_tier VARCHAR(20),
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_label_type_code (code),
    KEY idx_label_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Party Role (for agreements)
CREATE TABLE IF NOT EXISTS party_role (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    agreement_position VARCHAR(50) COMMENT 'Licensor, Licensee, Assignor, etc.',
    requires_signature BOOLEAN DEFAULT TRUE,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_party_role_code (code),
    KEY idx_party_role_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Member Role (Band member roles)
CREATE TABLE IF NOT EXISTS member_role (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    instrument_category VARCHAR(50),
    is_core_member BOOLEAN DEFAULT TRUE,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_member_role_code (code),
    KEY idx_member_role_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Collaborator Role (Session musician, Guest artist, etc.)
CREATE TABLE IF NOT EXISTS collaborator_role (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    collaboration_type VARCHAR(50) COMMENT 'Session, Guest, Featuring',
    requires_contract BOOLEAN DEFAULT FALSE,
    union_scale_applicable BOOLEAN DEFAULT FALSE,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_collaborator_role_code (code),
    KEY idx_collaborator_role_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Appearance Type (Main, Cameo, Featured, Sample, etc.)
CREATE TABLE IF NOT EXISTS appearance_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    duration_category VARCHAR(50) COMMENT 'Full, Partial, Brief, Sample',
    requires_clearance BOOLEAN DEFAULT FALSE,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_appearance_type_code (code),
    KEY idx_appearance_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Representative Type (CEO, CFO, Attorney, Agent, Manager, etc.)
CREATE TABLE IF NOT EXISTS representative_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    category VARCHAR(50) COMMENT 'Executive, Legal, Financial, Creative',
    authority_level VARCHAR(50) COMMENT 'Full, Limited, Advisory',
    requires_power_of_attorney BOOLEAN DEFAULT FALSE,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_representative_type_code (code),
    KEY idx_representative_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Relationship Type (Covers, Samples, Remixes, Interpolations, etc.)
CREATE TABLE IF NOT EXISTS relationship_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(30) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    category VARCHAR(50) COMMENT 'Derivative, Reference, Inspiration, Sample',
    requires_clearance BOOLEAN DEFAULT TRUE,
    affects_copyright BOOLEAN DEFAULT TRUE,
    typical_royalty_share DECIMAL(5,2) DEFAULT NULL,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_relationship_type_code (code),
    KEY idx_relationship_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Organization Type (for companies, collectives, etc.)
CREATE TABLE IF NOT EXISTS organization_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    entity_type VARCHAR(50) COMMENT 'Corporation, LLC, Partnership, Non-profit',
    industry_category VARCHAR(50) COMMENT 'Label, Publisher, Management, Production',
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_organization_type_code (code),
    KEY idx_organization_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Rights Holder Type
CREATE TABLE IF NOT EXISTS rights_holder_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    rights_category VARCHAR(50) COMMENT 'Master, Publishing, Performance, Sync',
    ownership_type VARCHAR(50) COMMENT 'Full, Partial, Administrative',
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_rights_holder_type_code (code),
    KEY idx_rights_holder_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Blockchain Role (NFT creator, DAO member, Smart contract party, etc.)
CREATE TABLE IF NOT EXISTS blockchain_role (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(30) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    platform VARCHAR(50) COMMENT 'Ethereum, Solana, Polygon, Cross-chain',
    role_type VARCHAR(50) COMMENT 'Creator, Holder, Validator, Governor',
    requires_wallet BOOLEAN DEFAULT TRUE,
    smart_contract_compatible BOOLEAN DEFAULT TRUE,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_blockchain_role_code (code),
    KEY idx_blockchain_role_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- AI Role (AI operator, trainer, prompt engineer, etc.)
CREATE TABLE IF NOT EXISTS ai_role (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(30) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    ai_type VARCHAR(50) COMMENT 'Generative, Assistant, Training, Curation',
    requires_attribution BOOLEAN DEFAULT TRUE,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_ai_role_code (code),
    KEY idx_ai_role_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Social Media Role (Influencer, Curator, Creator, etc.)
CREATE TABLE IF NOT EXISTS social_media_role (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(30) NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_translations JSON DEFAULT NULL,
    description TEXT,
    platform_type VARCHAR(50) COMMENT 'TikTok, Instagram, YouTube, Multi-platform',
    monetization_eligible BOOLEAN DEFAULT TRUE,
    metadata JSON DEFAULT NULL,
    display_order INT DEFAULT 999,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_social_media_role_code (code),
    KEY idx_social_media_role_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- =====================================================
-- INITIAL DATA INSERTS
-- =====================================================

-- Person Type Data
INSERT INTO person_type (code, name, name_translations, category, is_creative, is_rights_holder, requires_ipi, requires_isni, display_order) VALUES
('ARTIST', 'Artist', '{"es":"Artista","fr":"Artiste","de":"Künstler","ja":"アーティスト","ko":"아티스트","zh":"艺术家","pt":"Artista"}', 'Creative', TRUE, TRUE, FALSE, TRUE, 1),
('WRITER', 'Writer', '{"es":"Escritor","fr":"Auteur","de":"Autor","ja":"作詞家","ko":"작가","zh":"作家","pt":"Escritor"}', 'Creative', TRUE, TRUE, TRUE, TRUE, 2),
('COMPOSER', 'Composer', '{"es":"Compositor","fr":"Compositeur","de":"Komponist","ja":"作曲家","ko":"작곡가","zh":"作曲家","pt":"Compositor"}', 'Creative', TRUE, TRUE, TRUE, TRUE, 3),
('PRODUCER', 'Producer', '{"es":"Productor","fr":"Producteur","de":"Produzent","ja":"プロデューサー","ko":"프로듀서","zh":"制作人","pt":"Produtor"}', 'Creative', TRUE, TRUE, FALSE, TRUE, 4),
('PUBLISHER', 'Publisher', '{"es":"Editor","fr":"Éditeur","de":"Verleger","ja":"出版社","ko":"출판사","zh":"出版商","pt":"Editora"}', 'Business', FALSE, TRUE, TRUE, TRUE, 5),
('LABEL', 'Record Label', '{"es":"Sello Discográfico","fr":"Label","de":"Plattenlabel","ja":"レコードレーベル","ko":"음반사","zh":"唱片公司","pt":"Gravadora"}', 'Business', FALSE, TRUE, FALSE, TRUE, 6),
('MANAGER', 'Manager', '{"es":"Representante","fr":"Manager","de":"Manager","ja":"マネージャー","ko":"매니저","zh":"经纪人","pt":"Empresário"}', 'Business', FALSE, FALSE, FALSE, FALSE, 7),
('ENGINEER', 'Engineer', '{"es":"Ingeniero","fr":"Ingénieur","de":"Toningenieur","ja":"エンジニア","ko":"엔지니어","zh":"工程师","pt":"Engenheiro"}', 'Technical', TRUE, FALSE, FALSE, FALSE, 8),
('EXECUTIVE', 'Executive', '{"es":"Ejecutivo","fr":"Dirigeant","de":"Führungskraft","ja":"エグゼクティブ","ko":"임원","zh":"高管","pt":"Executivo"}', 'Business', FALSE, FALSE, FALSE, FALSE, 9),
('ATTORNEY', 'Attorney', '{"es":"Abogado","fr":"Avocat","de":"Anwalt","ja":"弁護士","ko":"변호사","zh":"律师","pt":"Advogado"}', 'Legal', FALSE, FALSE, FALSE, FALSE, 10),
('DISTRIBUTOR', 'Distributor', '{"es":"Distribuidor","fr":"Distributeur","de":"Vertrieb","ja":"ディストリビューター","ko":"유통사","zh":"发行商","pt":"Distribuidor"}', 'Business', FALSE, TRUE, FALSE, TRUE, 11),
('AGENT', 'Agent', '{"es":"Agente","fr":"Agent","de":"Agent","ja":"エージェント","ko":"에이전트","zh":"代理人","pt":"Agente"}', 'Business', FALSE, FALSE, FALSE, FALSE, 12),
('PERFORMER', 'Performer', '{"es":"Intérprete","fr":"Interprète","de":"Interpret","ja":"パフォーマー","ko":"연주자","zh":"表演者","pt":"Intérprete"}', 'Creative', TRUE, TRUE, FALSE, TRUE, 13),
('MUSICIAN', 'Musician', '{"es":"Músico","fr":"Musicien","de":"Musiker","ja":"ミュージシャン","ko":"음악가","zh":"音乐家","pt":"Músico"}', 'Creative', TRUE, FALSE, FALSE, TRUE, 14),
('ARRANGER', 'Arranger', '{"es":"Arreglista","fr":"Arrangeur","de":"Arrangeur","ja":"編曲者","ko":"편곡자","zh":"编曲者","pt":"Arranjador"}', 'Creative', TRUE, TRUE, TRUE, TRUE, 15),
('DJ', 'DJ', '{"es":"DJ","fr":"DJ","de":"DJ","ja":"DJ","ko":"DJ","zh":"DJ","pt":"DJ"}', 'Creative', TRUE, TRUE, FALSE, TRUE, 16),
('REMIXER', 'Remixer', '{"es":"Remezclador","fr":"Remixeur","de":"Remixer","ja":"リミキサー","ko":"리믹서","zh":"混音师","pt":"Remixer"}', 'Creative', TRUE, TRUE, FALSE, TRUE, 17),
('VOCALIST', 'Vocalist', '{"es":"Vocalista","fr":"Vocaliste","de":"Sänger","ja":"ボーカリスト","ko":"보컬리스트","zh":"歌手","pt":"Vocalista"}', 'Creative', TRUE, TRUE, FALSE, TRUE, 18),
('LYRICIST', 'Lyricist', '{"es":"Letrista","fr":"Parolier","de":"Texter","ja":"作詞家","ko":"작사가","zh":"作词人","pt":"Letrista"}', 'Creative', TRUE, TRUE, TRUE, TRUE, 19),
('BEATMAKER', 'Beatmaker', '{"es":"Beatmaker","fr":"Beatmaker","de":"Beatmaker","ja":"ビートメイカー","ko":"비트메이커","zh":"节拍制作人","pt":"Beatmaker"}', 'Creative', TRUE, TRUE, FALSE, TRUE, 20),
('SONGWRITER', 'Songwriter', '{"es":"Compositor","fr":"Auteur-compositeur","de":"Songwriter","ja":"ソングライター","ko":"송라이터","zh":"词曲作者","pt":"Compositor"}', 'Creative', TRUE, TRUE, TRUE, TRUE, 21),
('BAND', 'Band', '{"es":"Banda","fr":"Groupe","de":"Band","ja":"バンド","ko":"밴드","zh":"乐队","pt":"Banda"}', 'Creative', TRUE, TRUE, FALSE, TRUE, 22),
('ORCHESTRA', 'Orchestra', '{"es":"Orquesta","fr":"Orchestre","de":"Orchester","ja":"オーケストラ","ko":"오케스트라","zh":"管弦乐队","pt":"Orquestra"}', 'Creative', TRUE, TRUE, FALSE, TRUE, 23),
('CHOIR', 'Choir', '{"es":"Coro","fr":"Choeur","de":"Chor","ja":"合唱団","ko":"합창단","zh":"合唱团","pt":"Coral"}', 'Creative', TRUE, TRUE, FALSE, TRUE, 24),
('CURATOR', 'Curator', '{"es":"Curador","fr":"Curateur","de":"Kurator","ja":"キュレーター","ko":"큐레이터","zh":"策展人","pt":"Curador"}', 'Business', FALSE, FALSE, FALSE, FALSE, 25),
('INFLUENCER', 'Influencer', '{"es":"Influencer","fr":"Influenceur","de":"Influencer","ja":"インフルエンサー","ko":"인플루언서","zh":"网红","pt":"Influenciador"}', 'Business', FALSE, FALSE, FALSE, FALSE, 26),
('NFT_CREATOR', 'NFT Creator', '{"es":"Creador NFT","fr":"Créateur NFT","de":"NFT-Ersteller","ja":"NFTクリエイター","ko":"NFT 창작자","zh":"NFT创作者","pt":"Criador NFT"}', 'Creative', TRUE, TRUE, FALSE, TRUE, 27),
('AI_OPERATOR', 'AI Operator', '{"es":"Operador IA","fr":"Opérateur IA","de":"KI-Operator","ja":"AIオペレーター","ko":"AI 운영자","zh":"AI操作员","pt":"Operador IA"}', 'Technical', TRUE, FALSE, FALSE, FALSE, 28),
('DAO_MEMBER', 'DAO Member', '{"es":"Miembro DAO","fr":"Membre DAO","de":"DAO-Mitglied","ja":"DAOメンバー","ko":"DAO 회원","zh":"DAO成员","pt":"Membro DAO"}', 'Business', FALSE, TRUE, FALSE, FALSE, 29),
('DECEASED', 'Deceased Person', '{"es":"Persona Fallecida","fr":"Personne Décédée","de":"Verstorbene Person","ja":"故人","ko":"고인","zh":"已故人士","pt":"Pessoa Falecida"}', 'Special', TRUE, TRUE, TRUE, TRUE, 30);

-- Alias Type Data
INSERT INTO alias_type (code, name, name_translations, is_legal, is_primary, requires_verification, display_order) VALUES
('LEGAL_NAME', 'Legal Name', '{"es":"Nombre Legal","fr":"Nom Légal","de":"Gesetzlicher Name","ja":"本名","ko":"법적 이름","zh":"法定名称","pt":"Nome Legal"}', TRUE, TRUE, TRUE, 1),
('STAGE_NAME', 'Stage Name', '{"es":"Nombre Artístico","fr":"Nom de Scène","de":"Künstlername","ja":"芸名","ko":"예명","zh":"艺名","pt":"Nome Artístico"}', FALSE, FALSE, FALSE, 2),
('PEN_NAME', 'Pen Name', '{"es":"Seudónimo","fr":"Nom de Plume","de":"Pseudonym","ja":"ペンネーム","ko":"필명","zh":"笔名","pt":"Pseudônimo"}', FALSE, FALSE, FALSE, 3),
('BIRTH_NAME', 'Birth Name', '{"es":"Nombre de Nacimiento","fr":"Nom de Naissance","de":"Geburtsname","ja":"出生名","ko":"출생명","zh":"出生名","pt":"Nome de Nascimento"}', TRUE, FALSE, TRUE, 4),
('MARRIED_NAME', 'Married Name', '{"es":"Nombre de Casado","fr":"Nom Marital","de":"Ehename","ja":"婚姻後の名前","ko":"결혼 후 이름","zh":"婚后姓名","pt":"Nome de Casado"}', TRUE, FALSE, TRUE, 5),
('NICKNAME', 'Nickname', '{"es":"Apodo","fr":"Surnom","de":"Spitzname","ja":"ニックネーム","ko":"별명","zh":"昵称","pt":"Apelido"}', FALSE, FALSE, FALSE, 6),
('MONONYM', 'Mononym', '{"es":"Monónimo","fr":"Mononyme","de":"Mononym","ja":"単名","ko":"단명","zh":"单名","pt":"Monônimo"}', FALSE, FALSE, FALSE, 7),
('DBA', 'Doing Business As', '{"es":"Nombre Comercial","fr":"Nom Commercial","de":"Geschäftsname","ja":"商号","ko":"상호명","zh":"商业名称","pt":"Nome Fantasia"}', TRUE, FALSE, TRUE, 8),
('ANONYMOUS', 'Anonymous', '{"es":"Anónimo","fr":"Anonyme","de":"Anonym","ja":"匿名","ko":"익명","zh":"匿名","pt":"Anônimo"}', FALSE, FALSE, FALSE, 9),
('PSEUDONYM', 'Pseudonym', '{"es":"Seudónimo","fr":"Pseudonyme","de":"Pseudonym","ja":"仮名","ko":"가명","zh":"化名","pt":"Pseudônimo"}', FALSE, FALSE, FALSE, 10),
('BLOCKCHAIN_ID', 'Blockchain Identity', '{"es":"Identidad Blockchain","fr":"Identité Blockchain","de":"Blockchain-Identität","ja":"ブロックチェーンID","ko":"블록체인 신원","zh":"区块链身份","pt":"Identidade Blockchain"}', FALSE, FALSE, TRUE, 11),
('SOCIAL_HANDLE', 'Social Media Handle', '{"es":"Usuario Redes Sociales","fr":"Identifiant Social","de":"Social Media Name","ja":"SNSハンドル","ko":"소셜 미디어 핸들","zh":"社交媒体账号","pt":"Usuário Redes Sociais"}', FALSE, FALSE, FALSE, 12);

-- Writer Role Data (CISAC compliant)
INSERT INTO writer_role (code, cisac_code, name, name_translations, category, default_split_percentage, is_primary_writer, display_order) VALUES
('COMPOSER', 'C', 'Composer', '{"es":"Compositor","fr":"Compositeur","de":"Komponist","ja":"作曲家","ko":"작곡가","zh":"作曲家","pt":"Compositor"}', 'Musical', 50.00, TRUE, 1),
('LYRICIST', 'A', 'Author/Lyricist', '{"es":"Letrista","fr":"Auteur","de":"Texter","ja":"作詞家","ko":"작사가","zh":"作词人","pt":"Letrista"}', 'Lyrical', 50.00, TRUE, 2),
('COMPOSER_LYRICIST', 'CA', 'Composer/Author', '{"es":"Compositor/Letrista","fr":"Compositeur/Auteur","de":"Komponist/Texter","ja":"作詞作曲家","ko":"작사작곡가","zh":"词曲作者","pt":"Compositor/Letrista"}', 'Musical', 100.00, TRUE, 3),
('ARRANGER', 'AR', 'Arranger', '{"es":"Arreglista","fr":"Arrangeur","de":"Arrangeur","ja":"編曲者","ko":"편곡자","zh":"编曲者","pt":"Arranjador"}', 'Arrangement', 10.00, FALSE, 4),
('TRANSLATOR', 'TR', 'Translator', '{"es":"Traductor","fr":"Traducteur","de":"Übersetzer","ja":"翻訳者","ko":"번역가","zh":"译者","pt":"Tradutor"}', 'Translation', 15.00, FALSE, 5),
('ADAPTOR', 'AD', 'Adaptor', '{"es":"Adaptador","fr":"Adaptateur","de":"Bearbeiter","ja":"編曲者","ko":"편곡자","zh":"改编者","pt":"Adaptador"}', 'Arrangement', 15.00, FALSE, 6),
('SUB_LYRICIST', 'SA', 'Sub-Author', '{"es":"Sub-Letrista","fr":"Sous-Auteur","de":"Sub-Texter","ja":"副作詞家","ko":"부작사가","zh":"副作词人","pt":"Sub-Letrista"}', 'Lyrical', 25.00, FALSE, 7),
('SUB_COMPOSER', 'SC', 'Sub-Composer', '{"es":"Sub-Compositor","fr":"Sous-Compositeur","de":"Sub-Komponist","ja":"副作曲家","ko":"부작곡가","zh":"副作曲家","pt":"Sub-Compositor"}', 'Musical', 25.00, FALSE, 8),
('MUSIC_ARRANGER', 'AM', 'Music Arranger', '{"es":"Arreglista Musical","fr":"Arrangeur Musical","de":"Musikarrangeur","ja":"音楽編曲者","ko":"음악 편곡자","zh":"音乐编曲者","pt":"Arranjador Musical"}', 'Arrangement', 10.00, FALSE, 9),
('TEXT_ARRANGER', 'AT', 'Text Arranger', '{"es":"Arreglista de Texto","fr":"Arrangeur de Texte","de":"Textarrangeur","ja":"歌詞編曲者","ko":"가사 편곡자","zh":"文字编曲者","pt":"Arranjador de Texto"}', 'Lyrical', 10.00, FALSE, 10);

-- Writer Type Data
INSERT INTO writer_type (code, name, name_translations, hierarchy_level, requires_credit, display_order) VALUES
('PRIMARY', 'Primary Writer', '{"es":"Escritor Principal","fr":"Auteur Principal","de":"Hauptautor","ja":"主要作家","ko":"주 작가","zh":"主要作者","pt":"Escritor Principal"}', 1, TRUE, 1),
('CO_WRITER', 'Co-Writer', '{"es":"Co-Escritor","fr":"Co-Auteur","de":"Co-Autor","ja":"共同作家","ko":"공동 작가","zh":"合作作者","pt":"Co-Escritor"}', 2, TRUE, 2),
('CONTRIBUTING', 'Contributing Writer', '{"es":"Escritor Contribuyente","fr":"Auteur Contributeur","de":"Beitragender Autor","ja":"寄稿作家","ko":"기여 작가","zh":"特约作者","pt":"Escritor Contribuinte"}', 3, TRUE, 3),
('GHOST', 'Ghost Writer', '{"es":"Escritor Fantasma","fr":"Nègre Littéraire","de":"Ghostwriter","ja":"ゴーストライター","ko":"대필 작가","zh":"代笔作者","pt":"Escritor Fantasma"}', 4, FALSE, 4),
('ADDITIONAL', 'Additional Writer', '{"es":"Escritor Adicional","fr":"Auteur Additionnel","de":"Zusätzlicher Autor","ja":"追加作家","ko":"추가 작가","zh":"附加作者","pt":"Escritor Adicional"}', 5, TRUE, 5),
('SAMPLE_WRITER', 'Sample Writer', '{"es":"Escritor de Sample","fr":"Auteur d\'Échantillon","de":"Sample-Autor","ja":"サンプル作家","ko":"샘플 작가","zh":"样本作者","pt":"Escritor de Sample"}', 6, TRUE, 6),
('INTERPOLATION', 'Interpolation Writer', '{"es":"Escritor de Interpolación","fr":"Auteur d\'Interpolation","de":"Interpolations-Autor","ja":"補間作家","ko":"보간 작가","zh":"插值作者","pt":"Escritor de Interpolação"}', 7, TRUE, 7);

-- Publisher Role Data
INSERT INTO publisher_role (code, cisac_code, name, name_translations, rights_type, territory_scope, default_admin_fee, display_order) VALUES
('ORIGINAL_PUB', 'E', 'Original Publisher', '{"es":"Editor Original","fr":"Éditeur Original","de":"Originalverleger","ja":"原出版社","ko":"원 출판사","zh":"原始出版商","pt":"Editora Original"}', 'Admin', 'Global', 0.00, 1),
('SUB_PUB', 'SE', 'Sub-Publisher', '{"es":"Sub-Editor","fr":"Sous-Éditeur","de":"Subverleger","ja":"副出版社","ko":"부 출판사","zh":"分出版商","pt":"Sub-Editora"}', 'Sub-publishing', 'Regional', 15.00, 2),
('ADMIN_PUB', 'PA', 'Administrator', '{"es":"Administrador","fr":"Administrateur","de":"Verwalter","ja":"管理者","ko":"관리자","zh":"管理员","pt":"Administrador"}', 'Admin', 'Global', 10.00, 3),
('CO_PUB', 'ES', 'Co-Publisher', '{"es":"Co-Editor","fr":"Co-Éditeur","de":"Co-Verleger","ja":"共同出版社","ko":"공동 출판사","zh":"联合出版商","pt":"Co-Editora"}', 'Admin', 'Global', 0.00, 4),
('COLLECTION_AGENT', 'AG', 'Collection Agent', '{"es":"Agente de Cobro","fr":"Agent de Collection","de":"Inkassoagent","ja":"徴収代理人","ko":"수금 대리인","zh":"收款代理","pt":"Agente de Cobrança"}', 'Collection', 'Regional', 20.00, 5),
('INCOME_PARTICIPANT', 'IP', 'Income Participant', '{"es":"Participante de Ingresos","fr":"Participant aux Revenus","de":"Einkommensteilnehmer","ja":"収入参加者","ko":"수익 참여자","zh":"收入参与者","pt":"Participante de Receita"}', 'Collection', 'Global', 0.00, 6);

-- Publisher Type Data
INSERT INTO publisher_type (code, name, name_translations, size_category, requires_cae, display_order) VALUES
('MAJOR', 'Major Publisher', '{"es":"Editorial Principal","fr":"Éditeur Majeur","de":"Großverlag","ja":"大手出版社","ko":"메이저 출판사","zh":"主要出版商","pt":"Editora Principal"}', 'Major', TRUE, 1),
('INDEPENDENT', 'Independent Publisher', '{"es":"Editorial Independiente","fr":"Éditeur Indépendant","de":"Unabhängiger Verlag","ja":"独立出版社","ko":"독립 출판사","zh":"独立出版商","pt":"Editora Independente"}', 'Independent', TRUE, 2),
('BOUTIQUE', 'Boutique Publisher', '{"es":"Editorial Boutique","fr":"Éditeur Boutique","de":"Boutique-Verlag","ja":"ブティック出版社","ko":"부티크 출판사","zh":"精品出版商","pt":"Editora Boutique"}', 'Boutique', TRUE, 3),
('ADMIN_COMPANY', 'Admin Company', '{"es":"Compañía Administrativa","fr":"Société Administrative","de":"Verwaltungsgesellschaft","ja":"管理会社","ko":"관리 회사","zh":"管理公司","pt":"Empresa Administrativa"}', 'Admin', TRUE, 4),
('SELF_PUBLISHED', 'Self-Published', '{"es":"Auto-Publicado","fr":"Auto-Édité","de":"Selbstverlag","ja":"自己出版","ko":"자가 출판","zh":"自助出版","pt":"Auto-Publicado"}', 'Independent', FALSE, 5),
('DIGITAL_ONLY', 'Digital-Only Publisher', '{"es":"Editorial Digital","fr":"Éditeur Numérique","de":"Digital-Verlag","ja":"デジタル出版社","ko":"디지털 출판사","zh":"数字出版商","pt":"Editora Digital"}', 'Digital', TRUE, 6);

-- Contributor Role Data (First 30 of comprehensive list)
INSERT INTO contributor_role (code, cisac_code, ddex_code, name, name_translations, category, subcategory, is_creative, is_technical, display_order) VALUES
('LEAD_VOCALIST', NULL, 'LeadVocalist', 'Lead Vocalist', '{"es":"Vocalista Principal","fr":"Chanteur Principal","de":"Hauptsänger","ja":"リードボーカル","ko":"리드 보컬","zh":"主唱","pt":"Vocalista Principal"}', 'Performance', 'Vocal', TRUE, FALSE, 1),
('BACKGROUND_VOCALIST', NULL, 'BackgroundVocalist', 'Background Vocalist', '{"es":"Corista","fr":"Choriste","de":"Backgroundsänger","ja":"バックコーラス","ko":"백 보컬","zh":"和声","pt":"Backing Vocal"}', 'Performance', 'Vocal', TRUE, FALSE, 2),
('GUITARIST', NULL, 'Guitarist', 'Guitarist', '{"es":"Guitarrista","fr":"Guitariste","de":"Gitarrist","ja":"ギタリスト","ko":"기타리스트","zh":"吉他手","pt":"Guitarrista"}', 'Performance', 'Instrumental', TRUE, FALSE, 3),
('BASSIST', NULL, 'BassGuitarist', 'Bassist', '{"es":"Bajista","fr":"Bassiste","de":"Bassist","ja":"ベーシスト","ko":"베이시스트","zh":"贝斯手","pt":"Baixista"}', 'Performance', 'Instrumental', TRUE, FALSE, 4),
('DRUMMER', NULL, 'Drummer', 'Drummer', '{"es":"Baterista","fr":"Batteur","de":"Schlagzeuger","ja":"ドラマー","ko":"드러머","zh":"鼓手","pt":"Baterista"}', 'Performance', 'Instrumental', TRUE, FALSE, 5),
('KEYBOARDIST', NULL, 'Keyboardist', 'Keyboardist', '{"es":"Tecladista","fr":"Claviériste","de":"Keyboarder","ja":"キーボーディスト","ko":"키보디스트","zh":"键盘手","pt":"Tecladista"}', 'Performance', 'Instrumental', TRUE, FALSE, 6),
('PIANIST', NULL, 'Pianist', 'Pianist', '{"es":"Pianista","fr":"Pianiste","de":"Pianist","ja":"ピアニスト","ko":"피아니스트","zh":"钢琴家","pt":"Pianista"}', 'Performance', 'Instrumental', TRUE, FALSE, 7),
('VIOLINIST', NULL, 'Violinist', 'Violinist', '{"es":"Violinista","fr":"Violoniste","de":"Violinist","ja":"バイオリニスト","ko":"바이올리니스트","zh":"小提琴手","pt":"Violinista"}', 'Performance', 'Instrumental', TRUE, FALSE, 8),
('SAXOPHONIST', NULL, 'Saxophonist', 'Saxophonist', '{"es":"Saxofonista","fr":"Saxophoniste","de":"Saxophonist","ja":"サックス奏者","ko":"색소폰 연주자","zh":"萨克斯手","pt":"Saxofonista"}', 'Performance', 'Instrumental', TRUE, FALSE, 9),
('TRUMPETER', NULL, 'Trumpeter', 'Trumpeter', '{"es":"Trompetista","fr":"Trompettiste","de":"Trompeter","ja":"トランペッター","ko":"트럼펫 연주자","zh":"小号手","pt":"Trompetista"}', 'Performance', 'Instrumental', TRUE, FALSE, 10),
('MUSIC_PRODUCER', 'PM', 'Producer', 'Music Producer', '{"es":"Productor Musical","fr":"Producteur Musical","de":"Musikproduzent","ja":"音楽プロデューサー","ko":"음악 프로듀서","zh":"音乐制作人","pt":"Produtor Musical"}', 'Production', 'Music', TRUE, TRUE, 11),
('EXEC_PRODUCER', NULL, 'ExecutiveProducer', 'Executive Producer', '{"es":"Productor Ejecutivo","fr":"Producteur Exécutif","de":"Executive Producer","ja":"エグゼクティブプロデューサー","ko":"총괄 프로듀서","zh":"执行制作人","pt":"Produtor Executivo"}', 'Production', 'Executive', FALSE, FALSE, 12),
('RECORDING_ENGINEER', NULL, 'RecordingEngineer', 'Recording Engineer', '{"es":"Ingeniero de Grabación","fr":"Ingénieur d\'Enregistrement","de":"Aufnahmetechniker","ja":"レコーディングエンジニア","ko":"녹음 엔지니어","zh":"录音工程师","pt":"Engenheiro de Gravação"}', 'Technical', 'Engineering', FALSE, TRUE, 13),
('MIXING_ENGINEER', NULL, 'MixingEngineer', 'Mixing Engineer', '{"es":"Ingeniero de Mezcla","fr":"Ingénieur de Mixage","de":"Mischtechniker","ja":"ミキシングエンジニア","ko":"믹싱 엔지니어","zh":"混音工程师","pt":"Engenheiro de Mixagem"}', 'Technical', 'Engineering', FALSE, TRUE, 14),
('MASTERING_ENGINEER', NULL, 'MasteringEngineer', 'Mastering Engineer', '{"es":"Ingeniero de Masterización","fr":"Ingénieur de Mastering","de":"Mastering-Ingenieur","ja":"マスタリングエンジニア","ko":"마스터링 엔지니어","zh":"母带工程师","pt":"Engenheiro de Masterização"}', 'Technical', 'Engineering', FALSE, TRUE, 15),
('SOUND_DESIGNER', NULL, 'SoundDesigner', 'Sound Designer', '{"es":"Diseñador de Sonido","fr":"Designer Sonore","de":"Sound Designer","ja":"サウンドデザイナー","ko":"사운드 디자이너","zh":"声音设计师","pt":"Designer de Som"}', 'Technical', 'Sound', TRUE, TRUE, 16),
('ORCHESTRATOR', 'OR', 'Orchestrator', 'Orchestrator', '{"es":"Orquestador","fr":"Orchestrateur","de":"Orchestrator","ja":"オーケストレーター","ko":"편곡자","zh":"管弦乐编曲者","pt":"Orquestrador"}', 'Writing', 'Arrangement', TRUE, FALSE, 17),
('CONDUCTOR', NULL, 'Conductor', 'Conductor', '{"es":"Director","fr":"Chef d\'Orchestre","de":"Dirigent","ja":"指揮者","ko":"지휘자","zh":"指挥","pt":"Maestro"}', 'Performance', 'Classical', TRUE, FALSE, 18),
('DJ_PERFORMER', NULL, 'DJ', 'DJ', '{"es":"DJ","fr":"DJ","de":"DJ","ja":"DJ","ko":"DJ","zh":"DJ","pt":"DJ"}', 'Performance', 'Electronic', TRUE, FALSE, 19),
('RAPPER', NULL, 'Rapper', 'Rapper', '{"es":"Rapero","fr":"Rappeur","de":"Rapper","ja":"ラッパー","ko":"래퍼","zh":"说唱歌手","pt":"Rapper"}', 'Performance', 'Vocal', TRUE, FALSE, 20),
('BEATBOXER', NULL, 'Beatboxer', 'Beatboxer', '{"es":"Beatboxer","fr":"Beatboxer","de":"Beatboxer","ja":"ビートボクサー","ko":"비트박서","zh":"口技表演者","pt":"Beatboxer"}', 'Performance', 'Vocal', TRUE, FALSE, 21),
('MUSIC_DIRECTOR', NULL, 'MusicDirector', 'Music Director', '{"es":"Director Musical","fr":"Directeur Musical","de":"Musikdirektor","ja":"音楽監督","ko":"음악 감독","zh":"音乐总监","pt":"Diretor Musical"}', 'Production', 'Direction', TRUE, FALSE, 22),
('A_AND_R', NULL, 'AandR', 'A&R', '{"es":"A&R","fr":"A&R","de":"A&R","ja":"A&R","ko":"A&R","zh":"艺人与曲目","pt":"A&R"}', 'Business', 'Label', FALSE, FALSE, 23),
('CHOREOGRAPHER', NULL, 'Choreographer', 'Choreographer', '{"es":"Coreógrafo","fr":"Chorégraphe","de":"Choreograf","ja":"振付師","ko":"안무가","zh":"编舞","pt":"Coreógrafo"}', 'Visual', 'Dance', TRUE, FALSE, 24),
('VIDEO_DIRECTOR', NULL, 'VideoDirector', 'Video Director', '{"es":"Director de Video","fr":"Réalisateur Vidéo","de":"Videoregisseur","ja":"ビデオディレクター","ko":"비디오 감독","zh":"视频导演","pt":"Diretor de Vídeo"}', 'Visual', 'Video', TRUE, FALSE, 25),
('PHOTOGRAPHER', NULL, 'Photographer', 'Photographer', '{"es":"Fotógrafo","fr":"Photographe","de":"Fotograf","ja":"写真家","ko":"사진작가","zh":"摄影师","pt":"Fotógrafo"}', 'Visual', 'Photography', TRUE, FALSE, 26),
('GRAPHIC_DESIGNER', NULL, 'GraphicDesigner', 'Graphic Designer', '{"es":"Diseñador Gráfico","fr":"Graphiste","de":"Grafikdesigner","ja":"グラフィックデザイナー","ko":"그래픽 디자이너","zh":"平面设计师","pt":"Designer Gráfico"}', 'Visual', 'Design', TRUE, FALSE, 27),
('LINER_NOTES', NULL, 'LinerNotes', 'Liner Notes Writer', '{"es":"Escritor de Notas","fr":"Rédacteur de Notes","de":"Liner Notes Autor","ja":"ライナーノーツ執筆者","ko":"라이너 노트 작가","zh":"专辑说明作者","pt":"Escritor de Notas"}', 'Writing', 'Documentation', TRUE, FALSE, 28),
('MUSIC_SUPERVISOR', NULL, 'MusicSupervisor', 'Music Supervisor', '{"es":"Supervisor Musical","fr":"Superviseur Musical","de":"Music Supervisor","ja":"音楽監修","ko":"음악 감독관","zh":"音乐总监","pt":"Supervisor Musical"}', 'Production', 'Supervision', TRUE, FALSE, 29),
('SYNC_SPECIALIST', NULL, NULL, 'Sync Specialist', '{"es":"Especialista en Sincronización","fr":"Spécialiste Synchro","de":"Sync-Spezialist","ja":"シンクスペシャリスト","ko":"싱크 전문가","zh":"同步专家","pt":"Especialista em Sincronização"}', 'Business', 'Licensing', FALSE, FALSE, 30);

-- Blockchain Role Data
INSERT INTO blockchain_role (code, name, name_translations, platform, role_type, requires_wallet, smart_contract_compatible, display_order) VALUES
('NFT_CREATOR', 'NFT Creator', '{"es":"Creador NFT","fr":"Créateur NFT","de":"NFT-Ersteller","ja":"NFTクリエイター","ko":"NFT 창작자","zh":"NFT创作者","pt":"Criador NFT"}', 'Cross-chain', 'Creator', TRUE, TRUE, 1),
('NFT_HOLDER', 'NFT Holder', '{"es":"Titular NFT","fr":"Détenteur NFT","de":"NFT-Inhaber","ja":"NFT保有者","ko":"NFT 보유자","zh":"NFT持有者","pt":"Detentor NFT"}', 'Cross-chain', 'Holder', TRUE, TRUE, 2),
('DAO_MEMBER', 'DAO Member', '{"es":"Miembro DAO","fr":"Membre DAO","de":"DAO-Mitglied","ja":"DAOメンバー","ko":"DAO 회원","zh":"DAO成员","pt":"Membro DAO"}', 'Cross-chain', 'Governor', TRUE, TRUE, 3),
('DAO_PROPOSER', 'DAO Proposer', '{"es":"Proponente DAO","fr":"Proposant DAO","de":"DAO-Antragsteller","ja":"DAO提案者","ko":"DAO 제안자","zh":"DAO提案者","pt":"Proponente DAO"}', 'Cross-chain', 'Governor', TRUE, TRUE, 4),
('SMART_CONTRACT_PARTY', 'Smart Contract Party', '{"es":"Parte Contrato Inteligente","fr":"Partie Contrat Intelligent","de":"Smart Contract Partei","ja":"スマートコントラクト当事者","ko":"스마트 계약 당사자","zh":"智能合约方","pt":"Parte Contrato Inteligente"}', 'Ethereum', 'Creator', TRUE, TRUE, 5),
('METAVERSE_PERFORMER', 'Metaverse Performer', '{"es":"Artista Metaverso","fr":"Artiste Métavers","de":"Metaverse-Künstler","ja":"メタバースパフォーマー","ko":"메타버스 공연자","zh":"元宇宙表演者","pt":"Artista Metaverso"}', 'Cross-chain', 'Creator', TRUE, FALSE, 6),
('DEFI_LIQUIDITY_PROVIDER', 'DeFi Liquidity Provider', '{"es":"Proveedor Liquidez DeFi","fr":"Fournisseur Liquidité DeFi","de":"DeFi-Liquiditätsanbieter","ja":"DeFi流動性プロバイダー","ko":"DeFi 유동성 공급자","zh":"DeFi流动性提供者","pt":"Provedor Liquidez DeFi"}', 'Cross-chain', 'Holder', TRUE, TRUE, 7),
('WEB3_CURATOR', 'Web3 Curator', '{"es":"Curador Web3","fr":"Curateur Web3","de":"Web3-Kurator","ja":"Web3キュレーター","ko":"웹3 큐레이터","zh":"Web3策展人","pt":"Curador Web3"}', 'Cross-chain', 'Validator', TRUE, TRUE, 8),
('BLOCKCHAIN_ORACLE', 'Blockchain Oracle', '{"es":"Oráculo Blockchain","fr":"Oracle Blockchain","de":"Blockchain-Orakel","ja":"ブロックチェーンオラクル","ko":"블록체인 오라클","zh":"区块链预言机","pt":"Oráculo Blockchain"}', 'Cross-chain', 'Validator', TRUE, TRUE, 9),
('TOKEN_STAKER', 'Token Staker', '{"es":"Staker de Tokens","fr":"Staker de Jetons","de":"Token-Staker","ja":"トークンステーカー","ko":"토큰 스테이커","zh":"代币质押者","pt":"Staker de Tokens"}', 'Cross-chain', 'Holder', TRUE, TRUE, 10);

-- AI Role Data
INSERT INTO ai_role (code, name, name_translations, ai_type, requires_attribution, display_order) VALUES
('AI_OPERATOR', 'AI Operator', '{"es":"Operador IA","fr":"Opérateur IA","de":"KI-Operator","ja":"AIオペレーター","ko":"AI 운영자","zh":"AI操作员","pt":"Operador IA"}', 'Generative', TRUE, 1),
('AI_TRAINER', 'AI Trainer', '{"es":"Entrenador IA","fr":"Formateur IA","de":"KI-Trainer","ja":"AIトレーナー","ko":"AI 트레이너","zh":"AI训练师","pt":"Treinador IA"}', 'Training', TRUE, 2),
('PROMPT_ENGINEER', 'Prompt Engineer', '{"es":"Ingeniero de Prompts","fr":"Ingénieur de Prompts","de":"Prompt-Ingenieur","ja":"プロンプトエンジニア","ko":"프롬프트 엔지니어","zh":"提示工程师","pt":"Engenheiro de Prompts"}', 'Generative', TRUE, 3),
('AI_MUSIC_GENERATOR', 'AI Music Generator', '{"es":"Generador Musical IA","fr":"Générateur Musical IA","de":"KI-Musikgenerator","ja":"AI音楽ジェネレーター","ko":"AI 음악 생성기","zh":"AI音乐生成器","pt":"Gerador Musical IA"}', 'Generative', TRUE, 4),
('AI_LYRIC_ASSISTANT', 'AI Lyric Assistant', '{"es":"Asistente de Letras IA","fr":"Assistant Paroles IA","de":"KI-Text-Assistent","ja":"AI歌詞アシスタント","ko":"AI 가사 어시스턴트","zh":"AI歌词助手","pt":"Assistente de Letras IA"}', 'Assistant', TRUE, 5),
('AI_MIXING_ASSISTANT', 'AI Mixing Assistant', '{"es":"Asistente de Mezcla IA","fr":"Assistant Mixage IA","de":"KI-Mixing-Assistent","ja":"AIミキシングアシスタント","ko":"AI 믹싱 어시스턴트","zh":"AI混音助手","pt":"Assistente de Mixagem IA"}', 'Assistant', TRUE, 6),
('AI_CURATOR', 'AI Curator', '{"es":"Curador IA","fr":"Curateur IA","de":"KI-Kurator","ja":"AIキュレーター","ko":"AI 큐레이터","zh":"AI策展人","pt":"Curador IA"}', 'Curation', FALSE, 7),
('AI_VOICE_MODEL', 'AI Voice Model', '{"es":"Modelo de Voz IA","fr":"Modèle Vocal IA","de":"KI-Stimmmodell","ja":"AI音声モデル","ko":"AI 음성 모델","zh":"AI语音模型","pt":"Modelo de Voz IA"}', 'Generative', TRUE, 8),
('AI_COMPOSER', 'AI Composer', '{"es":"Compositor IA","fr":"Compositeur IA","de":"KI-Komponist","ja":"AI作曲家","ko":"AI 작곡가","zh":"AI作曲家","pt":"Compositor IA"}', 'Generative', TRUE, 9),
('ML_ENGINEER', 'Machine Learning Engineer', '{"es":"Ingeniero ML","fr":"Ingénieur ML","de":"ML-Ingenieur","ja":"機械学習エンジニア","ko":"머신러닝 엔지니어","zh":"机器学习工程师","pt":"Engenheiro ML"}', 'Training', TRUE, 10);

-- Relationship Type Data
INSERT INTO relationship_type (code, name, name_translations, category, requires_clearance, affects_copyright, typical_royalty_share, display_order) VALUES
('COVER', 'Cover Version', '{"es":"Versión Cover","fr":"Reprise","de":"Coverversion","ja":"カバー","ko":"커버","zh":"翻唱","pt":"Versão Cover"}', 'Derivative', FALSE, FALSE, 0.00, 1),
('SAMPLE', 'Sample', '{"es":"Sample","fr":"Échantillon","de":"Sample","ja":"サンプル","ko":"샘플","zh":"采样","pt":"Sample"}', 'Sample', TRUE, TRUE, 15.00, 2),
('INTERPOLATION', 'Interpolation', '{"es":"Interpolación","fr":"Interpolation","de":"Interpolation","ja":"インターポレーション","ko":"인터폴레이션","zh":"插值","pt":"Interpolação"}', 'Derivative', TRUE, TRUE, 25.00, 3),
('REMIX', 'Remix', '{"es":"Remix","fr":"Remix","de":"Remix","ja":"リミックス","ko":"리믹스","zh":"混音","pt":"Remix"}', 'Derivative', TRUE, FALSE, 10.00, 4),
('MASHUP', 'Mashup', '{"es":"Mashup","fr":"Mashup","de":"Mashup","ja":"マッシュアップ","ko":"매시업","zh":"混搭","pt":"Mashup"}', 'Derivative', TRUE, TRUE, 20.00, 5),
('MEDLEY', 'Medley', '{"es":"Popurrí","fr":"Pot-pourri","de":"Medley","ja":"メドレー","ko":"메들리","zh":"串烧","pt":"Medley"}', 'Reference', FALSE, FALSE, 0.00, 6),
('ARRANGEMENT', 'Arrangement', '{"es":"Arreglo","fr":"Arrangement","de":"Arrangement","ja":"アレンジ","ko":"편곡","zh":"编曲","pt":"Arranjo"}', 'Derivative', FALSE, TRUE, 10.00, 7),
('TRANSLATION', 'Translation', '{"es":"Traducción","fr":"Traduction","de":"Übersetzung","ja":"翻訳","ko":"번역","zh":"翻译","pt":"Tradução"}', 'Derivative', FALSE, TRUE, 15.00, 8),
('PARODY', 'Parody', '{"es":"Parodia","fr":"Parodie","de":"Parodie","ja":"パロディ","ko":"패러디","zh":"模仿","pt":"Paródia"}', 'Derivative', TRUE, TRUE, 0.00, 9),
('TRIBUTE', 'Tribute', '{"es":"Tributo","fr":"Hommage","de":"Tribut","ja":"トリビュート","ko":"트리뷰트","zh":"致敬","pt":"Tributo"}', 'Reference', FALSE, FALSE, 0.00, 10),
('INSPIRATION', 'Inspiration', '{"es":"Inspiración","fr":"Inspiration","de":"Inspiration","ja":"インスピレーション","ko":"영감","zh":"灵感","pt":"Inspiração"}', 'Inspiration', FALSE, FALSE, 0.00, 11),
('SEQUEL', 'Sequel', '{"es":"Secuela","fr":"Suite","de":"Fortsetzung","ja":"続編","ko":"속편","zh":"续集","pt":"Sequência"}', 'Reference', FALSE, FALSE, 0.00, 12),
('ANSWER_SONG', 'Answer Song', '{"es":"Canción Respuesta","fr":"Chanson Réponse","de":"Antwortlied","ja":"アンサーソング","ko":"응답곡","zh":"回应歌曲","pt":"Música Resposta"}', 'Reference', FALSE, FALSE, 0.00, 13),
('BOOTLEG', 'Bootleg', '{"es":"Bootleg","fr":"Bootleg","de":"Bootleg","ja":"ブートレグ","ko":"부트레그","zh":"盗版","pt":"Bootleg"}', 'Derivative', TRUE, TRUE, 0.00, 14),
('RERECORDING', 'Re-recording', '{"es":"Regrabación","fr":"Réenregistrement","de":"Neuaufnahme","ja":"再録音","ko":"재녹음","zh":"重新录制","pt":"Regravação"}', 'Derivative', FALSE, FALSE, 0.00, 15);

-- Additional tables for comprehensive coverage
-- Social Media Role Data
INSERT INTO social_media_role (code, name, name_translations, platform_type, monetization_eligible, display_order) VALUES
('TIKTOK_CREATOR', 'TikTok Creator', '{"es":"Creador TikTok","fr":"Créateur TikTok","de":"TikTok-Creator","ja":"TikTokクリエイター","ko":"틱톡 크리에이터","zh":"抖音创作者","pt":"Criador TikTok"}', 'TikTok', TRUE, 1),
('INSTAGRAM_INFLUENCER', 'Instagram Influencer', '{"es":"Influencer Instagram","fr":"Influenceur Instagram","de":"Instagram-Influencer","ja":"インスタグラムインフルエンサー","ko":"인스타그램 인플루언서","zh":"Instagram网红","pt":"Influenciador Instagram"}', 'Instagram', TRUE, 2),
('YOUTUBE_CREATOR', 'YouTube Creator', '{"es":"Creador YouTube","fr":"Créateur YouTube","de":"YouTube-Creator","ja":"YouTubeクリエイター","ko":"유튜브 크리에이터","zh":"YouTube创作者","pt":"Criador YouTube"}', 'YouTube', TRUE, 3),
('SPOTIFY_CURATOR', 'Spotify Playlist Curator', '{"es":"Curador Spotify","fr":"Curateur Spotify","de":"Spotify-Kurator","ja":"Spotifyキュレーター","ko":"스포티파이 큐레이터","zh":"Spotify策展人","pt":"Curador Spotify"}', 'Multi-platform', TRUE, 4),
('TWITCH_STREAMER', 'Twitch Streamer', '{"es":"Streamer Twitch","fr":"Streamer Twitch","de":"Twitch-Streamer","ja":"Twitchストリーマー","ko":"트위치 스트리머","zh":"Twitch主播","pt":"Streamer Twitch"}', 'Multi-platform', TRUE, 5),
('SOCIAL_MEDIA_MANAGER', 'Social Media Manager', '{"es":"Gestor Redes Sociales","fr":"Gestionnaire Réseaux Sociaux","de":"Social Media Manager","ja":"ソーシャルメディアマネージャー","ko":"소셜 미디어 매니저","zh":"社交媒体经理","pt":"Gestor Redes Sociais"}', 'Multi-platform', FALSE, 6),
('CONTENT_CREATOR', 'Content Creator', '{"es":"Creador de Contenido","fr":"Créateur de Contenu","de":"Content Creator","ja":"コンテンツクリエイター","ko":"콘텐츠 크리에이터","zh":"内容创作者","pt":"Criador de Conteúdo"}', 'Multi-platform', TRUE, 7),
('BRAND_AMBASSADOR', 'Brand Ambassador', '{"es":"Embajador de Marca","fr":"Ambassadeur de Marque","de":"Markenbotschafter","ja":"ブランドアンバサダー","ko":"브랜드 앰배서더","zh":"品牌大使","pt":"Embaixador de Marca"}', 'Multi-platform', TRUE, 8);

-- Create indexes for performance
CREATE INDEX idx_person_type_search ON person_type(name, code);
CREATE INDEX idx_contributor_role_search ON contributor_role(name, code, cisac_code, ddex_code);
CREATE INDEX idx_writer_role_cisac ON writer_role(cisac_code);
CREATE INDEX idx_publisher_role_cisac ON publisher_role(cisac_code);
CREATE INDEX idx_blockchain_role_platform ON blockchain_role(platform);
CREATE INDEX idx_ai_role_type ON ai_role(ai_type);
CREATE INDEX idx_relationship_type_category ON relationship_type(category);

-- =====================================================
-- SECTION 8: SHARE & OWNERSHIP
-- =====================================================

-- Share type lookup table
CREATE TABLE IF NOT EXISTS share_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL, -- 'writer', 'publisher', 'performer', 'producer', 'investor'
    calculation_method VARCHAR(50) DEFAULT 'percentage', -- 'percentage', 'fractional', 'token', 'points'
    precision_decimals TINYINT DEFAULT 6, -- Support down to 0.000001
    allow_fractional BOOLEAN DEFAULT TRUE,
    allow_negative BOOLEAN DEFAULT FALSE,
    sum_constraint VARCHAR(50) DEFAULT 'must_equal_100', -- 'must_equal_100', 'can_exceed_100', 'no_constraint'
    metadata JSON,
    display_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_share_type_code (code),
    KEY idx_share_type_category (category),
    KEY idx_share_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Ownership type lookup table
CREATE TABLE IF NOT EXISTS ownership_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL, -- 'legal', 'beneficial', 'economic', 'creative', 'blockchain'
    rights_bundle JSON, -- Array of default rights included
    transferable BOOLEAN DEFAULT TRUE,
    divisible BOOLEAN DEFAULT TRUE,
    time_limited BOOLEAN DEFAULT FALSE,
    requires_registration BOOLEAN DEFAULT FALSE,
    blockchain_compatible BOOLEAN DEFAULT FALSE,
    metadata JSON,
    display_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_ownership_type_code (code),
    KEY idx_ownership_type_category (category),
    KEY idx_ownership_type_blockchain (blockchain_compatible)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Rights type lookup table (comprehensive rights catalog)
CREATE TABLE IF NOT EXISTS rights_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL, -- 'master', 'publishing', 'performance', 'mechanical', 'sync', 'neighboring', 'digital', 'blockchain'
    parent_rights_type_id INT UNSIGNED,
    scope VARCHAR(50) DEFAULT 'worldwide', -- 'worldwide', 'territory_specific', 'platform_specific'
    exclusivity_options JSON, -- ['exclusive', 'non_exclusive', 'co_exclusive']
    revenue_streams JSON, -- Array of applicable revenue types
    required_clearances JSON, -- Other rights that must be cleared
    statutory_rate_applicable BOOLEAN DEFAULT FALSE,
    compulsory_license_available BOOLEAN DEFAULT FALSE,
    moral_rights_applicable BOOLEAN DEFAULT FALSE,
    termination_eligible BOOLEAN DEFAULT FALSE, -- US Copyright Act Section 203
    reversion_eligible BOOLEAN DEFAULT FALSE,
    collective_management BOOLEAN DEFAULT FALSE,
    blockchain_tokenizable BOOLEAN DEFAULT FALSE,
    ai_training_included BOOLEAN DEFAULT FALSE,
    metadata JSON,
    display_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_rights_type_code (code),
    KEY idx_rights_type_category (category),
    KEY idx_rights_type_parent (parent_rights_type_id),
    KEY idx_rights_type_blockchain (blockchain_tokenizable),
    CONSTRAINT fk_rights_type_parent FOREIGN KEY (parent_rights_type_id) 
        REFERENCES rights_type(id) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Rights holder type lookup table
CREATE TABLE IF NOT EXISTS rights_holder_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    entity_type VARCHAR(50) NOT NULL, -- 'individual', 'company', 'estate', 'trust', 'collective', 'dao'
    can_own_masters BOOLEAN DEFAULT TRUE,
    can_own_publishing BOOLEAN DEFAULT TRUE,
    can_collect_royalties BOOLEAN DEFAULT TRUE,
    requires_tax_info BOOLEAN DEFAULT TRUE,
    requires_banking_info BOOLEAN DEFAULT TRUE,
    kyc_level VARCHAR(50) DEFAULT 'standard', -- 'none', 'basic', 'standard', 'enhanced'
    blockchain_wallet_compatible BOOLEAN DEFAULT FALSE,
    metadata JSON,
    display_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_rights_holder_type_code (code),
    KEY idx_rights_holder_type_entity (entity_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- License type lookup table
CREATE TABLE IF NOT EXISTS license_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL, -- 'sync', 'mechanical', 'master', 'print', 'grand', 'dramatic', 'merchandising'
    grant_type VARCHAR(50) DEFAULT 'permission', -- 'permission', 'assignment', 'work_for_hire', 'administration'
    exclusivity VARCHAR(50) DEFAULT 'non_exclusive', -- 'exclusive', 'non_exclusive', 'co_exclusive', 'most_favored_nation'
    territory_scope VARCHAR(50) DEFAULT 'specified', -- 'worldwide', 'specified', 'excluding_specified'
    media_scope VARCHAR(50) DEFAULT 'all_media', -- 'all_media', 'specified_media', 'new_media_only'
    term_type VARCHAR(50) DEFAULT 'fixed', -- 'perpetual', 'fixed', 'renewable', 'life_of_copyright'
    royalty_bearing BOOLEAN DEFAULT TRUE,
    advance_typical BOOLEAN DEFAULT FALSE,
    requires_approval BOOLEAN DEFAULT TRUE,
    sublicensable BOOLEAN DEFAULT FALSE,
    transferable BOOLEAN DEFAULT FALSE,
    blockchain_compatible BOOLEAN DEFAULT FALSE,
    automated_clearance BOOLEAN DEFAULT FALSE,
    standard_terms_available BOOLEAN DEFAULT FALSE,
    metadata JSON,
    display_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_license_type_code (code),
    KEY idx_license_type_category (category),
    KEY idx_license_type_automated (automated_clearance)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Usage type lookup table
CREATE TABLE IF NOT EXISTS usage_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL, -- 'broadcast', 'streaming', 'download', 'physical', 'live', 'sync', 'sampling'
    media_type VARCHAR(50) NOT NULL, -- 'audio', 'video', 'interactive', 'immersive', 'metaverse'
    commercial_nature VARCHAR(50) DEFAULT 'commercial', -- 'commercial', 'promotional', 'educational', 'non_profit'
    user_generated BOOLEAN DEFAULT FALSE,
    requires_reporting BOOLEAN DEFAULT TRUE,
    statutory_rate_applicable BOOLEAN DEFAULT FALSE,
    pro_licensable BOOLEAN DEFAULT FALSE, -- Can PROs license this usage
    direct_license_required BOOLEAN DEFAULT FALSE,
    blockchain_trackable BOOLEAN DEFAULT FALSE,
    micro_licensing_enabled BOOLEAN DEFAULT FALSE,
    usage_detection_available BOOLEAN DEFAULT FALSE, -- Can be detected by monitoring services
    metadata JSON,
    display_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_usage_type_code (code),
    KEY idx_usage_type_category (category),
    KEY idx_usage_type_media (media_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Exploitation type lookup table
CREATE TABLE IF NOT EXISTS exploitation_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL, -- 'primary', 'secondary', 'ancillary', 'derivative', 'new_media'
    revenue_model VARCHAR(50) DEFAULT 'royalty', -- 'royalty', 'buyout', 'revenue_share', 'hybrid'
    typical_deal_structure JSON, -- Standard terms for this exploitation
    requires_master_rights BOOLEAN DEFAULT FALSE,
    requires_publishing_rights BOOLEAN DEFAULT FALSE,
    requires_sync_rights BOOLEAN DEFAULT FALSE,
    collective_licensing BOOLEAN DEFAULT FALSE,
    direct_licensing BOOLEAN DEFAULT FALSE,
    blockchain_enabled BOOLEAN DEFAULT FALSE,
    nft_compatible BOOLEAN DEFAULT FALSE,
    metadata JSON,
    display_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_exploitation_type_code (code),
    KEY idx_exploitation_type_category (category),
    KEY idx_exploitation_nft (nft_compatible)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Control type lookup table
CREATE TABLE IF NOT EXISTS control_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    permission_level VARCHAR(50) NOT NULL, -- 'full_control', 'administrative', 'editorial', 'financial', 'view_only'
    can_modify_ownership BOOLEAN DEFAULT FALSE,
    can_modify_rights BOOLEAN DEFAULT FALSE,
    can_approve_licenses BOOLEAN DEFAULT FALSE,
    can_view_financials BOOLEAN DEFAULT FALSE,
    can_collect_royalties BOOLEAN DEFAULT FALSE,
    can_audit BOOLEAN DEFAULT FALSE,
    can_initiate_legal BOOLEAN DEFAULT FALSE,
    can_delegate BOOLEAN DEFAULT FALSE,
    time_limited BOOLEAN DEFAULT FALSE,
    revocable BOOLEAN DEFAULT TRUE,
    metadata JSON,
    display_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_control_type_code (code),
    KEY idx_control_type_permission (permission_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Deal type lookup table
CREATE TABLE IF NOT EXISTS deal_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL, -- 'recording', 'publishing', 'distribution', '360', 'management', 'sync'
    typical_duration_months INT,
    typical_advance_range JSON, -- {"min": 0, "max": 1000000, "currency": "USD"}
    typical_royalty_range JSON, -- {"min": 10, "max": 25, "type": "percentage"}
    rights_included JSON, -- Array of rights typically included
    territory_scope VARCHAR(50) DEFAULT 'worldwide',
    recoupable_items JSON, -- What can be recouped
    key_person_clause BOOLEAN DEFAULT FALSE,
    reversion_clause BOOLEAN DEFAULT FALSE,
    matching_right BOOLEAN DEFAULT FALSE,
    audit_right BOOLEAN DEFAULT TRUE,
    blockchain_compatible BOOLEAN DEFAULT FALSE,
    metadata JSON,
    display_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_deal_type_code (code),
    KEY idx_deal_type_category (category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Split type lookup table (for complex split scenarios)
CREATE TABLE IF NOT EXISTS split_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL, -- 'writer', 'publisher', 'master', 'neighboring', 'producer'
    calculation_order INT DEFAULT 0, -- Order in which splits are calculated
    allows_sub_splits BOOLEAN DEFAULT TRUE,
    cascade_to_derivatives BOOLEAN DEFAULT TRUE,
    minimum_share DECIMAL(10,6) DEFAULT 0.000001,
    maximum_share DECIMAL(10,6) DEFAULT 100.000000,
    rounding_method VARCHAR(50) DEFAULT 'nearest', -- 'up', 'down', 'nearest', 'banker'
    unallocated_handling VARCHAR(50) DEFAULT 'suspend', -- 'suspend', 'escrow', 'prorate', 'admin_share'
    metadata JSON,
    display_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_split_type_code (code),
    KEY idx_split_type_category (category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Administration type lookup table
CREATE TABLE IF NOT EXISTS administration_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    scope VARCHAR(50) NOT NULL, -- 'worldwide', 'territory', 'catalog', 'single_work'
    rights_administered JSON, -- Array of rights covered
    collection_territories JSON, -- Territories where collection occurs
    registration_services BOOLEAN DEFAULT TRUE,
    licensing_services BOOLEAN DEFAULT TRUE,
    royalty_collection BOOLEAN DEFAULT TRUE,
    audit_services BOOLEAN DEFAULT FALSE,
    creative_services BOOLEAN DEFAULT FALSE,
    sync_pitching BOOLEAN DEFAULT FALSE,
    dispute_resolution BOOLEAN DEFAULT TRUE,
    typical_commission DECIMAL(5,2) DEFAULT 10.00,
    metadata JSON,
    display_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_administration_type_code (code),
    KEY idx_administration_type_scope (scope)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Collection type lookup table
CREATE TABLE IF NOT EXISTS collection_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    source_category VARCHAR(50) NOT NULL, -- 'pro', 'cmo', 'direct', 'digital', 'blockchain'
    payment_frequency VARCHAR(50) DEFAULT 'quarterly', -- 'monthly', 'quarterly', 'semi_annual', 'annual'
    reporting_standard VARCHAR(50), -- 'cwr', 'ddex', 'custom'
    minimum_payment DECIMAL(10,2) DEFAULT 0.01,
    withholding_applicable BOOLEAN DEFAULT FALSE,
    exchange_rate_date VARCHAR(50) DEFAULT 'payment_date', -- 'payment_date', 'usage_date', 'fixed'
    blockchain_settlement BOOLEAN DEFAULT FALSE,
    instant_settlement BOOLEAN DEFAULT FALSE,
    metadata JSON,
    display_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY idx_collection_type_code (code),
    KEY idx_collection_type_source (source_category),
    KEY idx_collection_type_blockchain (blockchain_settlement)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert share types
INSERT INTO share_type (code, name, description, category, calculation_method, precision_decimals, display_order) VALUES
('WRITER_SHARE', 'Writer Share', 'Songwriter/composer ownership share', 'writer', 'percentage', 6, 10),
('PUBLISHER_SHARE', 'Publisher Share', 'Publishing company ownership share', 'publisher', 'percentage', 6, 20),
('PERFORMER_SHARE', 'Performer Share', 'Recording artist/performer share', 'performer', 'percentage', 6, 30),
('PRODUCER_SHARE', 'Producer Share', 'Record producer share/points', 'producer', 'points', 2, 40),
('FEATURED_ARTIST', 'Featured Artist Share', 'Featured performer share', 'performer', 'percentage', 6, 35),
('SESSION_MUSICIAN', 'Session Musician Share', 'Session player share', 'performer', 'percentage', 6, 36),
('INVESTOR_SHARE', 'Investor Share', 'Financial investor share', 'investor', 'percentage', 6, 50),
('NFT_FRACTION', 'NFT Fractional Share', 'Blockchain NFT fractional ownership', 'investor', 'fractional', 8, 60),
('DAO_SHARE', 'DAO Ownership Share', 'Decentralized autonomous organization share', 'investor', 'token', 8, 65),
('ESTATE_SHARE', 'Estate Share', 'Deceased person estate share', 'writer', 'percentage', 6, 70),
('ADMIN_SHARE', 'Administration Share', 'Rights administration share', 'publisher', 'percentage', 6, 25),
('SUB_PUBLISHER', 'Sub-Publisher Share', 'Territory-specific publisher share', 'publisher', 'percentage', 6, 26),
('TRANSLATOR_SHARE', 'Translator Share', 'Lyric translator share', 'writer', 'percentage', 6, 15),
('ARRANGER_SHARE', 'Arranger Share', 'Musical arranger share', 'writer', 'percentage', 6, 16),
('SAMPLE_OWNER', 'Sample Owner Share', 'Owner of sampled content', 'writer', 'percentage', 6, 17);

-- Insert ownership types
INSERT INTO ownership_type (code, name, description, category, transferable, divisible, blockchain_compatible, display_order) VALUES
('FULL_OWNERSHIP', 'Full Ownership', 'Complete ownership of all rights', 'legal', TRUE, TRUE, TRUE, 10),
('COPYRIGHT', 'Copyright Ownership', 'Legal copyright ownership', 'legal', TRUE, TRUE, TRUE, 20),
('BENEFICIAL', 'Beneficial Ownership', 'Economic benefit without legal title', 'beneficial', TRUE, TRUE, FALSE, 30),
('CREATIVE_CONTROL', 'Creative Control', 'Artistic decision-making rights', 'creative', FALSE, FALSE, FALSE, 40),
('MASTER_RECORDING', 'Master Recording Ownership', 'Sound recording ownership', 'legal', TRUE, TRUE, TRUE, 50),
('PUBLISHING', 'Publishing Ownership', 'Musical composition ownership', 'legal', TRUE, TRUE, TRUE, 60),
('NFT_OWNERSHIP', 'NFT Ownership', 'Non-fungible token ownership', 'blockchain', TRUE, TRUE, TRUE, 70),
('FRACTIONAL_NFT', 'Fractional NFT Ownership', 'Partial NFT ownership', 'blockchain', TRUE, TRUE, TRUE, 75),
('SMART_CONTRACT', 'Smart Contract Ownership', 'Blockchain smart contract based', 'blockchain', TRUE, TRUE, TRUE, 80),
('DAO_GOVERNANCE', 'DAO Governance Rights', 'Voting rights in DAO', 'blockchain', TRUE, TRUE, TRUE, 85),
('TRUST_BENEFICIAL', 'Trust Beneficiary', 'Beneficiary of trust ownership', 'beneficial', FALSE, FALSE, FALSE, 90),
('ESTATE_INTEREST', 'Estate Interest', 'Inherited ownership interest', 'legal', TRUE, TRUE, FALSE, 95),
('WORK_FOR_HIRE', 'Work for Hire', 'Employer owns all rights', 'legal', FALSE, FALSE, FALSE, 100),
('JOINT_WORK', 'Joint Work Ownership', 'Equal undivided interest', 'legal', TRUE, TRUE, TRUE, 105),
('ADMIN_RIGHTS', 'Administration Rights', 'Right to administer on behalf', 'economic', TRUE, FALSE, TRUE, 110);

-- Insert rights types (comprehensive catalog)
INSERT INTO rights_type (code, name, description, category, statutory_rate_applicable, blockchain_tokenizable, display_order) VALUES
-- Master rights
('MASTER_ALL', 'All Master Rights', 'Complete sound recording rights', 'master', FALSE, TRUE, 10),
('MASTER_REPRODUCTION', 'Master Reproduction Rights', 'Right to reproduce sound recording', 'master', FALSE, TRUE, 11),
('MASTER_DISTRIBUTION', 'Master Distribution Rights', 'Right to distribute sound recording', 'master', FALSE, TRUE, 12),
('MASTER_STREAMING', 'Master Streaming Rights', 'Digital streaming rights', 'master', FALSE, TRUE, 13),
('MASTER_SYNC', 'Master Synchronization Rights', 'Sync sound recording to visual', 'master', FALSE, TRUE, 14),

-- Publishing rights
('PUBLISHING_ALL', 'All Publishing Rights', 'Complete composition rights', 'publishing', FALSE, TRUE, 20),
('MECHANICAL', 'Mechanical Rights', 'Reproduction of composition', 'mechanical', TRUE, TRUE, 21),
('PERFORMANCE', 'Performance Rights', 'Public performance rights', 'performance', FALSE, TRUE, 22),
('SYNC_PUBLISHING', 'Sync Rights (Publishing)', 'Sync composition to visual', 'sync', FALSE, TRUE, 23),
('PRINT', 'Print Rights', 'Sheet music and lyrics', 'publishing', FALSE, TRUE, 24),
('GRAND_RIGHTS', 'Grand Rights', 'Dramatic performance rights', 'publishing', FALSE, FALSE, 25),

-- Digital rights
('DIGITAL_ALL', 'All Digital Rights', 'Complete digital exploitation', 'digital', FALSE, TRUE, 30),
('DOWNLOAD', 'Download Rights', 'Permanent download rights', 'digital', TRUE, TRUE, 31),
('INTERACTIVE_STREAMING', 'Interactive Streaming', 'On-demand streaming', 'digital', FALSE, TRUE, 32),
('NON_INTERACTIVE_STREAMING', 'Non-Interactive Streaming', 'Radio-style streaming', 'digital', FALSE, TRUE, 33),
('RINGTONE', 'Ringtone Rights', 'Mobile ringtone rights', 'digital', TRUE, TRUE, 34),
('NFT_RIGHTS', 'NFT Rights', 'Non-fungible token rights', 'blockchain', FALSE, TRUE, 35),
('METAVERSE', 'Metaverse Rights', 'Virtual world usage rights', 'blockchain', FALSE, TRUE, 36),
('AI_TRAINING', 'AI Training Rights', 'Machine learning usage', 'digital', FALSE, TRUE, 37),

-- Neighboring rights
('NEIGHBORING_ALL', 'All Neighboring Rights', 'Performer and producer rights', 'neighboring', FALSE, TRUE, 40),
('PERFORMER_RIGHTS', 'Performer Rights', 'Recording artist rights', 'neighboring', FALSE, TRUE, 41),
('PRODUCER_RIGHTS', 'Producer Rights', 'Record producer rights', 'neighboring', FALSE, TRUE, 42),
('RENTAL_LENDING', 'Rental and Lending Rights', 'Physical rental rights', 'neighboring', FALSE, FALSE, 43),

-- Sync subcategories
('SYNC_FILM', 'Film Sync Rights', 'Motion picture sync', 'sync', FALSE, TRUE, 50),
('SYNC_TV', 'TV Sync Rights', 'Television sync', 'sync', FALSE, TRUE, 51),
('SYNC_ADVERTISING', 'Advertising Sync Rights', 'Commercial use sync', 'sync', FALSE, TRUE, 52),
('SYNC_GAMING', 'Gaming Sync Rights', 'Video game sync', 'sync', FALSE, TRUE, 53),
('SYNC_TRAILER', 'Trailer Sync Rights', 'Movie trailer usage', 'sync', FALSE, TRUE, 54),
('SYNC_UGC', 'UGC Sync Rights', 'User-generated content', 'sync', FALSE, TRUE, 55);

-- Insert rights holder types
INSERT INTO rights_holder_type (code, name, description, entity_type, blockchain_wallet_compatible, display_order) VALUES
('INDIVIDUAL', 'Individual Person', 'Natural person rights holder', 'individual', TRUE, 10),
('CORPORATION', 'Corporation', 'Corporate entity', 'company', TRUE, 20),
('LLC', 'Limited Liability Company', 'LLC entity', 'company', TRUE, 21),
('PARTNERSHIP', 'Partnership', 'Business partnership', 'company', TRUE, 22),
('ESTATE', 'Estate', 'Deceased person estate', 'estate', FALSE, 30),
('TRUST', 'Trust', 'Legal trust entity', 'trust', FALSE, 40),
('PRO', 'Performing Rights Organization', 'Collective management', 'collective', FALSE, 50),
('CMO', 'Collective Management Org', 'Rights collection society', 'collective', FALSE, 51),
('DAO', 'Decentralized Autonomous Org', 'Blockchain DAO', 'dao', TRUE, 60),
('RECORD_LABEL', 'Record Label', 'Recording company', 'company', TRUE, 70),
('PUBLISHER', 'Music Publisher', 'Publishing company', 'company', TRUE, 71),
('ADMIN_COMPANY', 'Administration Company', 'Rights administrator', 'company', TRUE, 72),
('SYNC_AGENT', 'Sync Agent', 'Synchronization representative', 'company', TRUE, 73),
('MANAGEMENT', 'Management Company', 'Artist management', 'company', TRUE, 74),
('DISTRIBUTOR', 'Distributor', 'Distribution company', 'company', TRUE, 75);

-- Insert license types
INSERT INTO license_type (code, name, description, category, exclusivity, blockchain_compatible, display_order) VALUES
('SYNC_MASTER', 'Master Sync License', 'Synchronize master recording', 'sync', 'non_exclusive', TRUE, 10),
('SYNC_PUBLISHING', 'Publishing Sync License', 'Synchronize composition', 'sync', 'non_exclusive', TRUE, 11),
('MECHANICAL_STATUTORY', 'Statutory Mechanical', 'Compulsory mechanical license', 'mechanical', 'non_exclusive', FALSE, 20),
('MECHANICAL_DIRECT', 'Direct Mechanical', 'Negotiated mechanical license', 'mechanical', 'non_exclusive', TRUE, 21),
('MASTER_USE', 'Master Use License', 'Use of sound recording', 'master', 'non_exclusive', TRUE, 30),
('PRINT_LICENSE', 'Print License', 'Sheet music printing', 'print', 'non_exclusive', FALSE, 40),
('GRAND_RIGHTS_LICENSE', 'Grand Rights License', 'Dramatic performance', 'grand', 'exclusive', FALSE, 50),
('SAMPLE_CLEARANCE', 'Sample Clearance', 'Use of sampled content', 'master', 'non_exclusive', TRUE, 60),
('REMIX_LICENSE', 'Remix License', 'Create derivative work', 'master', 'non_exclusive', TRUE, 61),
('NFT_LICENSE', 'NFT License', 'Mint and sell NFTs', 'blockchain', 'exclusive', TRUE, 70),
('METAVERSE_LICENSE', 'Metaverse License', 'Virtual world usage', 'blockchain', 'non_exclusive', TRUE, 71),
('AI_TRAINING_LICENSE', 'AI Training License', 'Machine learning usage', 'mechanical', 'non_exclusive', TRUE, 72),
('MERCHANDISING', 'Merchandising License', 'Merchandise with music/brand', 'merchandising', 'exclusive', TRUE, 80),
('BROADCAST_LICENSE', 'Broadcast License', 'Radio/TV broadcast', 'mechanical', 'non_exclusive', FALSE, 90),
('STREAMING_LICENSE', 'Streaming License', 'Digital streaming service', 'mechanical', 'non_exclusive', TRUE, 91);

-- Insert usage types
INSERT INTO usage_type (code, name, description, category, media_type, blockchain_trackable, display_order) VALUES
('STREAM_INTERACTIVE', 'Interactive Streaming', 'On-demand streaming', 'streaming', 'audio', TRUE, 10),
('STREAM_NON_INTERACTIVE', 'Non-Interactive Streaming', 'Radio-style streaming', 'streaming', 'audio', TRUE, 11),
('DOWNLOAD_PERMANENT', 'Permanent Download', 'DPD - permanent download', 'download', 'audio', TRUE, 20),
('DOWNLOAD_TETHERED', 'Tethered Download', 'Limited offline access', 'download', 'audio', TRUE, 21),
('PHYSICAL_SALE', 'Physical Sale', 'CD/Vinyl sale', 'physical', 'audio', FALSE, 30),
('BROADCAST_RADIO', 'Radio Broadcast', 'Traditional radio', 'broadcast', 'audio', FALSE, 40),
('BROADCAST_TV', 'TV Broadcast', 'Television broadcast', 'broadcast', 'video', FALSE, 41),
('LIVE_PERFORMANCE', 'Live Performance', 'Concert/venue performance', 'live', 'audio', FALSE, 50),
('SYNC_FILM', 'Film Synchronization', 'Movie soundtrack', 'sync', 'video', TRUE, 60),
('SYNC_TV_SHOW', 'TV Show Sync', 'Television program', 'sync', 'video', TRUE, 61),
('SYNC_COMMERCIAL', 'Commercial Sync', 'Advertising use', 'sync', 'video', TRUE, 62),
('SYNC_GAME', 'Video Game Sync', 'Gaming soundtrack', 'sync', 'interactive', TRUE, 63),
('SAMPLE_USE', 'Sample Usage', 'Sampling in new work', 'sampling', 'audio', TRUE, 70),
('COVER_VERSION', 'Cover Version', 'Re-recording of song', 'sampling', 'audio', TRUE, 71),
('NFT_MINT', 'NFT Minting', 'Create music NFT', 'blockchain', 'interactive', TRUE, 80),
('METAVERSE_STREAM', 'Metaverse Streaming', 'Virtual world playback', 'streaming', 'immersive', TRUE, 81),
('AI_TRAINING_USE', 'AI Training Usage', 'Machine learning dataset', 'download', 'audio', TRUE, 82),
('SOCIAL_MEDIA', 'Social Media Usage', 'Platform UGC usage', 'streaming', 'video', TRUE, 90),
('PODCAST_USE', 'Podcast Usage', 'Podcast inclusion', 'broadcast', 'audio', TRUE, 91),
('RINGTONE', 'Ringtone', 'Mobile phone ringtone', 'download', 'audio', TRUE, 92);

-- Insert exploitation types
INSERT INTO exploitation_type (code, name, description, category, nft_compatible, display_order) VALUES
('PRIMARY_RELEASE', 'Primary Release', 'Original release exploitation', 'primary', TRUE, 10),
('RE_RELEASE', 'Re-Release', 'Reissue or remaster', 'secondary', TRUE, 20),
('COMPILATION', 'Compilation', 'Greatest hits/various artists', 'secondary', TRUE, 21),
('SYNC_PLACEMENT', 'Sync Placement', 'Media synchronization', 'secondary', TRUE, 30),
('COVER_RECORDING', 'Cover Recording', 'New version by other artist', 'derivative', TRUE, 40),
('REMIX_VERSION', 'Remix Version', 'Remixed version', 'derivative', TRUE, 41),
('SAMPLE_BASED', 'Sample-Based Work', 'New work using samples', 'derivative', TRUE, 42),
('LIVE_RECORDING', 'Live Recording', 'Concert recording release', 'ancillary', TRUE, 50),
('MERCHANDISE_TIE_IN', 'Merchandise Tie-In', 'Product merchandising', 'ancillary', FALSE, 60),
('NFT_COLLECTION', 'NFT Collection', 'Blockchain NFT release', 'new_media', TRUE, 70),
('METAVERSE_CONCERT', 'Metaverse Concert', 'Virtual world performance', 'new_media', TRUE, 71),
('AI_GENERATED', 'AI Generated Version', 'AI-created derivative', 'new_media', TRUE, 72),
('BRAND_PARTNERSHIP', 'Brand Partnership', 'Commercial brand tie-in', 'ancillary', FALSE, 80),
('EDUCATIONAL_USE', 'Educational Use', 'Academic/teaching use', 'ancillary', FALSE, 90),
('THEATRICAL_SHOW', 'Theatrical Show', 'Musical/stage production', 'derivative', FALSE, 100);

-- Insert control types
INSERT INTO control_type (code, name, description, permission_level, can_modify_ownership, can_approve_licenses, display_order) VALUES
('FULL_CONTROL', 'Full Control', 'Complete administrative control', 'full_control', TRUE, TRUE, 10),
('ADMIN_CONTROL', 'Administrative Control', 'Business administration rights', 'administrative', FALSE, TRUE, 20),
('CREATIVE_CONTROL', 'Creative Control', 'Artistic decision rights', 'editorial', FALSE, FALSE, 30),
('FINANCIAL_CONTROL', 'Financial Control', 'Financial management rights', 'financial', FALSE, FALSE, 40),
('APPROVAL_ONLY', 'Approval Rights Only', 'License approval rights', 'editorial', FALSE, TRUE, 50),
('AUDIT_RIGHTS', 'Audit Rights', 'Financial audit access', 'financial', FALSE, FALSE, 60),
('VIEW_ONLY', 'View Only', 'Read-only access', 'view_only', FALSE, FALSE, 70),
('SYNC_APPROVAL', 'Sync Approval Rights', 'Sync license approval only', 'editorial', FALSE, TRUE, 80),
('KEY_PERSON', 'Key Person Rights', 'Specific individual control', 'administrative', FALSE, TRUE, 90),
('EXECUTOR_CONTROL', 'Executor Control', 'Estate executor rights', 'full_control', TRUE, TRUE, 100);

-- Insert deal types
INSERT INTO deal_type (code, name, description, category, blockchain_compatible, display_order) VALUES
('RECORDING_EXCLUSIVE', 'Exclusive Recording Agreement', 'Traditional record deal', 'recording', FALSE, 10),
('RECORDING_LICENSE', 'Recording License Deal', 'License deal with reversion', 'recording', TRUE, 11),
('RECORDING_DISTRIBUTION', 'Distribution Only Deal', 'Distribution services only', 'distribution', TRUE, 12),
('PUBLISHING_ADMIN', 'Publishing Administration', 'Admin deal no ownership transfer', 'publishing', TRUE, 20),
('PUBLISHING_COWRITE', 'Co-Publishing Deal', 'Shared publishing ownership', 'publishing', TRUE, 21),
('PUBLISHING_BUYOUT', 'Publishing Buyout', 'Full publishing acquisition', 'publishing', FALSE, 22),
('360_DEAL', '360 Deal', 'Multiple rights deal', '360', FALSE, 30),
('MANAGEMENT_DEAL', 'Management Agreement', 'Artist management', 'management', FALSE, 40),
('SYNC_REPRESENTATION', 'Sync Representation', 'Sync licensing agent', 'sync', TRUE, 50),
('NFT_PARTNERSHIP', 'NFT Partnership Deal', 'Blockchain NFT collaboration', 'recording', TRUE, 60),
('DAO_MEMBERSHIP', 'DAO Membership Deal', 'Decentralized organization', 'recording', TRUE, 61),
('PRODUCTION_DEAL', 'Production Agreement', 'Producer agreement', 'recording', TRUE, 70),
('JOINT_VENTURE', 'Joint Venture', 'Shared business venture', 'recording', TRUE, 80),
('WORK_FOR_HIRE', 'Work for Hire Agreement', 'No ongoing royalties', 'recording', FALSE, 90),
('BRAND_SPONSORSHIP', 'Brand Sponsorship Deal', 'Commercial partnership', 'management', FALSE, 100);

-- Insert split types
INSERT INTO split_type (code, name, description, category, allows_sub_splits, display_order) VALUES
('WRITER_SPLIT', 'Writer Split', 'Songwriter/composer splits', 'writer', TRUE, 10),
('PUBLISHER_SPLIT', 'Publisher Split', 'Publishing company splits', 'publisher', TRUE, 20),
('MASTER_SPLIT', 'Master Recording Split', 'Sound recording ownership', 'master', TRUE, 30),
('PRODUCER_POINTS', 'Producer Points', 'Producer royalty points', 'producer', FALSE, 40),
('FEATURED_SPLIT', 'Featured Artist Split', 'Featured performer split', 'master', FALSE, 50),
('REMIX_SPLIT', 'Remix Split', 'Remixer royalty split', 'master', FALSE, 60),
('SAMPLE_SPLIT', 'Sample Split', 'Sampled content split', 'writer', FALSE, 70),
('NEIGHBORING_SPLIT', 'Neighboring Rights Split', 'Performer/producer split', 'neighboring', TRUE, 80),
('NFT_REVENUE_SPLIT', 'NFT Revenue Split', 'Blockchain revenue sharing', 'master', TRUE, 90),
('SYNC_FEE_SPLIT', 'Sync Fee Split', 'Synchronization fee sharing', 'publisher', TRUE, 100);

-- Insert administration types
INSERT INTO administration_type (code, name, description, scope, typical_commission, display_order) VALUES
('WORLDWIDE_ADMIN', 'Worldwide Administration', 'Global rights administration', 'worldwide', 15.00, 10),
('TERRITORY_ADMIN', 'Territory Administration', 'Specific territory admin', 'territory', 20.00, 20),
('CATALOG_ADMIN', 'Catalog Administration', 'Full catalog administration', 'catalog', 15.00, 30),
('SINGLE_WORK_ADMIN', 'Single Work Admin', 'Individual song admin', 'single_work', 10.00, 40),
('SUB_PUBLISHING', 'Sub-Publishing', 'Foreign territory admin', 'territory', 25.00, 50),
('SYNC_ADMIN', 'Sync Administration', 'Sync licensing only', 'worldwide', 25.00, 60),
('DIGITAL_ADMIN', 'Digital Administration', 'Digital platforms only', 'worldwide', 10.00, 70),
('COLLECTION_ONLY', 'Collection Only', 'Royalty collection only', 'worldwide', 10.00, 80),
('CREATIVE_ADMIN', 'Creative Administration', 'A&R and creative services', 'catalog', 20.00, 90),
('BLOCKCHAIN_ADMIN', 'Blockchain Administration', 'NFT and crypto admin', 'worldwide', 20.00, 100);

-- Insert collection types
INSERT INTO collection_type (code, name, description, source_category, payment_frequency, blockchain_settlement, display_order) VALUES
('PRO_PERFORMANCE', 'PRO Performance Royalties', 'Performing rights org collection', 'pro', 'quarterly', FALSE, 10),
('CMO_MECHANICAL', 'CMO Mechanical Royalties', 'Mechanical rights collection', 'cmo', 'quarterly', FALSE, 20),
('DIGITAL_STREAMING', 'Digital Streaming Royalties', 'DSP streaming payments', 'digital', 'monthly', TRUE, 30),
('DIGITAL_DOWNLOAD', 'Digital Download Royalties', 'Download store payments', 'digital', 'monthly', TRUE, 31),
('SYNC_LICENSE_FEE', 'Sync License Fees', 'Synchronization payments', 'direct', 'quarterly', TRUE, 40),
('PHYSICAL_SALES', 'Physical Sales Royalties', 'CD/Vinyl sales', 'direct', 'quarterly', FALSE, 50),
('NEIGHBORING_RIGHTS', 'Neighboring Rights', 'Performer/producer royalties', 'cmo', 'semi_annual', FALSE, 60),
('YOUTUBE_CMS', 'YouTube Content ID', 'YouTube monetization', 'digital', 'monthly', FALSE, 70),
('NFT_SALES', 'NFT Sales Revenue', 'Blockchain NFT sales', 'blockchain', 'instant', TRUE, 80),
('SMART_CONTRACT', 'Smart Contract Payments', 'Automated blockchain payments', 'blockchain', 'instant', TRUE, 81),
('BRAND_SPONSORSHIP', 'Brand Sponsorship Fees', 'Commercial partnerships', 'direct', 'quarterly', FALSE, 90),
('LIVE_PERFORMANCE', 'Live Performance Revenue', 'Concert and venue income', 'direct', 'monthly', FALSE, 100),
('MERCHANDISE', 'Merchandise Revenue', 'Product sales revenue', 'direct', 'monthly', FALSE, 110),
('CROWD_FUNDING', 'Crowdfunding Revenue', 'Fan funding platforms', 'digital', 'monthly', TRUE, 120),
('WEB3_STREAMING', 'Web3 Streaming Revenue', 'Decentralized streaming', 'blockchain', 'instant', TRUE, 130);

-- Create indexes for better query performance
CREATE INDEX idx_share_type_sum_constraint ON share_type(sum_constraint);
CREATE INDEX idx_ownership_type_transferable ON ownership_type(transferable);
CREATE INDEX idx_rights_type_statutory ON rights_type(statutory_rate_applicable);
CREATE INDEX idx_rights_type_compulsory ON rights_type(compulsory_license_available);
CREATE INDEX idx_license_type_grant ON license_type(grant_type);
CREATE INDEX idx_license_type_territory ON license_type(territory_scope);
CREATE INDEX idx_usage_type_commercial ON usage_type(commercial_nature);
CREATE INDEX idx_usage_type_reporting ON usage_type(requires_reporting);
CREATE INDEX idx_exploitation_type_revenue ON exploitation_type(revenue_model);
CREATE INDEX idx_deal_type_duration ON deal_type(typical_duration_months);
CREATE INDEX idx_split_type_calculation ON split_type(calculation_order);
CREATE INDEX idx_administration_type_commission ON administration_type(typical_commission);
CREATE INDEX idx_collection_type_frequency ON collection_type(payment_frequency);

-- Add composite indexes for common queries
CREATE INDEX idx_rights_category_active ON rights_type(category, is_active);
CREATE INDEX idx_license_category_excl ON license_type(category, exclusivity);
CREATE INDEX idx_usage_category_media ON usage_type(category, media_type);
CREATE INDEX idx_control_permission_active ON control_type(permission_level, is_active);

-- =====================================================
-- SECTION 9: SOCIETIES & ORGANIZATIONS  
-- =====================================================

-- Table: society_type
-- Categorizes different types of collection societies
CREATE TABLE society_type (
    society_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    society_type_code VARCHAR(20) NOT NULL,
    society_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    rights_administered JSON COMMENT 'Array of rights types this society type handles',
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 0,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (society_type_id),
    UNIQUE KEY uk_society_type_code (society_type_code),
    KEY idx_society_type_active (is_active),
    KEY idx_society_type_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: organization_type
-- Types of organizations (PRO, MRO, CMO, etc.)
CREATE TABLE organization_type (
    organization_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    organization_type_code VARCHAR(20) NOT NULL,
    organization_type_name VARCHAR(100) NOT NULL,
    abbreviation VARCHAR(10),
    description TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 0,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (organization_type_id),
    UNIQUE KEY uk_organization_type_code (organization_type_code),
    KEY idx_organization_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society
-- Main table for all performing rights and collection societies
CREATE TABLE society (
    society_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    society_code VARCHAR(20) NOT NULL COMMENT 'Internal ASTRO code',
    cisac_code VARCHAR(10) COMMENT 'CISAC member society code',
    society_name VARCHAR(200) NOT NULL,
    legal_name VARCHAR(300),
    abbreviation VARCHAR(20),
    society_type_id INT UNSIGNED NOT NULL,
    organization_type_id INT UNSIGNED NOT NULL,
    founded_date DATE,
    headquarters_country_code CHAR(2),
    headquarters_city VARCHAR(100),
    website_url VARCHAR(500),
    member_portal_url VARCHAR(500),
    api_endpoint_base VARCHAR(500),
    logo_url VARCHAR(500),
    is_cisac_member BOOLEAN NOT NULL DEFAULT FALSE,
    is_digital_only BOOLEAN NOT NULL DEFAULT FALSE,
    is_blockchain_based BOOLEAN NOT NULL DEFAULT FALSE,
    is_government_entity BOOLEAN NOT NULL DEFAULT FALSE,
    supports_direct_membership BOOLEAN NOT NULL DEFAULT TRUE,
    supports_sub_publishing BOOLEAN NOT NULL DEFAULT TRUE,
    minimum_age_requirement INT UNSIGNED,
    metadata JSON COMMENT 'Additional society-specific data',
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    deactivation_date DATE,
    deactivation_reason TEXT,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (society_id),
    UNIQUE KEY uk_society_code (society_code),
    UNIQUE KEY uk_cisac_code (cisac_code),
    KEY idx_society_name (society_name),
    KEY idx_society_type (society_type_id),
    KEY idx_organization_type (organization_type_id),
    KEY idx_society_country (headquarters_country_code),
    KEY idx_society_active (is_active),
    KEY idx_cisac_member (is_cisac_member),
    FOREIGN KEY (society_type_id) REFERENCES society_type(society_type_id),
    FOREIGN KEY (organization_type_id) REFERENCES organization_type(organization_type_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_territory
-- Territories covered by each society
CREATE TABLE society_territory (
    society_territory_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    society_id INT UNSIGNED NOT NULL,
    territory_code VARCHAR(10) NOT NULL COMMENT 'ISO country code or custom territory code',
    territory_name VARCHAR(100) NOT NULL,
    coverage_type VARCHAR(20) NOT NULL COMMENT 'full, partial, online_only, specific_rights',
    rights_covered JSON COMMENT 'Specific rights covered in this territory',
    effective_date DATE NOT NULL,
    end_date DATE,
    is_primary_territory BOOLEAN NOT NULL DEFAULT FALSE,
    notes TEXT,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (society_territory_id),
    UNIQUE KEY uk_society_territory (society_id, territory_code, effective_date),
    KEY idx_territory_code (territory_code),
    KEY idx_territory_coverage (coverage_type),
    KEY idx_territory_dates (effective_date, end_date),
    FOREIGN KEY (society_id) REFERENCES society(society_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_identifier
-- Various identifier systems used by societies
CREATE TABLE society_identifier (
    society_identifier_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    society_id INT UNSIGNED NOT NULL,
    identifier_type VARCHAR(50) NOT NULL COMMENT 'cisac_code, tax_id, company_reg, lei, etc.',
    identifier_value VARCHAR(100) NOT NULL,
    issuing_authority VARCHAR(200),
    issue_date DATE,
    expiry_date DATE,
    is_primary BOOLEAN NOT NULL DEFAULT FALSE,
    verification_status VARCHAR(20) DEFAULT 'unverified',
    verification_date DATE,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (society_identifier_id),
    UNIQUE KEY uk_society_identifier (society_id, identifier_type, identifier_value),
    KEY idx_identifier_type (identifier_type),
    KEY idx_identifier_value (identifier_value),
    FOREIGN KEY (society_id) REFERENCES society(society_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: membership_type
-- Types of membership offered by societies
CREATE TABLE membership_type (
    membership_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    membership_type_code VARCHAR(20) NOT NULL,
    membership_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    typical_requirements JSON,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 0,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (membership_type_id),
    UNIQUE KEY uk_membership_type_code (membership_type_code),
    KEY idx_membership_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: membership_class
-- Classes of membership (writer, publisher, associate, etc.)
CREATE TABLE membership_class (
    membership_class_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    membership_class_code VARCHAR(20) NOT NULL,
    membership_class_name VARCHAR(100) NOT NULL,
    entity_type VARCHAR(50) NOT NULL COMMENT 'individual, company, estate, etc.',
    description TEXT,
    typical_rights JSON,
    is_voting_member BOOLEAN NOT NULL DEFAULT FALSE,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 0,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (membership_class_id),
    UNIQUE KEY uk_membership_class_code (membership_class_code),
    KEY idx_membership_class_entity (entity_type),
    KEY idx_membership_class_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: affiliation_type
-- Types of affiliations between parties and societies
CREATE TABLE affiliation_type (
    affiliation_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    affiliation_type_code VARCHAR(20) NOT NULL,
    affiliation_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    is_exclusive BOOLEAN NOT NULL DEFAULT FALSE,
    allows_direct_licensing BOOLEAN NOT NULL DEFAULT TRUE,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 0,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (affiliation_type_id),
    UNIQUE KEY uk_affiliation_type_code (affiliation_type_code),
    KEY idx_affiliation_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_service
-- Services offered by societies
CREATE TABLE society_service (
    society_service_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    service_code VARCHAR(50) NOT NULL,
    service_name VARCHAR(200) NOT NULL,
    service_category VARCHAR(50) NOT NULL COMMENT 'collection, licensing, registration, etc.',
    description TEXT,
    typical_fee_structure JSON,
    requires_membership BOOLEAN NOT NULL DEFAULT TRUE,
    is_automated BOOLEAN NOT NULL DEFAULT FALSE,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 0,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (society_service_id),
    UNIQUE KEY uk_society_service_code (service_code),
    KEY idx_service_category (service_category),
    KEY idx_service_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_service_offering
-- Links societies to services they offer
CREATE TABLE society_service_offering (
    offering_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    society_id INT UNSIGNED NOT NULL,
    society_service_id INT UNSIGNED NOT NULL,
    is_available BOOLEAN NOT NULL DEFAULT TRUE,
    launch_date DATE,
    sunset_date DATE,
    service_url VARCHAR(500),
    api_endpoint VARCHAR(500),
    documentation_url VARCHAR(500),
    fee_structure JSON,
    service_level_agreement JSON,
    metadata JSON,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (offering_id),
    UNIQUE KEY uk_society_service (society_id, society_service_id),
    KEY idx_service_availability (is_available, launch_date, sunset_date),
    FOREIGN KEY (society_id) REFERENCES society(society_id),
    FOREIGN KEY (society_service_id) REFERENCES society_service(society_service_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_mandate
-- What rights each society administers
CREATE TABLE society_mandate (
    society_mandate_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    society_id INT UNSIGNED NOT NULL,
    right_type VARCHAR(50) NOT NULL COMMENT 'performing, mechanical, sync, etc.',
    usage_type VARCHAR(50) COMMENT 'broadcast, streaming, live, etc.',
    territory_scope VARCHAR(20) NOT NULL COMMENT 'domestic, regional, worldwide',
    is_exclusive BOOLEAN NOT NULL DEFAULT FALSE,
    effective_date DATE NOT NULL,
    end_date DATE,
    legal_basis VARCHAR(100) COMMENT 'statute, voluntary, court_order, etc.',
    notes TEXT,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (society_mandate_id),
    KEY idx_mandate_society (society_id),
    KEY idx_mandate_rights (right_type, usage_type),
    KEY idx_mandate_dates (effective_date, end_date),
    FOREIGN KEY (society_id) REFERENCES society(society_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: reciprocal_agreement_type
-- Types of agreements between societies
CREATE TABLE reciprocal_agreement_type (
    agreement_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    agreement_type_code VARCHAR(30) NOT NULL,
    agreement_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    is_bilateral BOOLEAN NOT NULL DEFAULT TRUE,
    requires_cisac_approval BOOLEAN NOT NULL DEFAULT FALSE,
    typical_duration_months INT UNSIGNED,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (agreement_type_id),
    UNIQUE KEY uk_agreement_type_code (agreement_type_code),
    KEY idx_agreement_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_reciprocal_agreement
-- Reciprocal agreements between societies
CREATE TABLE society_reciprocal_agreement (
    agreement_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    agreement_code VARCHAR(50) NOT NULL,
    society_id_1 INT UNSIGNED NOT NULL,
    society_id_2 INT UNSIGNED NOT NULL,
    agreement_type_id INT UNSIGNED NOT NULL,
    effective_date DATE NOT NULL,
    expiry_date DATE,
    auto_renewal BOOLEAN NOT NULL DEFAULT TRUE,
    renewal_notice_days INT UNSIGNED DEFAULT 90,
    rights_covered JSON,
    territories_covered JSON,
    fee_structure JSON,
    dispute_resolution VARCHAR(100),
    governing_law VARCHAR(100),
    agreement_document_url VARCHAR(500),
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    termination_date DATE,
    termination_reason TEXT,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (agreement_id),
    UNIQUE KEY uk_agreement_code (agreement_code),
    UNIQUE KEY uk_society_agreement (society_id_1, society_id_2, agreement_type_id, effective_date),
    KEY idx_agreement_dates (effective_date, expiry_date),
    KEY idx_agreement_active (is_active),
    FOREIGN KEY (society_id_1) REFERENCES society(society_id),
    FOREIGN KEY (society_id_2) REFERENCES society(society_id),
    FOREIGN KEY (agreement_type_id) REFERENCES reciprocal_agreement_type(agreement_type_id),
    CHECK (society_id_1 < society_id_2)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_fee_structure
-- Fee structures for different societies and services
CREATE TABLE society_fee_structure (
    fee_structure_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    society_id INT UNSIGNED NOT NULL,
    fee_type VARCHAR(50) NOT NULL COMMENT 'admin, collection, processing, etc.',
    fee_category VARCHAR(50) NOT NULL COMMENT 'membership, registration, distribution, etc.',
    calculation_method VARCHAR(30) NOT NULL COMMENT 'percentage, flat, tiered, hybrid',
    fee_percentage DECIMAL(5,2) COMMENT 'For percentage-based fees',
    flat_fee_amount DECIMAL(10,2),
    fee_currency CHAR(3),
    tier_structure JSON COMMENT 'For tiered fee structures',
    minimum_fee DECIMAL(10,2),
    maximum_fee DECIMAL(10,2),
    applies_to_rights JSON,
    applies_to_territories JSON,
    applies_to_membership_classes JSON,
    effective_date DATE NOT NULL,
    end_date DATE,
    notes TEXT,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (fee_structure_id),
    KEY idx_fee_society (society_id),
    KEY idx_fee_type (fee_type, fee_category),
    KEY idx_fee_dates (effective_date, end_date),
    FOREIGN KEY (society_id) REFERENCES society(society_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: collection_source_type
-- Types of collection sources
CREATE TABLE collection_source_type (
    source_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    source_type_code VARCHAR(30) NOT NULL,
    source_type_name VARCHAR(100) NOT NULL,
    source_category VARCHAR(50) NOT NULL COMMENT 'broadcast, digital, live, mechanical, etc.',
    description TEXT,
    typical_reporting_frequency VARCHAR(20),
    typical_payment_delay_days INT UNSIGNED,
    requires_cue_sheets BOOLEAN NOT NULL DEFAULT FALSE,
    requires_setlists BOOLEAN NOT NULL DEFAULT FALSE,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 0,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (source_type_id),
    UNIQUE KEY uk_source_type_code (source_type_code),
    KEY idx_source_category (source_category),
    KEY idx_source_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: distribution_rule_type
-- Types of distribution rules
CREATE TABLE distribution_rule_type (
    rule_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    rule_type_code VARCHAR(30) NOT NULL,
    rule_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    calculation_basis VARCHAR(50) COMMENT 'points, percentage, duration, plays',
    applies_to_right_type VARCHAR(50),
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (rule_type_id),
    UNIQUE KEY uk_rule_type_code (rule_type_code),
    KEY idx_rule_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_distribution_rule
-- Distribution rules for each society
CREATE TABLE society_distribution_rule (
    distribution_rule_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    society_id INT UNSIGNED NOT NULL,
    rule_type_id INT UNSIGNED NOT NULL,
    rule_name VARCHAR(200) NOT NULL,
    source_type_id INT UNSIGNED,
    calculation_formula JSON,
    weighting_factors JSON,
    minimum_threshold DECIMAL(10,2),
    threshold_currency CHAR(3),
    frequency VARCHAR(20) COMMENT 'monthly, quarterly, semi-annual, annual',
    payment_timeline_days INT UNSIGNED COMMENT 'Days after period end',
    applies_to_membership_classes JSON,
    effective_date DATE NOT NULL,
    end_date DATE,
    legal_reference VARCHAR(200),
    notes TEXT,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (distribution_rule_id),
    KEY idx_dist_society (society_id),
    KEY idx_dist_rule_type (rule_type_id),
    KEY idx_dist_source (source_type_id),
    KEY idx_dist_dates (effective_date, end_date),
    FOREIGN KEY (society_id) REFERENCES society(society_id),
    FOREIGN KEY (rule_type_id) REFERENCES distribution_rule_type(rule_type_id),
    FOREIGN KEY (source_type_id) REFERENCES collection_source_type(source_type_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_minimum_payout
-- Minimum payout thresholds by society and territory
CREATE TABLE society_minimum_payout (
    minimum_payout_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    society_id INT UNSIGNED NOT NULL,
    territory_code VARCHAR(10),
    membership_class_id INT UNSIGNED,
    payment_method VARCHAR(30) NOT NULL COMMENT 'check, wire, ach, paypal, etc.',
    minimum_amount DECIMAL(10,2) NOT NULL,
    currency CHAR(3) NOT NULL,
    accumulation_period_months INT UNSIGNED DEFAULT 12,
    effective_date DATE NOT NULL,
    end_date DATE,
    notes TEXT,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (minimum_payout_id),
    KEY idx_payout_society (society_id),
    KEY idx_payout_territory (territory_code),
    KEY idx_payout_class (membership_class_id),
    KEY idx_payout_dates (effective_date, end_date),
    FOREIGN KEY (society_id) REFERENCES society(society_id),
    FOREIGN KEY (membership_class_id) REFERENCES membership_class(membership_class_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_contact_type
-- Types of contacts for societies
CREATE TABLE society_contact_type (
    contact_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    contact_type_code VARCHAR(30) NOT NULL,
    contact_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    is_public BOOLEAN NOT NULL DEFAULT TRUE,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 0,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (contact_type_id),
    UNIQUE KEY uk_contact_type_code (contact_type_code),
    KEY idx_contact_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_contact
-- Contact information for societies
CREATE TABLE society_contact (
    society_contact_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    society_id INT UNSIGNED NOT NULL,
    contact_type_id INT UNSIGNED NOT NULL,
    department VARCHAR(100),
    contact_name VARCHAR(200),
    title VARCHAR(100),
    email VARCHAR(255),
    phone VARCHAR(50),
    phone_extension VARCHAR(10),
    fax VARCHAR(50),
    address_line_1 VARCHAR(200),
    address_line_2 VARCHAR(200),
    city VARCHAR(100),
    state_province VARCHAR(100),
    postal_code VARCHAR(20),
    country_code CHAR(2),
    time_zone VARCHAR(50),
    languages_supported JSON,
    business_hours JSON,
    is_primary BOOLEAN NOT NULL DEFAULT FALSE,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (society_contact_id),
    KEY idx_contact_society (society_id),
    KEY idx_contact_type (contact_type_id),
    KEY idx_contact_email (email),
    KEY idx_contact_active (is_active),
    FOREIGN KEY (society_id) REFERENCES society(society_id),
    FOREIGN KEY (contact_type_id) REFERENCES society_contact_type(contact_type_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: reporting_standard
-- Reporting standards supported by societies
CREATE TABLE reporting_standard (
    standard_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    standard_code VARCHAR(20) NOT NULL,
    standard_name VARCHAR(100) NOT NULL,
    version VARCHAR(20),
    description TEXT,
    specification_url VARCHAR(500),
    schema_url VARCHAR(500),
    is_cisac_standard BOOLEAN NOT NULL DEFAULT FALSE,
    file_formats JSON COMMENT 'Supported file formats',
    character_encoding VARCHAR(20) DEFAULT 'UTF-8',
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (standard_id),
    UNIQUE KEY uk_standard_code_version (standard_code, version),
    KEY idx_standard_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_reporting_support
-- Reporting standards supported by each society
CREATE TABLE society_reporting_support (
    support_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    society_id INT UNSIGNED NOT NULL,
    standard_id INT UNSIGNED NOT NULL,
    direction VARCHAR(20) NOT NULL COMMENT 'inbound, outbound, both',
    is_preferred BOOLEAN NOT NULL DEFAULT FALSE,
    implementation_date DATE,
    sunset_date DATE,
    endpoint_url VARCHAR(500),
    authentication_method VARCHAR(50),
    frequency_options JSON,
    file_size_limit_mb INT UNSIGNED,
    notes TEXT,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (support_id),
    UNIQUE KEY uk_society_standard (society_id, standard_id, direction),
    KEY idx_reporting_standard (standard_id),
    KEY idx_reporting_dates (implementation_date, sunset_date),
    FOREIGN KEY (society_id) REFERENCES society(society_id),
    FOREIGN KEY (standard_id) REFERENCES reporting_standard(standard_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_accreditation
-- Accreditations and certifications
CREATE TABLE society_accreditation (
    accreditation_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    society_id INT UNSIGNED NOT NULL,
    accreditation_type VARCHAR(50) NOT NULL COMMENT 'cisac_member, iso_certified, government_authorized, etc.',
    accreditation_body VARCHAR(200) NOT NULL,
    accreditation_number VARCHAR(100),
    issue_date DATE NOT NULL,
    expiry_date DATE,
    status VARCHAR(20) NOT NULL DEFAULT 'active',
    verification_url VARCHAR(500),
    certificate_url VARCHAR(500),
    notes TEXT,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (accreditation_id),
    KEY idx_accred_society (society_id),
    KEY idx_accred_type (accreditation_type),
    KEY idx_accred_status (status),
    KEY idx_accred_dates (issue_date, expiry_date),
    FOREIGN KEY (society_id) REFERENCES society(society_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_merger_history
-- Track mergers and acquisitions
CREATE TABLE society_merger_history (
    merger_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    predecessor_society_id INT UNSIGNED NOT NULL,
    successor_society_id INT UNSIGNED NOT NULL,
    merger_type VARCHAR(30) NOT NULL COMMENT 'merger, acquisition, absorption, spin-off',
    effective_date DATE NOT NULL,
    announcement_date DATE,
    legal_completion_date DATE,
    assets_transferred JSON,
    member_migration_status VARCHAR(50),
    catalog_migration_status VARCHAR(50),
    agreement_migration_status VARCHAR(50),
    press_release_url VARCHAR(500),
    notes TEXT,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (merger_id),
    KEY idx_merger_predecessor (predecessor_society_id),
    KEY idx_merger_successor (successor_society_id),
    KEY idx_merger_date (effective_date),
    FOREIGN KEY (predecessor_society_id) REFERENCES society(society_id),
    FOREIGN KEY (successor_society_id) REFERENCES society(society_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_technology_integration
-- Technology integrations and capabilities
CREATE TABLE society_technology_integration (
    integration_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    society_id INT UNSIGNED NOT NULL,
    technology_type VARCHAR(50) NOT NULL COMMENT 'api, blockchain, ai_matching, fingerprinting, etc.',
    integration_name VARCHAR(200) NOT NULL,
    provider VARCHAR(200),
    version VARCHAR(20),
    status VARCHAR(20) NOT NULL DEFAULT 'active',
    launch_date DATE,
    sunset_date DATE,
    api_documentation_url VARCHAR(500),
    capabilities JSON,
    limitations JSON,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (integration_id),
    KEY idx_tech_society (society_id),
    KEY idx_tech_type (technology_type),
    KEY idx_tech_status (status),
    FOREIGN KEY (society_id) REFERENCES society(society_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_transparency_report
-- Transparency reporting compliance
CREATE TABLE society_transparency_report (
    report_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    society_id INT UNSIGNED NOT NULL,
    report_year INT UNSIGNED NOT NULL,
    report_type VARCHAR(50) NOT NULL COMMENT 'annual, cisac_transparency, eu_directive, etc.',
    publication_date DATE,
    report_url VARCHAR(500),
    total_collections DECIMAL(15,2),
    total_distributions DECIMAL(15,2),
    collection_currency CHAR(3),
    admin_cost_percentage DECIMAL(5,2),
    undistributed_amount DECIMAL(15,2),
    member_count INT UNSIGNED,
    repertoire_size BIGINT UNSIGNED,
    key_metrics JSON,
    compliance_status VARCHAR(20),
    auditor_name VARCHAR(200),
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (report_id),
    UNIQUE KEY uk_society_report_year (society_id, report_year, report_type),
    KEY idx_report_year (report_year),
    KEY idx_report_type (report_type),
    FOREIGN KEY (society_id) REFERENCES society(society_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: blacklist_type
-- Types of blacklisting
CREATE TABLE blacklist_type (
    blacklist_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    blacklist_code VARCHAR(30) NOT NULL,
    blacklist_name VARCHAR(100) NOT NULL,
    description TEXT,
    severity_level INT UNSIGNED NOT NULL DEFAULT 1,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (blacklist_type_id),
    UNIQUE KEY uk_blacklist_code (blacklist_code),
    KEY idx_blacklist_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: society_blacklist
-- Societies not recognized in certain territories
CREATE TABLE society_blacklist (
    blacklist_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    society_id INT UNSIGNED NOT NULL,
    blacklisted_by_society_id INT UNSIGNED,
    blacklisted_in_territory VARCHAR(10),
    blacklist_type_id INT UNSIGNED NOT NULL,
    effective_date DATE NOT NULL,
    end_date DATE,
    reason TEXT NOT NULL,
    legal_reference VARCHAR(200),
    is_public BOOLEAN NOT NULL DEFAULT FALSE,
    created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (blacklist_id),
    KEY idx_blacklist_society (society_id),
    KEY idx_blacklist_by (blacklisted_by_society_id),
    KEY idx_blacklist_territory (blacklisted_in_territory),
    KEY idx_blacklist_type (blacklist_type_id),
    KEY idx_blacklist_dates (effective_date, end_date),
    FOREIGN KEY (society_id) REFERENCES society(society_id),
    FOREIGN KEY (blacklisted_by_society_id) REFERENCES society(society_id),
    FOREIGN KEY (blacklist_type_id) REFERENCES blacklist_type(blacklist_type_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- =====================================================
-- INDEXES FOR PERFORMANCE
-- =====================================================

-- Composite indexes for common queries
CREATE INDEX idx_society_search ON society(society_name, cisac_code, is_active);
CREATE INDEX idx_territory_search ON society_territory(territory_code, coverage_type, is_primary_territory);
CREATE INDEX idx_reciprocal_active ON society_reciprocal_agreement(is_active, effective_date, expiry_date);
CREATE INDEX idx_fee_search ON society_fee_structure(fee_type, fee_category, effective_date);
CREATE INDEX idx_distribution_search ON society_distribution_rule(frequency, effective_date);

-- =====================================================
-- VIEWS
-- =====================================================

-- View: Active societies with territories
CREATE VIEW v_active_societies_territories AS
SELECT 
    s.society_id,
    s.society_code,
    s.cisac_code,
    s.society_name,
    s.headquarters_country_code,
    st.society_type_name,
    ot.organization_type_name,
    GROUP_CONCAT(DISTINCT ter.territory_code ORDER BY ter.territory_code) AS territories,
    COUNT(DISTINCT ter.territory_code) AS territory_count,
    s.is_cisac_member,
    s.is_digital_only,
    s.is_blockchain_based
FROM society s
INNER JOIN society_type st ON s.society_type_id = st.society_type_id
INNER JOIN organization_type ot ON s.organization_type_id = ot.organization_type_id
LEFT JOIN society_territory ter ON s.society_id = ter.society_id AND ter.end_date IS NULL
WHERE s.is_active = TRUE
GROUP BY s.society_id;

-- View: Reciprocal agreement network
CREATE VIEW v_reciprocal_network AS
SELECT 
    s1.society_name AS society_1,
    s1.cisac_code AS cisac_1,
    s2.society_name AS society_2,
    s2.cisac_code AS cisac_2,
    rat.agreement_type_name,
    sra.effective_date,
    sra.expiry_date,
    sra.is_active,
    sra.rights_covered,
    sra.territories_covered
FROM society_reciprocal_agreement sra
INNER JOIN society s1 ON sra.society_id_1 = s1.society_id
INNER JOIN society s2 ON sra.society_id_2 = s2.society_id
INNER JOIN reciprocal_agreement_type rat ON sra.agreement_type_id = rat.agreement_type_id
WHERE sra.is_active = TRUE;

-- View: Society fee comparison
CREATE VIEW v_society_fees AS
SELECT 
    s.society_code,
    s.society_name,
    sfs.fee_type,
    sfs.fee_category,
    sfs.calculation_method,
    sfs.fee_percentage,
    sfs.flat_fee_amount,
    sfs.fee_currency,
    sfs.effective_date,
    sfs.end_date
FROM society_fee_structure sfs
INNER JOIN society s ON sfs.society_id = s.society_id
WHERE sfs.end_date IS NULL OR sfs.end_date > CURDATE()
ORDER BY s.society_name, sfs.fee_type, sfs.fee_category;

-- =====================================================
-- FUNCTIONS
-- =====================================================

-- Function: Get society territories
DELIMITER //
CREATE FUNCTION get_society_territories(p_society_id INT UNSIGNED)
RETURNS JSON
DETERMINISTIC
READS SQL DATA
BEGIN
    DECLARE territories JSON;
    
    SELECT JSON_ARRAYAGG(
        JSON_OBJECT(
            'territory_code', territory_code,
            'territory_name', territory_name,
            'coverage_type', coverage_type,
            'is_primary', is_primary_territory
        )
    ) INTO territories
    FROM society_territory
    WHERE society_id = p_society_id
    AND (end_date IS NULL OR end_date > CURDATE());
    
    RETURN territories;
END//
DELIMITER ;

-- Function: Check reciprocal agreement
DELIMITER //
CREATE FUNCTION check_reciprocal_agreement(
    p_society_1_id INT UNSIGNED,
    p_society_2_id INT UNSIGNED,
    p_right_type VARCHAR(50)
)
RETURNS BOOLEAN
DETERMINISTIC
READS SQL DATA
BEGIN
    DECLARE has_agreement BOOLEAN DEFAULT FALSE;
    DECLARE society_id_low INT UNSIGNED;
    DECLARE society_id_high INT UNSIGNED;
    
    -- Ensure consistent ordering
    SET society_id_low = LEAST(p_society_1_id, p_society_2_id);
    SET society_id_high = GREATEST(p_society_1_id, p_society_2_id);
    
    SELECT COUNT(*) > 0 INTO has_agreement
    FROM society_reciprocal_agreement
    WHERE society_id_1 = society_id_low
    AND society_id_2 = society_id_high
    AND is_active = TRUE
    AND (expiry_date IS NULL OR expiry_date > CURDATE())
    AND JSON_CONTAINS(rights_covered, JSON_QUOTE(p_right_type));
    
    RETURN has_agreement;
END//
DELIMITER ;

-- =====================================================
-- INITIAL CONFIGURATION DATA
-- =====================================================

-- Insert society types
INSERT INTO society_type (society_type_code, society_type_name, description, rights_administered) VALUES
('PRO', 'Performing Rights Organization', 'Administers public performance rights', '["performing"]'),
('MRO', 'Mechanical Rights Organization', 'Administers mechanical reproduction rights', '["mechanical"]'),
('CMO', 'Collective Management Organization', 'Administers multiple types of rights', '["performing", "mechanical", "sync", "private_copy"]'),
('SYNC_AGENCY', 'Synchronization Agency', 'Specializes in sync licensing', '["sync"]'),
('DIGITAL_CMO', 'Digital Rights Organization', 'Digital-only rights administration', '["digital_performing", "streaming_mechanical"]'),
('BLOCKCHAIN_ORG', 'Blockchain Rights Organization', 'Blockchain-based rights management', '["all"]'),
('GOV_OFFICE', 'Government Copyright Office', 'Government copyright administration', '["registration", "statutory"]');

-- Insert organization types
INSERT INTO organization_type (organization_type_code, organization_type_name, abbreviation, description) VALUES
('PRO', 'Performing Rights Organization', 'PRO', 'Collects performance royalties'),
('MRO', 'Mechanical Rights Organization', 'MRO', 'Collects mechanical royalties'),
('CMO', 'Collective Management Organization', 'CMO', 'Comprehensive rights management'),
('RRO', 'Reprographic Rights Organization', 'RRO', 'Manages reprographic rights'),
('PRIVATE_COPY', 'Private Copy Society', 'PCS', 'Manages private copy levies'),
('VISUAL_ARTS', 'Visual Arts Society', 'VAS', 'Manages visual arts rights'),
('GOVERNMENT', 'Government Entity', 'GOV', 'Government copyright office');

-- Insert membership types
INSERT INTO membership_type (membership_type_code, membership_type_name, description) VALUES
('FULL', 'Full Membership', 'Complete membership with voting rights'),
('ASSOCIATE', 'Associate Membership', 'Limited membership without voting rights'),
('AFFILIATE', 'Affiliate Membership', 'Affiliate status for foreign members'),
('PROVISIONAL', 'Provisional Membership', 'Temporary membership pending full approval'),
('LEGACY', 'Legacy Membership', 'Grandfathered membership terms'),
('DIGITAL', 'Digital Membership', 'Online-only membership'),
('ESTATE', 'Estate Membership', 'Membership for deceased member estates');

-- Insert membership classes
INSERT INTO membership_class (membership_class_code, membership_class_name, entity_type, is_voting_member) VALUES
('WRITER', 'Writer/Composer', 'individual', TRUE),
('PUBLISHER', 'Music Publisher', 'company', TRUE),
('HEIR', 'Heir/Beneficiary', 'individual', FALSE),
('ASSOCIATE_WRITER', 'Associate Writer', 'individual', FALSE),
('ASSOCIATE_PUBLISHER', 'Associate Publisher', 'company', FALSE),
('SUB_PUBLISHER', 'Sub-Publisher', 'company', FALSE),
('ADMINISTRATOR', 'Administrator', 'company', FALSE);

-- Insert affiliation types
INSERT INTO affiliation_type (affiliation_type_code, affiliation_type_name, is_exclusive) VALUES
('EXCLUSIVE', 'Exclusive Affiliation', TRUE),
('NON_EXCLUSIVE', 'Non-Exclusive Affiliation', FALSE),
('ADMIN_ONLY', 'Administration Only', FALSE),
('COLLECTION_ONLY', 'Collection Only', FALSE),
('SPECIFIC_RIGHTS', 'Specific Rights Only', FALSE);

-- Insert society services
INSERT INTO society_service (service_code, service_name, service_category, description) VALUES
('REGISTRATION', 'Work Registration', 'registration', 'Register musical works and recordings'),
('COLLECTION', 'Royalty Collection', 'collection', 'Collect royalties from licensees'),
('DISTRIBUTION', 'Royalty Distribution', 'distribution', 'Distribute collected royalties to members'),
('LICENSING', 'Licensing Services', 'licensing', 'Issue licenses for music use'),
('INTL_COLLECTION', 'International Collection', 'collection', 'Collect royalties from foreign territories'),
('ONLINE_PORTAL', 'Member Portal', 'technology', 'Online member services portal'),
('API_ACCESS', 'API Integration', 'technology', 'API access for data exchange'),
('BLOCKCHAIN_REG', 'Blockchain Registration', 'technology', 'Blockchain-based work registration'),
('SYNC_LICENSING', 'Sync Licensing', 'licensing', 'Synchronization licensing services'),
('DIRECT_LICENSING', 'Direct Licensing', 'licensing', 'Direct licensing to major users');

-- Insert reciprocal agreement types
INSERT INTO reciprocal_agreement_type (agreement_type_code, agreement_type_name, description, typical_duration_months) VALUES
('TYPE_A', 'Type A Agreement', 'Unilateral representation agreement', 36),
('TYPE_B', 'Type B Agreement', 'Bilateral representation agreement', 36),
('DIGITAL', 'Digital Rights Agreement', 'Agreement for digital rights only', 24),
('SYNC', 'Sync Rights Agreement', 'Synchronization rights agreement', 36),
('ADMIN', 'Administration Agreement', 'Administrative services agreement', 60),
('DATA_EXCHANGE', 'Data Exchange Agreement', 'Technical data exchange agreement', 12);

-- Insert collection source types
INSERT INTO collection_source_type (source_type_code, source_type_name, source_category, typical_reporting_frequency) VALUES
('RADIO_TERRESTRIAL', 'Terrestrial Radio', 'broadcast', 'monthly'),
('RADIO_SATELLITE', 'Satellite Radio', 'broadcast', 'quarterly'),
('TV_BROADCAST', 'Television Broadcast', 'broadcast', 'monthly'),
('TV_CABLE', 'Cable Television', 'broadcast', 'quarterly'),
('STREAMING_INTERACTIVE', 'Interactive Streaming', 'digital', 'monthly'),
('STREAMING_NON_INTERACTIVE', 'Non-Interactive Streaming', 'digital', 'monthly'),
('DOWNLOAD', 'Digital Downloads', 'digital', 'monthly'),
('LIVE_CONCERT', 'Live Concerts', 'live', 'quarterly'),
('LIVE_VENUE', 'Live Venues', 'live', 'quarterly'),
('CINEMA', 'Cinema Exhibition', 'broadcast', 'quarterly'),
('BACKGROUND', 'Background Music', 'general', 'annual'),
('RINGTONE', 'Ringtones', 'digital', 'quarterly');

-- Insert distribution rule types
INSERT INTO distribution_rule_type (rule_type_code, rule_type_name, calculation_basis) VALUES
('PERFORMING_POINTS', 'Performance Points System', 'points'),
('MECHANICAL_PERCENTAGE', 'Mechanical Percentage', 'percentage'),
('DURATION_BASED', 'Duration-Based', 'duration'),
('PLAY_COUNT', 'Play Count Based', 'plays'),
('REVENUE_SHARE', 'Revenue Share', 'percentage'),
('HYBRID', 'Hybrid Calculation', 'hybrid');

-- Insert society contact types
INSERT INTO society_contact_type (contact_type_code, contact_type_name, is_public) VALUES
('GENERAL', 'General Inquiries', TRUE),
('MEMBERSHIP', 'Membership Department', TRUE),
('LICENSING', 'Licensing Department', TRUE),
('DISTRIBUTION', 'Distribution/Royalties', TRUE),
('LEGAL', 'Legal Department', FALSE),
('TECHNICAL', 'Technical/IT Support', TRUE),
('INTERNATIONAL', 'International Department', TRUE),
('MEDIA', 'Media Relations', TRUE);

-- Insert reporting standards
INSERT INTO reporting_standard (standard_code, standard_name, version, is_cisac_standard) VALUES
('CWR', 'Common Works Registration', '3.0', TRUE),
('CWR', 'Common Works Registration', '2.2', TRUE),
('DDEX', 'Digital Data Exchange', '4.0', FALSE),
('DDEX_ERN', 'Electronic Release Notification', '4.3', FALSE),
('BWARM', 'Broadcast WAV Audio Recording Metadata', '1.0', FALSE),
('IPI', 'Interested Parties Information', '2.0', TRUE),
('ISWC', 'International Standard Musical Work Code', '2.0', TRUE);

-- Insert blacklist types
INSERT INTO blacklist_type (blacklist_code, blacklist_name, severity_level) VALUES
('SANCTIONS', 'International Sanctions', 5),
('NON_PAYMENT', 'Non-Payment of Fees', 3),
('FRAUD', 'Fraudulent Activity', 5),
('NON_COMPLIANCE', 'Standards Non-Compliance', 2),
('DISPUTE', 'Unresolved Dispute', 2);

-- Insert major societies (first 30)
INSERT INTO society (society_code, cisac_code, society_name, legal_name, abbreviation, society_type_id, organization_type_id, headquarters_country_code, headquarters_city, website_url, is_cisac_member) VALUES
('ASCAP_US', '010', 'ASCAP', 'American Society of Composers, Authors and Publishers', 'ASCAP', 1, 1, 'US', 'New York', 'https://www.ascap.com', TRUE),
('BMI_US', '021', 'BMI', 'Broadcast Music, Inc.', 'BMI', 1, 1, 'US', 'New York', 'https://www.bmi.com', TRUE),
('SESAC_US', NULL, 'SESAC', 'SESAC Inc.', 'SESAC', 1, 1, 'US', 'Nashville', 'https://www.sesac.com', FALSE),
('SOCAN_CA', '055', 'SOCAN', 'Society of Composers, Authors and Music Publishers of Canada', 'SOCAN', 1, 1, 'CA', 'Toronto', 'https://www.socan.com', TRUE),
('PRS_UK', '044', 'PRS for Music', 'Performing Right Society Limited', 'PRS', 1, 1, 'GB', 'London', 'https://www.prsformusic.com', TRUE),
('MCPS_UK', '232', 'MCPS', 'Mechanical-Copyright Protection Society Limited', 'MCPS', 2, 2, 'GB', 'London', 'https://www.prsformusic.com', TRUE),
('SACEM_FR', '038', 'SACEM', 'Société des Auteurs, Compositeurs et Editeurs de Musique', 'SACEM', 3, 3, 'FR', 'Paris', 'https://www.sacem.fr', TRUE),
('GEMA_DE', '040', 'GEMA', 'Gesellschaft für musikalische Aufführungs- und mechanische Vervielfältigungsrechte', 'GEMA', 3, 3, 'DE', 'Berlin', 'https://www.gema.de', TRUE),
('SIAE_IT', '052', 'SIAE', 'Società Italiana degli Autori ed Editori', 'SIAE', 3, 3, 'IT', 'Rome', 'https://www.siae.it', TRUE),
('SGAE_ES', '058', 'SGAE', 'Sociedad General de Autores y Editores', 'SGAE', 3, 3, 'ES', 'Madrid', 'https://www.sgae.es', TRUE),
('BUMA_NL', '036', 'BUMA', 'Vereniging Buma', 'BUMA', 1, 1, 'NL', 'Amsterdam', 'https://www.bumastemra.nl', TRUE),
('STEMRA_NL', '231', 'STEMRA', 'Stichting Stemra', 'STEMRA', 2, 2, 'NL', 'Amsterdam', 'https://www.bumastemra.nl', TRUE),
('SABAM_BE', '057', 'SABAM', 'Société d\'Auteurs Belge – Belgische Auteurs Maatschappij', 'SABAM', 3, 3, 'BE', 'Brussels', 'https://www.sabam.be', TRUE),
('APRA_AU', '003', 'APRA', 'Australasian Performing Right Association', 'APRA', 1, 1, 'AU', 'Sydney', 'https://www.apra.com.au', TRUE),
('AMCOS_AU', '206', 'AMCOS', 'Australasian Mechanical Copyright Owners Society', 'AMCOS', 2, 2, 'AU', 'Sydney', 'https://www.apra.com.au', TRUE),
('JASRAC_JP', '017', 'JASRAC', 'Japanese Society for Rights of Authors, Composers and Publishers', 'JASRAC', 3, 3, 'JP', 'Tokyo', 'https://www.jasrac.or.jp', TRUE),
('KOMCA_KR', '066', 'KOMCA', 'Korea Music Copyright Association', 'KOMCA', 3, 3, 'KR', 'Seoul', 'https://www.komca.or.kr', TRUE),
('CASH_HK', '065', 'CASH', 'Composers and Authors Society of Hong Kong', 'CASH', 3, 3, 'HK', 'Hong Kong', 'https://www.cash.org.hk', TRUE),
('COMPASS_SG', '421', 'COMPASS', 'Composers and Authors Society of Singapore', 'COMPASS', 3, 3, 'SG', 'Singapore', 'https://www.compass.org.sg', TRUE),
('IPRS_IN', '359', 'IPRS', 'Indian Performing Right Society', 'IPRS', 1, 1, 'IN', 'Mumbai', 'https://www.iprs.org', TRUE),
('SAMRO_ZA', '092', 'SAMRO', 'Southern African Music Rights Organisation', 'SAMRO', 3, 3, 'ZA', 'Johannesburg', 'https://www.samro.org.za', TRUE),
('SADAIC_AR', '024', 'SADAIC', 'Sociedad Argentina de Autores y Compositores de Música', 'SADAIC', 3, 3, 'AR', 'Buenos Aires', 'https://www.sadaic.org.ar', TRUE),
('UBC_BR', '032', 'UBC', 'União Brasileira de Compositores', 'UBC', 1, 1, 'BR', 'Rio de Janeiro', 'https://www.ubc.org.br', TRUE),
('ECAD_BR', NULL, 'ECAD', 'Escritório Central de Arrecadação e Distribuição', 'ECAD', 3, 3, 'BR', 'São Paulo', 'https://www.ecad.org.br', FALSE),
('SCD_CL', '081', 'SCD', 'Sociedad Chilena del Derecho de Autor', 'SCD', 3, 3, 'CL', 'Santiago', 'https://www.scd.cl', TRUE),
('SAYCO_CO', '082', 'SAYCO', 'Sociedad de Autores y Compositores de Colombia', 'SAYCO', 3, 3, 'CO', 'Bogotá', 'https://www.sayco.org', TRUE),
('SACM_MX', '025', 'SACM', 'Sociedad de Autores y Compositores de México', 'SACM', 3, 3, 'MX', 'Mexico City', 'https://www.sacm.org.mx', TRUE),
('STIM_SE', '060', 'STIM', 'Svenska Tonsättares Internationella Musikbyrå', 'STIM', 3, 3, 'SE', 'Stockholm', 'https://www.stim.se', TRUE),
('TONO_NO', '061', 'TONO', 'TONO', 'TONO', 3, 3, 'NO', 'Oslo', 'https://www.tono.no', TRUE),
('KODA_DK', '037', 'KODA', 'KODA', 'KODA', 3, 3, 'DK', 'Copenhagen', 'https://www.koda.dk', TRUE);

-- Create stored procedure for validating society territories
DELIMITER //
CREATE PROCEDURE validate_society_territory(
    IN p_society_id INT UNSIGNED,
    IN p_territory_code VARCHAR(10),
    OUT p_is_valid BOOLEAN,
    OUT p_coverage_type VARCHAR(20)
)
BEGIN
    SELECT 
        COUNT(*) > 0,
        MAX(coverage_type)
    INTO 
        p_is_valid,
        p_coverage_type
    FROM society_territory
    WHERE society_id = p_society_id
    AND territory_code = p_territory_code
    AND (end_date IS NULL OR end_date > CURDATE());
END//
DELIMITER ;

-- =====================================================
-- SECTION 10: PLATFORMS & DSPS
-- =====================================================

-- Drop existing tables if they exist (be careful in production!)
DROP TABLE IF EXISTS platform_territory_availability;
DROP TABLE IF EXISTS platform_content_format;
DROP TABLE IF EXISTS platform_rights_requirement;
DROP TABLE IF EXISTS platform_payout_schedule;
DROP TABLE IF EXISTS platform_api_version;
DROP TABLE IF EXISTS platform_feature;
DROP TABLE IF EXISTS platform_analytics_type;
DROP TABLE IF EXISTS platform_certification;
DROP TABLE IF EXISTS platform_content_policy;
DROP TABLE IF EXISTS platform;
DROP TABLE IF EXISTS platform_type;
DROP TABLE IF EXISTS platform_tier;
DROP TABLE IF EXISTS device_type;
DROP TABLE IF EXISTS distribution_channel;
DROP TABLE IF EXISTS delivery_method;
DROP TABLE IF EXISTS link_type;
DROP TABLE IF EXISTS monetization_model;
DROP TABLE IF EXISTS content_delivery_spec;
DROP TABLE IF EXISTS platform_region;
DROP TABLE IF EXISTS platform_status;

-- =====================================================
-- LOOKUP TABLES
-- =====================================================

-- Platform Status Types
CREATE TABLE platform_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_platform_status_code (code),
    KEY idx_platform_status_active (is_active),
    KEY idx_platform_status_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Platform Types (Categories)
CREATE TABLE platform_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    parent_type_id INT UNSIGNED,
    icon_class VARCHAR(100),
    color_hex VARCHAR(7),
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_platform_type_code (code),
    KEY idx_platform_type_parent (parent_type_id),
    KEY idx_platform_type_active (is_active),
    KEY idx_platform_type_order (display_order),
    CONSTRAINT fk_platform_type_parent FOREIGN KEY (parent_type_id) 
        REFERENCES platform_type(id) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Platform Service Tiers
CREATE TABLE platform_tier (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    features JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_platform_tier_code (code),
    KEY idx_platform_tier_active (is_active),
    KEY idx_platform_tier_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Device Types
CREATE TABLE device_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50),
    capabilities JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_device_type_code (code),
    KEY idx_device_type_category (category),
    KEY idx_device_type_active (is_active),
    KEY idx_device_type_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Distribution Channels
CREATE TABLE distribution_channel (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    channel_type VARCHAR(50),
    requirements JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_distribution_channel_code (code),
    KEY idx_distribution_channel_type (channel_type),
    KEY idx_distribution_channel_active (is_active),
    KEY idx_distribution_channel_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Delivery Methods
CREATE TABLE delivery_method (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    technology_type VARCHAR(50),
    specifications JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_delivery_method_code (code),
    KEY idx_delivery_method_type (technology_type),
    KEY idx_delivery_method_active (is_active),
    KEY idx_delivery_method_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Link Types (NEW)
CREATE TABLE link_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    url_pattern VARCHAR(500),
    parameters JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_link_type_code (code),
    KEY idx_link_type_active (is_active),
    KEY idx_link_type_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Monetization Models
CREATE TABLE monetization_model (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    revenue_share_type VARCHAR(50),
    payment_terms JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_monetization_model_code (code),
    KEY idx_monetization_model_type (revenue_share_type),
    KEY idx_monetization_model_active (is_active),
    KEY idx_monetization_model_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Content Delivery Specifications
CREATE TABLE content_delivery_spec (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    format_type VARCHAR(50),
    technical_specs JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_content_delivery_spec_code (code),
    KEY idx_content_delivery_spec_type (format_type),
    KEY idx_content_delivery_spec_active (is_active),
    KEY idx_content_delivery_spec_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Platform Regions
CREATE TABLE platform_region (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    parent_region_id INT UNSIGNED,
    time_zone VARCHAR(50),
    languages JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_platform_region_code (code),
    KEY idx_platform_region_parent (parent_region_id),
    KEY idx_platform_region_active (is_active),
    KEY idx_platform_region_order (display_order),
    CONSTRAINT fk_platform_region_parent FOREIGN KEY (parent_region_id) 
        REFERENCES platform_region(id) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- =====================================================
-- MAIN PLATFORM TABLE
-- =====================================================

CREATE TABLE platform (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(200) NOT NULL,
    legal_name VARCHAR(500),
    platform_type_id INT UNSIGNED NOT NULL,
    parent_platform_id INT UNSIGNED,
    platform_status_id INT UNSIGNED NOT NULL,
    
    -- Basic Information
    description TEXT,
    website_url VARCHAR(500),
    support_url VARCHAR(500),
    api_documentation_url VARCHAR(500),
    logo_url VARCHAR(500),
    brand_color_hex VARCHAR(7),
    
    -- Company Information
    company_name VARCHAR(200),
    company_address TEXT,
    company_country_code VARCHAR(2),
    tax_id VARCHAR(100),
    
    -- Launch Information
    launch_date DATE,
    sunset_date DATE,
    beta_launch_date DATE,
    
    -- Platform Characteristics
    is_global BOOLEAN NOT NULL DEFAULT FALSE,
    is_curated BOOLEAN NOT NULL DEFAULT FALSE,
    is_ugc_enabled BOOLEAN NOT NULL DEFAULT FALSE,
    is_blockchain_based BOOLEAN NOT NULL DEFAULT FALSE,
    is_ai_powered BOOLEAN NOT NULL DEFAULT FALSE,
    is_metaverse_enabled BOOLEAN NOT NULL DEFAULT FALSE,
    requires_exclusivity BOOLEAN NOT NULL DEFAULT FALSE,
    
    -- Technical Information
    supported_audio_formats JSON,
    supported_video_formats JSON,
    max_file_size_mb INT,
    min_track_duration_seconds INT,
    max_track_duration_seconds INT,
    
    -- Monetization
    default_monetization_model_id INT UNSIGNED,
    revenue_share_percentage DECIMAL(5,2),
    min_payout_amount DECIMAL(10,2),
    payout_currency_code VARCHAR(3),
    
    -- API Information
    api_type VARCHAR(50), -- REST, GraphQL, SOAP, etc.
    api_authentication_type VARCHAR(50), -- OAuth2, API Key, JWT, etc.
    rate_limit_per_minute INT,
    webhook_supported BOOLEAN NOT NULL DEFAULT FALSE,
    
    -- Content Requirements
    requires_isrc BOOLEAN NOT NULL DEFAULT TRUE,
    requires_upc BOOLEAN NOT NULL DEFAULT FALSE,
    requires_iswc BOOLEAN NOT NULL DEFAULT FALSE,
    requires_lyrics BOOLEAN NOT NULL DEFAULT FALSE,
    requires_credits BOOLEAN NOT NULL DEFAULT FALSE,
    metadata_format VARCHAR(50), -- DDEX, CWR, Custom, etc.
    
    -- Platform Features (JSON for flexibility)
    features JSON,
    content_policies JSON,
    territory_restrictions JSON,
    genre_restrictions JSON,
    language_support JSON,
    demographic_data JSON,
    
    -- Integration Status
    integration_status VARCHAR(50),
    integration_priority INT,
    last_sync_at TIMESTAMP NULL,
    
    -- Administrative
    notes TEXT,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_by INT UNSIGNED,
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_platform_code (code),
    KEY idx_platform_type (platform_type_id),
    KEY idx_platform_parent (parent_platform_id),
    KEY idx_platform_status (platform_status_id),
    KEY idx_platform_monetization (default_monetization_model_id),
    KEY idx_platform_active (is_active),
    KEY idx_platform_global (is_global),
    KEY idx_platform_launch (launch_date),
    KEY idx_platform_integration (integration_status),
    KEY idx_platform_priority (integration_priority),
    KEY idx_platform_order (display_order),
    
    CONSTRAINT fk_platform_type FOREIGN KEY (platform_type_id) 
        REFERENCES platform_type(id) ON DELETE RESTRICT,
    CONSTRAINT fk_platform_parent FOREIGN KEY (parent_platform_id) 
        REFERENCES platform(id) ON DELETE SET NULL,
    CONSTRAINT fk_platform_status FOREIGN KEY (platform_status_id) 
        REFERENCES platform_status(id) ON DELETE RESTRICT,
    CONSTRAINT fk_platform_monetization FOREIGN KEY (default_monetization_model_id) 
        REFERENCES monetization_model(id) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- =====================================================
-- PLATFORM RELATIONSHIP TABLES
-- =====================================================

-- Platform Territory Availability
CREATE TABLE platform_territory_availability (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    platform_id INT UNSIGNED NOT NULL,
    territory_code VARCHAR(2) NOT NULL,
    platform_region_id INT UNSIGNED,
    
    -- Availability Status
    is_available BOOLEAN NOT NULL DEFAULT TRUE,
    launch_date DATE,
    sunset_date DATE,
    
    -- Local Information
    local_name VARCHAR(200),
    local_url VARCHAR(500),
    local_support_email VARCHAR(200),
    local_phone VARCHAR(50),
    
    -- Pricing
    local_currency_code VARCHAR(3),
    tier_pricing JSON,
    
    -- Restrictions
    content_restrictions JSON,
    age_restrictions JSON,
    
    -- Administrative
    notes TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_platform_territory (platform_id, territory_code),
    KEY idx_platform_territory_region (platform_region_id),
    KEY idx_platform_territory_available (is_available),
    KEY idx_platform_territory_active (is_active),
    
    CONSTRAINT fk_platform_territory_platform FOREIGN KEY (platform_id) 
        REFERENCES platform(id) ON DELETE CASCADE,
    CONSTRAINT fk_platform_territory_region FOREIGN KEY (platform_region_id) 
        REFERENCES platform_region(id) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Platform Content Formats
CREATE TABLE platform_content_format (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    platform_id INT UNSIGNED NOT NULL,
    content_delivery_spec_id INT UNSIGNED NOT NULL,
    
    -- Format Details
    is_preferred BOOLEAN NOT NULL DEFAULT FALSE,
    is_required BOOLEAN NOT NULL DEFAULT FALSE,
    priority_order INT NOT NULL DEFAULT 0,
    
    -- Technical Specifications
    custom_specs JSON,
    validation_rules JSON,
    
    -- Administrative
    notes TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_platform_format (platform_id, content_delivery_spec_id),
    KEY idx_platform_format_spec (content_delivery_spec_id),
    KEY idx_platform_format_preferred (is_preferred),
    KEY idx_platform_format_required (is_required),
    KEY idx_platform_format_priority (priority_order),
    
    CONSTRAINT fk_platform_format_platform FOREIGN KEY (platform_id) 
        REFERENCES platform(id) ON DELETE CASCADE,
    CONSTRAINT fk_platform_format_spec FOREIGN KEY (content_delivery_spec_id) 
        REFERENCES content_delivery_spec(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Platform Rights Requirements
CREATE TABLE platform_rights_requirement (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    platform_id INT UNSIGNED NOT NULL,
    
    -- Rights Type
    rights_type VARCHAR(50) NOT NULL, -- mechanical, performance, sync, master, etc.
    territory_code VARCHAR(2),
    
    -- Requirements
    is_required BOOLEAN NOT NULL DEFAULT TRUE,
    is_exclusive BOOLEAN NOT NULL DEFAULT FALSE,
    minimum_term_days INT,
    
    -- Terms
    terms_description TEXT,
    legal_language TEXT,
    
    -- Administrative
    effective_date DATE,
    expiration_date DATE,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    KEY idx_platform_rights_platform (platform_id),
    KEY idx_platform_rights_type (rights_type),
    KEY idx_platform_rights_territory (territory_code),
    KEY idx_platform_rights_required (is_required),
    KEY idx_platform_rights_exclusive (is_exclusive),
    KEY idx_platform_rights_active (is_active),
    
    CONSTRAINT fk_platform_rights_platform FOREIGN KEY (platform_id) 
        REFERENCES platform(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Platform Payout Schedules
CREATE TABLE platform_payout_schedule (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    platform_id INT UNSIGNED NOT NULL,
    
    -- Schedule Information
    schedule_name VARCHAR(100) NOT NULL,
    schedule_type VARCHAR(50) NOT NULL, -- monthly, quarterly, threshold, etc.
    
    -- Timing
    payout_day INT, -- Day of month (1-31)
    payout_delay_days INT, -- Days after period end
    minimum_threshold DECIMAL(10,2),
    
    -- Period Definition
    reporting_period_type VARCHAR(50), -- calendar_month, fiscal_quarter, etc.
    reporting_lag_days INT,
    
    -- Currency and Fees
    payout_currency_code VARCHAR(3),
    processing_fee_percentage DECIMAL(5,2),
    processing_fee_fixed DECIMAL(10,2),
    
    -- Administrative
    effective_date DATE,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    KEY idx_platform_payout_platform (platform_id),
    KEY idx_platform_payout_type (schedule_type),
    KEY idx_platform_payout_active (is_active),
    
    CONSTRAINT fk_platform_payout_platform FOREIGN KEY (platform_id) 
        REFERENCES platform(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Platform API Versions
CREATE TABLE platform_api_version (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    platform_id INT UNSIGNED NOT NULL,
    
    -- Version Information
    version_number VARCHAR(20) NOT NULL,
    version_name VARCHAR(100),
    release_date DATE,
    deprecation_date DATE,
    sunset_date DATE,
    
    -- API Details
    base_url VARCHAR(500),
    documentation_url VARCHAR(500),
    changelog_url VARCHAR(500),
    
    -- Features
    features JSON,
    breaking_changes JSON,
    migration_guide TEXT,
    
    -- Status
    is_stable BOOLEAN NOT NULL DEFAULT TRUE,
    is_beta BOOLEAN NOT NULL DEFAULT FALSE,
    is_deprecated BOOLEAN NOT NULL DEFAULT FALSE,
    is_current BOOLEAN NOT NULL DEFAULT FALSE,
    
    -- Administrative
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_platform_api_version (platform_id, version_number),
    KEY idx_platform_api_current (is_current),
    KEY idx_platform_api_deprecated (is_deprecated),
    KEY idx_platform_api_active (is_active),
    
    CONSTRAINT fk_platform_api_platform FOREIGN KEY (platform_id) 
        REFERENCES platform(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Platform Features
CREATE TABLE platform_feature (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    platform_id INT UNSIGNED NOT NULL,
    
    -- Feature Information
    feature_code VARCHAR(50) NOT NULL,
    feature_name VARCHAR(200) NOT NULL,
    feature_category VARCHAR(50),
    description TEXT,
    
    -- Availability
    is_available BOOLEAN NOT NULL DEFAULT TRUE,
    requires_tier_id INT UNSIGNED,
    requires_certification BOOLEAN NOT NULL DEFAULT FALSE,
    
    -- Technical Details
    api_endpoint VARCHAR(500),
    documentation_url VARCHAR(500),
    implementation_notes TEXT,
    
    -- Launch Information
    launch_date DATE,
    sunset_date DATE,
    
    -- Administrative
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_platform_feature (platform_id, feature_code),
    KEY idx_platform_feature_category (feature_category),
    KEY idx_platform_feature_tier (requires_tier_id),
    KEY idx_platform_feature_available (is_available),
    KEY idx_platform_feature_order (display_order),
    
    CONSTRAINT fk_platform_feature_platform FOREIGN KEY (platform_id) 
        REFERENCES platform(id) ON DELETE CASCADE,
    CONSTRAINT fk_platform_feature_tier FOREIGN KEY (requires_tier_id) 
        REFERENCES platform_tier(id) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Platform Analytics Types
CREATE TABLE platform_analytics_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    platform_id INT UNSIGNED NOT NULL,
    
    -- Analytics Information
    analytics_code VARCHAR(50) NOT NULL,
    analytics_name VARCHAR(200) NOT NULL,
    category VARCHAR(50),
    description TEXT,
    
    -- Data Details
    data_granularity VARCHAR(50), -- daily, hourly, real-time, etc.
    data_delay_hours INT,
    historical_days_available INT,
    
    -- Access
    api_endpoint VARCHAR(500),
    requires_tier_id INT UNSIGNED,
    rate_limit_per_hour INT,
    
    -- Data Format
    response_format VARCHAR(50), -- JSON, CSV, XML, etc.
    data_schema JSON,
    
    -- Administrative
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_platform_analytics (platform_id, analytics_code),
    KEY idx_platform_analytics_category (category),
    KEY idx_platform_analytics_tier (requires_tier_id),
    KEY idx_platform_analytics_active (is_active),
    
    CONSTRAINT fk_platform_analytics_platform FOREIGN KEY (platform_id) 
        REFERENCES platform(id) ON DELETE CASCADE,
    CONSTRAINT fk_platform_analytics_tier FOREIGN KEY (requires_tier_id) 
        REFERENCES platform_tier(id) ON DELETE SET NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Platform Certifications
CREATE TABLE platform_certification (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    platform_id INT UNSIGNED NOT NULL,
    
    -- Certification Information
    certification_code VARCHAR(50) NOT NULL,
    certification_name VARCHAR(200) NOT NULL,
    description TEXT,
    
    -- Requirements
    requirements JSON,
    eligibility_criteria JSON,
    application_process TEXT,
    
    -- Benefits
    benefits JSON,
    features_unlocked JSON,
    
    -- Verification
    verification_url VARCHAR(500),
    badge_image_url VARCHAR(500),
    
    -- Administrative
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_platform_certification (platform_id, certification_code),
    KEY idx_platform_certification_active (is_active),
    
    CONSTRAINT fk_platform_certification_platform FOREIGN KEY (platform_id) 
        REFERENCES platform(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Platform Content Policies
CREATE TABLE platform_content_policy (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    platform_id INT UNSIGNED NOT NULL,
    
    -- Policy Information
    policy_code VARCHAR(50) NOT NULL,
    policy_name VARCHAR(200) NOT NULL,
    policy_category VARCHAR(50),
    description TEXT,
    
    -- Policy Details
    policy_text TEXT,
    restrictions JSON,
    prohibited_content JSON,
    
    -- Enforcement
    enforcement_level VARCHAR(50), -- strict, moderate, lenient
    violation_consequences JSON,
    appeal_process TEXT,
    
    -- Versioning
    version VARCHAR(20),
    effective_date DATE,
    
    -- Administrative
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    KEY idx_platform_policy_platform (platform_id),
    KEY idx_platform_policy_category (policy_category),
    KEY idx_platform_policy_active (is_active),
    
    CONSTRAINT fk_platform_policy_platform FOREIGN KEY (platform_id) 
        REFERENCES platform(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- =====================================================
-- INITIAL DATA - PLATFORM STATUS
-- =====================================================

INSERT INTO platform_status (code, name, description, display_order) VALUES
('active', 'Active', 'Platform is fully operational', 1),
('beta', 'Beta', 'Platform is in beta testing', 2),
('coming_soon', 'Coming Soon', 'Platform launch announced', 3),
('limited_access', 'Limited Access', 'Platform available to select users', 4),
('maintenance', 'Maintenance', 'Platform temporarily unavailable', 5),
('deprecated', 'Deprecated', 'Platform being phased out', 6),
('sunset', 'Sunset', 'Platform no longer accepting new content', 7),
('discontinued', 'Discontinued', 'Platform no longer operational', 8);

-- =====================================================
-- INITIAL DATA - PLATFORM TYPES
-- =====================================================

INSERT INTO platform_type (code, name, description, parent_type_id, icon_class, color_hex, display_order) VALUES
-- Main Categories
('streaming', 'Streaming Services', 'Digital music streaming platforms', NULL, 'fa-music', '#1DB954', 1),
('social', 'Social Media', 'Social platforms with music features', NULL, 'fa-share-alt', '#1877F2', 2),
('video', 'Video Platforms', 'Video sharing and streaming', NULL, 'fa-video', '#FF0000', 3),
('gaming', 'Gaming Platforms', 'Gaming platforms with music integration', NULL, 'fa-gamepad', '#9146FF', 4),
('fitness', 'Fitness Apps', 'Fitness and wellness platforms', NULL, 'fa-heartbeat', '#F65E3B', 5),
('podcast', 'Podcast Platforms', 'Podcast hosting and distribution', NULL, 'fa-podcast', '#8752F3', 6),
('radio', 'Radio Services', 'Digital and traditional radio', NULL, 'fa-radio', '#FFA500', 7),
('download', 'Download Stores', 'Digital music download stores', NULL, 'fa-download', '#007AFF', 8),
('nft', 'NFT Marketplaces', 'Blockchain and NFT platforms', NULL, 'fa-cube', '#FF6B6B', 9),
('metaverse', 'Metaverse Platforms', 'Virtual world platforms', NULL, 'fa-vr-cardboard', '#FF1E56', 10),
('ai', 'AI Platforms', 'AI-powered music platforms', NULL, 'fa-robot', '#7C3AED', 11),
('live', 'Live Streaming', 'Live performance streaming', NULL, 'fa-broadcast-tower', '#E91E63', 12),
('karaoke', 'Karaoke Apps', 'Karaoke and sing-along platforms', NULL, 'fa-microphone', '#FF6F61', 13),
('dj', 'DJ Platforms', 'DJ mixing and performance tools', NULL, 'fa-compact-disc', '#00D4FF', 14),
('enterprise', 'Enterprise', 'Business and commercial use', NULL, 'fa-building', '#4A5568', 15);

-- Subcategories
INSERT INTO platform_type (code, name, description, parent_type_id, icon_class, color_hex, display_order) VALUES
('streaming_premium', 'Premium Streaming', 'Subscription-based streaming', 
    (SELECT id FROM platform_type WHERE code = 'streaming'), 'fa-crown', '#FFD700', 1),
('streaming_free', 'Free Streaming', 'Ad-supported streaming', 
    (SELECT id FROM platform_type WHERE code = 'streaming'), 'fa-music', '#90EE90', 2),
('social_video', 'Social Video', 'Short-form video platforms', 
    (SELECT id FROM platform_type WHERE code = 'social'), 'fa-film', '#FF1744', 1),
('social_audio', 'Social Audio', 'Audio-focused social platforms', 
    (SELECT id FROM platform_type WHERE code = 'social'), 'fa-headphones', '#673AB7', 2);

-- =====================================================
-- INITIAL DATA - PLATFORM TIERS
-- =====================================================

INSERT INTO platform_tier (code, name, description, features, display_order) VALUES
('free', 'Free', 'Free tier with ads', 
    '["Limited skips", "Shuffle play", "Basic audio quality"]', 1),
('premium', 'Premium', 'Individual premium subscription', 
    '["Unlimited skips", "On-demand play", "High quality audio", "Offline downloads"]', 2),
('family', 'Family', 'Family subscription plan', 
    '["All premium features", "Multiple accounts", "Parental controls"]', 3),
('student', 'Student', 'Discounted student plan', 
    '["All premium features", "Student verification required"]', 4),
('duo', 'Duo', 'Two-person subscription', 
    '["All premium features", "Two accounts"]', 5),
('hifi', 'HiFi', 'High-fidelity audio tier', 
    '["Lossless audio", "Master quality", "Spatial audio"]', 6),
('pro', 'Professional', 'Professional/creator tier', 
    '["Advanced analytics", "Promotional tools", "Priority support"]', 7),
('enterprise', 'Enterprise', 'Business subscription', 
    '["Centralized billing", "Admin controls", "Usage analytics"]', 8);

-- =====================================================
-- INITIAL DATA - DEVICE TYPES
-- =====================================================

INSERT INTO device_type (code, name, description, category, capabilities, display_order) VALUES
('ios', 'iOS', 'Apple iPhone and iPad', 'mobile', 
    '["touch", "app", "offline", "bluetooth", "airplay"]', 1),
('android', 'Android', 'Android phones and tablets', 'mobile', 
    '["touch", "app", "offline", "bluetooth", "chromecast"]', 2),
('web', 'Web Browser', 'Desktop and mobile browsers', 'web', 
    '["streaming", "progressive_web_app"]', 3),
('windows', 'Windows', 'Windows desktop app', 'desktop', 
    '["app", "offline", "system_integration"]', 4),
('macos', 'macOS', 'Mac desktop app', 'desktop', 
    '["app", "offline", "system_integration", "airplay"]', 5),
('alexa', 'Amazon Alexa', 'Alexa-enabled devices', 'smart_speaker', 
    '["voice", "streaming", "multi_room"]', 6),
('google_home', 'Google Home', 'Google Assistant devices', 'smart_speaker', 
    '["voice", "streaming", "multi_room", "chromecast"]', 7),
('apple_tv', 'Apple TV', 'Apple TV streaming device', 'tv', 
    '["app", "4k", "spatial_audio", "airplay"]', 8),
('roku', 'Roku', 'Roku streaming devices', 'tv', 
    '["app", "4k", "voice_remote"]', 9),
('playstation', 'PlayStation', 'Sony PlayStation consoles', 'gaming', 
    '["app", "gaming_integration", "spatial_audio"]', 10),
('xbox', 'Xbox', 'Microsoft Xbox consoles', 'gaming', 
    '["app", "gaming_integration", "spatial_audio"]', 11),
('vr_headset', 'VR Headset', 'Virtual reality devices', 'vr', 
    '["immersive", "spatial_audio", "motion_tracking"]', 12),
('car', 'Automotive', 'In-car entertainment systems', 'automotive', 
    '["android_auto", "apple_carplay", "embedded"]', 13),
('wearable', 'Wearables', 'Smartwatches and fitness trackers', 'wearable', 
    '["limited_ui", "offline", "fitness_tracking"]', 14);

-- =====================================================
-- INITIAL DATA - DISTRIBUTION CHANNELS
-- =====================================================

INSERT INTO distribution_channel (code, name, description, channel_type, requirements, display_order) VALUES
('direct', 'Direct Distribution', 'Direct platform relationship', 'direct', 
    '["Platform agreement", "Direct API access", "Dedicated support"]', 1),
('aggregator', 'Digital Aggregator', 'Through distribution service', 'aggregator', 
    '["Aggregator account", "Service fees apply"]', 2),
('label', 'Record Label', 'Label distribution deal', 'label', 
    '["Label agreement", "Label handles distribution"]', 3),
('publisher', 'Music Publisher', 'Publishing administration', 'publisher', 
    '["Publishing agreement", "Composition rights"]', 4),
('collective', 'Rights Collective', 'Collective management', 'collective', 
    '["Membership required", "Territory specific"]', 5),
('sync_agent', 'Sync Agency', 'Synchronization licensing', 'sync', 
    '["Sync representation", "Placement fees"]', 6),
('white_label', 'White Label', 'White label service', 'white_label', 
    '["Branding rights", "Technical integration"]', 7),
('api', 'API Integration', 'Direct API submission', 'technical', 
    '["API credentials", "Technical knowledge"]', 8);

-- =====================================================
-- INITIAL DATA - DELIVERY METHODS
-- =====================================================

INSERT INTO delivery_method (code, name, description, technology_type, specifications, display_order) VALUES
('streaming', 'Streaming', 'Real-time streaming delivery', 'streaming', 
    '{"protocols": ["HLS", "DASH"], "drm": true}', 1),
('progressive_download', 'Progressive Download', 'Download while playing', 'download', 
    '{"resume_support": true, "partial_playback": true}', 2),
('download', 'Full Download', 'Complete file download', 'download', 
    '{"drm": "optional", "offline_playback": true}', 3),
('blockchain', 'Blockchain', 'Decentralized delivery', 'web3', 
    '{"networks": ["Ethereum", "Solana", "Polygon"]}', 4),
('ipfs', 'IPFS', 'InterPlanetary File System', 'web3', 
    '{"distributed": true, "permanent": true}', 5),
('p2p', 'Peer-to-Peer', 'P2P distribution', 'decentralized', 
    '{"protocol": "BitTorrent", "legal_only": true}', 6),
('satellite', 'Satellite', 'Satellite broadcast', 'broadcast', 
    '{"coverage": "global", "latency": "high"}', 7),
('terrestrial', 'Terrestrial Radio', 'FM/AM broadcast', 'broadcast', 
    '{"coverage": "regional", "quality": "variable"}', 8),
('cdn', 'CDN', 'Content Delivery Network', 'streaming', 
    '{"providers": ["Cloudflare", "Akamai", "Fastly"]}', 9);

-- =====================================================
-- INITIAL DATA - LINK TYPES
-- =====================================================

INSERT INTO link_type (code, name, description, url_pattern, parameters, display_order) VALUES
('artist_profile', 'Artist Profile', 'Link to artist profile page', 
    '{platform_url}/artist/{artist_id}', '["artist_id"]', 1),
('album_page', 'Album Page', 'Link to album page', 
    '{platform_url}/album/{album_id}', '["album_id"]', 2),
('track_page', 'Track Page', 'Link to individual track', 
    '{platform_url}/track/{track_id}', '["track_id"]', 3),
('playlist_page', 'Playlist Page', 'Link to playlist', 
    '{platform_url}/playlist/{playlist_id}', '["playlist_id"]', 4),
('share_link', 'Share Link', 'Shareable short link', 
    '{platform_url}/share/{content_id}', '["content_id", "type"]', 5),
('embed_player', 'Embed Player', 'Embeddable player code', 
    '<iframe src="{platform_url}/embed/{content_id}"></iframe>', '["content_id", "width", "height"]', 6),
('api_endpoint', 'API Endpoint', 'API access point', 
    '{api_base_url}/v{version}/{resource}', '["version", "resource", "id"]', 7),
('deep_link', 'Deep Link', 'Mobile app deep link', 
    '{platform_scheme}://{action}/{content_id}', '["action", "content_id"]', 8);

-- =====================================================
-- INITIAL DATA - MONETIZATION MODELS
-- =====================================================

INSERT INTO monetization_model (code, name, description, revenue_share_type, payment_terms, display_order) VALUES
('streaming_paid', 'Paid Streaming', 'Revenue from paid subscriptions', 'pro_rata', 
    '{"pool_percentage": 70, "calculation": "stream_share"}', 1),
('streaming_ad', 'Ad-Supported Streaming', 'Revenue from advertisements', 'pro_rata', 
    '{"pool_percentage": 50, "calculation": "stream_share"}', 2),
('download', 'Digital Download', 'One-time purchase', 'fixed', 
    '{"artist_share": 70, "platform_share": 30}', 3),
('sync_license', 'Sync Licensing', 'Synchronization fees', 'negotiated', 
    '{"typical_range": "50-50 to 80-20", "upfront": true}', 4),
('user_centric', 'User-Centric', 'Fan-based distribution', 'user_centric', 
    '{"subscription_allocation": "per_user_listening"}', 5),
('tipping', 'Fan Tipping', 'Direct fan support', 'direct', 
    '{"platform_fee": 10, "instant_payout": true}', 6),
('nft_primary', 'NFT Primary Sale', 'Initial NFT sale', 'fixed', 
    '{"artist_share": 85, "platform_share": 15}', 7),
('nft_secondary', 'NFT Secondary Sale', 'NFT resale royalties', 'smart_contract', 
    '{"royalty_percentage": 10, "automatic": true}', 8),
('subscription_artist', 'Artist Subscription', 'Direct artist subscriptions', 'direct', 
    '{"platform_fee": 15, "minimum_price": 2.99}', 9),
('virtual_concert', 'Virtual Concert', 'Live stream events', 'ticket_sales', 
    '{"platform_fee": 20, "instant_settlement": false}', 10);

-- =====================================================
-- INITIAL DATA - CONTENT DELIVERY SPECS
-- =====================================================

INSERT INTO content_delivery_spec (code, name, description, format_type, technical_specs, display_order) VALUES
('flac_44', 'FLAC 44.1kHz', 'CD Quality Lossless', 'audio', 
    '{"codec": "FLAC", "sample_rate": 44100, "bit_depth": 16}', 1),
('flac_96', 'FLAC 96kHz', 'High-Res Lossless', 'audio', 
    '{"codec": "FLAC", "sample_rate": 96000, "bit_depth": 24}', 2),
('flac_192', 'FLAC 192kHz', 'Ultra High-Res Lossless', 'audio', 
    '{"codec": "FLAC", "sample_rate": 192000, "bit_depth": 24}', 3),
('mp3_320', 'MP3 320kbps', 'High Quality MP3', 'audio', 
    '{"codec": "MP3", "bitrate": 320, "cbr": true}', 4),
('aac_256', 'AAC 256kbps', 'High Quality AAC', 'audio', 
    '{"codec": "AAC", "bitrate": 256, "profile": "LC"}', 5),
('opus_160', 'Opus 160kbps', 'Efficient streaming codec', 'audio', 
    '{"codec": "Opus", "bitrate": 160, "vbr": true}', 6),
('spatial_audio', 'Spatial Audio', 'Dolby Atmos Music', 'audio', 
    '{"codec": "EC-3", "channels": "7.1.4", "object_based": true}', 7),
('mqa', 'MQA', 'Master Quality Authenticated', 'audio', 
    '{"codec": "MQA", "unfolds": 3, "authenticated": true}', 8),
('video_4k', '4K Video', 'Ultra HD Video', 'video', 
    '{"resolution": "3840x2160", "codec": "H.265", "fps": 60}', 9),
('video_1080p', '1080p Video', 'Full HD Video', 'video', 
    '{"resolution": "1920x1080", "codec": "H.264", "fps": 30}', 10);

-- =====================================================
-- INITIAL DATA - PLATFORM REGIONS
-- =====================================================

INSERT INTO platform_region (code, name, description, parent_region_id, time_zone, languages, display_order) VALUES
('global', 'Global', 'Worldwide availability', NULL, 'UTC', 
    '["en"]', 1),
('north_america', 'North America', 'US, Canada, Mexico', NULL, 'America/New_York', 
    '["en", "es", "fr"]', 2),
('europe', 'Europe', 'European Union and UK', NULL, 'Europe/London', 
    '["en", "de", "fr", "es", "it", "nl", "pl", "pt", "sv"]', 3),
('asia_pacific', 'Asia Pacific', 'Asia and Pacific regions', NULL, 'Asia/Tokyo', 
    '["en", "zh", "ja", "ko", "hi", "th", "vi", "id"]', 4),
('latin_america', 'Latin America', 'Central and South America', NULL, 'America/Sao_Paulo', 
    '["es", "pt", "en"]', 5),
('middle_east', 'Middle East', 'Middle East and North Africa', NULL, 'Asia/Dubai', 
    '["ar", "en", "he", "fa"]', 6),
('africa', 'Africa', 'Sub-Saharan Africa', NULL, 'Africa/Lagos', 
    '["en", "fr", "sw", "ar", "pt"]', 7);

-- =====================================================
-- INITIAL DATA - MAJOR PLATFORMS (First 30)
-- =====================================================

INSERT INTO platform (
    code, name, legal_name, platform_type_id, platform_status_id,
    description, website_url, is_global, launch_date,
    default_monetization_model_id, revenue_share_percentage,
    requires_isrc, api_type, features
) VALUES
-- Major Streaming Platforms
('spotify', 'Spotify', 'Spotify AB', 
    (SELECT id FROM platform_type WHERE code = 'streaming'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'World\'s largest music streaming platform', 'https://spotify.com', TRUE, '2006-10-01',
    (SELECT id FROM monetization_model WHERE code = 'streaming_paid'), 70.00,
    TRUE, 'REST', 
    '{"canvas": true, "podcasts": true, "audiobooks": true, "ai_dj": true}'),

('apple_music', 'Apple Music', 'Apple Inc.', 
    (SELECT id FROM platform_type WHERE code = 'streaming'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Apple\'s premium music streaming service', 'https://music.apple.com', TRUE, '2015-06-30',
    (SELECT id FROM monetization_model WHERE code = 'streaming_paid'), 71.50,
    TRUE, 'REST', 
    '{"spatial_audio": true, "lossless": true, "music_videos": true, "radio": true}'),

('youtube_music', 'YouTube Music', 'Google LLC', 
    (SELECT id FROM platform_type WHERE code = 'streaming'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'YouTube\'s dedicated music streaming service', 'https://music.youtube.com', TRUE, '2018-05-22',
    (SELECT id FROM monetization_model WHERE code = 'streaming_paid'), 69.00,
    TRUE, 'REST', 
    '{"music_videos": true, "live_performances": true, "remixes": true}'),

('amazon_music', 'Amazon Music', 'Amazon.com Inc.', 
    (SELECT id FROM platform_type WHERE code = 'streaming'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Amazon\'s music streaming service', 'https://music.amazon.com', TRUE, '2007-09-25',
    (SELECT id FROM monetization_model WHERE code = 'streaming_paid'), 70.00,
    TRUE, 'REST', 
    '{"hd_streaming": true, "ultra_hd": true, "spatial_audio": true}'),

('tidal', 'TIDAL', 'Block, Inc.', 
    (SELECT id FROM platform_type WHERE code = 'streaming'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'High-fidelity music streaming', 'https://tidal.com', TRUE, '2014-10-28',
    (SELECT id FROM monetization_model WHERE code = 'streaming_paid'), 80.00,
    TRUE, 'REST', 
    '{"hifi": true, "master_quality": true, "dolby_atmos": true, "360_audio": true}'),

('deezer', 'Deezer', 'Deezer S.A.', 
    (SELECT id FROM platform_type WHERE code = 'streaming'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Global music streaming platform', 'https://deezer.com', TRUE, '2007-08-24',
    (SELECT id FROM monetization_model WHERE code = 'streaming_paid'), 70.00,
    TRUE, 'REST', 
    '{"flow": true, "songcatcher": true, "podcasts": true}'),

-- Social Media Platforms
('tiktok', 'TikTok', 'ByteDance Ltd.', 
    (SELECT id FROM platform_type WHERE code = 'social_video'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Short-form video platform with music integration', 'https://tiktok.com', TRUE, '2016-09-01',
    (SELECT id FROM monetization_model WHERE code = 'streaming_ad'), 50.00,
    TRUE, 'REST', 
    '{"sounds": true, "effects": true, "duets": true, "live": true}'),

('instagram', 'Instagram', 'Meta Platforms, Inc.', 
    (SELECT id FROM platform_type WHERE code = 'social'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Photo and video sharing with music features', 'https://instagram.com', TRUE, '2010-10-06',
    (SELECT id FROM monetization_model WHERE code = 'streaming_ad'), 50.00,
    TRUE, 'GraphQL', 
    '{"reels": true, "stories": true, "music_stickers": true}'),

('facebook', 'Facebook', 'Meta Platforms, Inc.', 
    (SELECT id FROM platform_type WHERE code = 'social'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Social network with music integration', 'https://facebook.com', TRUE, '2004-02-04',
    (SELECT id FROM monetization_model WHERE code = 'streaming_ad'), 50.00,
    FALSE, 'GraphQL', 
    '{"music_videos": true, "live_audio": true, "music_stickers": true}'),

('snapchat', 'Snapchat', 'Snap Inc.', 
    (SELECT id FROM platform_type WHERE code = 'social'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Multimedia messaging with music features', 'https://snapchat.com', TRUE, '2011-09-01',
    (SELECT id FROM monetization_model WHERE code = 'streaming_ad'), 45.00,
    FALSE, 'REST', 
    '{"sounds": true, "lenses": true, "spotlight": true}'),

-- Gaming Platforms
('roblox', 'Roblox', 'Roblox Corporation', 
    (SELECT id FROM platform_type WHERE code = 'gaming'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Gaming platform with music integration', 'https://roblox.com', TRUE, '2006-09-01',
    (SELECT id FROM monetization_model WHERE code = 'sync_license'), 50.00,
    FALSE, 'REST', 
    '{"virtual_concerts": true, "music_experiences": true, "radio": true}'),

('fortnite', 'Fortnite', 'Epic Games, Inc.', 
    (SELECT id FROM platform_type WHERE code = 'gaming'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Battle royale with virtual concerts', 'https://fortnite.com', TRUE, '2017-07-25',
    (SELECT id FROM monetization_model WHERE code = 'sync_license'), 50.00,
    FALSE, 'REST', 
    '{"concerts": true, "radio_stations": true, "emotes": true}'),

-- Regional Platforms
('qq_music', 'QQ Music', 'Tencent Music Entertainment', 
    (SELECT id FROM platform_type WHERE code = 'streaming'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'China\'s largest music streaming platform', 'https://y.qq.com', FALSE, '2005-01-01',
    (SELECT id FROM monetization_model WHERE code = 'streaming_paid'), 65.00,
    TRUE, 'REST', 
    '{"karaoke": true, "live_streaming": true, "social": true}'),

('netease_music', 'NetEase Cloud Music', 'NetEase, Inc.', 
    (SELECT id FROM platform_type WHERE code = 'streaming'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Chinese music streaming and social platform', 'https://music.163.com', FALSE, '2013-04-23',
    (SELECT id FROM monetization_model WHERE code = 'streaming_paid'), 65.00,
    TRUE, 'REST', 
    '{"social": true, "user_uploads": true, "podcasts": true}'),

('gaana', 'Gaana', 'Times Internet Limited', 
    (SELECT id FROM platform_type WHERE code = 'streaming'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'India\'s largest music streaming service', 'https://gaana.com', FALSE, '2010-04-01',
    (SELECT id FROM monetization_model WHERE code = 'streaming_paid'), 70.00,
    TRUE, 'REST', 
    '{"regional_content": true, "podcasts": true, "radio": true}'),

('jiosaavn', 'JioSaavn', 'Jio Platforms Limited', 
    (SELECT id FROM platform_type WHERE code = 'streaming'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Indian music streaming platform', 'https://jiosaavn.com', FALSE, '2007-01-01',
    (SELECT id FROM monetization_model WHERE code = 'streaming_paid'), 70.00,
    TRUE, 'REST', 
    '{"original_content": true, "podcasts": true, "radio": true}'),

('anghami', 'Anghami', 'Anghami Inc.', 
    (SELECT id FROM platform_type WHERE code = 'streaming'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Middle East\'s leading music platform', 'https://anghami.com', FALSE, '2012-11-01',
    (SELECT id FROM monetization_model WHERE code = 'streaming_paid'), 70.00,
    TRUE, 'REST', 
    '{"arabic_content": true, "podcasts": true, "live_radio": true}'),

('boomplay', 'Boomplay', 'Boomplay Limited', 
    (SELECT id FROM platform_type WHERE code = 'streaming'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Africa\'s largest music streaming platform', 'https://boomplay.com', FALSE, '2015-01-01',
    (SELECT id FROM monetization_model WHERE code = 'streaming_paid'), 65.00,
    TRUE, 'REST', 
    '{"african_content": true, "video": true, "buzz": true}'),

-- Podcast Platforms
('spotify_podcasts', 'Spotify Podcasts', 'Spotify AB', 
    (SELECT id FROM platform_type WHERE code = 'podcast'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Podcast hosting and distribution on Spotify', 'https://podcasters.spotify.com', TRUE, '2015-01-01',
    (SELECT id FROM monetization_model WHERE code = 'streaming_ad'), 50.00,
    FALSE, 'REST', 
    '{"exclusive_content": true, "video_podcasts": true, "analytics": true}'),

('apple_podcasts', 'Apple Podcasts', 'Apple Inc.', 
    (SELECT id FROM platform_type WHERE code = 'podcast'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Apple\'s podcast platform', 'https://podcasts.apple.com', TRUE, '2005-06-28',
    (SELECT id FROM monetization_model WHERE code = 'subscription_artist'), 70.00,
    FALSE, 'REST', 
    '{"subscriptions": true, "channels": true, "analytics": true}'),

-- Live Streaming
('twitch', 'Twitch', 'Amazon.com Inc.', 
    (SELECT id FROM platform_type WHERE code = 'live'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Live streaming platform with music category', 'https://twitch.tv', TRUE, '2011-06-06',
    (SELECT id FROM monetization_model WHERE code = 'streaming_ad'), 50.00,
    FALSE, 'REST', 
    '{"live_streaming": true, "clips": true, "raids": true, "bits": true}'),

('youtube_live', 'YouTube Live', 'Google LLC', 
    (SELECT id FROM platform_type WHERE code = 'live'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Live streaming on YouTube', 'https://youtube.com/live', TRUE, '2011-04-01',
    (SELECT id FROM monetization_model WHERE code = 'streaming_ad'), 55.00,
    FALSE, 'REST', 
    '{"super_chat": true, "memberships": true, "premieres": true}'),

-- Fitness Platforms
('peloton', 'Peloton', 'Peloton Interactive, Inc.', 
    (SELECT id FROM platform_type WHERE code = 'fitness'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Fitness platform with curated music', 'https://onepeloton.com', TRUE, '2014-01-01',
    (SELECT id FROM monetization_model WHERE code = 'sync_license'), 40.00,
    TRUE, 'REST', 
    '{"curated_playlists": true, "live_classes": true, "metrics": true}'),

-- NFT/Web3 Platforms
('opensea', 'OpenSea', 'OpenSea Inc.', 
    (SELECT id FROM platform_type WHERE code = 'nft'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Largest NFT marketplace', 'https://opensea.io', TRUE, '2017-12-20',
    (SELECT id FROM monetization_model WHERE code = 'nft_primary'), 2.50,
    FALSE, 'REST', 
    '{"music_nfts": true, "royalties": true, "auctions": true}'),

('audius', 'Audius', 'Audius Inc.', 
    (SELECT id FROM platform_type WHERE code = 'streaming'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Decentralized music streaming', 'https://audius.co', TRUE, '2019-09-01',
    (SELECT id FROM monetization_model WHERE code = 'user_centric'), 90.00,
    FALSE, 'REST', 
    '{"blockchain": true, "crypto_payments": true, "governance": true}'),

-- Traditional Platforms
('iheartradio', 'iHeartRadio', 'iHeartMedia Inc.', 
    (SELECT id FROM platform_type WHERE code = 'radio'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Digital radio and podcasting platform', 'https://iheart.com', TRUE, '2008-04-01',
    (SELECT id FROM monetization_model WHERE code = 'streaming_ad'), 50.00,
    TRUE, 'REST', 
    '{"live_radio": true, "podcasts": true, "custom_stations": true}'),

('siriusxm', 'SiriusXM', 'Sirius XM Holdings Inc.', 
    (SELECT id FROM platform_type WHERE code = 'radio'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Satellite and streaming radio', 'https://siriusxm.com', FALSE, '2008-07-29',
    (SELECT id FROM monetization_model WHERE code = 'streaming_paid'), 55.00,
    TRUE, 'REST', 
    '{"satellite": true, "exclusive_content": true, "howard_stern": true}'),

-- Download Stores
('itunes', 'iTunes Store', 'Apple Inc.', 
    (SELECT id FROM platform_type WHERE code = 'download'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Digital music download store', 'https://itunes.apple.com', TRUE, '2003-04-28',
    (SELECT id FROM monetization_model WHERE code = 'download'), 70.00,
    TRUE, 'REST', 
    '{"downloads": true, "pre_orders": true, "complete_album": true}'),

('amazon_music_store', 'Amazon Music Store', 'Amazon.com Inc.', 
    (SELECT id FROM platform_type WHERE code = 'download'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Digital music downloads', 'https://amazon.com/music', TRUE, '2007-09-25',
    (SELECT id FROM monetization_model WHERE code = 'download'), 70.00,
    TRUE, 'REST', 
    '{"mp3_downloads": true, "autorip": true}'),

-- Karaoke Platforms
('smule', 'Smule', 'Smule Inc.', 
    (SELECT id FROM platform_type WHERE code = 'karaoke'), 
    (SELECT id FROM platform_status WHERE code = 'active'),
    'Social karaoke platform', 'https://smule.com', TRUE, '2012-08-08',
    (SELECT id FROM monetization_model WHERE code = 'streaming_paid'), 50.00,
    TRUE, 'REST', 
    '{"duets": true, "video": true, "effects": true, "social": true}');

-- Note: This represents the first 30 major platforms. Additional platforms would include:
-- More regional platforms (Yandex Music, JOOX, KKBox, Melon, etc.)
-- More gaming platforms (Grand Theft Auto, Minecraft, etc.)
-- More fitness platforms (Apple Fitness+, Nike Training Club, etc.)
-- Emerging metaverse platforms (Decentraland, The Sandbox, etc.)
-- AI-powered platforms (Endel, Brain.fm, etc.)
-- More NFT marketplaces (Rarible, Foundation, etc.)
-- And many others...

-- =====================================================
-- INDEXES FOR PERFORMANCE
-- =====================================================

-- Platform search and filtering
CREATE INDEX idx_platform_search ON platform(name, code);
CREATE INDEX idx_platform_type_status ON platform(platform_type_id, platform_status_id);
CREATE INDEX idx_platform_integration ON platform(integration_status, integration_priority);
CREATE INDEX idx_platform_launch_dates ON platform(launch_date, sunset_date);

-- Territory availability
CREATE INDEX idx_territory_platform_active ON platform_territory_availability(platform_id, is_available, is_active);
CREATE INDEX idx_territory_dates ON platform_territory_availability(launch_date, sunset_date);

-- API and features
CREATE INDEX idx_api_platform_current ON platform_api_version(platform_id, is_current, is_active);
CREATE INDEX idx_feature_platform_available ON platform_feature(platform_id, is_available, is_active);

-- =====================================================
-- VIEWS FOR COMMON QUERIES
-- =====================================================

-- Active platforms with basic info
CREATE VIEW v_active_platforms AS
SELECT 
    p.id,
    p.code,
    p.name,
    pt.name AS platform_type,
    ps.name AS status,
    p.is_global,
    p.revenue_share_percentage,
    p.integration_status
FROM platform p
JOIN platform_type pt ON p.platform_type_id = pt.id
JOIN platform_status ps ON p.platform_status_id = ps.id
WHERE p.is_active = TRUE 
  AND ps.code IN ('active', 'beta', 'limited_access');

-- Platform territory coverage
CREATE VIEW v_platform_coverage AS
SELECT 
    p.code AS platform_code,
    p.name AS platform_name,
    COUNT(DISTINCT pta.territory_code) AS territory_count,
    GROUP_CONCAT(DISTINCT pta.territory_code ORDER BY pta.territory_code) AS territories
FROM platform p
LEFT JOIN platform_territory_availability pta ON p.id = pta.platform_id AND pta.is_available = TRUE
WHERE p.is_active = TRUE
GROUP BY p.id;

-- =====================================================
-- STORED PROCEDURES
-- =====================================================

DELIMITER //

-- Get platform details with all related data
CREATE PROCEDURE sp_get_platform_details(IN p_platform_code VARCHAR(50))
BEGIN
    -- Main platform info
    SELECT * FROM platform WHERE code = p_platform_code AND is_active = TRUE;
    
    -- Territory availability
    SELECT * FROM platform_territory_availability 
    WHERE platform_id = (SELECT id FROM platform WHERE code = p_platform_code)
    AND is_active = TRUE;
    
    -- Supported formats
    SELECT cds.* FROM platform_content_format pcf
    JOIN content_delivery_spec cds ON pcf.content_delivery_spec_id = cds.id
    WHERE pcf.platform_id = (SELECT id FROM platform WHERE code = p_platform_code)
    AND pcf.is_active = TRUE;
    
    -- Features
    SELECT * FROM platform_feature
    WHERE platform_id = (SELECT id FROM platform WHERE code = p_platform_code)
    AND is_active = TRUE;
    
    -- API versions
    SELECT * FROM platform_api_version
    WHERE platform_id = (SELECT id FROM platform WHERE code = p_platform_code)
    AND is_active = TRUE
    ORDER BY is_current DESC, version_number DESC;
END//

DELIMITER ;

-- =====================================================
-- TRIGGERS FOR AUDIT AND VALIDATION
-- =====================================================

DELIMITER //

-- Ensure only one current API version per platform
CREATE TRIGGER trg_platform_api_version_current
BEFORE INSERT ON platform_api_version
FOR EACH ROW
BEGIN
    IF NEW.is_current = TRUE THEN
        UPDATE platform_api_version 
        SET is_current = FALSE 
        WHERE platform_id = NEW.platform_id 
        AND id != NEW.id;
    END IF;
END//

-- Update platform sync timestamp
CREATE TRIGGER trg_platform_sync_update
AFTER UPDATE ON platform
FOR EACH ROW
BEGIN
    IF OLD.integration_status != NEW.integration_status 
       AND NEW.integration_status = 'synced' THEN
        SET NEW.last_sync_at = CURRENT_TIMESTAMP;
    END IF;
END//

DELIMITER ;

-- =====================================================
-- PERMISSIONS (EXAMPLE)
-- =====================================================
-- GRANT SELECT ON astro_music.platform TO 'astro_app'@'%';
-- GRANT SELECT, INSERT, UPDATE ON astro_music.platform_* TO 'astro_admin'@'%';

-- =====================================================
-- SECTION 11: IDENTIFIERS
-- =====================================================

-- Core identifier type definitions
CREATE TABLE identifier_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    standard_reference VARCHAR(100),
    issuing_organization VARCHAR(200),
    identifier_length VARCHAR(50),
    format_description TEXT,
    check_digit_algorithm_id INT UNSIGNED,
    validation_regex VARCHAR(500),
    example_format VARCHAR(200),
    url_pattern VARCHAR(500),
    api_endpoint VARCHAR(500),
    blockchain_compatible BOOLEAN DEFAULT FALSE,
    is_deprecated BOOLEAN DEFAULT FALSE,
    replacement_type_code VARCHAR(50),
    metadata JSON,
    sort_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_identifier_type_code (code),
    KEY idx_identifier_type_active (is_active),
    KEY idx_identifier_type_check_digit (check_digit_algorithm_id),
    KEY idx_identifier_type_deprecated (is_deprecated)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Format rules for identifiers
CREATE TABLE identifier_format (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    identifier_type_id INT UNSIGNED NOT NULL,
    format_version VARCHAR(20),
    format_name VARCHAR(200) NOT NULL,
    format_pattern VARCHAR(500) NOT NULL,
    segment_count INT,
    segment_definitions JSON,
    allowed_characters VARCHAR(200),
    case_sensitive BOOLEAN DEFAULT TRUE,
    prefix_required BOOLEAN DEFAULT FALSE,
    suffix_allowed BOOLEAN DEFAULT FALSE,
    effective_date DATE,
    expiry_date DATE,
    validation_rules JSON,
    metadata JSON,
    is_primary BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    KEY idx_identifier_format_type (identifier_type_id),
    KEY idx_identifier_format_dates (effective_date, expiry_date),
    KEY idx_identifier_format_primary (is_primary),
    CONSTRAINT fk_identifier_format_type FOREIGN KEY (identifier_type_id) REFERENCES identifier_type(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Check digit algorithms
CREATE TABLE check_digit_algorithm (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    algorithm_type VARCHAR(50),
    modulus INT,
    weights VARCHAR(200),
    calculation_method TEXT,
    implementation_code TEXT,
    test_cases JSON,
    supported_lengths VARCHAR(200),
    character_mapping JSON,
    metadata JSON,
    is_standard BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_check_digit_algorithm_code (code),
    KEY idx_check_digit_algorithm_type (algorithm_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Catalog prefix management
CREATE TABLE catalog_prefix (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    prefix VARCHAR(50) NOT NULL,
    owner_type VARCHAR(50),
    owner_id INT UNSIGNED,
    owner_name VARCHAR(500),
    identifier_type_id INT UNSIGNED NOT NULL,
    country_code CHAR(2),
    allocated_date DATE,
    expiry_date DATE,
    allocation_size INT,
    next_sequence BIGINT DEFAULT 1,
    format_pattern VARCHAR(200),
    pad_length INT DEFAULT 0,
    pad_character CHAR(1) DEFAULT '0',
    metadata JSON,
    is_reserved BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_catalog_prefix (prefix, identifier_type_id),
    KEY idx_catalog_prefix_owner (owner_type, owner_id),
    KEY idx_catalog_prefix_type (identifier_type_id),
    KEY idx_catalog_prefix_country (country_code),
    KEY idx_catalog_prefix_dates (allocated_date, expiry_date),
    CONSTRAINT fk_catalog_prefix_type FOREIGN KEY (identifier_type_id) REFERENCES identifier_type(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Barcode types
CREATE TABLE barcode_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    barcode_standard VARCHAR(100),
    length_options VARCHAR(200),
    check_digit_algorithm_id INT UNSIGNED,
    encoding_type VARCHAR(50),
    symbology VARCHAR(100),
    country_specific BOOLEAN DEFAULT FALSE,
    industry_codes JSON,
    metadata JSON,
    is_retail BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_barcode_type_code (code),
    KEY idx_barcode_type_algorithm (check_digit_algorithm_id),
    KEY idx_barcode_type_retail (is_retail),
    CONSTRAINT fk_barcode_type_algorithm FOREIGN KEY (check_digit_algorithm_id) REFERENCES check_digit_algorithm(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Identifier issuing agencies
CREATE TABLE identifier_issuing_agency (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(500) NOT NULL,
    acronym VARCHAR(50),
    identifier_type_id INT UNSIGNED NOT NULL,
    country_code CHAR(2),
    region VARCHAR(100),
    website VARCHAR(500),
    api_endpoint VARCHAR(500),
    contact_email VARCHAR(255),
    contact_phone VARCHAR(50),
    address TEXT,
    registration_url VARCHAR(500),
    verification_url VARCHAR(500),
    prefix_ranges JSON,
    allocation_rules JSON,
    metadata JSON,
    is_official BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_issuing_agency_code (code),
    KEY idx_issuing_agency_type (identifier_type_id),
    KEY idx_issuing_agency_country (country_code),
    KEY idx_issuing_agency_official (is_official),
    CONSTRAINT fk_issuing_agency_type FOREIGN KEY (identifier_type_id) REFERENCES identifier_type(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Complex validation rules beyond format
CREATE TABLE identifier_validation_rule (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    identifier_type_id INT UNSIGNED NOT NULL,
    rule_name VARCHAR(200) NOT NULL,
    rule_type VARCHAR(50),
    validation_order INT DEFAULT 0,
    condition_type VARCHAR(50),
    condition_value TEXT,
    validation_function TEXT,
    error_message VARCHAR(500),
    applies_to_country CHAR(2),
    applies_to_format_id INT UNSIGNED,
    effective_date DATE,
    expiry_date DATE,
    metadata JSON,
    is_mandatory BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    KEY idx_validation_rule_type (identifier_type_id),
    KEY idx_validation_rule_order (validation_order),
    KEY idx_validation_rule_country (applies_to_country),
    KEY idx_validation_rule_format (applies_to_format_id),
    KEY idx_validation_rule_dates (effective_date, expiry_date),
    CONSTRAINT fk_validation_rule_type FOREIGN KEY (identifier_type_id) REFERENCES identifier_type(id),
    CONSTRAINT fk_validation_rule_format FOREIGN KEY (applies_to_format_id) REFERENCES identifier_format(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Country-specific identifier variations
CREATE TABLE identifier_country_variant (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    identifier_type_id INT UNSIGNED NOT NULL,
    country_code CHAR(2) NOT NULL,
    variant_name VARCHAR(200),
    local_name VARCHAR(200),
    format_override VARCHAR(500),
    prefix_override VARCHAR(50),
    length_override VARCHAR(50),
    validation_regex_override VARCHAR(500),
    issuing_agency_id INT UNSIGNED,
    additional_rules JSON,
    metadata JSON,
    is_mandatory BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_country_variant (identifier_type_id, country_code),
    KEY idx_country_variant_country (country_code),
    KEY idx_country_variant_agency (issuing_agency_id),
    CONSTRAINT fk_country_variant_type FOREIGN KEY (identifier_type_id) REFERENCES identifier_type(id),
    CONSTRAINT fk_country_variant_agency FOREIGN KEY (issuing_agency_id) REFERENCES identifier_issuing_agency(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Auto-generation sequences
CREATE TABLE identifier_generation_sequence (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    sequence_name VARCHAR(200) NOT NULL,
    identifier_type_id INT UNSIGNED NOT NULL,
    prefix VARCHAR(50),
    current_value BIGINT DEFAULT 0,
    min_value BIGINT DEFAULT 1,
    max_value BIGINT,
    increment_by INT DEFAULT 1,
    pad_length INT DEFAULT 0,
    pad_character CHAR(1) DEFAULT '0',
    format_pattern VARCHAR(200),
    owner_type VARCHAR(50),
    owner_id INT UNSIGNED,
    allocation_date DATETIME,
    last_used_date DATETIME,
    metadata JSON,
    is_exhausted BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_generation_sequence (sequence_name),
    KEY idx_generation_sequence_type (identifier_type_id),
    KEY idx_generation_sequence_prefix (prefix),
    KEY idx_generation_sequence_owner (owner_type, owner_id),
    KEY idx_generation_sequence_exhausted (is_exhausted),
    CONSTRAINT fk_generation_sequence_type FOREIGN KEY (identifier_type_id) REFERENCES identifier_type(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- External registries for verification
CREATE TABLE identifier_registry (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(500) NOT NULL,
    identifier_type_id INT UNSIGNED NOT NULL,
    registry_type VARCHAR(50),
    api_base_url VARCHAR(500),
    api_key_required BOOLEAN DEFAULT FALSE,
    authentication_type VARCHAR(50),
    lookup_endpoint VARCHAR(500),
    validation_endpoint VARCHAR(500),
    registration_endpoint VARCHAR(500),
    rate_limit INT,
    response_format VARCHAR(50),
    field_mapping JSON,
    metadata JSON,
    is_official BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_identifier_registry_code (code),
    KEY idx_identifier_registry_type (identifier_type_id),
    KEY idx_identifier_registry_official (is_official),
    CONSTRAINT fk_identifier_registry_type FOREIGN KEY (identifier_type_id) REFERENCES identifier_type(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Prefix ranges assigned to entities
CREATE TABLE identifier_prefix_allocation (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    identifier_type_id INT UNSIGNED NOT NULL,
    prefix_start VARCHAR(50) NOT NULL,
    prefix_end VARCHAR(50),
    allocated_to_type VARCHAR(50),
    allocated_to_id INT UNSIGNED,
    allocated_to_name VARCHAR(500),
    allocation_date DATE NOT NULL,
    expiry_date DATE,
    country_code CHAR(2),
    issuing_agency_id INT UNSIGNED,
    allocation_size BIGINT,
    used_count BIGINT DEFAULT 0,
    reservation_note TEXT,
    metadata JSON,
    is_exclusive BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    KEY idx_prefix_allocation_type (identifier_type_id),
    KEY idx_prefix_allocation_range (prefix_start, prefix_end),
    KEY idx_prefix_allocation_entity (allocated_to_type, allocated_to_id),
    KEY idx_prefix_allocation_dates (allocation_date, expiry_date),
    KEY idx_prefix_allocation_country (country_code),
    KEY idx_prefix_allocation_agency (issuing_agency_id),
    CONSTRAINT fk_prefix_allocation_type FOREIGN KEY (identifier_type_id) REFERENCES identifier_type(id),
    CONSTRAINT fk_prefix_allocation_agency FOREIGN KEY (issuing_agency_id) REFERENCES identifier_issuing_agency(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Identifier status types
CREATE TABLE identifier_status_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    status_category VARCHAR(50),
    allows_use BOOLEAN DEFAULT TRUE,
    allows_transfer BOOLEAN DEFAULT TRUE,
    requires_validation BOOLEAN DEFAULT FALSE,
    transition_rules JSON,
    metadata JSON,
    sort_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_identifier_status_code (code),
    KEY idx_identifier_status_category (status_category),
    KEY idx_identifier_status_allows (allows_use, allows_transfer)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- How identifiers relate
CREATE TABLE identifier_relationship_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    from_identifier_type_id INT UNSIGNED,
    to_identifier_type_id INT UNSIGNED,
    relationship_category VARCHAR(50),
    is_bidirectional BOOLEAN DEFAULT FALSE,
    cardinality VARCHAR(20),
    validation_rules JSON,
    metadata JSON,
    sort_order INT DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_relationship_type_code (code),
    KEY idx_relationship_type_from (from_identifier_type_id),
    KEY idx_relationship_type_to (to_identifier_type_id),
    KEY idx_relationship_type_category (relationship_category),
    CONSTRAINT fk_relationship_type_from FOREIGN KEY (from_identifier_type_id) REFERENCES identifier_type(id),
    CONSTRAINT fk_relationship_type_to FOREIGN KEY (to_identifier_type_id) REFERENCES identifier_type(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Maps between different identifier systems
CREATE TABLE identifier_mapping (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    source_identifier_type_id INT UNSIGNED NOT NULL,
    source_identifier VARCHAR(200) NOT NULL,
    target_identifier_type_id INT UNSIGNED NOT NULL,
    target_identifier VARCHAR(200) NOT NULL,
    relationship_type_id INT UNSIGNED,
    mapping_confidence DECIMAL(5,4),
    mapping_source VARCHAR(200),
    verification_status VARCHAR(50),
    verified_date DATETIME,
    metadata JSON,
    is_canonical BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_identifier_mapping (source_identifier_type_id, source_identifier, target_identifier_type_id, target_identifier),
    KEY idx_mapping_source (source_identifier_type_id, source_identifier),
    KEY idx_mapping_target (target_identifier_type_id, target_identifier),
    KEY idx_mapping_relationship (relationship_type_id),
    KEY idx_mapping_verification (verification_status),
    CONSTRAINT fk_mapping_source_type FOREIGN KEY (source_identifier_type_id) REFERENCES identifier_type(id),
    CONSTRAINT fk_mapping_target_type FOREIGN KEY (target_identifier_type_id) REFERENCES identifier_type(id),
    CONSTRAINT fk_mapping_relationship FOREIGN KEY (relationship_type_id) REFERENCES identifier_relationship_type(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- UPC ranges allocated to labels
CREATE TABLE upc_label_range (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    label_id INT UNSIGNED,
    label_name VARCHAR(500) NOT NULL,
    company_prefix VARCHAR(20) NOT NULL,
    range_start VARCHAR(20) NOT NULL,
    range_end VARCHAR(20) NOT NULL,
    total_capacity INT,
    used_count INT DEFAULT 0,
    allocation_date DATE,
    expiry_date DATE,
    gs1_member_id VARCHAR(50),
    country_code CHAR(2),
    barcode_type_id INT UNSIGNED,
    metadata JSON,
    is_reserved BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_upc_range (range_start, range_end),
    KEY idx_upc_range_label (label_id),
    KEY idx_upc_range_prefix (company_prefix),
    KEY idx_upc_range_dates (allocation_date, expiry_date),
    KEY idx_upc_range_country (country_code),
    KEY idx_upc_range_barcode (barcode_type_id),
    CONSTRAINT fk_upc_range_barcode FOREIGN KEY (barcode_type_id) REFERENCES barcode_type(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- ISNI registration agencies
CREATE TABLE isni_registration_agency (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(500) NOT NULL,
    country_code CHAR(2),
    region VARCHAR(100),
    agency_type VARCHAR(50),
    registration_url VARCHAR(500),
    api_endpoint VARCHAR(500),
    prefix_allocation VARCHAR(50),
    sector_focus VARCHAR(200),
    contact_info JSON,
    service_fees JSON,
    processing_time_days INT,
    metadata JSON,
    is_accredited BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_isni_agency_code (code),
    KEY idx_isni_agency_country (country_code),
    KEY idx_isni_agency_type (agency_type),
    KEY idx_isni_agency_accredited (is_accredited)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- IPI base number allocations
CREATE TABLE ipi_allocation (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    ipi_base_number VARCHAR(20) NOT NULL,
    ipi_name_number VARCHAR(20),
    allocation_society_code VARCHAR(10),
    allocation_date DATE,
    entity_type VARCHAR(50),
    entity_id INT UNSIGNED,
    entity_name VARCHAR(500),
    territory_code CHAR(2),
    status VARCHAR(50),
    validation_date DATETIME,
    metadata JSON,
    is_verified BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_ipi_base (ipi_base_number),
    KEY idx_ipi_name (ipi_name_number),
    KEY idx_ipi_society (allocation_society_code),
    KEY idx_ipi_entity (entity_type, entity_id),
    KEY idx_ipi_territory (territory_code),
    KEY idx_ipi_status (status)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Physical media matrix numbers
CREATE TABLE matrix_number_format (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    format_code VARCHAR(50) NOT NULL,
    format_name VARCHAR(200) NOT NULL,
    media_type VARCHAR(50),
    manufacturer_code VARCHAR(20),
    plant_code VARCHAR(20),
    format_pattern VARCHAR(200),
    example VARCHAR(100),
    era_start_year INT,
    era_end_year INT,
    country_code CHAR(2),
    additional_markings JSON,
    decoding_guide TEXT,
    metadata JSON,
    is_legacy BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_matrix_format_code (format_code),
    KEY idx_matrix_format_media (media_type),
    KEY idx_matrix_format_manufacturer (manufacturer_code),
    KEY idx_matrix_format_era (era_start_year, era_end_year),
    KEY idx_matrix_format_country (country_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Label catalog number systems
CREATE TABLE catalog_number_system (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    system_code VARCHAR(50) NOT NULL,
    system_name VARCHAR(200) NOT NULL,
    label_id INT UNSIGNED,
    label_name VARCHAR(500),
    format_pattern VARCHAR(200),
    prefix_pattern VARCHAR(50),
    suffix_options JSON,
    separator_character VARCHAR(5),
    case_convention VARCHAR(20),
    numbering_scheme VARCHAR(50),
    reset_frequency VARCHAR(50),
    example_numbers JSON,
    legacy_formats JSON,
    metadata JSON,
    effective_date DATE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_catalog_system_code (system_code),
    KEY idx_catalog_system_label (label_id),
    KEY idx_catalog_system_date (effective_date)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Emerging blockchain identifiers
CREATE TABLE blockchain_identifier_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    blockchain_network VARCHAR(100),
    standard_name VARCHAR(100),
    contract_address VARCHAR(200),
    token_standard VARCHAR(50),
    identifier_format VARCHAR(200),
    hash_algorithm VARCHAR(50),
    metadata_standard VARCHAR(100),
    resolver_url VARCHAR(500),
    example_identifier VARCHAR(500),
    documentation_url VARCHAR(500),
    metadata JSON,
    is_nft_based BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    UNIQUE KEY uk_blockchain_type_code (code),
    KEY idx_blockchain_type_network (blockchain_network),
    KEY idx_blockchain_type_standard (token_standard),
    KEY idx_blockchain_type_nft (is_nft_based)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Legacy identifier conversions
CREATE TABLE identifier_migration_history (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    source_system VARCHAR(200),
    source_identifier VARCHAR(200),
    source_type VARCHAR(50),
    target_identifier VARCHAR(200),
    target_type_id INT UNSIGNED,
    migration_date DATETIME NOT NULL,
    migration_method VARCHAR(100),
    conversion_rules JSON,
    validation_status VARCHAR(50),
    validation_errors JSON,
    migrated_by VARCHAR(200),
    rollback_identifier VARCHAR(200),
    metadata JSON,
    is_verified BOOLEAN DEFAULT FALSE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    KEY idx_migration_source (source_system, source_identifier),
    KEY idx_migration_target (target_type_id, target_identifier),
    KEY idx_migration_date (migration_date),
    KEY idx_migration_status (validation_status),
    CONSTRAINT fk_migration_target_type FOREIGN KEY (target_type_id) REFERENCES identifier_type(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Duplicate/collision handling
CREATE TABLE identifier_collision_resolution (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    identifier_type_id INT UNSIGNED NOT NULL,
    identifier_value VARCHAR(200) NOT NULL,
    collision_count INT DEFAULT 2,
    first_occurrence_date DATETIME,
    resolution_method VARCHAR(100),
    resolution_date DATETIME,
    primary_owner_type VARCHAR(50),
    primary_owner_id INT UNSIGNED,
    affected_entities JSON,
    resolution_notes TEXT,
    metadata JSON,
    is_resolved BOOLEAN DEFAULT FALSE,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    PRIMARY KEY (id),
    KEY idx_collision_type_value (identifier_type_id, identifier_value),
    KEY idx_collision_resolution (is_resolved),
    KEY idx_collision_owner (primary_owner_type, primary_owner_id),
    CONSTRAINT fk_collision_type FOREIGN KEY (identifier_type_id) REFERENCES identifier_type(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Create indexes for performance
CREATE INDEX idx_identifier_type_blockchain ON identifier_type(blockchain_compatible);
CREATE INDEX idx_identifier_format_version ON identifier_format(format_version);
CREATE INDEX idx_prefix_allocation_size ON identifier_prefix_allocation(allocation_size);
CREATE INDEX idx_upc_range_capacity ON upc_label_range(total_capacity, used_count);
CREATE INDEX idx_identifier_mapping_confidence ON identifier_mapping(mapping_confidence);

-- Create views for identifier validation and lookup
CREATE VIEW v_active_identifier_types AS
SELECT 
    it.id,
    it.code,
    it.name,
    it.validation_regex,
    it.check_digit_algorithm_id,
    cda.code as check_digit_algorithm,
    it.blockchain_compatible,
    COUNT(DISTINCT iif.id) as format_count,
    COUNT(DISTINCT iia.id) as agency_count
FROM identifier_type it
LEFT JOIN check_digit_algorithm cda ON it.check_digit_algorithm_id = cda.id
LEFT JOIN identifier_format iif ON it.id = iif.identifier_type_id AND iif.is_active = TRUE
LEFT JOIN identifier_issuing_agency iia ON it.id = iia.identifier_type_id AND iia.is_active = TRUE
WHERE it.is_active = TRUE AND it.is_deprecated = FALSE
GROUP BY it.id;

CREATE VIEW v_identifier_validation_rules AS
SELECT 
    it.code as identifier_type,
    ivr.rule_name,
    ivr.rule_type,
    ivr.validation_order,
    ivr.condition_type,
    ivr.error_message,
    ivr.applies_to_country,
    iif.format_name as applies_to_format
FROM identifier_validation_rule ivr
JOIN identifier_type it ON ivr.identifier_type_id = it.id
LEFT JOIN identifier_format iif ON ivr.applies_to_format_id = iif.id
WHERE ivr.is_active = TRUE
    AND (ivr.effective_date IS NULL OR ivr.effective_date <= CURDATE())
    AND (ivr.expiry_date IS NULL OR ivr.expiry_date >= CURDATE())
ORDER BY it.code, ivr.validation_order;

CREATE VIEW v_prefix_allocations AS
SELECT 
    it.code as identifier_type,
    ipa.prefix_start,
    ipa.prefix_end,
    ipa.allocated_to_name,
    ipa.allocation_date,
    ipa.expiry_date,
    ipa.country_code,
    iia.name as issuing_agency,
    ipa.allocation_size,
    ipa.used_count,
    ROUND((ipa.used_count / ipa.allocation_size) * 100, 2) as usage_percentage
FROM identifier_prefix_allocation ipa
JOIN identifier_type it ON ipa.identifier_type_id = it.id
LEFT JOIN identifier_issuing_agency iia ON ipa.issuing_agency_id = iia.id
WHERE ipa.is_active = TRUE
    AND (ipa.expiry_date IS NULL OR ipa.expiry_date >= CURDATE());

-- Initial configuration data
-- Check digit algorithms
INSERT INTO check_digit_algorithm (code, name, algorithm_type, modulus, weights, calculation_method) VALUES
('LUHN', 'Luhn Algorithm', 'modulus', 10, '2,1', 'Standard Luhn/mod-10 algorithm'),
('MOD11', 'Modulus 11', 'modulus', 11, '2,3,4,5,6,7', 'Weighted mod-11 check digit'),
('MOD10', 'Modulus 10', 'modulus', 10, '1,3', 'Simple mod-10 algorithm'),
('ISBN10', 'ISBN-10 Check Digit', 'weighted', 11, '10,9,8,7,6,5,4,3,2', 'ISBN-10 specific algorithm'),
('ISBN13', 'ISBN-13 Check Digit', 'modulus', 10, '1,3', 'EAN-13 algorithm for ISBN'),
('UPC', 'UPC Check Digit', 'modulus', 10, '3,1', 'Standard UPC check digit'),
('EAN13', 'EAN-13 Check Digit', 'modulus', 10, '1,3', 'Standard EAN-13 algorithm'),
('ISRC', 'ISRC Check Character', 'custom', NULL, NULL, 'No check digit - format validation only'),
('ISWC', 'ISWC Check Digit', 'modulus', 10, '1,1', 'ISWC-specific check digit'),
('ISNI', 'ISNI Check Digit', 'modulus', 11, '2,1', 'ISO 27729 check digit'),
('ISAN', 'ISAN Check Digits', 'custom', NULL, NULL, 'Dual check digit system'),
('GS1', 'GS1 Check Digit', 'modulus', 10, '3,1', 'Standard GS1 check digit');

-- Identifier types
INSERT INTO identifier_type (code, name, standard_reference, identifier_length, check_digit_algorithm_id, validation_regex) VALUES
('ISRC', 'International Standard Recording Code', 'ISO 3901', '12', 8, '^[A-Z]{2}[A-Z0-9]{3}[0-9]{2}[0-9]{5}$'),
('ISWC', 'International Standard Musical Work Code', 'ISO 15707', '11', 9, '^T[0-9]{3}[0-9]{3}[0-9]{3}[0-9]$'),
('ISNI', 'International Standard Name Identifier', 'ISO 27729', '16', 10, '^[0-9]{4}[0-9]{4}[0-9]{4}[0-9]{3}[0-9X]$'),
('IPI', 'Interested Party Information', 'CISAC', '11', NULL, '^[0-9]{11}$'),
('UPC', 'Universal Product Code', 'GS1', '12', 6, '^[0-9]{12}$'),
('EAN13', 'European Article Number', 'GS1', '13', 7, '^[0-9]{13}$'),
('GRID', 'Global Release Identifier', 'IFPI', '18', NULL, '^A1-[A-Z0-9]{5}-[A-Z0-9]{10}$'),
('ISAN', 'International Standard Audiovisual Number', 'ISO 15706', '26', 11, '^ISAN [0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[A-Z]$'),
('DOI', 'Digital Object Identifier', 'ISO 26324', 'variable', NULL, '^10\\.[0-9]{4,}/[-._;()/:A-Za-z0-9]+$'),
('ISCC', 'International Standard Content Code', 'ISO 24138', 'variable', NULL, '^ISCC:[A-Z]{3}-[A-Z0-9]+$'),
('CATALOG', 'Catalog Number', 'Industry', 'variable', NULL, '^[A-Za-z0-9-]+$'),
('MATRIX', 'Matrix Number', 'Industry', 'variable', NULL, '^[A-Za-z0-9-/]+$'),
('CUSTOM', 'Custom Identifier', 'Internal', 'variable', NULL, '.*'),
('IPDA', 'International Performer Database ID', 'SCAPR', '10', NULL, '^[0-9]{10}$'),
('VIAF', 'Virtual International Authority File', 'OCLC', 'variable', NULL, '^[0-9]+$'),
('JAN', 'Japanese Article Number', 'GS1 Japan', '13', 7, '^49[0-9]{11}$'),
('GTIN14', 'Global Trade Item Number 14', 'GS1', '14', 12, '^[0-9]{14}$'),
('ISMN', 'International Standard Music Number', 'ISO 10957', '13', 7, '^9790[0-9]{9}$'),
('GRN', 'Global Recording Number', 'Industry', '18', NULL, '^[A-Z0-9]{18}$'),
('MWLI', 'Musical Work License Identifier', 'CISAC', '13', NULL, '^MW[0-9]{11}$'),
('SAN', 'Standard Address Number', 'Industry', '7', NULL, '^[0-9]{7}$'),
('UMID', 'Unique Material Identifier', 'SMPTE', '32', NULL, '^[0-9A-F]{64}$'),
('NFT_ETH', 'Ethereum NFT Token ID', 'ERC-721', 'variable', NULL, '^0x[0-9a-fA-F]+$'),
('NFT_SOL', 'Solana NFT Address', 'Metaplex', '44', NULL, '^[1-9A-HJ-NP-Za-km-z]{44}$'),
('SPDX', 'Software Package Data Exchange ID', 'Linux Foundation', 'variable', NULL, '^SPDXRef-[A-Za-z0-9.-]+$'),
('RRID', 'Research Resource Identifier', 'SciCrunch', 'variable', NULL, '^RRID:[A-Z]+_[A-Z0-9]+$'),
('LEI', 'Legal Entity Identifier', 'ISO 17442', '20', NULL, '^[A-Z0-9]{4}00[A-Z0-9]{14}$'),
('GRID_INST', 'Global Research Identifier Database', 'Digital Science', 'variable', NULL, '^grid\\.[0-9]+\\.[a-f0-9]+$'),
('PURL', 'Persistent Uniform Resource Locator', 'OCLC', 'variable', NULL, '^https?://purl\\.');

-- Identifier status types
INSERT INTO identifier_status_type (code, name, status_category, allows_use, allows_transfer) VALUES
('ACTIVE', 'Active', 'operational', TRUE, TRUE),
('RESERVED', 'Reserved', 'operational', FALSE, TRUE),
('DEPRECATED', 'Deprecated', 'lifecycle', TRUE, FALSE),
('SUSPENDED', 'Suspended', 'operational', FALSE, FALSE),
('PENDING', 'Pending Activation', 'lifecycle', FALSE, FALSE),
('EXPIRED', 'Expired', 'lifecycle', FALSE, FALSE),
('REVOKED', 'Revoked', 'lifecycle', FALSE, FALSE),
('MIGRATED', 'Migrated', 'lifecycle', FALSE, FALSE),
('DUPLICATE', 'Duplicate', 'error', FALSE, FALSE),
('INVALID', 'Invalid', 'error', FALSE, FALSE),
('QUARANTINE', 'Quarantined', 'operational', FALSE, FALSE),
('ARCHIVED', 'Archived', 'lifecycle', FALSE, FALSE);

-- Identifier relationship types
INSERT INTO identifier_relationship_type (code, name, relationship_category, cardinality) VALUES
('RECORDING_TO_WORK', 'Recording to Musical Work', 'content', 'many-to-many'),
('PRODUCT_TO_RECORDING', 'Product to Recording', 'distribution', 'one-to-many'),
('RELEASE_TO_PRODUCT', 'Release to Product', 'distribution', 'one-to-many'),
('ARTIST_TO_RECORDING', 'Artist to Recording', 'attribution', 'many-to-many'),
('WRITER_TO_WORK', 'Writer to Musical Work', 'attribution', 'many-to-many'),
('LABEL_TO_RELEASE', 'Label to Release', 'distribution', 'many-to-one'),
('PUBLISHER_TO_WORK', 'Publisher to Work', 'rights', 'many-to-many'),
('SAME_AS', 'Same Entity', 'equivalence', 'one-to-one'),
('REPLACES', 'Replaces', 'lifecycle', 'one-to-one'),
('VARIANT_OF', 'Variant Of', 'variant', 'many-to-one'),
('PARENT_CHILD', 'Parent-Child', 'hierarchy', 'one-to-many'),
('COMPILATION_TRACK', 'Compilation Track', 'collection', 'many-to-many');

-- Barcode types
INSERT INTO barcode_type (code, name, barcode_standard, check_digit_algorithm_id, encoding_type) VALUES
('UPC-A', 'UPC-A', 'GS1', 6, 'numeric'),
('EAN-13', 'EAN-13', 'GS1', 7, 'numeric'),
('EAN-8', 'EAN-8', 'GS1', 7, 'numeric'),
('UPC-E', 'UPC-E', 'GS1', 6, 'numeric'),
('CODE128', 'Code 128', 'ISO/IEC 15417', NULL, 'alphanumeric'),
('CODE39', 'Code 39', 'ISO/IEC 16388', NULL, 'alphanumeric'),
('ITF-14', 'ITF-14', 'GS1', 12, 'numeric'),
('DATAMATRIX', 'Data Matrix', 'ISO/IEC 16022', NULL, 'binary'),
('QRCODE', 'QR Code', 'ISO/IEC 18004', NULL, 'binary'),
('PDF417', 'PDF417', 'ISO/IEC 15438', NULL, 'binary');

-- Add stored procedures for identifier operations
DELIMITER //

CREATE FUNCTION calculate_check_digit(
    p_value VARCHAR(200),
    p_algorithm_id INT
) RETURNS CHAR(1)
DETERMINISTIC
READS SQL DATA
BEGIN
    DECLARE v_algorithm_code VARCHAR(50);
    DECLARE v_check_digit CHAR(1);
    
    SELECT code INTO v_algorithm_code
    FROM check_digit_algorithm
    WHERE id = p_algorithm_id;
    
    -- Implement check digit calculations based on algorithm
    CASE v_algorithm_code
        WHEN 'LUHN' THEN
            -- Luhn algorithm implementation
            SET v_check_digit = '0'; -- Placeholder
        WHEN 'UPC' THEN
            -- UPC check digit implementation
            SET v_check_digit = '0'; -- Placeholder
        ELSE
            SET v_check_digit = '0';
    END CASE;
    
    RETURN v_check_digit;
END//

CREATE PROCEDURE validate_identifier(
    IN p_identifier VARCHAR(200),
    IN p_type_code VARCHAR(50),
    OUT p_is_valid BOOLEAN,
    OUT p_error_message VARCHAR(500)
)
BEGIN
    DECLARE v_type_id INT;
    DECLARE v_validation_regex VARCHAR(500);
    DECLARE v_check_algorithm_id INT;
    
    -- Get identifier type info
    SELECT id, validation_regex, check_digit_algorithm_id
    INTO v_type_id, v_validation_regex, v_check_algorithm_id
    FROM identifier_type
    WHERE code = p_type_code AND is_active = TRUE;
    
    -- Basic validation
    IF v_type_id IS NULL THEN
        SET p_is_valid = FALSE;
        SET p_error_message = 'Invalid identifier type';
    ELSEIF v_validation_regex IS NOT NULL AND p_identifier NOT REGEXP v_validation_regex THEN
        SET p_is_valid = FALSE;
        SET p_error_message = 'Format validation failed';
    ELSE
        SET p_is_valid = TRUE;
        SET p_error_message = NULL;
    END IF;
END//

CREATE PROCEDURE generate_identifier(
    IN p_type_code VARCHAR(50),
    IN p_prefix VARCHAR(50),
    IN p_owner_type VARCHAR(50),
    IN p_owner_id INT,
    OUT p_identifier VARCHAR(200)
)
BEGIN
    DECLARE v_sequence_id INT;
    DECLARE v_next_value BIGINT;
    DECLARE v_format_pattern VARCHAR(200);
    DECLARE v_pad_length INT;
    DECLARE v_pad_character CHAR(1);
    
    -- Get or create sequence
    SELECT id, current_value + increment_by, format_pattern, pad_length, pad_character
    INTO v_sequence_id, v_next_value, v_format_pattern, v_pad_length, v_pad_character
    FROM identifier_generation_sequence
    WHERE identifier_type_id = (SELECT id FROM identifier_type WHERE code = p_type_code)
        AND (prefix = p_prefix OR (prefix IS NULL AND p_prefix IS NULL))
        AND owner_type = p_owner_type
        AND owner_id = p_owner_id
        AND is_active = TRUE
        AND is_exhausted = FALSE
    FOR UPDATE;
    
    IF v_sequence_id IS NOT NULL THEN
        -- Update sequence
        UPDATE identifier_generation_sequence
        SET current_value = v_next_value,
            last_used_date = NOW()
        WHERE id = v_sequence_id;
        
        -- Format identifier
        SET p_identifier = CONCAT(
            IFNULL(p_prefix, ''),
            LPAD(v_next_value, v_pad_length, v_pad_character)
        );
    ELSE
        SET p_identifier = NULL;
    END IF;
END//

DELIMITER ;

-- =====================================================
-- SECTION 13: FINANCIAL
-- =====================================================

-- Table: royalty_source_type
-- Defines where royalties originate from
CREATE TABLE IF NOT EXISTS royalty_source_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL, -- 'streaming', 'physical', 'sync', 'performance', 'digital', 'blockchain'
    metadata JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    requires_reporting BOOLEAN NOT NULL DEFAULT TRUE,
    reporting_frequency VARCHAR(50),
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_royalty_source_type_code (code),
    KEY idx_royalty_source_type_category (category),
    KEY idx_royalty_source_type_active (is_active),
    KEY idx_royalty_source_type_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: royalty_type
-- Comprehensive royalty categories in music industry
CREATE TABLE IF NOT EXISTS royalty_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    source_type_id INT UNSIGNED,
    category VARCHAR(50) NOT NULL, -- 'mechanical', 'performance', 'sync', 'master', 'neighboring', 'digital'
    calculation_method VARCHAR(50), -- 'pro_rata', 'user_centric', 'fixed', 'percentage', 'hybrid'
    metadata JSON,
    tax_treatment VARCHAR(50),
    minimum_threshold DECIMAL(10,2),
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    requires_registration BOOLEAN NOT NULL DEFAULT FALSE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_royalty_type_code (code),
    KEY idx_royalty_type_category (category),
    KEY idx_royalty_type_source (source_type_id),
    KEY idx_royalty_type_active (is_active),
    KEY idx_royalty_type_order (display_order),
    CONSTRAINT fk_royalty_type_source FOREIGN KEY (source_type_id) REFERENCES royalty_source_type(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: statement_type
-- Types of financial statements and reports
CREATE TABLE IF NOT EXISTS statement_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    frequency VARCHAR(50), -- 'monthly', 'quarterly', 'semi_annual', 'annual', 'on_demand'
    format VARCHAR(50), -- 'pdf', 'csv', 'excel', 'xml', 'json'
    metadata JSON,
    required_fields JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    auto_generate BOOLEAN NOT NULL DEFAULT FALSE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_statement_type_code (code),
    KEY idx_statement_type_frequency (frequency),
    KEY idx_statement_type_active (is_active),
    KEY idx_statement_type_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: payment_method
-- Comprehensive payment methods including traditional and blockchain
CREATE TABLE IF NOT EXISTS payment_method (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL, -- 'bank', 'card', 'digital_wallet', 'crypto', 'check', 'cash'
    provider VARCHAR(100),
    processing_time_days INT,
    minimum_amount DECIMAL(10,2),
    maximum_amount DECIMAL(15,2),
    fee_structure JSON,
    supported_currencies JSON,
    metadata JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    requires_kyc BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_payment_method_code (code),
    KEY idx_payment_method_category (category),
    KEY idx_payment_method_provider (provider),
    KEY idx_payment_method_active (is_active),
    KEY idx_payment_method_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: payment_frequency
-- Payment schedule frequencies
CREATE TABLE IF NOT EXISTS payment_frequency (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    days_interval INT,
    months_interval INT,
    payment_day INT, -- Day of month/week for payments
    metadata JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_payment_frequency_code (code),
    KEY idx_payment_frequency_active (is_active),
    KEY idx_payment_frequency_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: tax_type
-- Comprehensive tax categories for global operations
CREATE TABLE IF NOT EXISTS tax_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL, -- 'income', 'withholding', 'vat', 'gst', 'royalty', 'capital_gains'
    applicable_to VARCHAR(50), -- 'individual', 'corporation', 'both'
    calculation_method VARCHAR(50),
    metadata JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_tax_type_code (code),
    KEY idx_tax_type_category (category),
    KEY idx_tax_type_active (is_active),
    KEY idx_tax_type_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: withholding_type
-- Withholding tax types for international payments
CREATE TABLE IF NOT EXISTS withholding_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    default_rate DECIMAL(5,2),
    treaty_eligible BOOLEAN NOT NULL DEFAULT TRUE,
    documentation_required JSON,
    metadata JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_withholding_type_code (code),
    KEY idx_withholding_type_active (is_active),
    KEY idx_withholding_type_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: fee_type
-- All types of fees in the music industry
CREATE TABLE IF NOT EXISTS fee_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL, -- 'admin', 'transaction', 'platform', 'registration', 'legal', 'audit'
    calculation_type VARCHAR(50), -- 'fixed', 'percentage', 'tiered', 'hybrid'
    default_amount DECIMAL(10,2),
    default_percentage DECIMAL(5,2),
    metadata JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    is_negotiable BOOLEAN NOT NULL DEFAULT FALSE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_fee_type_code (code),
    KEY idx_fee_type_category (category),
    KEY idx_fee_type_active (is_active),
    KEY idx_fee_type_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: commission_type
-- Commission structures in music industry
CREATE TABLE IF NOT EXISTS commission_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL, -- 'management', 'agent', 'publisher', 'distributor', 'sync_agent'
    default_rate DECIMAL(5,2),
    rate_structure JSON,
    applies_to VARCHAR(50), -- 'gross', 'net', 'specific_income'
    metadata JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_commission_type_code (code),
    KEY idx_commission_type_category (category),
    KEY idx_commission_type_active (is_active),
    KEY idx_commission_type_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: currency_type
-- Currency categories and classifications
CREATE TABLE IF NOT EXISTS currency_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(10) NOT NULL, -- ISO 4217 code
    numeric_code VARCHAR(3),
    name VARCHAR(100) NOT NULL,
    symbol VARCHAR(10),
    decimal_places INT NOT NULL DEFAULT 2,
    category VARCHAR(50) NOT NULL, -- 'fiat', 'crypto', 'stablecoin', 'cbdc'
    blockchain_network VARCHAR(50), -- For crypto: 'ethereum', 'bitcoin', 'solana', etc.
    smart_contract_address VARCHAR(255), -- For tokens
    country_code VARCHAR(2), -- ISO 3166-1 alpha-2
    metadata JSON,
    exchange_rate_source VARCHAR(100),
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    is_supported BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_currency_type_code (code),
    KEY idx_currency_type_category (category),
    KEY idx_currency_type_country (country_code),
    KEY idx_currency_type_active (is_active),
    KEY idx_currency_type_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: card_type
-- Payment card types (NEW)
CREATE TABLE IF NOT EXISTS card_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    brand VARCHAR(50) NOT NULL,
    category VARCHAR(50) NOT NULL, -- 'credit', 'debit', 'prepaid', 'virtual'
    bin_ranges JSON, -- Bank Identification Number ranges
    validation_rules JSON,
    supported_currencies JSON,
    metadata JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_card_type_code (code),
    KEY idx_card_type_brand (brand),
    KEY idx_card_type_category (category),
    KEY idx_card_type_active (is_active),
    KEY idx_card_type_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: price_tier
-- Pricing tiers for royalty calculations (NEW)
CREATE TABLE IF NOT EXISTS price_tier (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL, -- 'streaming', 'download', 'physical', 'sync', 'nft'
    tier_type VARCHAR(50), -- 'free', 'premium', 'family', 'student', 'hi_fi'
    price_range_min DECIMAL(10,2),
    price_range_max DECIMAL(10,2),
    royalty_multiplier DECIMAL(5,3) DEFAULT 1.000,
    metadata JSON,
    display_order INT NOT NULL DEFAULT 0,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_price_tier_code (code),
    KEY idx_price_tier_category (category),
    KEY idx_price_tier_type (tier_type),
    KEY idx_price_tier_active (is_active),
    KEY idx_price_tier_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert initial data for royalty_source_type
INSERT INTO royalty_source_type (code, name, description, category, metadata, display_order) VALUES
('STREAMING_INTERACTIVE', 'Interactive Streaming', 'On-demand streaming services', 'streaming', '{"requires_pro_rata": true}', 10),
('STREAMING_NON_INTERACTIVE', 'Non-Interactive Streaming', 'Radio-style streaming services', 'streaming', '{"requires_playlist_data": true}', 20),
('DOWNLOAD_PERMANENT', 'Permanent Downloads', 'Digital purchases', 'digital', '{"one_time_payment": true}', 30),
('DOWNLOAD_LIMITED', 'Limited Downloads', 'Rental or time-limited downloads', 'digital', '{"expiry_tracking": true}', 40),
('PHYSICAL_CD', 'Physical CD Sales', 'Compact disc sales', 'physical', '{"requires_isrc": true}', 50),
('PHYSICAL_VINYL', 'Physical Vinyl Sales', 'Vinyl record sales', 'physical', '{"premium_format": true}', 60),
('SYNC_FILM', 'Film Synchronization', 'Movie soundtrack licensing', 'sync', '{"requires_cue_sheet": true}', 70),
('SYNC_TV', 'TV Synchronization', 'Television show licensing', 'sync', '{"requires_episode_data": true}', 80),
('SYNC_ADVERTISING', 'Advertising Sync', 'Commercial and ad licensing', 'sync', '{"territory_specific": true}', 90),
('SYNC_GAMING', 'Gaming Synchronization', 'Video game licensing', 'sync', '{"platform_specific": true}', 100),
('PERFORMANCE_LIVE', 'Live Performance', 'Concert and live show royalties', 'performance', '{"venue_reporting": true}', 110),
('PERFORMANCE_BROADCAST', 'Broadcast Performance', 'Radio and TV broadcast', 'performance', '{"audience_measurement": true}', 120),
('PERFORMANCE_DIGITAL', 'Digital Performance', 'Webcasting and internet radio', 'performance', '{"geo_restriction": true}', 130),
('NFT_PRIMARY', 'NFT Primary Sales', 'Initial NFT minting and sales', 'blockchain', '{"smart_contract": true}', 140),
('NFT_SECONDARY', 'NFT Secondary Sales', 'NFT resale royalties', 'blockchain', '{"perpetual_royalty": true}', 150),
('WEB3_DEFI', 'DeFi Music Platforms', 'Decentralized finance music platforms', 'blockchain', '{"yield_farming": true}', 160),
('METAVERSE', 'Metaverse Performances', 'Virtual world concerts and events', 'blockchain', '{"avatar_licensing": true}', 170),
('UGC_PLATFORM', 'User Generated Content', 'Social media and UGC platforms', 'digital', '{"content_id": true}', 180),
('PODCAST', 'Podcast Usage', 'Podcast background music', 'digital', '{"episode_tracking": true}', 190),
('RINGTONE', 'Ringtones', 'Mobile ringtone sales', 'digital', '{"carrier_specific": true}', 200),
('KARAOKE', 'Karaoke Licensing', 'Karaoke system licensing', 'performance', '{"venue_type": true}', 210),
('EDUCATIONAL', 'Educational Use', 'School and university licensing', 'sync', '{"institution_type": true}', 220),
('LIBRARY_MUSIC', 'Music Library', 'Production music library licensing', 'sync', '{"non_exclusive": true}', 230),
('STEM_LICENSING', 'Stem Licensing', 'Individual track stem licensing', 'digital', '{"daw_integration": true}', 240),
('AI_TRAINING', 'AI Training Data', 'Machine learning dataset licensing', 'digital', '{"usage_restrictions": true}', 250),
('SAMPLE_CLEARANCE', 'Sample Clearance', 'Sampling and interpolation rights', 'digital', '{"original_work_split": true}', 260),
('MERCHANDISING', 'Merchandising Rights', 'Merchandise featuring music/lyrics', 'physical', '{"product_categories": true}', 270),
('SHEET_MUSIC', 'Sheet Music Sales', 'Printed and digital sheet music', 'physical', '{"arrangement_type": true}', 280),
('REMIX_LICENSE', 'Remix Licensing', 'Official remix rights', 'digital', '{"derivative_work": true}', 290),
('HOLOGRAM_PERFORMANCE', 'Hologram Shows', 'Holographic performance licensing', 'performance', '{"technology_fee": true}', 300);

-- Insert initial data for royalty_type
INSERT INTO royalty_type (code, name, description, category, calculation_method, metadata, tax_treatment, display_order) VALUES
('MECH_STREAMING', 'Mechanical Streaming', 'Mechanical royalties from streaming', 'mechanical', 'pro_rata', '{"statutory_rate": true}', 'ordinary', 10),
('MECH_DOWNLOAD', 'Mechanical Download', 'Mechanical royalties from downloads', 'mechanical', 'fixed', '{"rate_per_unit": 0.091}', 'ordinary', 20),
('MECH_PHYSICAL', 'Mechanical Physical', 'Mechanical royalties from physical sales', 'mechanical', 'percentage', '{"rate": 9.1}', 'ordinary', 30),
('PERF_STREAMING', 'Performance Streaming', 'Performance royalties from streaming', 'performance', 'pro_rata', '{"pro_affiliation": true}', 'ordinary', 40),
('PERF_BROADCAST', 'Performance Broadcast', 'Radio/TV broadcast performance', 'performance', 'percentage', '{"audience_based": true}', 'ordinary', 50),
('PERF_LIVE', 'Performance Live', 'Live venue performance royalties', 'performance', 'percentage', '{"venue_capacity": true}', 'ordinary', 60),
('SYNC_MASTER', 'Sync Master Use', 'Master recording synchronization', 'sync', 'fixed', '{"negotiated": true}', 'ordinary', 70),
('SYNC_COMPOSITION', 'Sync Composition', 'Musical composition synchronization', 'sync', 'fixed', '{"mfn_clause": true}', 'ordinary', 80),
('MASTER_STREAMING', 'Master Streaming', 'Master recording streaming royalties', 'master', 'pro_rata', '{"label_share": true}', 'ordinary', 90),
('MASTER_SALES', 'Master Sales', 'Master recording sales royalties', 'master', 'percentage', '{"recoupable": true}', 'ordinary', 100),
('NEIGHBORING_PERFORMANCE', 'Neighboring Rights Performance', 'Performer royalties', 'neighboring', 'percentage', '{"union_rates": true}', 'ordinary', 110),
('NEIGHBORING_BROADCAST', 'Neighboring Rights Broadcast', 'Broadcast performer royalties', 'neighboring', 'percentage', '{"collective_management": true}', 'ordinary', 120),
('DIGITAL_PERFORMANCE', 'Digital Performance', 'Webcasting performance royalties', 'digital', 'user_centric', '{"soundexchange": true}', 'ordinary', 130),
('NFT_PRIMARY_SALE', 'NFT Primary Sale', 'Initial NFT sale royalties', 'digital', 'percentage', '{"smart_contract": true}', 'capital_gains', 140),
('NFT_RESALE', 'NFT Resale Royalty', 'Secondary NFT market royalties', 'digital', 'percentage', '{"perpetual": true}', 'capital_gains', 150),
('STEM_ROYALTY', 'Stem Usage Royalty', 'Individual stem licensing royalties', 'digital', 'fixed', '{"per_stem": true}', 'ordinary', 160),
('REMIX_ROYALTY', 'Remix Royalty', 'Remix version royalties', 'digital', 'percentage', '{"split_agreement": true}', 'ordinary', 170),
('SAMPLE_ROYALTY', 'Sample Usage Royalty', 'Sampling royalties', 'digital', 'hybrid', '{"upfront_plus_royalty": true}', 'ordinary', 180),
('PRINT_ROYALTY', 'Print Music Royalty', 'Sheet music royalties', 'mechanical', 'percentage', '{"retail_price": true}', 'ordinary', 190),
('KARAOKE_ROYALTY', 'Karaoke Royalty', 'Karaoke system royalties', 'performance', 'fixed', '{"per_machine": true}', 'ordinary', 200),
('RINGTONE_ROYALTY', 'Ringtone Royalty', 'Mobile ringtone royalties', 'digital', 'fixed', '{"carrier_rate": true}', 'ordinary', 210),
('LIBRARY_BLANKET', 'Library Blanket License', 'Production library royalties', 'sync', 'fixed', '{"annual_fee": true}', 'ordinary', 220),
('EDUCATIONAL_ROYALTY', 'Educational Use Royalty', 'Educational licensing royalties', 'sync', 'fixed', '{"per_student": true}', 'ordinary', 230),
('AI_DATASET_ROYALTY', 'AI Dataset Royalty', 'Machine learning data royalties', 'digital', 'fixed', '{"per_epoch": true}', 'ordinary', 240),
('METAVERSE_PERFORMANCE', 'Metaverse Performance', 'Virtual world performance royalties', 'digital', 'hybrid', '{"attendance_based": true}', 'ordinary', 250),
('PODCAST_ROYALTY', 'Podcast Usage', 'Podcast background music royalties', 'digital', 'pro_rata', '{"episode_reach": true}', 'ordinary', 260),
('UGC_MICRO_ROYALTY', 'UGC Micro Royalty', 'User-generated content micro-royalties', 'digital', 'pro_rata', '{"view_based": true}', 'ordinary', 270),
('HOLOGRAM_ROYALTY', 'Hologram Performance', 'Holographic show royalties', 'performance', 'percentage', '{"tech_fee_included": true}', 'ordinary', 280),
('MERCH_ROYALTY', 'Merchandising Royalty', 'Merchandise featuring music/lyrics', 'sync', 'percentage', '{"product_based": true}', 'ordinary', 290),
('WEB3_YIELD', 'Web3 Yield Farming', 'DeFi platform yield royalties', 'digital', 'percentage', '{"apy_based": true}', 'capital_gains', 300);

-- Insert initial data for statement_type
INSERT INTO statement_type (code, name, description, frequency, format, metadata, display_order) VALUES
('ROYALTY_MONTHLY', 'Monthly Royalty Statement', 'Monthly royalty earnings report', 'monthly', 'pdf', '{"includes_details": true}', 10),
('ROYALTY_QUARTERLY', 'Quarterly Royalty Statement', 'Quarterly consolidated royalty report', 'quarterly', 'pdf', '{"summary_view": true}', 20),
('STREAMING_DETAILED', 'Streaming Detail Report', 'Detailed streaming analytics', 'monthly', 'csv', '{"includes_territories": true}', 30),
('SALES_REPORT', 'Sales Report', 'Physical and digital sales report', 'monthly', 'excel', '{"by_format": true}', 40),
('SYNC_STATEMENT', 'Sync License Statement', 'Synchronization revenue report', 'quarterly', 'pdf', '{"by_project": true}', 50),
('PERFORMANCE_STATEMENT', 'Performance Statement', 'PRO performance royalty statement', 'quarterly', 'pdf', '{"by_territory": true}', 60),
('TAX_ANNUAL', 'Annual Tax Statement', 'Year-end tax documentation', 'annual', 'pdf', '{"includes_1099": true}', 70),
('ADVANCE_RECOUPMENT', 'Advance Recoupment Statement', 'Advance balance and recoupment', 'monthly', 'pdf', '{"balance_tracking": true}', 80),
('AUDIT_REPORT', 'Audit Report', 'Financial audit results', 'on_demand', 'pdf', '{"certified": true}', 90),
('PAYMENT_HISTORY', 'Payment History', 'Historical payment records', 'on_demand', 'csv', '{"searchable": true}', 100),
('WITHHOLDING_STATEMENT', 'Withholding Tax Statement', 'International withholding details', 'quarterly', 'pdf', '{"by_country": true}', 110),
('NFT_EARNINGS', 'NFT Earnings Report', 'Blockchain and NFT revenue', 'monthly', 'json', '{"includes_gas_fees": true}', 120),
('CATALOG_VALUATION', 'Catalog Valuation Report', 'Asset valuation statement', 'annual', 'pdf', '{"certified_valuation": true}', 130),
('EXPENSE_REPORT', 'Expense Report', 'Deductible expenses summary', 'quarterly', 'excel', '{"categorized": true}', 140),
('DISTRIBUTION_STATEMENT', 'Distribution Statement', 'Digital distribution earnings', 'monthly', 'csv', '{"by_platform": true}', 150),
('NEIGHBORING_RIGHTS', 'Neighboring Rights Statement', 'Performer royalty statement', 'semi_annual', 'pdf', '{"by_recording": true}', 160),
('MECHANICAL_STATEMENT', 'Mechanical Statement', 'Mechanical royalty details', 'quarterly', 'pdf', '{"by_composition": true}', 170),
('CUSTOM_REPORT', 'Custom Report', 'User-defined custom report', 'on_demand', 'csv', '{"configurable": true}', 180),
('BLOCKCHAIN_AUDIT', 'Blockchain Audit Trail', 'Immutable blockchain transaction log', 'on_demand', 'json', '{"cryptographic_proof": true}', 190),
('REAL_TIME_DASHBOARD', 'Real-Time Analytics', 'Live earnings dashboard data', 'on_demand', 'json', '{"websocket_enabled": true}', 200);

-- Insert initial data for payment_method
INSERT INTO payment_method (code, name, description, category, provider, processing_time_days, metadata, display_order) VALUES
('BANK_WIRE', 'Bank Wire Transfer', 'International wire transfer', 'bank', 'SWIFT', 3, '{"requires_iban": true}', 10),
('BANK_ACH', 'ACH Transfer', 'US domestic ACH transfer', 'bank', 'ACH Network', 2, '{"us_only": true}', 20),
('BANK_SEPA', 'SEPA Transfer', 'European SEPA transfer', 'bank', 'SEPA', 1, '{"eu_only": true}', 30),
('PAYPAL', 'PayPal', 'PayPal payment', 'digital_wallet', 'PayPal', 0, '{"instant": true}', 40),
('PAYONEER', 'Payoneer', 'Payoneer global payment', 'digital_wallet', 'Payoneer', 1, '{"global": true}', 50),
('WISE', 'Wise (TransferWise)', 'Wise international transfer', 'digital_wallet', 'Wise', 1, '{"low_fees": true}', 60),
('STRIPE', 'Stripe', 'Stripe payment processing', 'card', 'Stripe', 0, '{"api_enabled": true}', 70),
('CRYPTO_BTC', 'Bitcoin', 'Bitcoin cryptocurrency', 'crypto', 'Bitcoin Network', 0, '{"confirmations": 3}', 80),
('CRYPTO_ETH', 'Ethereum', 'Ethereum cryptocurrency', 'crypto', 'Ethereum Network', 0, '{"gas_fees": true}', 90),
('CRYPTO_USDC', 'USD Coin', 'USDC stablecoin', 'crypto', 'Circle', 0, '{"stable": true}', 100),
('CRYPTO_SOL', 'Solana', 'Solana cryptocurrency', 'crypto', 'Solana Network', 0, '{"low_fees": true}', 110),
('CHECK_US', 'US Check', 'Paper check (US)', 'check', 'Bank', 5, '{"mail_time": true}', 120),
('CHECK_INTL', 'International Check', 'International paper check', 'check', 'Bank', 10, '{"clearing_time": true}', 130),
('VENMO', 'Venmo', 'Venmo payment (US)', 'digital_wallet', 'PayPal', 0, '{"us_only": true}', 140),
('ZELLE', 'Zelle', 'Zelle instant payment', 'bank', 'Early Warning Services', 0, '{"us_banks": true}', 150),
('APPLE_PAY', 'Apple Pay', 'Apple Pay digital wallet', 'digital_wallet', 'Apple', 0, '{"ios_only": true}', 160),
('GOOGLE_PAY', 'Google Pay', 'Google Pay digital wallet', 'digital_wallet', 'Google', 0, '{"android_supported": true}', 170),
('ALIPAY', 'Alipay', 'Alipay (China)', 'digital_wallet', 'Ant Group', 0, '{"china_market": true}', 180),
('WECHAT_PAY', 'WeChat Pay', 'WeChat Pay (China)', 'digital_wallet', 'Tencent', 0, '{"china_market": true}', 190),
('REVOLUT', 'Revolut', 'Revolut digital banking', 'digital_wallet', 'Revolut', 0, '{"multi_currency": true}', 200),
('CASH_APP', 'Cash App', 'Square Cash App', 'digital_wallet', 'Block Inc', 0, '{"bitcoin_enabled": true}', 210),
('SKRILL', 'Skrill', 'Skrill digital wallet', 'digital_wallet', 'Paysafe', 1, '{"gaming_popular": true}', 220),
('CBDC_DIGITAL_DOLLAR', 'Digital Dollar', 'US CBDC (future)', 'crypto', 'Federal Reserve', 0, '{"future_payment": true}', 230),
('STABLECOIN_TETHER', 'Tether USDT', 'Tether stablecoin', 'crypto', 'Tether', 0, '{"widely_used": true}', 240),
('LAYER2_POLYGON', 'Polygon MATIC', 'Polygon Layer 2', 'crypto', 'Polygon Network', 0, '{"ethereum_scaling": true}', 250),
('PREPAID_CARD', 'Prepaid Card', 'Prepaid debit card', 'card', 'Various', 2, '{"reloadable": true}', 260),
('VIRTUAL_CARD', 'Virtual Card', 'Virtual payment card', 'card', 'Various', 0, '{"instant_issue": true}', 270),
('BANK_DRAFT', 'Bank Draft', 'Certified bank draft', 'check', 'Bank', 3, '{"guaranteed_funds": true}', 280),
('CRYPTO_NFT', 'NFT Transfer', 'Direct NFT royalty transfer', 'crypto', 'Various', 0, '{"smart_contract": true}', 290),
('BACS', 'BACS Transfer', 'UK BACS payment', 'bank', 'BACS', 3, '{"uk_only": true}', 300);

-- Insert initial data for payment_frequency
INSERT INTO payment_frequency (code, name, description, days_interval, months_interval, payment_day, metadata, display_order) VALUES
('DAILY', 'Daily', 'Daily payments', 1, NULL, NULL, '{"high_volume": true}', 10),
('WEEKLY', 'Weekly', 'Weekly payments', 7, NULL, 5, '{"day_of_week": "Friday"}', 20),
('BIWEEKLY', 'Bi-Weekly', 'Every two weeks', 14, NULL, NULL, '{"payroll_common": true}', 30),
('MONTHLY', 'Monthly', 'Monthly payments', NULL, 1, 15, '{"most_common": true}', 40),
('QUARTERLY', 'Quarterly', 'Every three months', NULL, 3, 15, '{"standard": true}', 50),
('SEMI_ANNUAL', 'Semi-Annual', 'Twice per year', NULL, 6, 15, '{"traditional": true}', 60),
('ANNUAL', 'Annual', 'Once per year', NULL, 12, 15, '{"year_end": true}', 70),
('ON_DEMAND', 'On Demand', 'Payment upon request', NULL, NULL, NULL, '{"manual": true}', 80),
('THRESHOLD', 'Threshold-Based', 'Payment at threshold', NULL, NULL, NULL, '{"min_amount": 100}', 90),
('REAL_TIME', 'Real-Time', 'Instant payment', 0, NULL, NULL, '{"streaming": true}', 100),
('BI_MONTHLY', 'Bi-Monthly', 'Twice per month', NULL, NULL, NULL, '{"days": [1, 15]}', 110),
('CUSTOM', 'Custom Schedule', 'User-defined schedule', NULL, NULL, NULL, '{"flexible": true}', 120);

-- Insert initial data for tax_type
INSERT INTO tax_type (code, name, description, category, applicable_to, metadata, display_order) VALUES
('INCOME_TAX', 'Income Tax', 'Standard income tax', 'income', 'both', '{"progressive": true}', 10),
('WITHHOLDING_US', 'US Withholding Tax', 'US source income withholding', 'withholding', 'both', '{"rate": 30}', 20),
('WITHHOLDING_EU', 'EU Withholding Tax', 'European withholding tax', 'withholding', 'both', '{"varies_by_country": true}', 30),
('VAT', 'Value Added Tax', 'European VAT', 'vat', 'both', '{"reverse_charge": true}', 40),
('GST', 'Goods and Services Tax', 'GST (various countries)', 'gst', 'both', '{"input_credit": true}', 50),
('ROYALTY_TAX', 'Royalty Withholding', 'Specific royalty withholding', 'royalty', 'both', '{"treaty_rates": true}', 60),
('CAPITAL_GAINS', 'Capital Gains Tax', 'Tax on asset appreciation', 'capital_gains', 'both', '{"holding_period": true}', 70),
('SOCIAL_SECURITY', 'Social Security Tax', 'Social insurance contributions', 'income', 'individual', '{"employer_match": true}', 80),
('CORPORATE_TAX', 'Corporate Tax', 'Corporation income tax', 'income', 'corporation', '{"deductions": true}', 90),
('DIGITAL_SERVICES', 'Digital Services Tax', 'Tax on digital revenues', 'vat', 'corporation', '{"tech_companies": true}', 100),
('ENTERTAINMENT_TAX', 'Entertainment Tax', 'Live performance tax', 'income', 'both', '{"venue_collected": true}', 110),
('STATE_TAX', 'State Income Tax', 'US state-level tax', 'income', 'both', '{"varies_by_state": true}', 120),
('CITY_TAX', 'City/Local Tax', 'Municipal taxes', 'income', 'both', '{"local_rates": true}', 130),
('SOLIDARITY_TAX', 'Solidarity Surcharge', 'Additional social tax', 'income', 'both', '{"high_earners": true}', 140),
('CHURCH_TAX', 'Church Tax', 'Religious organization tax', 'income', 'individual', '{"optional": true}', 150);

-- Insert initial data for withholding_type
INSERT INTO withholding_type (code, name, description, default_rate, treaty_eligible, documentation_required, metadata, display_order) VALUES
('US_STANDARD', 'US Standard Withholding', 'Standard 30% US withholding', 30.00, TRUE, '["W-8BEN", "W-8BEN-E"]', '{"backup_withholding": 24}', 10),
('US_TREATY', 'US Treaty Rate', 'Reduced treaty withholding', 10.00, TRUE, '["W-8BEN", "Tax_Residency_Certificate"]', '{"varies_by_country": true}', 20),
('EU_ROYALTY', 'EU Royalty Withholding', 'EU royalty withholding', 15.00, TRUE, '["EU_Tax_Certificate"]', '{"directive_applies": true}', 30),
('UK_WITHHOLDING', 'UK Withholding', 'UK source income', 20.00, TRUE, '["UK_Tax_Form"]', '{"brexit_updated": true}', 40),
('JAPAN_ROYALTY', 'Japan Royalty Tax', 'Japanese royalty withholding', 20.42, TRUE, '["Form_3"]', '{"includes_local": true}', 50),
('CANADA_WITHHOLDING', 'Canada Withholding', 'Canadian withholding', 25.00, TRUE, '["NR301"]', '{"provincial_varies": true}', 60),
('AUSTRALIA_ROYALTY', 'Australia Royalty', 'Australian royalty withholding', 30.00, TRUE, '["Tax_File_Number"]', '{"reduced_rates": true}', 70),
('GERMANY_WITHHOLDING', 'Germany Withholding', 'German withholding tax', 26.375, TRUE, '["Certificate_of_Residence"]', '{"includes_solidarity": true}', 80),
('FRANCE_WITHHOLDING', 'France Withholding', 'French withholding tax', 33.33, TRUE, '["Form_5000"]', '{"social_charges": true}', 90),
('KOREA_WITHHOLDING', 'Korea Withholding', 'Korean withholding tax', 22.00, TRUE, '["Tax_Residency_Cert"]', '{"includes_local": true}', 100),
('BRAZIL_WITHHOLDING', 'Brazil Withholding', 'Brazilian withholding', 15.00, TRUE, '["RFB_Certificate"]', '{"CIDE_additional": true}', 110),
('INDIA_WITHHOLDING', 'India TDS', 'Indian Tax Deducted at Source', 10.00, TRUE, '["Form_10F", "Tax_Residency"]', '{"PAN_required": true}', 120),
('CHINA_WITHHOLDING', 'China Withholding', 'Chinese withholding tax', 10.00, TRUE, '["Tax_Certificate"]', '{"SAT_approval": true}', 130),
('MEXICO_WITHHOLDING', 'Mexico Withholding', 'Mexican withholding', 25.00, TRUE, '["Tax_Residency"]', '{"reduced_treaty": true}', 140),
('NO_WITHHOLDING', 'No Withholding', 'Zero withholding applicable', 0.00, FALSE, '[]', '{"domestic_only": true}', 150);

-- Insert initial data for fee_type
INSERT INTO fee_type (code, name, description, category, calculation_type, default_amount, default_percentage, metadata, display_order) VALUES
('ADMIN_BASIC', 'Basic Administration', 'Standard admin fee', 'admin', 'percentage', NULL, 15.00, '{"standard_rate": true}', 10),
('ADMIN_PREMIUM', 'Premium Administration', 'Enhanced admin services', 'admin', 'percentage', NULL, 10.00, '{"white_glove": true}', 20),
('TRANSACTION_PAYMENT', 'Payment Processing', 'Payment transaction fee', 'transaction', 'percentage', NULL, 2.90, '{"plus_fixed": 0.30}', 30),
('TRANSACTION_FOREX', 'Foreign Exchange', 'Currency conversion fee', 'transaction', 'percentage', NULL, 2.50, '{"market_rate": true}', 40),
('PLATFORM_SUBSCRIPTION', 'Platform Subscription', 'Monthly platform fee', 'platform', 'fixed', 29.00, NULL, '{"tier_based": true}', 50),
('PLATFORM_ENTERPRISE', 'Enterprise Platform', 'Enterprise platform fee', 'platform', 'fixed', 999.00, NULL, '{"custom_features": true}', 60),
('REGISTRATION_SONG', 'Song Registration', 'Per-song registration fee', 'registration', 'fixed', 0.50, NULL, '{"bulk_discount": true}', 70),
('REGISTRATION_COPYRIGHT', 'Copyright Registration', 'Official copyright filing', 'registration', 'fixed', 65.00, NULL, '{"government_fee": true}', 80),
('LEGAL_CONTRACT', 'Contract Review', 'Legal contract review', 'legal', 'fixed', 500.00, NULL, '{"per_contract": true}', 90),
('LEGAL_DISPUTE', 'Dispute Resolution', 'Legal dispute handling', 'legal', 'percentage', NULL, 25.00, '{"contingency": true}', 100),
('AUDIT_STANDARD', 'Standard Audit', 'Annual royalty audit', 'audit', 'fixed', 5000.00, NULL, '{"annual": true}', 110),
('AUDIT_FORENSIC', 'Forensic Audit', 'Detailed forensic audit', 'audit', 'percentage', NULL, 10.00, '{"of_recovery": true}', 120),
('SYNC_CLEARANCE', 'Sync Clearance', 'Synchronization clearance fee', 'admin', 'percentage', NULL, 20.00, '{"negotiation": true}', 130),
('CATALOG_VALUATION', 'Catalog Valuation', 'Music catalog valuation', 'audit', 'fixed', 10000.00, NULL, '{"certified": true}', 140),
('DATA_ANALYTICS', 'Advanced Analytics', 'Premium data analytics', 'platform', 'fixed', 99.00, NULL, '{"monthly": true}', 150),
('BLOCKCHAIN_GAS', 'Blockchain Gas Fees', 'Network transaction fees', 'transaction', 'fixed', 5.00, NULL, '{"variable": true}', 160),
('NFT_MINTING', 'NFT Minting Fee', 'NFT creation fee', 'platform', 'fixed', 25.00, NULL, '{"includes_storage": true}', 170),
('RUSH_PROCESSING', 'Rush Processing', 'Expedited processing', 'admin', 'fixed', 100.00, NULL, '{"24_hour": true}', 180),
('INTERNATIONAL_REG', 'International Registration', 'Multi-territory registration', 'registration', 'fixed', 25.00, NULL, '{"per_territory": true}', 190),
('STATEMENT_PAPER', 'Paper Statement Fee', 'Physical statement delivery', 'admin', 'fixed', 5.00, NULL, '{"environmental": true}', 200);

-- Insert initial data for commission_type
INSERT INTO commission_type (code, name, description, category, default_rate, applies_to, metadata, display_order) VALUES
('MANAGEMENT_STANDARD', 'Standard Management', 'Artist management commission', 'management', 20.00, 'gross', '{"industry_standard": true}', 10),
('MANAGEMENT_TOUR', 'Tour Management', 'Tour-specific management', 'management', 15.00, 'gross', '{"live_only": true}', 20),
('AGENT_BOOKING', 'Booking Agent', 'Live performance booking', 'agent', 10.00, 'gross', '{"per_show": true}', 30),
('AGENT_THEATRICAL', 'Theatrical Agent', 'Film/TV placement', 'agent', 10.00, 'gross', '{"sag_aftra": true}', 40),
('PUBLISHER_ADMIN', 'Publishing Admin', 'Publishing administration', 'publisher', 15.00, 'net', '{"worldwide": true}', 50),
('PUBLISHER_CREATIVE', 'Creative Publishing', 'Full-service publishing', 'publisher', 25.00, 'net', '{"includes_sync": true}', 60),
('DISTRIBUTOR_DIGITAL', 'Digital Distribution', 'Digital platform distribution', 'distributor', 15.00, 'net', '{"all_platforms": true}', 70),
('DISTRIBUTOR_PHYSICAL', 'Physical Distribution', 'Physical product distribution', 'distributor', 25.00, 'net', '{"includes_manufacturing": true}', 80),
('SYNC_AGENT', 'Sync Agent', 'Synchronization licensing', 'sync_agent', 25.00, 'gross', '{"includes_negotiation": true}', 90),
('SUB_PUBLISHER', 'Sub-Publisher', 'Foreign territory publishing', 'publisher', 20.00, 'net', '{"per_territory": true}', 100),
('LABEL_SERVICES', 'Label Services', 'Record label services', 'distributor', 20.00, 'net', '{"marketing_included": true}', 110),
('PR_COMMISSION', 'PR Agency', 'Public relations services', 'agent', 15.00, 'specific_income', '{"campaign_based": true}', 120),
('BUSINESS_MANAGER', 'Business Management', 'Financial management', 'management', 5.00, 'gross', '{"monthly_fee": true}', 130),
('PRODUCER_POINTS', 'Producer Points', 'Record producer royalty', 'producer', 3.00, 'net', '{"of_artist_royalty": true}', 140),
('LAWYER_CONTINGENCY', 'Legal Contingency', 'Contingency legal fee', 'legal', 5.00, 'specific_income', '{"success_based": true}', 150);

-- Insert initial data for currency_type (first 30 entries)
INSERT INTO currency_type (code, numeric_code, name, symbol, decimal_places, category, country_code, metadata, display_order) VALUES
('USD', '840', 'US Dollar', '$', 2, 'fiat', 'US', '{"reserve_currency": true}', 10),
('EUR', '978', 'Euro', '€', 2, 'fiat', 'EU', '{"eurozone": true}', 20),
('GBP', '826', 'British Pound Sterling', '£', 2, 'fiat', 'GB', '{"sterling": true}', 30),
('JPY', '392', 'Japanese Yen', '¥', 0, 'fiat', 'JP', '{"no_decimals": true}', 40),
('CNY', '156', 'Chinese Yuan', '¥', 2, 'fiat', 'CN', '{"renminbi": true}', 50),
('CAD', '124', 'Canadian Dollar', 'C$', 2, 'fiat', 'CA', '{"commodity_currency": true}', 60),
('AUD', '036', 'Australian Dollar', 'A$', 2, 'fiat', 'AU', '{"commodity_currency": true}', 70),
('CHF', '756', 'Swiss Franc', 'Fr', 2, 'fiat', 'CH', '{"safe_haven": true}', 80),
('HKD', '344', 'Hong Kong Dollar', 'HK$', 2, 'fiat', 'HK', '{"pegged_to_usd": true}', 90),
('SGD', '702', 'Singapore Dollar', 'S$', 2, 'fiat', 'SG', '{"managed_float": true}', 100),
('SEK', '752', 'Swedish Krona', 'kr', 2, 'fiat', 'SE', '{"nordic": true}', 110),
('NOK', '578', 'Norwegian Krone', 'kr', 2, 'fiat', 'NO', '{"oil_sensitive": true}', 120),
('DKK', '208', 'Danish Krone', 'kr', 2, 'fiat', 'DK', '{"eeg_to_eur": true}', 130),
('NZD', '554', 'New Zealand Dollar', 'NZ$', 2, 'fiat', 'NZ', '{"commodity_currency": true}', 140),
('KRW', '410', 'South Korean Won', '₩', 0, 'fiat', 'KR', '{"no_decimals": true}', 150),
('INR', '356', 'Indian Rupee', '₹', 2, 'fiat', 'IN', '{"symbol_2010": true}', 160),
('MXN', '484', 'Mexican Peso', '$', 2, 'fiat', 'MX', '{"most_traded_em": true}', 170),
('BRL', '986', 'Brazilian Real', 'R$', 2, 'fiat', 'BR', '{"largest_latam": true}', 180),
('RUB', '643', 'Russian Ruble', '₽', 2, 'fiat', 'RU', '{"sanctions_affected": true}', 190),
('ZAR', '710', 'South African Rand', 'R', 2, 'fiat', 'ZA', '{"commodity_linked": true}', 200),
('BTC', NULL, 'Bitcoin', '₿', 8, 'crypto', NULL, '{"first_crypto": true, "blockchain": "bitcoin"}', 210),
('ETH', NULL, 'Ethereum', 'Ξ', 18, 'crypto', NULL, '{"smart_contracts": true, "blockchain": "ethereum"}', 220),
('USDC', NULL, 'USD Coin', '$', 6, 'stablecoin', NULL, '{"pegged_to_usd": true, "blockchain": "ethereum"}', 230),
('USDT', NULL, 'Tether', '$', 6, 'stablecoin', NULL, '{"largest_stablecoin": true, "blockchain": "multiple"}', 240),
('DAI', NULL, 'Dai', '$', 18, 'stablecoin', NULL, '{"decentralized": true, "blockchain": "ethereum"}', 250),
('SOL', NULL, 'Solana', 'SOL', 9, 'crypto', NULL, '{"high_speed": true, "blockchain": "solana"}', 260),
('MATIC', NULL, 'Polygon', 'MATIC', 18, 'crypto', NULL, '{"layer_2": true, "blockchain": "polygon"}', 270),
('BUSD', NULL, 'Binance USD', '$', 18, 'stablecoin', NULL, '{"binance_backed": true, "blockchain": "multiple"}', 280),
('TRY', '949', 'Turkish Lira', '₺', 2, 'fiat', 'TR', '{"high_inflation": true}', 290),
('PLN', '985', 'Polish Zloty', 'zł', 2, 'fiat', 'PL', '{"eu_member": true}', 300);
-- Note: Additional currencies would continue here up to all ISO 4217 currencies plus cryptocurrencies

-- Insert initial data for card_type
INSERT INTO card_type (code, name, brand, category, metadata, display_order) VALUES
('VISA_CREDIT', 'Visa Credit', 'Visa', 'credit', '{"bin_start": "4"}', 10),
('VISA_DEBIT', 'Visa Debit', 'Visa', 'debit', '{"bin_start": "4"}', 20),
('MASTERCARD_CREDIT', 'Mastercard Credit', 'Mastercard', 'credit', '{"bin_range": "51-55,2221-2720"}', 30),
('MASTERCARD_DEBIT', 'Mastercard Debit', 'Mastercard', 'debit', '{"bin_range": "51-55,2221-2720"}', 40),
('AMEX', 'American Express', 'American Express', 'credit', '{"bin_start": "34,37"}', 50),
('DISCOVER', 'Discover', 'Discover', 'credit', '{"bin_start": "6011,622,64,65"}', 60),
('JCB', 'JCB', 'JCB', 'credit', '{"bin_range": "3528-3589"}', 70),
('DINERS', 'Diners Club', 'Diners Club', 'credit', '{"bin_start": "36,38,30"}', 80),
('UNIONPAY', 'UnionPay', 'UnionPay', 'credit', '{"bin_start": "62"}', 90),
('MAESTRO', 'Maestro', 'Mastercard', 'debit', '{"bin_various": true}', 100),
('VISA_PREPAID', 'Visa Prepaid', 'Visa', 'prepaid', '{"reloadable": true}', 110),
('MASTERCARD_PREPAID', 'Mastercard Prepaid', 'Mastercard', 'prepaid', '{"gift_card": true}', 120),
('VIRTUAL_VISA', 'Virtual Visa', 'Visa', 'virtual', '{"online_only": true}', 130),
('VIRTUAL_MASTERCARD', 'Virtual Mastercard', 'Mastercard', 'virtual', '{"instant_issue": true}', 140),
('APPLE_CARD', 'Apple Card', 'Mastercard', 'credit', '{"goldman_sachs": true}', 150);

-- Insert initial data for price_tier
INSERT INTO price_tier (code, name, description, category, tier_type, price_range_min, price_range_max, royalty_multiplier, metadata, display_order) VALUES
('STREAMING_FREE', 'Free Streaming', 'Ad-supported free tier', 'streaming', 'free', 0.00, 0.00, 0.500, '{"ad_supported": true}', 10),
('STREAMING_PREMIUM', 'Premium Streaming', 'Paid subscription tier', 'streaming', 'premium', 9.99, 14.99, 1.000, '{"no_ads": true}', 20),
('STREAMING_FAMILY', 'Family Streaming', 'Family plan subscription', 'streaming', 'family', 14.99, 19.99, 1.200, '{"multi_user": true}', 30),
('STREAMING_STUDENT', 'Student Streaming', 'Discounted student plan', 'streaming', 'student', 4.99, 5.99, 0.700, '{"verification_required": true}', 40),
('STREAMING_HIFI', 'Hi-Fi Streaming', 'Lossless audio quality', 'streaming', 'hi_fi', 19.99, 29.99, 1.500, '{"lossless": true}', 50),
('DOWNLOAD_SINGLE', 'Single Download', 'Individual track purchase', 'download', 'single', 0.99, 1.29, 1.000, '{"permanent": true}', 60),
('DOWNLOAD_ALBUM', 'Album Download', 'Full album purchase', 'download', 'album', 9.99, 14.99, 1.000, '{"bulk_discount": true}', 70),
('DOWNLOAD_HD', 'HD Download', 'High-definition audio', 'download', 'hd', 14.99, 24.99, 1.300, '{"premium_quality": true}', 80),
('PHYSICAL_CD', 'CD Retail', 'Physical CD pricing', 'physical', 'standard', 12.99, 18.99, 1.000, '{"wholesale_available": true}', 90),
('PHYSICAL_VINYL', 'Vinyl Retail', 'Vinyl record pricing', 'physical', 'premium', 24.99, 39.99, 1.500, '{"collectible": true}', 100),
('SYNC_INDIE', 'Indie Sync', 'Independent production sync', 'sync', 'indie', 500.00, 5000.00, 1.000, '{"negotiable": true}', 110),
('SYNC_COMMERCIAL', 'Commercial Sync', 'Major brand advertising', 'sync', 'commercial', 10000.00, 100000.00, 2.000, '{"high_value": true}', 120),
('SYNC_FILM_INDIE', 'Indie Film Sync', 'Independent film placement', 'sync', 'film_indie', 5000.00, 25000.00, 1.200, '{"festival_circuit": true}', 130),
('SYNC_FILM_MAJOR', 'Major Film Sync', 'Studio film placement', 'sync', 'film_major', 50000.00, 500000.00, 3.000, '{"blockbuster": true}', 140),
('NFT_BASIC', 'Basic NFT', 'Standard NFT release', 'nft', 'basic', 10.00, 100.00, 1.000, '{"limited_edition": true}', 150),
('NFT_RARE', 'Rare NFT', 'Limited rare NFT', 'nft', 'rare', 100.00, 1000.00, 2.000, '{"ultra_limited": true}', 160),
('NFT_LEGENDARY', 'Legendary NFT', 'One-of-one NFT', 'nft', 'legendary', 1000.00, 100000.00, 5.000, '{"unique": true}', 170),
('STREAMING_EMERGING', 'Emerging Market', 'Developing market pricing', 'streaming', 'emerging', 2.99, 4.99, 0.300, '{"local_pricing": true}', 180),
('KARAOKE_VENUE', 'Venue Karaoke', 'Commercial karaoke licensing', 'physical', 'commercial', 100.00, 500.00, 1.000, '{"per_machine": true}', 190),
('RINGTONE_PREMIUM', 'Premium Ringtone', 'Premium ringtone pricing', 'download', 'premium', 2.99, 4.99, 1.200, '{"carrier_billing": true}', 200);

-- Add indexes for performance optimization
CREATE INDEX idx_royalty_source_reporting ON royalty_source_type(requires_reporting, reporting_frequency);
CREATE INDEX idx_royalty_type_calculation ON royalty_type(calculation_method, minimum_threshold);
CREATE INDEX idx_payment_method_limits ON payment_method(minimum_amount, maximum_amount);
CREATE INDEX idx_currency_blockchain ON currency_type(blockchain_network) WHERE blockchain_network IS NOT NULL;
CREATE INDEX idx_tax_type_applicable ON tax_type(applicable_to, calculation_method);
CREATE INDEX idx_fee_type_calculation ON fee_type(calculation_type, is_negotiable);
CREATE INDEX idx_commission_applies ON commission_type(applies_to, category);
CREATE INDEX idx_card_type_brand ON card_type(brand, category);
CREATE INDEX idx_price_tier_range ON price_tier(price_range_min, price_range_max);

-- Foreign key constraints for better data integrity
ALTER TABLE royalty_type 
ADD CONSTRAINT chk_royalty_type_category 
CHECK (category IN ('mechanical', 'performance', 'sync', 'master', 'neighboring', 'digital'));

ALTER TABLE payment_method 
ADD CONSTRAINT chk_payment_method_category 
CHECK (category IN ('bank', 'card', 'digital_wallet', 'crypto', 'check', 'cash'));

ALTER TABLE currency_type 
ADD CONSTRAINT chk_currency_type_category 
CHECK (category IN ('fiat', 'crypto', 'stablecoin', 'cbdc'));

-- Comments for documentation
ALTER TABLE royalty_source_type COMMENT = 'Defines all sources of royalty income in the music industry';
ALTER TABLE royalty_type COMMENT = 'Comprehensive list of royalty types with calculation methods';
ALTER TABLE statement_type COMMENT = 'Financial statement and report configurations';
ALTER TABLE payment_method COMMENT = 'All supported payment methods including crypto and traditional';
ALTER TABLE payment_frequency COMMENT = 'Payment schedule frequencies for royalty distributions';
ALTER TABLE tax_type COMMENT = 'Global tax categories for international operations';
ALTER TABLE withholding_type COMMENT = 'International withholding tax configurations';
ALTER TABLE fee_type COMMENT = 'All platform and service fees';
ALTER TABLE commission_type COMMENT = 'Industry standard commission structures';
ALTER TABLE currency_type COMMENT = 'Supported currencies including fiat and cryptocurrency';
ALTER TABLE card_type COMMENT = 'Payment card types and configurations';
ALTER TABLE price_tier COMMENT = 'Pricing tiers for royalty calculations across all formats';

-- =====================================================
-- SECTION 14: CWR LOOKUPS
-- =====================================================

-- CWR Versions
CREATE TABLE cwr_version (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    version_code VARCHAR(10) NOT NULL UNIQUE,
    version_name VARCHAR(100) NOT NULL,
    release_date DATE NOT NULL,
    deprecation_date DATE,
    is_active BOOLEAN DEFAULT TRUE,
    major_version INT NOT NULL,
    minor_version INT NOT NULL,
    patch_version INT DEFAULT 0,
    character_set VARCHAR(20) NOT NULL,
    record_prefix VARCHAR(10),
    specification_url VARCHAR(500),
    description TEXT,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_version_active (is_active, version_code),
    KEY idx_version_date (release_date)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Record Types
CREATE TABLE cwr_record_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    record_code VARCHAR(10) NOT NULL,
    record_name VARCHAR(100) NOT NULL,
    record_category VARCHAR(50) NOT NULL,
    description TEXT,
    cwr_version_id INT UNSIGNED NOT NULL,
    is_mandatory BOOLEAN DEFAULT FALSE,
    max_occurrences INT,
    parent_record_code VARCHAR(10),
    processing_order INT NOT NULL,
    field_count INT NOT NULL,
    record_length INT,
    is_active BOOLEAN DEFAULT TRUE,
    validation_rules JSON,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    UNIQUE KEY uk_record_version (record_code, cwr_version_id),
    KEY idx_record_category (record_category),
    KEY idx_record_active (is_active),
    FOREIGN KEY (cwr_version_id) REFERENCES cwr_version(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Field Types
CREATE TABLE cwr_field_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    field_code VARCHAR(50) NOT NULL,
    field_name VARCHAR(200) NOT NULL,
    record_type_id INT UNSIGNED NOT NULL,
    field_position INT NOT NULL,
    field_length INT NOT NULL,
    data_type VARCHAR(20) NOT NULL,
    format_mask VARCHAR(100),
    is_mandatory BOOLEAN DEFAULT FALSE,
    default_value VARCHAR(255),
    allowed_values JSON,
    validation_regex VARCHAR(500),
    min_value VARCHAR(50),
    max_value VARCHAR(50),
    description TEXT,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    UNIQUE KEY uk_field_record (field_code, record_type_id),
    KEY idx_field_position (record_type_id, field_position),
    FOREIGN KEY (record_type_id) REFERENCES cwr_record_type(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Sender Types
CREATE TABLE cwr_sender_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    sender_code VARCHAR(10) NOT NULL UNIQUE,
    sender_name VARCHAR(100) NOT NULL,
    sender_category VARCHAR(50) NOT NULL,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_sender_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Message Types
CREATE TABLE cwr_message_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    message_code VARCHAR(10) NOT NULL UNIQUE,
    message_name VARCHAR(100) NOT NULL,
    message_category VARCHAR(50) NOT NULL,
    description TEXT,
    is_acknowledgment BOOLEAN DEFAULT FALSE,
    requires_response BOOLEAN DEFAULT FALSE,
    response_deadline_days INT,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_message_active (is_active),
    KEY idx_message_category (message_category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Transaction Types
CREATE TABLE cwr_transaction_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    transaction_code VARCHAR(10) NOT NULL UNIQUE,
    transaction_name VARCHAR(100) NOT NULL,
    transaction_category VARCHAR(50) NOT NULL,
    description TEXT,
    requires_acknowledgment BOOLEAN DEFAULT TRUE,
    acknowledgment_deadline_days INT DEFAULT 30,
    is_active BOOLEAN DEFAULT TRUE,
    allowed_record_types JSON,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_transaction_active (is_active),
    KEY idx_transaction_category (transaction_category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Error Codes
CREATE TABLE cwr_error_code (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    error_code VARCHAR(20) NOT NULL,
    error_level VARCHAR(20) NOT NULL,
    error_category VARCHAR(50) NOT NULL,
    error_message VARCHAR(500) NOT NULL,
    description TEXT,
    cwr_version_id INT UNSIGNED,
    is_blocking BOOLEAN DEFAULT FALSE,
    resolution_guidance TEXT,
    related_field_codes JSON,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    UNIQUE KEY uk_error_version (error_code, cwr_version_id),
    KEY idx_error_level (error_level),
    KEY idx_error_category (error_category),
    KEY idx_error_active (is_active),
    FOREIGN KEY (cwr_version_id) REFERENCES cwr_version(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Character Sets
CREATE TABLE cwr_character_set (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    charset_code VARCHAR(20) NOT NULL UNIQUE,
    charset_name VARCHAR(100) NOT NULL,
    encoding VARCHAR(50) NOT NULL,
    description TEXT,
    is_default BOOLEAN DEFAULT FALSE,
    supported_languages JSON,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_charset_active (is_active),
    KEY idx_charset_default (is_default)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Society Codes
CREATE TABLE cwr_society_code (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    society_code VARCHAR(10) NOT NULL UNIQUE,
    society_name VARCHAR(200) NOT NULL,
    society_acronym VARCHAR(20),
    country_code VARCHAR(2) NOT NULL,
    society_type VARCHAR(50) NOT NULL,
    ipi_sender_code VARCHAR(20),
    cae_number VARCHAR(20),
    is_collecting_society BOOLEAN DEFAULT TRUE,
    territories_covered JSON,
    supported_cwr_versions JSON,
    contact_email VARCHAR(255),
    contact_phone VARCHAR(50),
    website_url VARCHAR(500),
    api_endpoint VARCHAR(500),
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_society_country (country_code),
    KEY idx_society_type (society_type),
    KEY idx_society_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Work Types
CREATE TABLE cwr_work_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    work_type_code VARCHAR(10) NOT NULL UNIQUE,
    work_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    is_original BOOLEAN DEFAULT TRUE,
    requires_original_reference BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_work_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Music Arrangement Types
CREATE TABLE cwr_music_arrangement_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    arrangement_code VARCHAR(10) NOT NULL UNIQUE,
    arrangement_name VARCHAR(100) NOT NULL,
    description TEXT,
    affects_ownership BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_arrangement_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Lyric Adaptation Types
CREATE TABLE cwr_lyric_adaptation_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    adaptation_code VARCHAR(10) NOT NULL UNIQUE,
    adaptation_name VARCHAR(100) NOT NULL,
    description TEXT,
    is_translation BOOLEAN DEFAULT FALSE,
    affects_ownership BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_adaptation_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Title Types
CREATE TABLE cwr_title_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    title_type_code VARCHAR(10) NOT NULL UNIQUE,
    title_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    is_primary BOOLEAN DEFAULT FALSE,
    language_required BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_title_type_active (is_active),
    KEY idx_title_type_primary (is_primary)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Name Types
CREATE TABLE cwr_name_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    name_type_code VARCHAR(10) NOT NULL UNIQUE,
    name_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    applies_to VARCHAR(50) NOT NULL,
    is_legal_name BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_name_type_active (is_active),
    KEY idx_name_type_applies (applies_to)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Writer Roles
CREATE TABLE cwr_writer_role (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    role_code VARCHAR(10) NOT NULL UNIQUE,
    role_name VARCHAR(100) NOT NULL,
    role_category VARCHAR(50) NOT NULL,
    description TEXT,
    affects_royalties BOOLEAN DEFAULT TRUE,
    is_creator BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_writer_role_active (is_active),
    KEY idx_writer_role_category (role_category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Publisher Roles
CREATE TABLE cwr_publisher_role (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    role_code VARCHAR(10) NOT NULL UNIQUE,
    role_name VARCHAR(100) NOT NULL,
    role_category VARCHAR(50) NOT NULL,
    description TEXT,
    is_administrator BOOLEAN DEFAULT FALSE,
    is_sub_publisher BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_publisher_role_active (is_active),
    KEY idx_publisher_role_category (role_category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Agreement Roles
CREATE TABLE cwr_agreement_role (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    role_code VARCHAR(10) NOT NULL UNIQUE,
    role_name VARCHAR(100) NOT NULL,
    description TEXT,
    is_assignor BOOLEAN DEFAULT FALSE,
    is_assignee BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_agreement_role_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Territory Indicators
CREATE TABLE cwr_territory_indicator (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    indicator_code VARCHAR(10) NOT NULL UNIQUE,
    indicator_name VARCHAR(100) NOT NULL,
    description TEXT,
    is_inclusion BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_territory_indicator_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Language Codes
CREATE TABLE cwr_language_code (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    language_code VARCHAR(10) NOT NULL UNIQUE,
    language_name VARCHAR(100) NOT NULL,
    iso_639_1 VARCHAR(2),
    iso_639_2 VARCHAR(3),
    iso_639_3 VARCHAR(3),
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_language_active (is_active),
    KEY idx_language_iso (iso_639_1, iso_639_2)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Instrument Codes
CREATE TABLE cwr_instrument_code (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    instrument_code VARCHAR(10) NOT NULL UNIQUE,
    instrument_name VARCHAR(100) NOT NULL,
    instrument_family VARCHAR(50) NOT NULL,
    description TEXT,
    is_standard BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_instrument_active (is_active),
    KEY idx_instrument_family (instrument_family)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Distribution Categories
CREATE TABLE cwr_distribution_category (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    category_code VARCHAR(10) NOT NULL UNIQUE,
    category_name VARCHAR(100) NOT NULL,
    description TEXT,
    is_mechanical BOOLEAN DEFAULT FALSE,
    is_performance BOOLEAN DEFAULT FALSE,
    is_synchronization BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_distribution_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Income Types
CREATE TABLE cwr_income_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    income_code VARCHAR(10) NOT NULL UNIQUE,
    income_name VARCHAR(100) NOT NULL,
    income_category VARCHAR(50) NOT NULL,
    description TEXT,
    distribution_category_id INT UNSIGNED,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_income_active (is_active),
    KEY idx_income_category (income_category),
    FOREIGN KEY (distribution_category_id) REFERENCES cwr_distribution_category(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Right Types
CREATE TABLE cwr_right_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    right_code VARCHAR(10) NOT NULL UNIQUE,
    right_name VARCHAR(100) NOT NULL,
    right_category VARCHAR(50) NOT NULL,
    description TEXT,
    is_exclusive BOOLEAN DEFAULT FALSE,
    is_transferable BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_right_active (is_active),
    KEY idx_right_category (right_category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Share Types
CREATE TABLE cwr_share_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    share_code VARCHAR(10) NOT NULL UNIQUE,
    share_name VARCHAR(100) NOT NULL,
    share_category VARCHAR(50) NOT NULL,
    description TEXT,
    is_ownership BOOLEAN DEFAULT TRUE,
    is_collection BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_share_active (is_active),
    KEY idx_share_category (share_category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Status Codes
CREATE TABLE cwr_status_code (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    status_code VARCHAR(10) NOT NULL UNIQUE,
    status_name VARCHAR(100) NOT NULL,
    status_category VARCHAR(50) NOT NULL,
    description TEXT,
    is_terminal BOOLEAN DEFAULT FALSE,
    is_success BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_status_active (is_active),
    KEY idx_status_category (status_category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Validation Rules
CREATE TABLE cwr_validation_rule (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    rule_code VARCHAR(50) NOT NULL UNIQUE,
    rule_name VARCHAR(200) NOT NULL,
    rule_category VARCHAR(50) NOT NULL,
    rule_type VARCHAR(50) NOT NULL,
    field_type_id INT UNSIGNED,
    validation_expression TEXT,
    error_code_id INT UNSIGNED,
    severity VARCHAR(20) NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    cwr_version_id INT UNSIGNED,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_validation_active (is_active),
    KEY idx_validation_category (rule_category),
    KEY idx_validation_severity (severity),
    FOREIGN KEY (field_type_id) REFERENCES cwr_field_type(id),
    FOREIGN KEY (error_code_id) REFERENCES cwr_error_code(id),
    FOREIGN KEY (cwr_version_id) REFERENCES cwr_version(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR File Status
CREATE TABLE cwr_file_status (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    status_code VARCHAR(20) NOT NULL UNIQUE,
    status_name VARCHAR(100) NOT NULL,
    description TEXT,
    is_processing BOOLEAN DEFAULT FALSE,
    is_complete BOOLEAN DEFAULT FALSE,
    is_error BOOLEAN DEFAULT FALSE,
    next_status_codes JSON,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_file_status_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Usage Types
CREATE TABLE cwr_usage_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    usage_code VARCHAR(10) NOT NULL UNIQUE,
    usage_name VARCHAR(100) NOT NULL,
    usage_category VARCHAR(50) NOT NULL,
    description TEXT,
    requires_license BOOLEAN DEFAULT TRUE,
    is_digital BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_usage_active (is_active),
    KEY idx_usage_category (usage_category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Format Types
CREATE TABLE cwr_format_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    format_code VARCHAR(10) NOT NULL UNIQUE,
    format_name VARCHAR(100) NOT NULL,
    file_extension VARCHAR(10) NOT NULL,
    mime_type VARCHAR(100),
    description TEXT,
    is_compressed BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_format_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Agreement Types
CREATE TABLE cwr_agreement_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    agreement_code VARCHAR(10) NOT NULL UNIQUE,
    agreement_name VARCHAR(100) NOT NULL,
    agreement_category VARCHAR(50) NOT NULL,
    description TEXT,
    is_exclusive BOOLEAN DEFAULT FALSE,
    requires_territory BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_agreement_active (is_active),
    KEY idx_agreement_category (agreement_category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Collection Status
CREATE TABLE cwr_collection_status (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    status_code VARCHAR(10) NOT NULL UNIQUE,
    status_name VARCHAR(100) NOT NULL,
    description TEXT,
    is_open BOOLEAN DEFAULT TRUE,
    is_disputed BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_collection_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Rejection Reasons
CREATE TABLE cwr_rejection_reason (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    reason_code VARCHAR(20) NOT NULL UNIQUE,
    reason_name VARCHAR(200) NOT NULL,
    reason_category VARCHAR(50) NOT NULL,
    description TEXT,
    is_correctable BOOLEAN DEFAULT TRUE,
    correction_guidance TEXT,
    related_error_codes JSON,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_rejection_active (is_active),
    KEY idx_rejection_category (reason_category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Acknowledgment Codes
CREATE TABLE cwr_acknowledgment_code (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    ack_code VARCHAR(10) NOT NULL UNIQUE,
    ack_name VARCHAR(100) NOT NULL,
    ack_type VARCHAR(50) NOT NULL,
    description TEXT,
    is_positive BOOLEAN DEFAULT TRUE,
    requires_action BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_ack_active (is_active),
    KEY idx_ack_type (ack_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR Processing Templates
CREATE TABLE cwr_processing_template (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    template_code VARCHAR(50) NOT NULL UNIQUE,
    template_name VARCHAR(200) NOT NULL,
    society_code_id INT UNSIGNED,
    cwr_version_id INT UNSIGNED NOT NULL,
    template_type VARCHAR(50) NOT NULL,
    processing_rules JSON NOT NULL,
    field_mappings JSON,
    validation_overrides JSON,
    is_default BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_template_active (is_active),
    KEY idx_template_type (template_type),
    KEY idx_template_default (is_default),
    FOREIGN KEY (society_code_id) REFERENCES cwr_society_code(id),
    FOREIGN KEY (cwr_version_id) REFERENCES cwr_version(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR TIS Codes (Territories in Societies)
CREATE TABLE cwr_tis_code (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    tis_code VARCHAR(10) NOT NULL UNIQUE,
    territory_name VARCHAR(200) NOT NULL,
    iso_code VARCHAR(2),
    parent_tis_code VARCHAR(10),
    is_country BOOLEAN DEFAULT TRUE,
    is_region BOOLEAN DEFAULT FALSE,
    included_territories JSON,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_tis_active (is_active),
    KEY idx_tis_iso (iso_code),
    KEY idx_tis_parent (parent_tis_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- CWR IPI Name Types
CREATE TABLE cwr_ipi_name_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    name_type_code VARCHAR(10) NOT NULL UNIQUE,
    name_type VARCHAR(100) NOT NULL,
    description TEXT,
    is_legal_entity BOOLEAN DEFAULT FALSE,
    is_natural_person BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    metadata JSON,
    created_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6),
    updated_at DATETIME(6) DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
    KEY idx_ipi_name_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Views for CWR Processing
CREATE VIEW v_cwr_active_record_types AS
SELECT 
    rt.record_code,
    rt.record_name,
    rt.record_category,
    v.version_code,
    rt.is_mandatory,
    rt.processing_order
FROM cwr_record_type rt
JOIN cwr_version v ON rt.cwr_version_id = v.id
WHERE rt.is_active = TRUE AND v.is_active = TRUE
ORDER BY v.version_code DESC, rt.processing_order;

CREATE VIEW v_cwr_society_territories AS
SELECT 
    sc.society_code,
    sc.society_name,
    sc.country_code,
    JSON_LENGTH(sc.territories_covered) as territory_count,
    sc.territories_covered
FROM cwr_society_code sc
WHERE sc.is_active = TRUE;

CREATE VIEW v_cwr_validation_matrix AS
SELECT 
    vr.rule_code,
    vr.rule_name,
    ft.field_code,
    ft.field_name,
    rt.record_code,
    ec.error_code,
    vr.severity,
    cv.version_code
FROM cwr_validation_rule vr
JOIN cwr_field_type ft ON vr.field_type_id = ft.id
JOIN cwr_record_type rt ON ft.record_type_id = rt.id
JOIN cwr_error_code ec ON vr.error_code_id = ec.id
JOIN cwr_version cv ON vr.cwr_version_id = cv.id
WHERE vr.is_active = TRUE;

-- Initial Configuration Data

-- CWR Versions
INSERT INTO cwr_version (version_code, version_name, release_date, major_version, minor_version, patch_version, character_set, record_prefix, is_active) VALUES
('2.1', 'CWR Version 2.1', '2009-01-01', 2, 1, 0, 'ASCII', 'V21', TRUE),
('2.2', 'CWR Version 2.2', '2013-01-01', 2, 2, 0, 'UTF-8', 'V22', TRUE),
('3.0', 'CWR Version 3.0', '2020-01-01', 3, 0, 0, 'UTF-8', 'V30', TRUE);

-- CWR Record Types (First 30 - CWR 3.0)
INSERT INTO cwr_record_type (record_code, record_name, record_category, cwr_version_id, is_mandatory, processing_order, field_count) VALUES
('HDR', 'File Header', 'HEADER', 3, TRUE, 1, 15),
('GRH', 'Group Header', 'HEADER', 3, TRUE, 2, 12),
('NWR', 'New Work Registration', 'WORK', 3, TRUE, 3, 45),
('REV', 'Revised Registration', 'WORK', 3, FALSE, 4, 45),
('SWR', 'Sub-Work Registration', 'WORK', 3, FALSE, 5, 30),
('PWR', 'Publisher Ownership', 'OWNERSHIP', 3, TRUE, 6, 25),
('SPU', 'Publisher Controlled', 'OWNERSHIP', 3, FALSE, 7, 20),
('SPT', 'Publisher Territory', 'TERRITORY', 3, FALSE, 8, 15),
('OPU', 'Other Publisher', 'OWNERSHIP', 3, FALSE, 9, 20),
('OPT', 'Other Publisher Territory', 'TERRITORY', 3, FALSE, 10, 15),
('PER', 'Performing Artist', 'PARTY', 3, FALSE, 11, 18),
('REC', 'Recording', 'RECORDING', 3, FALSE, 12, 25),
('ORN', 'Orchestration', 'WORK', 3, FALSE, 13, 12),
('INS', 'Instrumentation', 'WORK', 3, FALSE, 14, 10),
('ALT', 'Alternative Title', 'TITLE', 3, FALSE, 15, 15),
('VER', 'Version Title', 'TITLE', 3, FALSE, 16, 15),
('EXC', 'Exception Clause', 'AGREEMENT', 3, FALSE, 17, 20),
('ACK', 'Acknowledgment', 'RESPONSE', 3, FALSE, 18, 25),
('AGR', 'Agreement', 'AGREEMENT', 3, FALSE, 19, 30),
('TER', 'Territory', 'TERRITORY', 3, FALSE, 20, 10),
('IPA', 'Interested Party Agreement', 'AGREEMENT', 3, FALSE, 21, 35),
('NPN', 'Non-Roman Name', 'PARTY', 3, FALSE, 22, 20),
('MSG', 'Message', 'RESPONSE', 3, FALSE, 23, 15),
('GRT', 'Group Trailer', 'TRAILER', 3, TRUE, 24, 8),
('TRL', 'File Trailer', 'TRAILER', 3, TRUE, 25, 8);

-- CWR Sender Types
INSERT INTO cwr_sender_type (sender_code, sender_name, sender_category) VALUES
('PB', 'Publisher', 'RIGHTS_HOLDER'),
('SO', 'Society', 'COLLECTIVE'),
('AA', 'Administrative Agency', 'ADMINISTRATOR'),
('WR', 'Writer', 'RIGHTS_HOLDER'),
('AM', 'Agreement Manager', 'ADMINISTRATOR');

-- CWR Message Types
INSERT INTO cwr_message_type (message_code, message_name, message_category, is_acknowledgment, requires_response) VALUES
('NWR', 'New Work Registration', 'REGISTRATION', FALSE, TRUE),
('REV', 'Revised Registration', 'REGISTRATION', FALSE, TRUE),
('ACK', 'Acknowledgment', 'RESPONSE', TRUE, FALSE),
('REJ', 'Rejection', 'RESPONSE', TRUE, FALSE),
('CWR', 'Claim Withdrawal', 'REGISTRATION', FALSE, TRUE);

-- CWR Transaction Types
INSERT INTO cwr_transaction_type (transaction_code, transaction_name, transaction_category, requires_acknowledgment) VALUES
('NEW', 'New Transaction', 'REGISTRATION', TRUE),
('UPD', 'Update Transaction', 'MODIFICATION', TRUE),
('COR', 'Correction Transaction', 'MODIFICATION', TRUE),
('DEL', 'Delete Transaction', 'REMOVAL', TRUE),
('DUP', 'Duplicate Transaction', 'ERROR', FALSE);

-- CWR Error Codes (First 30)
INSERT INTO cwr_error_code (error_code, error_level, error_category, error_message, is_blocking, cwr_version_id) VALUES
('E001', 'ERROR', 'FORMAT', 'Invalid record format', TRUE, 3),
('E002', 'ERROR', 'MANDATORY', 'Missing mandatory field', TRUE, 3),
('E003', 'ERROR', 'VALUE', 'Invalid field value', TRUE, 3),
('E004', 'ERROR', 'LENGTH', 'Field length exceeded', TRUE, 3),
('E005', 'ERROR', 'TYPE', 'Invalid data type', TRUE, 3),
('E006', 'WARNING', 'DUPLICATE', 'Duplicate record found', FALSE, 3),
('E007', 'ERROR', 'REFERENCE', 'Invalid reference code', TRUE, 3),
('E008', 'ERROR', 'DATE', 'Invalid date format', TRUE, 3),
('E009', 'ERROR', 'SHARE', 'Total shares exceed 100%', TRUE, 3),
('E010', 'WARNING', 'TERRITORY', 'Overlapping territories', FALSE, 3),
('E011', 'ERROR', 'IPI', 'Invalid IPI number', TRUE, 3),
('E012', 'ERROR', 'ISWC', 'Invalid ISWC code', TRUE, 3),
('E013', 'ERROR', 'SOCIETY', 'Unknown society code', TRUE, 3),
('E014', 'ERROR', 'LANGUAGE', 'Invalid language code', TRUE, 3),
('E015', 'WARNING', 'TITLE', 'Missing alternative title', FALSE, 3),
('E016', 'ERROR', 'AGREEMENT', 'Invalid agreement reference', TRUE, 3),
('E017', 'ERROR', 'WRITER', 'Unknown writer IPI', TRUE, 3),
('E018', 'ERROR', 'PUBLISHER', 'Unknown publisher IPI', TRUE, 3),
('E019', 'ERROR', 'WORK', 'Invalid work reference', TRUE, 3),
('E020', 'WARNING', 'RECORDING', 'Missing ISRC code', FALSE, 3),
('E021', 'ERROR', 'VERSION', 'Incompatible CWR version', TRUE, 3),
('E022', 'ERROR', 'HEADER', 'Invalid file header', TRUE, 3),
('E023', 'ERROR', 'TRAILER', 'Record count mismatch', TRUE, 3),
('E024', 'ERROR', 'CHARACTER', 'Invalid character encoding', TRUE, 3),
('E025', 'WARNING', 'PERFORMANCE', 'Missing performance data', FALSE, 3),
('E026', 'ERROR', 'SEQUENCE', 'Invalid record sequence', TRUE, 3),
('E027', 'ERROR', 'GROUP', 'Invalid group structure', TRUE, 3),
('E028', 'WARNING', 'METADATA', 'Incomplete metadata', FALSE, 3),
('E029', 'ERROR', 'CHECKSUM', 'File checksum failed', TRUE, 3),
('E030', 'ERROR', 'BUSINESS', 'Business rule violation', TRUE, 3);

-- CWR Character Sets
INSERT INTO cwr_character_set (charset_code, charset_name, encoding, is_default) VALUES
('ASCII', 'ASCII Character Set', 'US-ASCII', FALSE),
('UTF8', 'UTF-8 Character Set', 'UTF-8', TRUE),
('LATIN1', 'ISO Latin-1', 'ISO-8859-1', FALSE),
('UTF16', 'UTF-16 Character Set', 'UTF-16', FALSE);

-- CWR Society Codes (First 30 major societies)
INSERT INTO cwr_society_code (society_code, society_name, society_acronym, country_code, society_type) VALUES
('021', 'ASCAP', 'ASCAP', 'US', 'PRO'),
('022', 'BMI', 'BMI', 'US', 'PRO'),
('052', 'SESAC', 'SESAC', 'US', 'PRO'),
('044', 'PRS', 'PRS', 'GB', 'PRO'),
('045', 'MCPS', 'MCPS', 'GB', 'MECHANICAL'),
('058', 'SACEM', 'SACEM', 'FR', 'PRO'),
('088', 'GEMA', 'GEMA', 'DE', 'PRO'),
('055', 'SOCAN', 'SOCAN', 'CA', 'PRO'),
('071', 'APRA', 'APRA', 'AU', 'PRO'),
('231', 'JASRAC', 'JASRAC', 'JP', 'PRO'),
('089', 'SGAE', 'SGAE', 'ES', 'PRO'),
('090', 'SIAE', 'SIAE', 'IT', 'PRO'),
('104', 'BUMA', 'BUMA', 'NL', 'PRO'),
('105', 'STEMRA', 'STEMRA', 'NL', 'MECHANICAL'),
('106', 'SABAM', 'SABAM', 'BE', 'PRO'),
('107', 'STIM', 'STIM', 'SE', 'PRO'),
('108', 'TONO', 'TONO', 'NO', 'PRO'),
('109', 'KODA', 'KODA', 'DK', 'PRO'),
('110', 'TEOSTO', 'TEOSTO', 'FI', 'PRO'),
('232', 'KOMCA', 'KOMCA', 'KR', 'PRO'),
('246', 'UBC', 'UBC', 'BR', 'PRO'),
('247', 'ECAD', 'ECAD', 'BR', 'PRO'),
('248', 'SACM', 'SACM', 'MX', 'PRO'),
('249', 'SAYCO', 'SAYCO', 'CO', 'PRO'),
('250', 'SADAIC', 'SADAIC', 'AR', 'PRO'),
('251', 'SCD', 'SCD', 'CL', 'PRO'),
('301', 'PPL', 'PPL', 'GB', 'PERFORMANCE'),
('302', 'SOUNDEXCHANGE', 'SX', 'US', 'PERFORMANCE'),
('400', 'HFA', 'HFA', 'US', 'MECHANICAL'),
('401', 'MLC', 'MLC', 'US', 'MECHANICAL');

-- CWR Status Codes
INSERT INTO cwr_status_code (status_code, status_name, status_category, is_terminal, is_success) VALUES
('PENDING', 'Pending Processing', 'PROCESSING', FALSE, FALSE),
('PROCESSING', 'Currently Processing', 'PROCESSING', FALSE, FALSE),
('VALIDATED', 'Validation Passed', 'PROCESSING', FALSE, FALSE),
('ACCEPTED', 'Accepted', 'COMPLETE', TRUE, TRUE),
('REJECTED', 'Rejected', 'COMPLETE', TRUE, FALSE),
('ERROR', 'Processing Error', 'ERROR', TRUE, FALSE),
('DUPLICATE', 'Duplicate Submission', 'ERROR', TRUE, FALSE),
('PARTIAL', 'Partially Accepted', 'COMPLETE', TRUE, FALSE);

-- CWR File Status
INSERT INTO cwr_file_status (status_code, status_name, is_processing, is_complete, is_error) VALUES
('UPLOADED', 'File Uploaded', FALSE, FALSE, FALSE),
('QUEUED', 'Queued for Processing', FALSE, FALSE, FALSE),
('PARSING', 'Parsing File', TRUE, FALSE, FALSE),
('VALIDATING', 'Validating Records', TRUE, FALSE, FALSE),
('PROCESSING', 'Processing Records', TRUE, FALSE, FALSE),
('COMPLETE', 'Processing Complete', FALSE, TRUE, FALSE),
('FAILED', 'Processing Failed', FALSE, TRUE, TRUE),
('PARTIAL', 'Partially Processed', FALSE, TRUE, FALSE);

-- CWR Work Types
INSERT INTO cwr_work_type (work_type_code, work_type_name, is_original, requires_original_reference) VALUES
('ORI', 'Original Work', TRUE, FALSE),
('ARR', 'Arrangement', FALSE, TRUE),
('ADA', 'Adaptation', FALSE, TRUE),
('TRA', 'Translation', FALSE, TRUE),
('SUB', 'Sub-Work', FALSE, TRUE);

-- CWR Title Types
INSERT INTO cwr_title_type (title_type_code, title_type_name, is_primary, language_required) VALUES
('OT', 'Original Title', TRUE, FALSE),
('AT', 'Alternative Title', FALSE, FALSE),
('TE', 'Title in English', FALSE, TRUE),
('TL', 'Title in Local Language', FALSE, TRUE),
('FT', 'Formal Title', FALSE, FALSE);

-- CWR Writer Roles
INSERT INTO cwr_writer_role (role_code, role_name, role_category, affects_royalties, is_creator) VALUES
('C', 'Composer', 'CREATOR', TRUE, TRUE),
('A', 'Author/Lyricist', 'CREATOR', TRUE, TRUE),
('CA', 'Composer/Author', 'CREATOR', TRUE, TRUE),
('AR', 'Arranger', 'CONTRIBUTOR', TRUE, FALSE),
('AD', 'Adapter', 'CONTRIBUTOR', TRUE, FALSE),
('TR', 'Translator', 'CONTRIBUTOR', TRUE, FALSE);

-- CWR Publisher Roles
INSERT INTO cwr_publisher_role (role_code, role_name, role_category, is_administrator, is_sub_publisher) VALUES
('E', 'Original Publisher', 'PRIMARY', FALSE, FALSE),
('SE', 'Sub-Publisher', 'SECONDARY', FALSE, TRUE),
('AM', 'Administrator', 'ADMINISTRATOR', TRUE, FALSE),
('ES', 'Society-Assigned Publisher', 'SOCIETY', FALSE, FALSE);

-- CWR Territory Indicators
INSERT INTO cwr_territory_indicator (indicator_code, indicator_name, is_inclusion) VALUES
('I', 'Include Territory', TRUE),
('E', 'Exclude Territory', FALSE);

-- CWR Agreement Types
INSERT INTO cwr_agreement_type (agreement_code, agreement_name, agreement_category, is_exclusive, requires_territory) VALUES
('PG', 'General Publishing', 'PUBLISHING', FALSE, TRUE),
('PS', 'Specific Publishing', 'PUBLISHING', TRUE, TRUE),
('OS', 'Original Publisher Share', 'PUBLISHING', TRUE, FALSE),
('SG', 'Sub-Publishing General', 'SUB_PUBLISHING', FALSE, TRUE),
('SS', 'Sub-Publishing Specific', 'SUB_PUBLISHING', TRUE, TRUE);

-- Indexes for performance
CREATE INDEX idx_cwr_version_lookup ON cwr_record_type(cwr_version_id, record_code);
CREATE INDEX idx_cwr_field_lookup ON cwr_field_type(record_type_id, field_position);
CREATE INDEX idx_cwr_society_lookup ON cwr_society_code(society_code, country_code);
CREATE INDEX idx_cwr_validation_lookup ON cwr_validation_rule(rule_category, severity);
CREATE INDEX idx_cwr_error_lookup ON cwr_error_code(error_code, error_level);
CREATE INDEX idx_cwr_tis_lookup ON cwr_tis_code(tis_code, iso_code);

-- =====================================================
-- SECTION 15: DDEX LOOKUPS
-- =====================================================

-- Table: ddex_version
-- Manages DDEX standard versions and their capabilities
CREATE TABLE IF NOT EXISTS `ddex_version` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `version_code` VARCHAR(20) NOT NULL,
    `version_name` VARCHAR(100) NOT NULL,
    `standard_type` VARCHAR(50) NOT NULL, -- ERN, MWN, RIN, PIE, CDM
    `release_date` DATE NOT NULL,
    `deprecation_date` DATE NULL,
    `schema_location` TEXT NOT NULL,
    `namespace_uri` TEXT NOT NULL,
    `capabilities` JSON NOT NULL, -- Features supported in this version
    `backward_compatible_with` JSON NULL, -- Array of compatible versions
    `documentation_url` TEXT NULL,
    `validation_rules` JSON NULL,
    `is_current` BOOLEAN NOT NULL DEFAULT TRUE,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_version_standard` (`version_code`, `standard_type`),
    KEY `idx_standard_type` (`standard_type`),
    KEY `idx_is_current` (`is_current`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_profile
-- DDEX business profiles for different use cases
CREATE TABLE IF NOT EXISTS `ddex_profile` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `profile_code` VARCHAR(50) NOT NULL,
    `profile_name` VARCHAR(200) NOT NULL,
    `profile_type` VARCHAR(50) NOT NULL, -- Standard, Custom, DSP-Specific
    `version_id` INT UNSIGNED NOT NULL,
    `description` TEXT NULL,
    `use_cases` JSON NOT NULL, -- Array of supported use cases
    `required_elements` JSON NOT NULL, -- Mandatory DDEX elements
    `optional_elements` JSON NULL,
    `validation_rules` JSON NULL,
    `dsp_specific` JSON NULL, -- DSP-specific requirements
    `choreography_support` JSON NOT NULL, -- Supported message flows
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_profile_version` (`profile_code`, `version_id`),
    KEY `idx_version` (`version_id`),
    KEY `idx_profile_type` (`profile_type`),
    KEY `idx_is_active` (`is_active`),
    CONSTRAINT `fk_ddex_profile_version` FOREIGN KEY (`version_id`) 
        REFERENCES `ddex_version` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_message_type
-- All DDEX message types across standards
CREATE TABLE IF NOT EXISTS `ddex_message_type` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `message_code` VARCHAR(50) NOT NULL,
    `message_name` VARCHAR(200) NOT NULL,
    `standard_type` VARCHAR(50) NOT NULL,
    `description` TEXT NULL,
    `schema_element` VARCHAR(100) NOT NULL,
    `direction` VARCHAR(20) NOT NULL, -- Inbound, Outbound, Bidirectional
    `trigger_events` JSON NULL, -- Events that trigger this message
    `required_fields` JSON NOT NULL,
    `optional_fields` JSON NULL,
    `response_messages` JSON NULL, -- Possible response message types
    `processing_rules` JSON NULL,
    `retry_policy` JSON NULL,
    `is_acknowledgment` BOOLEAN NOT NULL DEFAULT FALSE,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_message_standard` (`message_code`, `standard_type`),
    KEY `idx_standard_type` (`standard_type`),
    KEY `idx_direction` (`direction`),
    KEY `idx_is_acknowledgment` (`is_acknowledgment`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_choreography
-- Message choreography definitions
CREATE TABLE IF NOT EXISTS `ddex_choreography` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `choreography_code` VARCHAR(50) NOT NULL,
    `choreography_name` VARCHAR(200) NOT NULL,
    `profile_id` INT UNSIGNED NOT NULL,
    `description` TEXT NULL,
    `message_sequence` JSON NOT NULL, -- Ordered array of message flows
    `state_transitions` JSON NOT NULL, -- State machine definition
    `timeout_rules` JSON NOT NULL,
    `error_handling` JSON NOT NULL,
    `rollback_procedures` JSON NULL,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_choreography_profile` (`choreography_code`, `profile_id`),
    KEY `idx_profile` (`profile_id`),
    KEY `idx_is_active` (`is_active`),
    CONSTRAINT `fk_ddex_choreography_profile` FOREIGN KEY (`profile_id`) 
        REFERENCES `ddex_profile` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_use_type
-- Allowed use types for content
CREATE TABLE IF NOT EXISTS `ddex_use_type` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `use_type_code` VARCHAR(50) NOT NULL,
    `use_type_name` VARCHAR(200) NOT NULL,
    `category` VARCHAR(50) NOT NULL, -- Stream, Download, Sync, etc.
    `description` TEXT NULL,
    `parent_use_type_id` INT UNSIGNED NULL,
    `conditions` JSON NULL, -- Conditions for this use type
    `restrictions` JSON NULL,
    `applicable_content_types` JSON NOT NULL,
    `royalty_implications` JSON NULL,
    `is_user_generated` BOOLEAN NOT NULL DEFAULT FALSE,
    `is_commercial` BOOLEAN NOT NULL DEFAULT TRUE,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_use_type_code` (`use_type_code`),
    KEY `idx_category` (`category`),
    KEY `idx_parent` (`parent_use_type_id`),
    KEY `idx_is_commercial` (`is_commercial`),
    KEY `idx_is_active` (`is_active`),
    CONSTRAINT `fk_ddex_use_type_parent` FOREIGN KEY (`parent_use_type_id`) 
        REFERENCES `ddex_use_type` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_commercial_model
-- Commercial model types
CREATE TABLE IF NOT EXISTS `ddex_commercial_model` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `model_code` VARCHAR(50) NOT NULL,
    `model_name` VARCHAR(200) NOT NULL,
    `description` TEXT NULL,
    `payment_type` VARCHAR(50) NOT NULL, -- Subscription, PayPerView, AdSupported, etc.
    `revenue_sharing_rules` JSON NULL,
    `billing_cycles` JSON NULL,
    `supported_use_types` JSON NOT NULL,
    `supported_territories` JSON NULL, -- Null means all territories
    `pricing_tiers` JSON NULL,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_model_code` (`model_code`),
    KEY `idx_payment_type` (`payment_type`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_carrier_type
-- Distribution carrier types
CREATE TABLE IF NOT EXISTS `ddex_carrier_type` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `carrier_code` VARCHAR(50) NOT NULL,
    `carrier_name` VARCHAR(200) NOT NULL,
    `carrier_category` VARCHAR(50) NOT NULL, -- Physical, Digital, Streaming
    `description` TEXT NULL,
    `technical_specifications` JSON NULL,
    `supported_formats` JSON NOT NULL,
    `is_obsolete` BOOLEAN NOT NULL DEFAULT FALSE,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_carrier_code` (`carrier_code`),
    KEY `idx_category` (`carrier_category`),
    KEY `idx_is_obsolete` (`is_obsolete`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_territory_code
-- DDEX territory codes (ISO and custom)
CREATE TABLE IF NOT EXISTS `ddex_territory_code` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `territory_code` VARCHAR(10) NOT NULL,
    `territory_name` VARCHAR(200) NOT NULL,
    `territory_type` VARCHAR(50) NOT NULL, -- Country, Region, Worldwide, Custom
    `iso_code` VARCHAR(10) NULL,
    `parent_territory_id` INT UNSIGNED NULL,
    `included_territories` JSON NULL, -- For regions
    `excluded_territories` JSON NULL,
    `currency_code` VARCHAR(3) NULL,
    `languages` JSON NULL,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_territory_code` (`territory_code`),
    KEY `idx_territory_type` (`territory_type`),
    KEY `idx_parent` (`parent_territory_id`),
    KEY `idx_iso_code` (`iso_code`),
    KEY `idx_is_active` (`is_active`),
    CONSTRAINT `fk_ddex_territory_parent` FOREIGN KEY (`parent_territory_id`) 
        REFERENCES `ddex_territory_code` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_release_type
-- Types of releases
CREATE TABLE IF NOT EXISTS `ddex_release_type` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `release_type_code` VARCHAR(50) NOT NULL,
    `release_type_name` VARCHAR(200) NOT NULL,
    `description` TEXT NULL,
    `category` VARCHAR(50) NOT NULL, -- Album, Single, EP, Compilation, etc.
    `min_tracks` INT NULL,
    `max_tracks` INT NULL,
    `duration_range` JSON NULL,
    `metadata_requirements` JSON NOT NULL,
    `is_primary_type` BOOLEAN NOT NULL DEFAULT TRUE,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_release_type_code` (`release_type_code`),
    KEY `idx_category` (`category`),
    KEY `idx_is_primary_type` (`is_primary_type`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_resource_type
-- Types of resources (audio, video, image, text)
CREATE TABLE IF NOT EXISTS `ddex_resource_type` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `resource_type_code` VARCHAR(50) NOT NULL,
    `resource_type_name` VARCHAR(200) NOT NULL,
    `media_type` VARCHAR(50) NOT NULL, -- Audio, Video, Image, Text, Sheet
    `description` TEXT NULL,
    `file_extensions` JSON NOT NULL,
    `mime_types` JSON NOT NULL,
    `technical_requirements` JSON NULL,
    `quality_tiers` JSON NULL,
    `is_primary_content` BOOLEAN NOT NULL DEFAULT FALSE,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_resource_type_code` (`resource_type_code`),
    KEY `idx_media_type` (`media_type`),
    KEY `idx_is_primary_content` (`is_primary_content`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_technical_details
-- Technical specifications lookup
CREATE TABLE IF NOT EXISTS `ddex_technical_details` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `detail_code` VARCHAR(50) NOT NULL,
    `detail_name` VARCHAR(200) NOT NULL,
    `detail_type` VARCHAR(50) NOT NULL, -- AudioCodec, VideoCodec, ImageFormat, etc.
    `specifications` JSON NOT NULL,
    `compatible_with` JSON NULL,
    `quality_metrics` JSON NULL,
    `is_lossless` BOOLEAN NULL,
    `is_proprietary` BOOLEAN NOT NULL DEFAULT FALSE,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_detail_code_type` (`detail_code`, `detail_type`),
    KEY `idx_detail_type` (`detail_type`),
    KEY `idx_is_lossless` (`is_lossless`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_deal_terms
-- Deal term types and conditions
CREATE TABLE IF NOT EXISTS `ddex_deal_terms` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `term_code` VARCHAR(50) NOT NULL,
    `term_name` VARCHAR(200) NOT NULL,
    `term_category` VARCHAR(50) NOT NULL, -- Financial, Usage, Territory, Time
    `description` TEXT NULL,
    `validation_rules` JSON NOT NULL,
    `required_parameters` JSON NOT NULL,
    `optional_parameters` JSON NULL,
    `calculation_method` JSON NULL,
    `is_standard_term` BOOLEAN NOT NULL DEFAULT TRUE,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_term_code` (`term_code`),
    KEY `idx_term_category` (`term_category`),
    KEY `idx_is_standard_term` (`is_standard_term`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_rights_type
-- Types of rights
CREATE TABLE IF NOT EXISTS `ddex_rights_type` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `rights_code` VARCHAR(50) NOT NULL,
    `rights_name` VARCHAR(200) NOT NULL,
    `rights_category` VARCHAR(50) NOT NULL, -- Master, Publishing, Sync, Performance
    `description` TEXT NULL,
    `scope` JSON NOT NULL, -- What this right covers
    `limitations` JSON NULL,
    `territory_specific` BOOLEAN NOT NULL DEFAULT FALSE,
    `time_limited` BOOLEAN NOT NULL DEFAULT FALSE,
    `transferable` BOOLEAN NOT NULL DEFAULT TRUE,
    `is_exclusive` BOOLEAN NOT NULL DEFAULT FALSE,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_rights_code` (`rights_code`),
    KEY `idx_rights_category` (`rights_category`),
    KEY `idx_is_exclusive` (`is_exclusive`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_party_role
-- Roles that parties can have
CREATE TABLE IF NOT EXISTS `ddex_party_role` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `role_code` VARCHAR(50) NOT NULL,
    `role_name` VARCHAR(200) NOT NULL,
    `role_category` VARCHAR(50) NOT NULL, -- Creator, Business, Technical
    `description` TEXT NULL,
    `applicable_to` JSON NOT NULL, -- Entity types this role applies to
    `rights_implications` JSON NULL,
    `royalty_implications` JSON NULL,
    `is_creative_role` BOOLEAN NOT NULL DEFAULT FALSE,
    `is_business_role` BOOLEAN NOT NULL DEFAULT FALSE,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_role_code` (`role_code`),
    KEY `idx_role_category` (`role_category`),
    KEY `idx_is_creative_role` (`is_creative_role`),
    KEY `idx_is_business_role` (`is_business_role`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_id_type
-- Identifier types (ISRC, ISWC, GRid, etc.)
CREATE TABLE IF NOT EXISTS `ddex_id_type` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `id_type_code` VARCHAR(50) NOT NULL,
    `id_type_name` VARCHAR(200) NOT NULL,
    `issuing_organization` VARCHAR(200) NULL,
    `applies_to` JSON NOT NULL, -- What entities use this ID
    `format_regex` VARCHAR(500) NOT NULL,
    `validation_algorithm` JSON NULL,
    `check_digit_method` VARCHAR(50) NULL,
    `example_value` VARCHAR(100) NULL,
    `documentation_url` TEXT NULL,
    `is_global` BOOLEAN NOT NULL DEFAULT TRUE,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_id_type_code` (`id_type_code`),
    KEY `idx_is_global` (`is_global`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_language_code
-- Language codes (ISO 639)
CREATE TABLE IF NOT EXISTS `ddex_language_code` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `language_code` VARCHAR(10) NOT NULL,
    `language_name` VARCHAR(200) NOT NULL,
    `native_name` VARCHAR(200) NULL,
    `iso_639_1` VARCHAR(2) NULL,
    `iso_639_2` VARCHAR(3) NULL,
    `iso_639_3` VARCHAR(3) NULL,
    `script_code` VARCHAR(4) NULL,
    `writing_direction` VARCHAR(10) NOT NULL DEFAULT 'ltr',
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_language_code` (`language_code`),
    KEY `idx_iso_639_1` (`iso_639_1`),
    KEY `idx_iso_639_3` (`iso_639_3`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_script_code
-- Script codes (ISO 15924)
CREATE TABLE IF NOT EXISTS `ddex_script_code` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `script_code` VARCHAR(4) NOT NULL,
    `script_name` VARCHAR(200) NOT NULL,
    `numeric_code` VARCHAR(3) NOT NULL,
    `direction` VARCHAR(10) NOT NULL DEFAULT 'ltr',
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_script_code` (`script_code`),
    UNIQUE KEY `uk_numeric_code` (`numeric_code`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_currency_code
-- Currency codes (ISO 4217)
CREATE TABLE IF NOT EXISTS `ddex_currency_code` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `currency_code` VARCHAR(3) NOT NULL,
    `currency_name` VARCHAR(200) NOT NULL,
    `numeric_code` VARCHAR(3) NULL,
    `minor_units` INT NOT NULL DEFAULT 2,
    `symbol` VARCHAR(10) NULL,
    `is_crypto` BOOLEAN NOT NULL DEFAULT FALSE,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_currency_code` (`currency_code`),
    KEY `idx_is_crypto` (`is_crypto`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_error_code
-- DDEX error codes and handling
CREATE TABLE IF NOT EXISTS `ddex_error_code` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `error_code` VARCHAR(50) NOT NULL,
    `error_name` VARCHAR(200) NOT NULL,
    `error_category` VARCHAR(50) NOT NULL, -- Validation, Business, Technical
    `severity` VARCHAR(20) NOT NULL, -- Fatal, Error, Warning, Info
    `description` TEXT NOT NULL,
    `resolution_steps` JSON NULL,
    `retry_allowed` BOOLEAN NOT NULL DEFAULT FALSE,
    `max_retries` INT NULL,
    `related_errors` JSON NULL,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_error_code` (`error_code`),
    KEY `idx_error_category` (`error_category`),
    KEY `idx_severity` (`severity`),
    KEY `idx_retry_allowed` (`retry_allowed`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_genre_category
-- Genre classifications
CREATE TABLE IF NOT EXISTS `ddex_genre_category` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `genre_code` VARCHAR(50) NOT NULL,
    `genre_name` VARCHAR(200) NOT NULL,
    `parent_genre_id` INT UNSIGNED NULL,
    `genre_system` VARCHAR(50) NOT NULL, -- DDEX, Spotify, Apple, etc.
    `description` TEXT NULL,
    `keywords` JSON NULL,
    `mapping_rules` JSON NULL, -- Mappings to other systems
    `is_primary` BOOLEAN NOT NULL DEFAULT TRUE,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_genre_system` (`genre_code`, `genre_system`),
    KEY `idx_parent` (`parent_genre_id`),
    KEY `idx_genre_system` (`genre_system`),
    KEY `idx_is_primary` (`is_primary`),
    KEY `idx_is_active` (`is_active`),
    CONSTRAINT `fk_ddex_genre_parent` FOREIGN KEY (`parent_genre_id`) 
        REFERENCES `ddex_genre_category` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_parental_warning_type
-- Parental advisory types
CREATE TABLE IF NOT EXISTS `ddex_parental_warning_type` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `warning_code` VARCHAR(50) NOT NULL,
    `warning_name` VARCHAR(200) NOT NULL,
    `warning_level` INT NOT NULL, -- 0=None, 1=Mild, 2=Moderate, 3=Explicit
    `description` TEXT NULL,
    `display_text` JSON NOT NULL, -- Multi-language display text
    `age_restrictions` JSON NULL,
    `territory_specific` JSON NULL,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_warning_code` (`warning_code`),
    KEY `idx_warning_level` (`warning_level`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_file_format
-- File format specifications
CREATE TABLE IF NOT EXISTS `ddex_file_format` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `format_code` VARCHAR(50) NOT NULL,
    `format_name` VARCHAR(200) NOT NULL,
    `media_type` VARCHAR(50) NOT NULL,
    `file_extension` VARCHAR(10) NOT NULL,
    `mime_type` VARCHAR(100) NOT NULL,
    `codec_info` JSON NULL,
    `quality_levels` JSON NULL,
    `compression_type` VARCHAR(50) NULL,
    `is_proprietary` BOOLEAN NOT NULL DEFAULT FALSE,
    `is_drm_capable` BOOLEAN NOT NULL DEFAULT FALSE,
    `is_streaming_format` BOOLEAN NOT NULL DEFAULT FALSE,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `display_order` INT NOT NULL DEFAULT 0,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_format_code` (`format_code`),
    KEY `idx_media_type` (`media_type`),
    KEY `idx_file_extension` (`file_extension`),
    KEY `idx_is_streaming_format` (`is_streaming_format`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_hash_algorithm
-- Hash algorithms for file verification
CREATE TABLE IF NOT EXISTS `ddex_hash_algorithm` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `algorithm_code` VARCHAR(50) NOT NULL,
    `algorithm_name` VARCHAR(200) NOT NULL,
    `output_length` INT NOT NULL, -- In bits
    `description` TEXT NULL,
    `is_cryptographic` BOOLEAN NOT NULL DEFAULT TRUE,
    `is_recommended` BOOLEAN NOT NULL DEFAULT TRUE,
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_algorithm_code` (`algorithm_code`),
    KEY `idx_is_recommended` (`is_recommended`),
    KEY `idx_is_active` (`is_active`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: ddex_validation_rule
-- Validation rules for DDEX messages
CREATE TABLE IF NOT EXISTS `ddex_validation_rule` (
    `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `rule_code` VARCHAR(50) NOT NULL,
    `rule_name` VARCHAR(200) NOT NULL,
    `applies_to` VARCHAR(100) NOT NULL, -- Message type or element
    `rule_type` VARCHAR(50) NOT NULL, -- Format, Business, Relationship
    `validation_logic` JSON NOT NULL,
    `error_code_id` INT UNSIGNED NOT NULL,
    `severity` VARCHAR(20) NOT NULL DEFAULT 'Error',
    `is_active` BOOLEAN NOT NULL DEFAULT TRUE,
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    UNIQUE KEY `uk_rule_code` (`rule_code`),
    KEY `idx_applies_to` (`applies_to`),
    KEY `idx_rule_type` (`rule_type`),
    KEY `idx_error_code` (`error_code_id`),
    KEY `idx_is_active` (`is_active`),
    CONSTRAINT `fk_ddex_validation_error` FOREIGN KEY (`error_code_id`) 
        REFERENCES `ddex_error_code` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- =====================================================
-- INITIAL DATA INSERTS
-- =====================================================

-- Insert DDEX versions
INSERT INTO `ddex_version` (`version_code`, `version_name`, `standard_type`, `release_date`, `schema_location`, `namespace_uri`, `capabilities`, `is_current`) VALUES
('ERN-4.3', 'Electronic Release Notification 4.3', 'ERN', '2024-07-01', 'http://ddex.net/xml/ern/43', 'http://ddex.net/xml/ern/43', '{"features": ["enhanced_metadata", "blockchain_ready", "multi_territory", "ugc_support"]}', TRUE),
('ERN-4.2', 'Electronic Release Notification 4.2', 'ERN', '2023-04-01', 'http://ddex.net/xml/ern/42', 'http://ddex.net/xml/ern/42', '{"features": ["standard_metadata", "multi_territory"]}', FALSE),
('MWN-1.0', 'Musical Work Notification 1.0', 'MWN', '2023-07-01', 'http://ddex.net/xml/mwn/10', 'http://ddex.net/xml/mwn/10', '{"features": ["work_registration", "ownership_shares"]}', TRUE),
('RIN-1.2', 'Recording Information Notification 1.2', 'RIN', '2023-01-01', 'http://ddex.net/xml/rin/12', 'http://ddex.net/xml/rin/12', '{"features": ["isrc_registration", "contributor_data"]}', TRUE),
('PIE-1.0', 'Party Information Exchange 1.0', 'PIE', '2024-01-01', 'http://ddex.net/xml/pie/10', 'http://ddex.net/xml/pie/10', '{"features": ["party_registration", "dpid_management"]}', TRUE),
('CDM-1.0', 'Claim Detail Message 1.0', 'CDM', '2024-06-01', 'http://ddex.net/xml/cdm/10', 'http://ddex.net/xml/cdm/10', '{"features": ["claim_registration", "dispute_handling"]}', TRUE);

-- Insert DDEX profiles
INSERT INTO `ddex_profile` (`profile_code`, `profile_name`, `profile_type`, `version_id`, `use_cases`, `required_elements`, `choreography_support`) VALUES
('ERN_AudioAlbum', 'Audio Album Release Profile', 'Standard', 1, '["album_release", "track_bundling"]', '["Release", "Deal", "Resource"]', '["NewReleaseMessage", "DealNotification"]'),
('ERN_Single', 'Single Track Release Profile', 'Standard', 1, '["single_release", "radio_servicing"]', '["Release", "Deal", "Resource"]', '["NewReleaseMessage", "TakedownNotification"]'),
('ERN_Video', 'Video Release Profile', 'Standard', 1, '["music_video", "concert_film"]', '["Release", "VideoResource", "Deal"]', '["NewReleaseMessage", "ResourceUpdate"]'),
('ERN_Classical', 'Classical Music Profile', 'Standard', 1, '["classical_album", "opera"]', '["Release", "Work", "Movement", "Performer"]', '["NewReleaseMessage", "WorkNotification"]'),
('MWN_Publishing', 'Music Publishing Profile', 'Standard', 3, '["work_registration", "ownership_claims"]', '["MusicalWork", "Writer", "Publisher"]', '["WorkRegistration", "OwnershipClaim"]'),
('Spotify_Custom', 'Spotify Custom Profile', 'DSP-Specific', 1, '["spotify_release"]', '["Release", "Deal", "CustomMetadata"]', '["NewReleaseMessage", "CatalogUpdate"]'),
('AppleMusic_Custom', 'Apple Music Profile', 'DSP-Specific', 1, '["apple_release"]', '["Release", "Deal", "AppleMetadata"]', '["NewReleaseMessage", "MetadataUpdate"]');

-- Insert message types
INSERT INTO `ddex_message_type` (`message_code`, `message_name`, `standard_type`, `schema_element`, `direction`, `required_fields`, `is_acknowledgment`) VALUES
('NewReleaseMessage', 'New Release Message', 'ERN', 'NewReleaseMessage', 'Outbound', '["MessageHeader", "ReleaseList", "DealList"]', FALSE),
('CatalogUpdateMessage', 'Catalog Update Message', 'ERN', 'CatalogUpdateMessage', 'Outbound', '["MessageHeader", "CatalogTransfer"]', FALSE),
('PurgeReleaseMessage', 'Purge Release Message', 'ERN', 'PurgeReleaseMessage', 'Outbound', '["MessageHeader", "PurgedReleaseList"]', FALSE),
('NewDealMessage', 'New Deal Message', 'ERN', 'NewDealMessage', 'Outbound', '["MessageHeader", "DealList"]', FALSE),
('TakedownNotification', 'Takedown Notification', 'ERN', 'TakedownNotification', 'Bidirectional', '["MessageHeader", "ReleaseId", "TakedownReason"]', FALSE),
('FtpAcknowledgementMessage', 'FTP Acknowledgement', 'ERN', 'FtpAcknowledgementMessage', 'Inbound', '["MessageHeader", "AcknowledgementDetail"]', TRUE),
('WorkRegistrationMessage', 'Work Registration', 'MWN', 'WorkRegistrationMessage', 'Outbound', '["MessageHeader", "MusicalWorkList"]', FALSE),
('RecordingInformationMessage', 'Recording Information', 'RIN', 'RecordingInformationMessage', 'Outbound', '["MessageHeader", "RecordingList"]', FALSE),
('PartyInformationMessage', 'Party Information', 'PIE', 'PartyInformationMessage', 'Bidirectional', '["MessageHeader", "PartyList"]', FALSE),
('ClaimDetailMessage', 'Claim Detail', 'CDM', 'ClaimDetailMessage', 'Bidirectional', '["MessageHeader", "ClaimList"]', FALSE);

-- Insert use types
INSERT INTO `ddex_use_type` (`use_type_code`, `use_type_name`, `category`, `applicable_content_types`, `is_commercial`) VALUES
('PermanentDownload', 'Permanent Download', 'Download', '["Audio", "Video", "Image"]', TRUE),
('SubscriptionStreaming', 'Subscription Streaming', 'Stream', '["Audio", "Video"]', TRUE),
('AdSupportedStreaming', 'Ad-Supported Streaming', 'Stream', '["Audio", "Video"]', TRUE),
('RadioBroadcast', 'Radio Broadcast', 'Broadcast', '["Audio"]', TRUE),
('TelevisionBroadcast', 'Television Broadcast', 'Broadcast', '["Audio", "Video"]', TRUE),
('SynchronizationRight', 'Synchronization Right', 'Sync', '["Audio", "Video"]', TRUE),
('MobileRingtone', 'Mobile Phone Ringtone', 'Download', '["Audio"]', TRUE),
('KaraokeUse', 'Karaoke Use', 'Interactive', '["Audio", "Text"]', TRUE),
('EducationalUse', 'Educational Use', 'Institutional', '["Audio", "Video", "Text"]', FALSE),
('UserGeneratedContent', 'User Generated Content', 'UGC', '["Audio", "Video"]', FALSE),
('LivePerformance', 'Live Performance', 'Performance', '["Audio"]', TRUE),
('MechanicalReproduction', 'Mechanical Reproduction', 'Physical', '["Audio"]', TRUE),
('PrintMusic', 'Print Music', 'Physical', '["SheetMusic"]', TRUE),
('GamingUse', 'Gaming Use', 'Interactive', '["Audio"]', TRUE),
('PodcastUse', 'Podcast Use', 'Stream', '["Audio"]', TRUE),
('FitnessUse', 'Fitness Application', 'Interactive', '["Audio"]', TRUE),
('VirtualReality', 'Virtual Reality Use', 'Interactive', '["Audio", "Video"]', TRUE),
('AugmentedReality', 'Augmented Reality Use', 'Interactive', '["Audio", "Video"]', TRUE),
('NFTUse', 'NFT Use', 'Blockchain', '["Audio", "Video", "Image"]', TRUE),
('StemDownload', 'Stem Download', 'Download', '["Audio"]', TRUE);

-- Insert commercial models
INSERT INTO `ddex_commercial_model` (`model_code`, `model_name`, `payment_type`, `supported_use_types`) VALUES
('SubscriptionModel', 'Subscription Model', 'Subscription', '["SubscriptionStreaming", "PermanentDownload"]'),
('PayPerPlayModel', 'Pay Per Play Model', 'PayPerView', '["AdSupportedStreaming", "RadioBroadcast"]'),
('PayAsYouGoModel', 'Pay As You Go Model', 'Transaction', '["PermanentDownload", "MobileRingtone"]'),
('AdSupportedModel', 'Ad Supported Model', 'AdSupported', '["AdSupportedStreaming", "UserGeneratedContent"]'),
('BundleModel', 'Bundle Model', 'Bundle', '["PermanentDownload", "SubscriptionStreaming"]'),
('FreeModel', 'Free Model', 'Free', '["EducationalUse", "UserGeneratedContent"]'),
('FreemiumModel', 'Freemium Model', 'Hybrid', '["AdSupportedStreaming", "SubscriptionStreaming"]'),
('LicenseModel', 'License Model', 'License', '["SynchronizationRight", "MechanicalReproduction"]'),
('RoyaltyModel', 'Royalty Model', 'Royalty', '["RadioBroadcast", "LivePerformance"]'),
('BlockchainModel', 'Blockchain Model', 'Crypto', '["NFTUse", "PermanentDownload"]');

-- Insert carrier types
INSERT INTO `ddex_carrier_type` (`carrier_code`, `carrier_name`, `carrier_category`, `supported_formats`) VALUES
('DigitalAudioFile', 'Digital Audio File', 'Digital', '["MP3", "FLAC", "WAV", "AAC", "OGG"]'),
('DigitalVideoFile', 'Digital Video File', 'Digital', '["MP4", "MOV", "AVI", "MKV", "WEBM"]'),
('StreamingAudio', 'Streaming Audio', 'Streaming', '["HLS", "DASH", "RTMP"]'),
('StreamingVideo', 'Streaming Video', 'Streaming', '["HLS", "DASH", "RTMP", "WebRTC"]'),
('CompactDisc', 'Compact Disc', 'Physical', '["CDDA", "CD-R"]'),
('Vinyl', 'Vinyl Record', 'Physical', '["LP", "EP", "Single"]'),
('Cassette', 'Cassette Tape', 'Physical', '["CompactCassette"]'),
('DVD', 'Digital Versatile Disc', 'Physical', '["DVD-Video", "DVD-Audio"]'),
('BluRay', 'Blu-ray Disc', 'Physical', '["BD-Video", "BD-Audio"]'),
('USBFlashDrive', 'USB Flash Drive', 'Physical', '["FAT32", "exFAT", "NTFS"]');

-- Insert first 30 territory codes (more to be added)
INSERT INTO `ddex_territory_code` (`territory_code`, `territory_name`, `territory_type`, `iso_code`, `currency_code`) VALUES
('Worldwide', 'Worldwide', 'Worldwide', NULL, NULL),
('US', 'United States', 'Country', 'US', 'USD'),
('GB', 'United Kingdom', 'Country', 'GB', 'GBP'),
('CA', 'Canada', 'Country', 'CA', 'CAD'),
('AU', 'Australia', 'Country', 'AU', 'AUD'),
('JP', 'Japan', 'Country', 'JP', 'JPY'),
('DE', 'Germany', 'Country', 'DE', 'EUR'),
('FR', 'France', 'Country', 'FR', 'EUR'),
('IT', 'Italy', 'Country', 'IT', 'EUR'),
('ES', 'Spain', 'Country', 'ES', 'EUR'),
('NL', 'Netherlands', 'Country', 'NL', 'EUR'),
('BE', 'Belgium', 'Country', 'BE', 'EUR'),
('CH', 'Switzerland', 'Country', 'CH', 'CHF'),
('AT', 'Austria', 'Country', 'AT', 'EUR'),
('SE', 'Sweden', 'Country', 'SE', 'SEK'),
('NO', 'Norway', 'Country', 'NO', 'NOK'),
('DK', 'Denmark', 'Country', 'DK', 'DKK'),
('FI', 'Finland', 'Country', 'FI', 'EUR'),
('PL', 'Poland', 'Country', 'PL', 'PLN'),
('PT', 'Portugal', 'Country', 'PT', 'EUR'),
('BR', 'Brazil', 'Country', 'BR', 'BRL'),
('MX', 'Mexico', 'Country', 'MX', 'MXN'),
('AR', 'Argentina', 'Country', 'AR', 'ARS'),
('CL', 'Chile', 'Country', 'CL', 'CLP'),
('CO', 'Colombia', 'Country', 'CO', 'COP'),
('IN', 'India', 'Country', 'IN', 'INR'),
('CN', 'China', 'Country', 'CN', 'CNY'),
('KR', 'South Korea', 'Country', 'KR', 'KRW'),
('RU', 'Russia', 'Country', 'RU', 'RUB'),
('ZA', 'South Africa', 'Country', 'ZA', 'ZAR');
-- Note: Additional territories will be added in subsequent inserts

-- Insert release types
INSERT INTO `ddex_release_type` (`release_type_code`, `release_type_name`, `category`, `min_tracks`, `max_tracks`, `metadata_requirements`) VALUES
('Album', 'Album', 'Album', 7, NULL, '["title", "artist", "label", "release_date", "tracks"]'),
('Single', 'Single', 'Single', 1, 3, '["title", "artist", "label", "release_date", "isrc"]'),
('EP', 'Extended Play', 'EP', 4, 6, '["title", "artist", "label", "release_date", "tracks"]'),
('Compilation', 'Compilation', 'Compilation', 2, NULL, '["title", "compiler", "label", "release_date", "tracks"]'),
('Soundtrack', 'Soundtrack', 'Soundtrack', 1, NULL, '["title", "film_title", "label", "release_date", "tracks"]'),
('LiveAlbum', 'Live Album', 'Album', 5, NULL, '["title", "artist", "venue", "performance_date", "tracks"]'),
('Remix', 'Remix', 'Single', 1, 5, '["title", "original_artist", "remixer", "release_date"]'),
('ClassicalAlbum', 'Classical Album', 'Album', 1, NULL, '["title", "composer", "performers", "conductor", "orchestra"]'),
('SpokenWord', 'Spoken Word', 'Album', 1, NULL, '["title", "narrator", "author", "publisher"]'),
('Podcast', 'Podcast Episode', 'Single', 1, 1, '["title", "series", "episode_number", "host"]');

-- Insert resource types
INSERT INTO `ddex_resource_type` (`resource_type_code`, `resource_type_name`, `media_type`, `file_extensions`, `mime_types`, `is_primary_content`) VALUES
('SoundRecording', 'Sound Recording', 'Audio', '["mp3", "flac", "wav", "m4a", "aac"]', '["audio/mpeg", "audio/flac", "audio/wav", "audio/mp4"]', TRUE),
('VideoRecording', 'Video Recording', 'Video', '["mp4", "mov", "avi", "mkv", "webm"]', '["video/mp4", "video/quicktime", "video/avi", "video/webm"]', TRUE),
('Image', 'Image', 'Image', '["jpg", "png", "gif", "webp", "tiff"]', '["image/jpeg", "image/png", "image/gif", "image/webp"]', FALSE),
('Text', 'Text', 'Text', '["txt", "pdf", "docx", "rtf"]', '["text/plain", "application/pdf", "application/vnd.openxmlformats"]', FALSE),
('SheetMusic', 'Sheet Music', 'Sheet', '["pdf", "xml", "mxl"]', '["application/pdf", "application/vnd.recordare.musicxml"]', FALSE),
('MIDI', 'MIDI File', 'Audio', '["mid", "midi"]', '["audio/midi", "audio/x-midi"]', FALSE),
('Artwork', 'Cover Artwork', 'Image', '["jpg", "png", "tiff"]', '["image/jpeg", "image/png", "image/tiff"]', FALSE),
('Lyrics', 'Lyrics', 'Text', '["lrc", "txt", "xml"]', '["text/plain", "application/xml"]', FALSE),
('Stems', 'Audio Stems', 'Audio', '["zip", "stem.mp4"]', '["application/zip", "audio/stem+mp4"]', FALSE),
('Software', 'Software', 'Software', '["exe", "dmg", "app", "vst"]', '["application/octet-stream"]', FALSE);

-- Insert party roles
INSERT INTO `ddex_party_role` (`role_code`, `role_name`, `role_category`, `applicable_to`, `is_creative_role`, `is_business_role`) VALUES
('MainArtist', 'Main Artist', 'Creator', '["Person", "Group"]', TRUE, FALSE),
('FeaturedArtist', 'Featured Artist', 'Creator', '["Person", "Group"]', TRUE, FALSE),
('Composer', 'Composer', 'Creator', '["Person"]', TRUE, FALSE),
('Lyricist', 'Lyricist', 'Creator', '["Person"]', TRUE, FALSE),
('Producer', 'Producer', 'Creator', '["Person"]', TRUE, FALSE),
('Remixer', 'Remixer', 'Creator', '["Person"]', TRUE, FALSE),
('Engineer', 'Engineer', 'Technical', '["Person"]', TRUE, FALSE),
('MasteringEngineer', 'Mastering Engineer', 'Technical', '["Person"]', TRUE, FALSE),
('RecordLabel', 'Record Label', 'Business', '["Organization"]', FALSE, TRUE),
('Publisher', 'Publisher', 'Business', '["Organization"]', FALSE, TRUE),
('Distributor', 'Distributor', 'Business', '["Organization"]', FALSE, TRUE),
('SubPublisher', 'Sub-Publisher', 'Business', '["Organization"]', FALSE, TRUE),
('Administrator', 'Administrator', 'Business', '["Organization", "Person"]', FALSE, TRUE),
('Licensor', 'Licensor', 'Business', '["Organization", "Person"]', FALSE, TRUE),
('Licensee', 'Licensee', 'Business', '["Organization", "Person"]', FALSE, TRUE),
('Manager', 'Manager', 'Business', '["Person", "Organization"]', FALSE, TRUE),
('Conductor', 'Conductor', 'Creator', '["Person"]', TRUE, FALSE),
('Orchestra', 'Orchestra', 'Creator', '["Group"]', TRUE, FALSE),
('Ensemble', 'Ensemble', 'Creator', '["Group"]', TRUE, FALSE),
('Soloist', 'Soloist', 'Creator', '["Person"]', TRUE, FALSE);

-- Insert ID types
INSERT INTO `ddex_id_type` (`id_type_code`, `id_type_name`, `issuing_organization`, `applies_to`, `format_regex`, `example_value`) VALUES
('ISRC', 'International Standard Recording Code', 'IFPI', '["SoundRecording", "VideoRecording"]', '^[A-Z]{2}[A-Z0-9]{3}[0-9]{2}[0-9]{5}$', 'USRC17607839'),
('ISWC', 'International Standard Musical Work Code', 'CISAC', '["MusicalWork"]', '^T[0-9]{3}[0-9]{3}[0-9]{3}[0-9]$', 'T3452246800'),
('GRid', 'Global Release Identifier', 'IFPI', '["Release"]', '^A1-[A-Z0-9]{5}-[A-Z0-9]{10}-[A-Z0-9]$', 'A1-2425G-ABC1234567-M'),
('ISNI', 'International Standard Name Identifier', 'ISNI-IA', '["Person", "Organization"]', '^[0-9]{4} [0-9]{4} [0-9]{4} [0-9]{3}[0-9X]$', '0000 0001 2150 090X'),
('IPI', 'Interested Party Information', 'CISAC', '["Person", "Organization"]', '^[0-9]{11}$', '00159753908'),
('IPN', 'International Performer Number', 'SCAPR', '["Person"]', '^[0-9]{13}$', '0000000123456'),
('DPID', 'DDEX Party Identifier', 'DDEX', '["Organization"]', '^PADPIDA[0-9]{10}$', 'PADPIDA2025001234'),
('ISAN', 'International Standard Audiovisual Number', 'ISAN-IA', '["VideoRecording"]', '^[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]$', '0000-0001-8CFA-0000-8'),
('UPC', 'Universal Product Code', 'GS1', '["Release"]', '^[0-9]{12}$', '123456789012'),
('EAN', 'European Article Number', 'GS1', '["Release"]', '^[0-9]{13}$', '1234567890123'),
('ICPN', 'International Code of Product Numbering', 'CISAC', '["Release"]', '^[0-9]{13}$', '1234567890123'),
('VIAF', 'Virtual International Authority File', 'OCLC', '["Person", "Organization"]', '^[0-9]+$', '96994048'),
('MusicBrainz', 'MusicBrainz Identifier', 'MetaBrainz', '["Various"]', '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$', '678d88b2-87b0-403b-b63d-5da7465aecc3'),
('SpotifyID', 'Spotify Identifier', 'Spotify', '["Various"]', '^[0-9A-Za-z]{22}$', '3n3Ppam7vgaVa1iaRUc9Lp'),
('AppleID', 'Apple Music Identifier', 'Apple', '["Various"]', '^[0-9]+$', '1440818598');

-- Insert first 30 language codes
INSERT INTO `ddex_language_code` (`language_code`, `language_name`, `native_name`, `iso_639_1`, `iso_639_2`, `iso_639_3`) VALUES
('en', 'English', 'English', 'en', 'eng', 'eng'),
('es', 'Spanish', 'Español', 'es', 'spa', 'spa'),
('fr', 'French', 'Français', 'fr', 'fra', 'fra'),
('de', 'German', 'Deutsch', 'de', 'deu', 'deu'),
('it', 'Italian', 'Italiano', 'it', 'ita', 'ita'),
('pt', 'Portuguese', 'Português', 'pt', 'por', 'por'),
('ja', 'Japanese', '日本語', 'ja', 'jpn', 'jpn'),
('ko', 'Korean', '한국어', 'ko', 'kor', 'kor'),
('zh', 'Chinese', '中文', 'zh', 'zho', 'zho'),
('ru', 'Russian', 'Русский', 'ru', 'rus', 'rus'),
('ar', 'Arabic', 'العربية', 'ar', 'ara', 'ara'),
('hi', 'Hindi', 'हिन्दी', 'hi', 'hin', 'hin'),
('nl', 'Dutch', 'Nederlands', 'nl', 'nld', 'nld'),
('sv', 'Swedish', 'Svenska', 'sv', 'swe', 'swe'),
('no', 'Norwegian', 'Norsk', 'no', 'nor', 'nor'),
('da', 'Danish', 'Dansk', 'da', 'dan', 'dan'),
('fi', 'Finnish', 'Suomi', 'fi', 'fin', 'fin'),
('pl', 'Polish', 'Polski', 'pl', 'pol', 'pol'),
('tr', 'Turkish', 'Türkçe', 'tr', 'tur', 'tur'),
('el', 'Greek', 'Ελληνικά', 'el', 'ell', 'ell'),
('he', 'Hebrew', 'עברית', 'he', 'heb', 'heb'),
('th', 'Thai', 'ไทย', 'th', 'tha', 'tha'),
('vi', 'Vietnamese', 'Tiếng Việt', 'vi', 'vie', 'vie'),
('id', 'Indonesian', 'Bahasa Indonesia', 'id', 'ind', 'ind'),
('ms', 'Malay', 'Bahasa Melayu', 'ms', 'msa', 'msa'),
('uk', 'Ukrainian', 'Українська', 'uk', 'ukr', 'ukr'),
('cs', 'Czech', 'Čeština', 'cs', 'ces', 'ces'),
('hu', 'Hungarian', 'Magyar', 'hu', 'hun', 'hun'),
('ro', 'Romanian', 'Română', 'ro', 'ron', 'ron'),
('bg', 'Bulgarian', 'Български', 'bg', 'bul', 'bul');
-- Note: Additional languages will be added in subsequent inserts

-- Insert currency codes
INSERT INTO `ddex_currency_code` (`currency_code`, `currency_name`, `numeric_code`, `minor_units`, `symbol`) VALUES
('USD', 'US Dollar', '840', 2, '$'),
('EUR', 'Euro', '978', 2, '€'),
('GBP', 'British Pound', '826', 2, '£'),
('JPY', 'Japanese Yen', '392', 0, '¥'),
('AUD', 'Australian Dollar', '036', 2, 'A$'),
('CAD', 'Canadian Dollar', '124', 2, 'C$'),
('CHF', 'Swiss Franc', '756', 2, 'Fr'),
('CNY', 'Chinese Yuan', '156', 2, '¥'),
('SEK', 'Swedish Krona', '752', 2, 'kr'),
('NZD', 'New Zealand Dollar', '554', 2, 'NZ$'),
('MXN', 'Mexican Peso', '484', 2, '$'),
('SGD', 'Singapore Dollar', '702', 2, 'S$'),
('HKD', 'Hong Kong Dollar', '344', 2, 'HK$'),
('NOK', 'Norwegian Krone', '578', 2, 'kr'),
('KRW', 'South Korean Won', '410', 0, '₩'),
('TRY', 'Turkish Lira', '949', 2, '₺'),
('RUB', 'Russian Ruble', '643', 2, '₽'),
('INR', 'Indian Rupee', '356', 2, '₹'),
('BRL', 'Brazilian Real', '986', 2, 'R$'),
('ZAR', 'South African Rand', '710', 2, 'R'),
('BTC', 'Bitcoin', NULL, 8, '₿'),
('ETH', 'Ethereum', NULL, 18, 'Ξ'),
('USDT', 'Tether', NULL, 6, '₮');

-- Insert error codes
INSERT INTO `ddex_error_code` (`error_code`, `error_name`, `error_category`, `severity`, `description`, `retry_allowed`) VALUES
('ERR001', 'Invalid Message Format', 'Validation', 'Fatal', 'The message does not conform to the DDEX schema', FALSE),
('ERR002', 'Missing Required Field', 'Validation', 'Error', 'A required field is missing from the message', FALSE),
('ERR003', 'Invalid Identifier', 'Validation', 'Error', 'The provided identifier does not match the expected format', FALSE),
('ERR004', 'Duplicate Message', 'Business', 'Warning', 'This message has already been processed', FALSE),
('ERR005', 'Invalid Territory Code', 'Validation', 'Error', 'The territory code is not recognized', FALSE),
('ERR006', 'Date Out of Range', 'Business', 'Error', 'The provided date is outside the acceptable range', FALSE),
('ERR007', 'Unauthorized Sender', 'Business', 'Fatal', 'The sender is not authorized to send this message type', FALSE),
('ERR008', 'Network Timeout', 'Technical', 'Error', 'The message delivery timed out', TRUE),
('ERR009', 'File Not Found', 'Technical', 'Error', 'The referenced file could not be found', FALSE),
('ERR010', 'Invalid Checksum', 'Technical', 'Error', 'The file checksum does not match', FALSE),
('ERR011', 'Unsupported Format', 'Technical', 'Error', 'The file format is not supported', FALSE),
('ERR012', 'Rate Limit Exceeded', 'Technical', 'Warning', 'Too many requests in a short period', TRUE),
('ERR013', 'Invalid Rights Claim', 'Business', 'Error', 'The rights claim conflicts with existing claims', FALSE),
('ERR014', 'Missing Agreement', 'Business', 'Error', 'No valid agreement found for this transaction', FALSE),
('ERR015', 'Invalid Commercial Model', 'Business', 'Error', 'The commercial model is not supported for this use type', FALSE);

-- Insert file formats
INSERT INTO `ddex_file_format` (`format_code`, `format_name`, `media_type`, `file_extension`, `mime_type`, `is_streaming_format`) VALUES
('MP3', 'MPEG-1 Audio Layer 3', 'Audio', 'mp3', 'audio/mpeg', FALSE),
('FLAC', 'Free Lossless Audio Codec', 'Audio', 'flac', 'audio/flac', FALSE),
('WAV', 'Waveform Audio File', 'Audio', 'wav', 'audio/wav', FALSE),
('AAC', 'Advanced Audio Coding', 'Audio', 'aac', 'audio/aac', FALSE),
('M4A', 'MPEG-4 Audio', 'Audio', 'm4a', 'audio/mp4', FALSE),
('OGG', 'Ogg Vorbis', 'Audio', 'ogg', 'audio/ogg', FALSE),
('MP4', 'MPEG-4 Video', 'Video', 'mp4', 'video/mp4', FALSE),
('MOV', 'QuickTime Movie', 'Video', 'mov', 'video/quicktime', FALSE),
('AVI', 'Audio Video Interleave', 'Video', 'avi', 'video/x-msvideo', FALSE),
('MKV', 'Matroska Video', 'Video', 'mkv', 'video/x-matroska', FALSE),
('WEBM', 'WebM Video', 'Video', 'webm', 'video/webm', TRUE),
('HLS', 'HTTP Live Streaming', 'Stream', 'm3u8', 'application/x-mpegURL', TRUE),
('DASH', 'Dynamic Adaptive Streaming', 'Stream', 'mpd', 'application/dash+xml', TRUE),
('JPEG', 'Joint Photographic Experts Group', 'Image', 'jpg', 'image/jpeg', FALSE),
('PNG', 'Portable Network Graphics', 'Image', 'png', 'image/png', FALSE),
('TIFF', 'Tagged Image File Format', 'Image', 'tiff', 'image/tiff', FALSE),
('PDF', 'Portable Document Format', 'Document', 'pdf', 'application/pdf', FALSE),
('MUSICXML', 'Music XML', 'Sheet', 'xml', 'application/vnd.recordare.musicxml+xml', FALSE);

-- Insert hash algorithms
INSERT INTO `ddex_hash_algorithm` (`algorithm_code`, `algorithm_name`, `output_length`, `is_cryptographic`, `is_recommended`) VALUES
('MD5', 'Message Digest 5', 128, TRUE, FALSE),
('SHA1', 'Secure Hash Algorithm 1', 160, TRUE, FALSE),
('SHA256', 'Secure Hash Algorithm 256', 256, TRUE, TRUE),
('SHA384', 'Secure Hash Algorithm 384', 384, TRUE, TRUE),
('SHA512', 'Secure Hash Algorithm 512', 512, TRUE, TRUE),
('SHA3-256', 'SHA-3 256-bit', 256, TRUE, TRUE),
('SHA3-512', 'SHA-3 512-bit', 512, TRUE, TRUE),
('BLAKE2', 'BLAKE2', 512, TRUE, TRUE),
('CRC32', 'Cyclic Redundancy Check 32', 32, FALSE, FALSE);

-- Create indexes for optimization
CREATE INDEX `idx_ddex_version_active_current` ON `ddex_version` (`is_active`, `is_current`);
CREATE INDEX `idx_ddex_profile_active_type` ON `ddex_profile` (`is_active`, `profile_type`);
CREATE INDEX `idx_ddex_message_type_active_standard` ON `ddex_message_type` (`is_active`, `standard_type`);
CREATE INDEX `idx_ddex_territory_active_type` ON `ddex_territory_code` (`is_active`, `territory_type`);
CREATE INDEX `idx_ddex_use_type_active_category` ON `ddex_use_type` (`is_active`, `category`);

-- =====================================================
-- SECTION 16: TECHNICAL SPECS
-- =====================================================

-- Table: file_type
CREATE TABLE file_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    category VARCHAR(50) NOT NULL,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: file_format
CREATE TABLE file_format (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    file_type_id INT UNSIGNED NOT NULL,
    extension VARCHAR(20) NOT NULL,
    mime_type VARCHAR(100),
    is_proprietary BOOLEAN DEFAULT FALSE,
    is_lossless BOOLEAN DEFAULT FALSE,
    is_compressed BOOLEAN DEFAULT FALSE,
    max_channels INT UNSIGNED,
    max_sample_rate INT UNSIGNED,
    max_bit_depth INT UNSIGNED,
    supports_metadata BOOLEAN DEFAULT TRUE,
    industry_standard BOOLEAN DEFAULT FALSE,
    description TEXT,
    technical_specs JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (file_type_id) REFERENCES file_type(id),
    INDEX idx_file_type (file_type_id),
    INDEX idx_extension (extension),
    INDEX idx_mime_type (mime_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: audio_codec
CREATE TABLE audio_codec (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    developer VARCHAR(100),
    version VARCHAR(50),
    compression_type VARCHAR(50),
    is_lossy BOOLEAN DEFAULT TRUE,
    is_proprietary BOOLEAN DEFAULT FALSE,
    max_channels INT UNSIGNED,
    max_sample_rate INT UNSIGNED,
    max_bit_rate INT UNSIGNED,
    min_bit_rate INT UNSIGNED,
    variable_bit_rate BOOLEAN DEFAULT FALSE,
    latency_ms DECIMAL(10,2),
    complexity_rating INT UNSIGNED,
    quality_rating INT UNSIGNED,
    supports_streaming BOOLEAN DEFAULT TRUE,
    license_type VARCHAR(50),
    technical_specs JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_compression_type (compression_type),
    INDEX idx_lossy (is_lossy),
    INDEX idx_streaming (supports_streaming)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: video_codec
CREATE TABLE video_codec (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    developer VARCHAR(100),
    version VARCHAR(50),
    compression_type VARCHAR(50),
    profile_support VARCHAR(255),
    max_resolution VARCHAR(20),
    max_frame_rate DECIMAL(10,3),
    max_bit_rate BIGINT UNSIGNED,
    supports_hdr BOOLEAN DEFAULT FALSE,
    supports_10bit BOOLEAN DEFAULT FALSE,
    supports_12bit BOOLEAN DEFAULT FALSE,
    supports_alpha BOOLEAN DEFAULT FALSE,
    hardware_decode BOOLEAN DEFAULT FALSE,
    hardware_encode BOOLEAN DEFAULT FALSE,
    latency_ms DECIMAL(10,2),
    complexity_rating INT UNSIGNED,
    quality_rating INT UNSIGNED,
    license_type VARCHAR(50),
    technical_specs JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_compression_type (compression_type),
    INDEX idx_resolution (max_resolution),
    INDEX idx_hdr (supports_hdr)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: container_format
CREATE TABLE container_format (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    extension VARCHAR(20) NOT NULL,
    mime_type VARCHAR(100),
    supports_video BOOLEAN DEFAULT TRUE,
    supports_audio BOOLEAN DEFAULT TRUE,
    supports_subtitles BOOLEAN DEFAULT TRUE,
    supports_chapters BOOLEAN DEFAULT TRUE,
    supports_metadata BOOLEAN DEFAULT TRUE,
    supports_streaming BOOLEAN DEFAULT TRUE,
    supports_drm BOOLEAN DEFAULT FALSE,
    max_streams INT UNSIGNED,
    technical_specs JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_extension (extension),
    INDEX idx_mime_type (mime_type),
    INDEX idx_streaming (supports_streaming)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: sample_rate
CREATE TABLE sample_rate (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    value INT UNSIGNED NOT NULL UNIQUE,
    display_name VARCHAR(50) NOT NULL,
    category VARCHAR(50),
    is_standard BOOLEAN DEFAULT TRUE,
    quality_tier VARCHAR(50),
    use_case VARCHAR(255),
    description TEXT,
    sort_order INT UNSIGNED,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_value (value),
    INDEX idx_category (category),
    INDEX idx_standard (is_standard)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: bit_rate
CREATE TABLE bit_rate (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    codec_type VARCHAR(50) NOT NULL,
    codec_id INT UNSIGNED,
    value INT UNSIGNED NOT NULL,
    display_name VARCHAR(50) NOT NULL,
    quality_tier VARCHAR(50),
    use_case VARCHAR(255),
    is_standard BOOLEAN DEFAULT TRUE,
    description TEXT,
    sort_order INT UNSIGNED,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_codec_type (codec_type),
    INDEX idx_value (value),
    INDEX idx_quality (quality_tier)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: bit_depth
CREATE TABLE bit_depth (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    value INT UNSIGNED NOT NULL UNIQUE,
    display_name VARCHAR(50) NOT NULL,
    bytes_per_sample INT UNSIGNED NOT NULL,
    dynamic_range_db DECIMAL(10,2),
    quality_tier VARCHAR(50),
    use_case VARCHAR(255),
    is_standard BOOLEAN DEFAULT TRUE,
    description TEXT,
    sort_order INT UNSIGNED,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_value (value),
    INDEX idx_quality (quality_tier)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: channel_configuration
CREATE TABLE channel_configuration (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    channel_count INT UNSIGNED NOT NULL,
    layout VARCHAR(100),
    speaker_arrangement VARCHAR(255),
    category VARCHAR(50),
    is_immersive BOOLEAN DEFAULT FALSE,
    is_standard BOOLEAN DEFAULT TRUE,
    itu_reference VARCHAR(50),
    description TEXT,
    technical_specs JSON,
    sort_order INT UNSIGNED,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_channel_count (channel_count),
    INDEX idx_category (category),
    INDEX idx_immersive (is_immersive)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: video_resolution
CREATE TABLE video_resolution (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    width INT UNSIGNED NOT NULL,
    height INT UNSIGNED NOT NULL,
    aspect_ratio VARCHAR(20),
    pixels BIGINT UNSIGNED,
    category VARCHAR(50),
    marketing_name VARCHAR(50),
    is_standard BOOLEAN DEFAULT TRUE,
    description TEXT,
    sort_order INT UNSIGNED,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_resolution (width, height),
    INDEX idx_category (category),
    INDEX idx_aspect_ratio (aspect_ratio)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: aspect_ratio
CREATE TABLE aspect_ratio (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    width_ratio INT UNSIGNED NOT NULL,
    height_ratio INT UNSIGNED NOT NULL,
    decimal_value DECIMAL(10,4),
    category VARCHAR(50),
    use_case VARCHAR(255),
    is_standard BOOLEAN DEFAULT TRUE,
    description TEXT,
    sort_order INT UNSIGNED,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_ratio (width_ratio, height_ratio),
    INDEX idx_category (category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: frame_rate
CREATE TABLE frame_rate (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    value DECIMAL(10,3) NOT NULL UNIQUE,
    display_name VARCHAR(50) NOT NULL,
    fractional_value VARCHAR(20),
    category VARCHAR(50),
    region VARCHAR(50),
    use_case VARCHAR(255),
    is_standard BOOLEAN DEFAULT TRUE,
    is_drop_frame BOOLEAN DEFAULT FALSE,
    description TEXT,
    sort_order INT UNSIGNED,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_value (value),
    INDEX idx_category (category),
    INDEX idx_region (region)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: color_space
CREATE TABLE color_space (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    standard VARCHAR(100),
    primaries VARCHAR(100),
    transfer_function VARCHAR(100),
    matrix_coefficients VARCHAR(100),
    bit_depth INT UNSIGNED,
    gamut_coverage DECIMAL(10,2),
    category VARCHAR(50),
    is_hdr BOOLEAN DEFAULT FALSE,
    is_wide_gamut BOOLEAN DEFAULT FALSE,
    description TEXT,
    technical_specs JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category),
    INDEX idx_hdr (is_hdr),
    INDEX idx_standard (standard)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: compression_type
CREATE TABLE compression_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    category VARCHAR(50),
    algorithm VARCHAR(100),
    is_lossy BOOLEAN DEFAULT TRUE,
    is_perceptual BOOLEAN DEFAULT FALSE,
    compression_ratio VARCHAR(50),
    quality_impact VARCHAR(50),
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category),
    INDEX idx_lossy (is_lossy)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: metadata_schema
CREATE TABLE metadata_schema (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    version VARCHAR(50),
    organization VARCHAR(100),
    schema_type VARCHAR(50),
    file_format VARCHAR(50),
    use_case VARCHAR(255),
    is_industry_standard BOOLEAN DEFAULT FALSE,
    documentation_url VARCHAR(500),
    schema_definition JSON,
    required_fields JSON,
    optional_fields JSON,
    validation_rules JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_organization (organization),
    INDEX idx_schema_type (schema_type),
    INDEX idx_standard (is_industry_standard)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: audio_format_profile
CREATE TABLE audio_format_profile (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    audio_codec_id INT UNSIGNED NOT NULL,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    profile_level VARCHAR(50),
    max_channels INT UNSIGNED,
    max_sample_rate INT UNSIGNED,
    max_bit_rate INT UNSIGNED,
    features JSON,
    compatibility JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (audio_codec_id) REFERENCES audio_codec(id),
    INDEX idx_codec (audio_codec_id),
    INDEX idx_profile_level (profile_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: video_format_profile
CREATE TABLE video_format_profile (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    video_codec_id INT UNSIGNED NOT NULL,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    profile VARCHAR(50),
    level VARCHAR(50),
    tier VARCHAR(50),
    max_resolution VARCHAR(20),
    max_frame_rate DECIMAL(10,3),
    max_bit_rate BIGINT UNSIGNED,
    color_depth INT UNSIGNED,
    chroma_subsampling VARCHAR(20),
    features JSON,
    constraints JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (video_codec_id) REFERENCES video_codec(id),
    INDEX idx_codec (video_codec_id),
    INDEX idx_profile (profile),
    INDEX idx_level (level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: streaming_spec
CREATE TABLE streaming_spec (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    platform VARCHAR(100) NOT NULL,
    spec_version VARCHAR(50),
    spec_name VARCHAR(100) NOT NULL,
    category VARCHAR(50),
    audio_requirements JSON,
    video_requirements JSON,
    container_requirements JSON,
    metadata_requirements JSON,
    drm_requirements JSON,
    delivery_requirements JSON,
    quality_tiers JSON,
    documentation_url VARCHAR(500),
    last_updated DATE,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE KEY uk_platform_version (platform, spec_version),
    INDEX idx_platform (platform),
    INDEX idx_category (category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: broadcast_standard
CREATE TABLE broadcast_standard (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    organization VARCHAR(100),
    region VARCHAR(100),
    standard_type VARCHAR(50),
    audio_specs JSON,
    video_specs JSON,
    timing_specs JSON,
    compliance_requirements JSON,
    documentation_url VARCHAR(500),
    effective_date DATE,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_organization (organization),
    INDEX idx_region (region),
    INDEX idx_type (standard_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: loudness_standard
CREATE TABLE loudness_standard (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    standard_body VARCHAR(100),
    target_lufs DECIMAL(10,2),
    max_true_peak_db DECIMAL(10,2),
    max_momentary_lufs DECIMAL(10,2),
    max_short_term_lufs DECIMAL(10,2),
    lra_min DECIMAL(10,2),
    lra_max DECIMAL(10,2),
    gate_threshold_db DECIMAL(10,2),
    measurement_time VARCHAR(50),
    region VARCHAR(100),
    use_case VARCHAR(255),
    technical_specs JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_standard_body (standard_body),
    INDEX idx_region (region),
    INDEX idx_use_case (use_case)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: drm_type
CREATE TABLE drm_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    provider VARCHAR(100),
    technology VARCHAR(100),
    supported_platforms JSON,
    encryption_method VARCHAR(100),
    key_system VARCHAR(100),
    license_server_required BOOLEAN DEFAULT TRUE,
    offline_playback BOOLEAN DEFAULT FALSE,
    hdcp_required VARCHAR(50),
    technical_specs JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_provider (provider),
    INDEX idx_technology (technology)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: watermark_type
CREATE TABLE watermark_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    technology VARCHAR(100),
    provider VARCHAR(100),
    watermark_domain VARCHAR(50),
    is_perceptible BOOLEAN DEFAULT FALSE,
    robustness_level VARCHAR(50),
    payload_capacity INT UNSIGNED,
    detection_requirements JSON,
    use_cases JSON,
    technical_specs JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_technology (technology),
    INDEX idx_domain (watermark_domain)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: fingerprint_type
CREATE TABLE fingerprint_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    technology VARCHAR(100),
    provider VARCHAR(100),
    algorithm VARCHAR(100),
    fingerprint_length INT UNSIGNED,
    sample_duration_ms INT UNSIGNED,
    accuracy_rate DECIMAL(5,2),
    false_positive_rate DECIMAL(10,6),
    use_cases JSON,
    technical_specs JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_provider (provider),
    INDEX idx_technology (technology)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: encoding_preset
CREATE TABLE encoding_preset (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    category VARCHAR(50),
    target_platform VARCHAR(100),
    audio_settings JSON,
    video_settings JSON,
    container_settings JSON,
    processing_settings JSON,
    quality_level VARCHAR(50),
    estimated_time_factor DECIMAL(10,2),
    file_size_factor DECIMAL(10,2),
    use_cases JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category),
    INDEX idx_platform (target_platform),
    INDEX idx_quality (quality_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: quality_metric
CREATE TABLE quality_metric (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    metric_type VARCHAR(50),
    measurement_unit VARCHAR(50),
    scale_min DECIMAL(10,4),
    scale_max DECIMAL(10,4),
    higher_is_better BOOLEAN DEFAULT TRUE,
    calculation_method VARCHAR(100),
    reference_standard VARCHAR(100),
    thresholds JSON,
    use_cases JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_type (metric_type),
    INDEX idx_standard (reference_standard)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: delivery_spec
CREATE TABLE delivery_spec (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    spec_type VARCHAR(50),
    organization VARCHAR(100),
    file_requirements JSON,
    metadata_requirements JSON,
    technical_requirements JSON,
    packaging_requirements JSON,
    naming_convention VARCHAR(500),
    folder_structure JSON,
    validation_rules JSON,
    documentation_url VARCHAR(500),
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_type (spec_type),
    INDEX idx_organization (organization)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: mastering_format
CREATE TABLE mastering_format (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    format_type VARCHAR(50),
    bit_depth INT UNSIGNED,
    sample_rate INT UNSIGNED,
    channel_config VARCHAR(50),
    dynamic_range VARCHAR(50),
    headroom_db DECIMAL(10,2),
    reference_level_db DECIMAL(10,2),
    file_format VARCHAR(50),
    delivery_requirements JSON,
    use_cases JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_type (format_type),
    INDEX idx_bit_depth (bit_depth),
    INDEX idx_sample_rate (sample_rate)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: immersive_audio_format
CREATE TABLE immersive_audio_format (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    technology VARCHAR(100),
    developer VARCHAR(100),
    format_type VARCHAR(50),
    max_objects INT UNSIGNED,
    max_beds INT UNSIGNED,
    speaker_layouts JSON,
    renderer_required BOOLEAN DEFAULT TRUE,
    binaural_support BOOLEAN DEFAULT TRUE,
    height_layers INT UNSIGNED,
    metadata_format VARCHAR(100),
    delivery_formats JSON,
    platform_support JSON,
    technical_specs JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_technology (technology),
    INDEX idx_developer (developer),
    INDEX idx_format_type (format_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: hdr_format
CREATE TABLE hdr_format (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    technology VARCHAR(100),
    standard VARCHAR(100),
    peak_brightness_nits INT UNSIGNED,
    color_primaries VARCHAR(100),
    transfer_function VARCHAR(100),
    bit_depth INT UNSIGNED,
    metadata_type VARCHAR(50),
    static_metadata JSON,
    dynamic_metadata BOOLEAN DEFAULT FALSE,
    backward_compatible BOOLEAN DEFAULT FALSE,
    platform_support JSON,
    technical_specs JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_technology (technology),
    INDEX idx_standard (standard),
    INDEX idx_metadata_type (metadata_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: timecode_format
CREATE TABLE timecode_format (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    format_pattern VARCHAR(50),
    frame_rate DECIMAL(10,3),
    drop_frame BOOLEAN DEFAULT FALSE,
    hours_max INT UNSIGNED,
    standard VARCHAR(50),
    use_cases JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_frame_rate (frame_rate),
    INDEX idx_standard (standard)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: sync_format
CREATE TABLE sync_format (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    format_type VARCHAR(50),
    time_reference VARCHAR(50),
    accuracy_ms DECIMAL(10,3),
    protocol VARCHAR(100),
    transport VARCHAR(100),
    clock_source VARCHAR(100),
    use_cases JSON,
    technical_specs JSON,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_format_type (format_type),
    INDEX idx_protocol (protocol)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: file_extension
CREATE TABLE file_extension (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    extension VARCHAR(20) NOT NULL UNIQUE,
    mime_type VARCHAR(100),
    file_format_id INT UNSIGNED,
    container_format_id INT UNSIGNED,
    category VARCHAR(50),
    is_compressed BOOLEAN DEFAULT FALSE,
    is_proprietary BOOLEAN DEFAULT FALSE,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (file_format_id) REFERENCES file_format(id),
    FOREIGN KEY (container_format_id) REFERENCES container_format(id),
    INDEX idx_mime_type (mime_type),
    INDEX idx_category (category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: mime_type
CREATE TABLE mime_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    type VARCHAR(100) NOT NULL UNIQUE,
    media_type VARCHAR(50),
    subtype VARCHAR(50),
    parameters JSON,
    file_extensions JSON,
    category VARCHAR(50),
    is_standard BOOLEAN DEFAULT TRUE,
    iana_registered BOOLEAN DEFAULT FALSE,
    description TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_media_type (media_type),
    INDEX idx_category (category),
    INDEX idx_standard (is_standard)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: format_compatibility
CREATE TABLE format_compatibility (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    source_format_type VARCHAR(50) NOT NULL,
    source_format_id INT UNSIGNED NOT NULL,
    target_format_type VARCHAR(50) NOT NULL,
    target_format_id INT UNSIGNED NOT NULL,
    compatibility_level VARCHAR(50),
    conversion_quality VARCHAR(50),
    requires_transcoding BOOLEAN DEFAULT TRUE,
    data_loss BOOLEAN DEFAULT FALSE,
    notes TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE KEY uk_format_pair (source_format_type, source_format_id, target_format_type, target_format_id),
    INDEX idx_source (source_format_type, source_format_id),
    INDEX idx_target (target_format_type, target_format_id),
    INDEX idx_compatibility (compatibility_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: codec_capability
CREATE TABLE codec_capability (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    codec_type VARCHAR(50) NOT NULL,
    codec_id INT UNSIGNED NOT NULL,
    capability VARCHAR(100) NOT NULL,
    supported BOOLEAN DEFAULT TRUE,
    version_required VARCHAR(50),
    performance_impact VARCHAR(50),
    hardware_required BOOLEAN DEFAULT FALSE,
    notes TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_codec (codec_type, codec_id),
    INDEX idx_capability (capability),
    INDEX idx_hardware (hardware_required)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Table: technical_requirement
CREATE TABLE technical_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    platform VARCHAR(100) NOT NULL,
    requirement_type VARCHAR(50) NOT NULL,
    requirement_name VARCHAR(100) NOT NULL,
    specification JSON NOT NULL,
    validation_rules JSON,
    priority VARCHAR(50),
    effective_date DATE,
    expiry_date DATE,
    notes TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_platform (platform),
    INDEX idx_type (requirement_type),
    INDEX idx_priority (priority),
    INDEX idx_dates (effective_date, expiry_date)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- =====================================================
-- INITIAL CONFIGURATION DATA
-- =====================================================

-- Insert file types
INSERT INTO file_type (code, name, category, description) VALUES
('AUDIO', 'Audio File', 'media', 'Audio media files'),
('VIDEO', 'Video File', 'media', 'Video media files'),
('IMAGE', 'Image File', 'media', 'Image files for artwork and covers'),
('DOCUMENT', 'Document', 'document', 'Documents and text files'),
('METADATA', 'Metadata File', 'metadata', 'Metadata and sidecar files'),
('SUBTITLE', 'Subtitle File', 'auxiliary', 'Subtitle and caption files'),
('PROJECT', 'Project File', 'project', 'DAW and editing project files');

-- Insert file formats (first 30)
INSERT INTO file_format (code, name, file_type_id, extension, mime_type, is_proprietary, is_lossless, is_compressed, max_channels, max_sample_rate, max_bit_depth, supports_metadata, industry_standard, description) VALUES
('WAV', 'Waveform Audio File', 1, '.wav', 'audio/wav', FALSE, TRUE, FALSE, 256, 384000, 32, TRUE, TRUE, 'Uncompressed PCM audio format'),
('FLAC', 'Free Lossless Audio Codec', 1, '.flac', 'audio/flac', FALSE, TRUE, TRUE, 8, 655350, 32, TRUE, TRUE, 'Open-source lossless compression'),
('MP3', 'MPEG Audio Layer 3', 1, '.mp3', 'audio/mpeg', FALSE, FALSE, TRUE, 2, 48000, 16, TRUE, TRUE, 'Most common lossy audio format'),
('AAC', 'Advanced Audio Coding', 1, '.aac', 'audio/aac', FALSE, FALSE, TRUE, 48, 96000, 32, TRUE, TRUE, 'Successor to MP3 with better quality'),
('OGG', 'Ogg Vorbis', 1, '.ogg', 'audio/ogg', FALSE, FALSE, TRUE, 255, 192000, 32, TRUE, TRUE, 'Open-source lossy format'),
('ALAC', 'Apple Lossless Audio Codec', 1, '.m4a', 'audio/x-m4a', TRUE, TRUE, TRUE, 8, 384000, 32, TRUE, TRUE, 'Apple lossless format'),
('DSD', 'Direct Stream Digital', 1, '.dsf', 'audio/x-dsf', FALSE, TRUE, FALSE, 6, 5644800, 1, FALSE, TRUE, 'High-resolution 1-bit format'),
('MQA', 'Master Quality Authenticated', 1, '.mqa', 'audio/x-mqa', TRUE, FALSE, TRUE, 8, 352800, 24, TRUE, FALSE, 'High-res authenticated format'),
('AIFF', 'Audio Interchange File Format', 1, '.aiff', 'audio/aiff', FALSE, TRUE, FALSE, 256, 384000, 32, TRUE, TRUE, 'Apple uncompressed format'),
('MP4', 'MPEG-4 Audio', 1, '.m4a', 'audio/mp4', FALSE, FALSE, TRUE, 48, 96000, 32, TRUE, TRUE, 'MPEG-4 audio container'),
('WMA', 'Windows Media Audio', 1, '.wma', 'audio/x-ms-wma', TRUE, FALSE, TRUE, 8, 96000, 24, TRUE, FALSE, 'Microsoft audio format'),
('OPUS', 'Opus Audio Codec', 1, '.opus', 'audio/opus', FALSE, FALSE, TRUE, 255, 48000, 32, TRUE, TRUE, 'Modern low-latency codec'),
('AC3', 'Dolby Digital', 1, '.ac3', 'audio/ac3', TRUE, FALSE, TRUE, 6, 48000, 24, FALSE, TRUE, 'Dolby surround sound format'),
('DTS', 'Digital Theater Systems', 1, '.dts', 'audio/vnd.dts', TRUE, FALSE, TRUE, 8, 192000, 24, FALSE, TRUE, 'Cinema surround format'),
('APE', 'Monkey Audio', 1, '.ape', 'audio/x-ape', FALSE, TRUE, TRUE, 2, 192000, 32, TRUE, FALSE, 'High compression lossless'),
('MOV', 'QuickTime Movie', 2, '.mov', 'video/quicktime', TRUE, FALSE, TRUE, NULL, NULL, NULL, TRUE, TRUE, 'Apple video container'),
('MP4V', 'MPEG-4 Video', 2, '.mp4', 'video/mp4', FALSE, FALSE, TRUE, NULL, NULL, NULL, TRUE, TRUE, 'Standard video container'),
('AVI', 'Audio Video Interleave', 2, '.avi', 'video/x-msvideo', FALSE, FALSE, FALSE, NULL, NULL, NULL, TRUE, TRUE, 'Microsoft video container'),
('MKV', 'Matroska Video', 2, '.mkv', 'video/x-matroska', FALSE, FALSE, FALSE, NULL, NULL, NULL, TRUE, TRUE, 'Open-source container'),
('WEBM', 'WebM Video', 2, '.webm', 'video/webm', FALSE, FALSE, TRUE, NULL, NULL, NULL, TRUE, TRUE, 'Web-optimized container'),
('FLV', 'Flash Video', 2, '.flv', 'video/x-flv', TRUE, FALSE, TRUE, NULL, NULL, NULL, TRUE, FALSE, 'Legacy Flash format'),
('WMV', 'Windows Media Video', 2, '.wmv', 'video/x-ms-wmv', TRUE, FALSE, TRUE, NULL, NULL, NULL, TRUE, FALSE, 'Microsoft video format'),
('PRORES', 'Apple ProRes', 2, '.mov', 'video/x-prores', TRUE, FALSE, TRUE, NULL, NULL, NULL, TRUE, TRUE, 'Professional editing codec'),
('DNX', 'Avid DNxHD/DNxHR', 2, '.mxf', 'video/x-dnxhd', TRUE, FALSE, TRUE, NULL, NULL, NULL, TRUE, TRUE, 'Professional editing codec'),
('HEVC', 'H.265/HEVC', 2, '.mp4', 'video/hevc', FALSE, FALSE, TRUE, NULL, NULL, NULL, TRUE, TRUE, 'High efficiency codec'),
('AV1', 'AV1 Video', 2, '.mp4', 'video/av1', FALSE, FALSE, TRUE, NULL, NULL, NULL, TRUE, TRUE, 'Next-gen open codec'),
('JPEG', 'JPEG Image', 3, '.jpg', 'image/jpeg', FALSE, FALSE, TRUE, NULL, NULL, NULL, TRUE, TRUE, 'Standard image format'),
('PNG', 'Portable Network Graphics', 3, '.png', 'image/png', FALSE, TRUE, TRUE, NULL, NULL, NULL, TRUE, TRUE, 'Lossless image format'),
('TIFF', 'Tagged Image File Format', 3, '.tiff', 'image/tiff', FALSE, TRUE, FALSE, NULL, NULL, NULL, TRUE, TRUE, 'Professional image format'),
('PDF', 'Portable Document Format', 4, '.pdf', 'application/pdf', TRUE, FALSE, TRUE, NULL, NULL, NULL, TRUE, TRUE, 'Standard document format');

-- Insert audio codecs (first 30)
INSERT INTO audio_codec (code, name, developer, version, compression_type, is_lossy, is_proprietary, max_channels, max_sample_rate, max_bit_rate, min_bit_rate, variable_bit_rate, supports_streaming, license_type, quality_rating, complexity_rating, description) VALUES
('PCM', 'Pulse Code Modulation', 'Various', 'N/A', 'uncompressed', FALSE, FALSE, 256, 384000, 294912000, 8000, FALSE, TRUE, 'public_domain', 10, 1, 'Uncompressed digital audio'),
('MP3', 'MPEG-1 Audio Layer III', 'Fraunhofer/Thomson', '1.0', 'perceptual', TRUE, FALSE, 2, 48000, 320000, 8000, TRUE, TRUE, 'patent_expired', 7, 3, 'Most widely used lossy codec'),
('AAC-LC', 'AAC Low Complexity', 'MPEG', '2.0', 'perceptual', TRUE, FALSE, 48, 96000, 512000, 8000, TRUE, TRUE, 'patent_pool', 8, 4, 'Standard AAC profile'),
('HE-AAC', 'High Efficiency AAC', 'MPEG', '2.0', 'perceptual', TRUE, FALSE, 48, 48000, 256000, 16000, TRUE, TRUE, 'patent_pool', 7, 5, 'Optimized for low bitrates'),
('AAC-LD', 'AAC Low Delay', 'MPEG', '2.0', 'perceptual', TRUE, FALSE, 48, 48000, 512000, 16000, TRUE, TRUE, 'patent_pool', 8, 4, 'Low latency AAC'),
('FLAC', 'Free Lossless Audio Codec', 'Xiph.Org', '1.4.3', 'lossless', FALSE, FALSE, 8, 655350, 36864000, 1000, TRUE, TRUE, 'open_source', 10, 5, 'Open-source lossless codec'),
('ALAC', 'Apple Lossless', 'Apple', '1.0', 'lossless', FALSE, TRUE, 8, 384000, 36864000, 1000, TRUE, TRUE, 'open_source', 10, 4, 'Apple lossless codec'),
('VORBIS', 'Ogg Vorbis', 'Xiph.Org', '1.3.7', 'perceptual', TRUE, FALSE, 255, 192000, 500000, 45000, TRUE, TRUE, 'open_source', 8, 4, 'Open-source lossy codec'),
('OPUS', 'Opus Interactive Audio', 'IETF', '1.3', 'hybrid', TRUE, FALSE, 255, 48000, 510000, 6000, TRUE, TRUE, 'open_source', 9, 6, 'Low-latency codec'),
('AC3', 'Dolby Digital', 'Dolby', '5.1', 'perceptual', TRUE, TRUE, 6, 48000, 640000, 32000, FALSE, TRUE, 'proprietary', 8, 4, 'Cinema surround codec'),
('EAC3', 'Dolby Digital Plus', 'Dolby', '7.1', 'perceptual', TRUE, TRUE, 16, 48000, 6144000, 32000, FALSE, TRUE, 'proprietary', 9, 5, 'Enhanced AC-3'),
('TRUEHD', 'Dolby TrueHD', 'Dolby', '1.0', 'lossless', FALSE, TRUE, 16, 192000, 18000000, 640000, TRUE, FALSE, 'proprietary', 10, 6, 'Lossless surround codec'),
('DTS', 'DTS Coherent Acoustics', 'DTS', '1.0', 'perceptual', TRUE, TRUE, 8, 96000, 1536000, 32000, FALSE, TRUE, 'proprietary', 8, 4, 'Cinema surround codec'),
('DTS-HD', 'DTS-HD Master Audio', 'DTS', '1.0', 'lossless', FALSE, TRUE, 8, 192000, 24500000, 1536000, TRUE, FALSE, 'proprietary', 10, 6, 'Lossless DTS'),
('WMA', 'Windows Media Audio', 'Microsoft', '9.2', 'perceptual', TRUE, TRUE, 8, 96000, 768000, 4000, TRUE, TRUE, 'proprietary', 7, 4, 'Microsoft audio codec'),
('WMA-L', 'WMA Lossless', 'Microsoft', '9.2', 'lossless', FALSE, TRUE, 8, 96000, 3000000, 470000, TRUE, TRUE, 'proprietary', 10, 5, 'Microsoft lossless'),
('APE', 'Monkey Audio', 'Matthew Ashland', '10.0', 'lossless', FALSE, FALSE, 2, 192000, 3000000, 150000, TRUE, FALSE, 'open_source', 10, 8, 'High compression lossless'),
('MQA', 'Master Quality Authenticated', 'MQA Ltd', '1.0', 'lossy_authenticated', TRUE, TRUE, 8, 768000, 1500000, 200000, FALSE, TRUE, 'proprietary', 9, 7, 'Authenticated hi-res'),
('LDAC', 'LDAC', 'Sony', '2.0', 'perceptual', TRUE, TRUE, 2, 96000, 990000, 303000, TRUE, TRUE, 'proprietary', 9, 5, 'Bluetooth hi-res codec'),
('APTX', 'aptX', 'Qualcomm', '1.0', 'sub-band', TRUE, TRUE, 2, 48000, 352000, 352000, FALSE, TRUE, 'proprietary', 8, 3, 'Bluetooth codec'),
('APTX-HD', 'aptX HD', 'Qualcomm', '1.0', 'sub-band', TRUE, TRUE, 2, 48000, 576000, 576000, FALSE, TRUE, 'proprietary', 9, 4, 'Hi-res Bluetooth'),
('SBC', 'Sub-Band Codec', 'Bluetooth SIG', '1.0', 'sub-band', TRUE, FALSE, 2, 48000, 345000, 127000, TRUE, TRUE, 'open_standard', 6, 2, 'Standard Bluetooth codec'),
('LC3', 'Low Complexity Codec', 'Bluetooth SIG', '1.0', 'perceptual', TRUE, FALSE, 2, 48000, 392000, 160000, TRUE, TRUE, 'open_standard', 8, 3, 'LE Audio codec'),
('ATRAC', 'Adaptive Transform Acoustic', 'Sony', '3.0', 'perceptual', TRUE, TRUE, 2, 48000, 352000, 66000, FALSE, TRUE, 'proprietary', 7, 4, 'MiniDisc codec'),
('SPEEX', 'Speex', 'Xiph.Org', '1.2', 'speech', TRUE, FALSE, 1, 32000, 44000, 2150, TRUE, TRUE, 'open_source', 7, 3, 'Speech codec'),
('AMR', 'Adaptive Multi-Rate', '3GPP', '1.0', 'speech', TRUE, FALSE, 1, 8000, 12200, 4750, FALSE, TRUE, 'patent_pool', 6, 2, 'Mobile speech codec'),
('AMR-WB', 'AMR Wideband', '3GPP', '1.0', 'speech', TRUE, FALSE, 1, 16000, 23850, 6600, FALSE, TRUE, 'patent_pool', 7, 3, 'Wideband speech'),
('G711', 'G.711 µ-law/A-law', 'ITU-T', '1.0', 'companding', TRUE, FALSE, 1, 8000, 64000, 64000, FALSE, TRUE, 'public_domain', 5, 1, 'Telephony codec'),
('G722', 'G.722', 'ITU-T', '1.0', 'sub-band', TRUE, FALSE, 1, 16000, 64000, 48000, FALSE, TRUE, 'public_domain', 6, 2, 'Wideband telephony'),
('G729', 'G.729', 'ITU-T', '1.0', 'CS-ACELP', TRUE, FALSE, 1, 8000, 8000, 8000, FALSE, TRUE, 'patent_pool', 6, 5, 'Low bitrate speech');

-- Insert video codecs (first 30)
INSERT INTO video_codec (code, name, developer, version, compression_type, max_resolution, max_frame_rate, max_bit_rate, supports_hdr, supports_10bit, supports_12bit, supports_alpha, hardware_decode, hardware_encode, quality_rating, complexity_rating, license_type, description) VALUES
('H264', 'H.264/AVC', 'ITU-T/ISO', '1.0', 'block_motion', '8192x4320', 300.000, 800000000, FALSE, TRUE, FALSE, FALSE, TRUE, TRUE, 8, 5, 'patent_pool', 'Most widely used video codec'),
('H265', 'H.265/HEVC', 'ITU-T/ISO', '1.0', 'block_motion', '8192x4320', 300.000, 800000000, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, 9, 8, 'patent_pool', 'High efficiency video codec'),
('VP9', 'VP9', 'Google', '1.0', 'block_motion', '8192x4320', 120.000, 800000000, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, 9, 7, 'open_source', 'Open-source codec by Google'),
('AV1', 'AV1', 'AOMedia', '1.0', 'block_motion', '8192x4320', 120.000, 800000000, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, 10, 9, 'open_source', 'Next-gen open codec'),
('VP8', 'VP8', 'Google', '1.0', 'block_motion', '4096x3072', 60.000, 50000000, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 7, 4, 'open_source', 'WebM video codec'),
('MPEG2', 'MPEG-2', 'MPEG', '1.0', 'block_motion', '1920x1152', 60.000, 80000000, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 6, 3, 'patent_expired', 'DVD/broadcast codec'),
('MPEG4', 'MPEG-4 Part 2', 'MPEG', '1.0', 'block_motion', '4096x4096', 60.000, 40000000, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 6, 4, 'patent_pool', 'Early MPEG-4 codec'),
('MJPEG', 'Motion JPEG', 'Joint Photographic', '1.0', 'intra_frame', '8192x8192', 60.000, 800000000, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 5, 2, 'open_standard', 'All intra-frame codec'),
('PRORES', 'Apple ProRes', 'Apple', '1.0', 'intra_frame', '8192x4320', 60.000, 2500000000, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 10, 3, 'proprietary', 'Professional editing codec'),
('PRORES_RAW', 'ProRes RAW', 'Apple', '1.0', 'wavelet', '8192x4320', 60.000, 5000000000, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, 10, 5, 'proprietary', 'RAW video codec'),
('DNX', 'DNxHD/DNxHR', 'Avid', '1.0', 'intra_frame', '8192x8192', 60.000, 1200000000, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 10, 3, 'proprietary', 'Avid editing codec'),
('CINEFORM', 'CineForm', 'GoPro', '1.0', 'wavelet', '8192x8192', 60.000, 1000000000, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 9, 4, 'open_source', 'Intermediate codec'),
('DV', 'DV/DVCPRO', 'Various', '1.0', 'dct', '720x576', 30.000, 50000000, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 5, 2, 'open_standard', 'Digital video codec'),
('DVHD', 'DVCPRO HD', 'Panasonic', '1.0', 'dct', '1920x1080', 60.000, 100000000, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 6, 3, 'proprietary', 'HD version of DV'),
('XAVC', 'XAVC', 'Sony', '1.0', 'block_motion', '4096x2160', 60.000, 960000000, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, 9, 6, 'proprietary', 'Sony professional codec'),
('XAVC-S', 'XAVC-S', 'Sony', '1.0', 'block_motion', '4096x2160', 60.000, 200000000, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, 8, 5, 'proprietary', 'Consumer XAVC'),
('AVC-I', 'AVC-Intra', 'Panasonic', '1.0', 'intra_frame', '4096x2160', 60.000, 800000000, TRUE, TRUE, FALSE, FALSE, TRUE, TRUE, 9, 4, 'proprietary', 'Intra-only H.264'),
('REDCODE', 'REDCODE RAW', 'RED', '1.0', 'wavelet', '8192x4320', 120.000, 3000000000, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, 10, 6, 'proprietary', 'RED camera RAW'),
('BRAW', 'Blackmagic RAW', 'Blackmagic', '1.0', 'wavelet', '8192x4320', 60.000, 2000000000, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, 10, 5, 'proprietary', 'Blackmagic RAW codec'),
('ARRIRAW', 'ARRIRAW', 'ARRI', '1.0', 'uncompressed', '6560x3100', 60.000, 5000000000, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE, 10, 2, 'proprietary', 'ARRI camera RAW'),
('WMV9', 'Windows Media Video 9', 'Microsoft', '9.0', 'block_motion', '1920x1080', 30.000, 20000000, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 6, 4, 'proprietary', 'Microsoft video codec'),
('VC1', 'VC-1', 'Microsoft', '1.0', 'block_motion', '1920x1080', 60.000, 40000000, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 7, 5, 'proprietary', 'SMPTE standard codec'),
('THEORA', 'Theora', 'Xiph.Org', '1.1', 'block_motion', '1920x1080', 60.000, 20000000, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, 6, 4, 'open_source', 'Open video codec'),
('DIRAC', 'Dirac', 'BBC', '1.0', 'wavelet', '7680x4320', 60.000, 500000000, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 8, 7, 'open_source', 'BBC wavelet codec'),
('FFV1', 'FFV1', 'FFmpeg', '3.0', 'lossless', '8192x8192', 60.000, 800000000, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, 10, 5, 'open_source', 'Lossless video codec'),
('UT', 'Ut Video', 'Takeshi Umezawa', '1.0', 'lossless', '8192x8192', 60.000, 800000000, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, 10, 3, 'open_source', 'Fast lossless codec'),
('HUFFYUV', 'HuffYUV', 'Ben Rudiak-Gould', '2.0', 'lossless', '8192x8192', 60.000, 800000000, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, 10, 2, 'open_source', 'Lossless codec'),
('RV40', 'RealVideo 4', 'RealNetworks', '10', 'block_motion', '1920x1080', 30.000, 10000000, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 5, 4, 'proprietary', 'RealMedia codec'),
('INDEO5', 'Indeo 5', 'Intel', '5.0', 'wavelet', '1920x1080', 30.000, 10000000, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 5, 4, 'discontinued', 'Intel video codec'),
('SORENSON3', 'Sorenson 3', 'Sorenson Media', '3.0', 'block_motion', '1920x1080', 30.000, 10000000, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, 5, 3, 'proprietary', 'QuickTime codec');

-- Insert sample rates
INSERT INTO sample_rate (value, display_name, category, is_standard, quality_tier, use_case, sort_order) VALUES
(8000, '8 kHz', 'telephony', TRUE, 'telephony', 'Telephone quality, speech', 1),
(11025, '11.025 kHz', 'legacy', TRUE, 'low', 'Quarter CD quality', 2),
(16000, '16 kHz', 'voice', TRUE, 'voice', 'Wideband voice, VoIP', 3),
(22050, '22.05 kHz', 'legacy', TRUE, 'low', 'Half CD quality', 4),
(32000, '32 kHz', 'broadcast', TRUE, 'broadcast', 'Digital radio, NICAM', 5),
(44100, '44.1 kHz', 'consumer', TRUE, 'standard', 'CD quality, consumer audio', 6),
(48000, '48 kHz', 'professional', TRUE, 'standard', 'Professional audio, video', 7),
(88200, '88.2 kHz', 'high-res', TRUE, 'high', '2x CD quality', 8),
(96000, '96 kHz', 'high-res', TRUE, 'high', 'High-resolution audio', 9),
(176400, '176.4 kHz', 'high-res', TRUE, 'ultra', '4x CD quality', 10),
(192000, '192 kHz', 'high-res', TRUE, 'ultra', 'Ultra high-resolution', 11),
(352800, '352.8 kHz', 'dxd', TRUE, 'extreme', 'DXD format', 12),
(384000, '384 kHz', 'extreme', TRUE, 'extreme', 'Maximum PCM rate', 13),
(2822400, '2.8224 MHz', 'dsd', TRUE, 'dsd64', 'DSD64 (1-bit)', 14),
(5644800, '5.6448 MHz', 'dsd', TRUE, 'dsd128', 'DSD128 (1-bit)', 15),
(11289600, '11.2896 MHz', 'dsd', TRUE, 'dsd256', 'DSD256 (1-bit)', 16),
(22579200, '22.5792 MHz', 'dsd', TRUE, 'dsd512', 'DSD512 (1-bit)', 17);

-- Insert bit depths
INSERT INTO bit_depth (value, display_name, bytes_per_sample, dynamic_range_db, quality_tier, use_case, is_standard, sort_order) VALUES
(8, '8-bit', 1, 48.16, 'low', 'Legacy, telephony', TRUE, 1),
(16, '16-bit', 2, 96.33, 'standard', 'CD quality, consumer', TRUE, 2),
(24, '24-bit', 3, 144.49, 'professional', 'Professional recording', TRUE, 3),
(32, '32-bit float', 4, 1528.00, 'professional', 'DAW processing', TRUE, 4),
(32, '32-bit integer', 4, 192.66, 'extreme', 'Ultra high-resolution', FALSE, 5),
(64, '64-bit float', 8, 3000.00, 'processing', 'Internal processing', FALSE, 6),
(1, '1-bit', 0.125, 6.02, 'dsd', 'DSD/PDM encoding', TRUE, 7);

-- Insert channel configurations
INSERT INTO channel_configuration (code, name, channel_count, layout, speaker_arrangement, category, is_immersive, is_standard, itu_reference, sort_order) VALUES
('MONO', 'Mono', 1, '1.0', 'C', 'basic', FALSE, TRUE, 'ITU-R BS.775', 1),
('STEREO', 'Stereo', 2, '2.0', 'L R', 'basic', FALSE, TRUE, 'ITU-R BS.775', 2),
('STEREO_LFE', 'Stereo + LFE', 3, '2.1', 'L R LFE', 'enhanced', FALSE, TRUE, 'ITU-R BS.775', 3),
('QUAD', 'Quadraphonic', 4, '4.0', 'L R Ls Rs', 'surround', FALSE, TRUE, 'ITU-R BS.775', 4),
('SURROUND_50', '5.0 Surround', 5, '5.0', 'L R C Ls Rs', 'surround', FALSE, TRUE, 'ITU-R BS.775', 5),
('SURROUND_51', '5.1 Surround', 6, '5.1', 'L R C LFE Ls Rs', 'surround', FALSE, TRUE, 'ITU-R BS.775', 6),
('SURROUND_61', '6.1 Surround', 7, '6.1', 'L R C LFE Ls Rs Cs', 'surround', FALSE, TRUE, 'ITU-R BS.775', 7),
('SURROUND_71', '7.1 Surround', 8, '7.1', 'L R C LFE Ls Rs Lrs Rrs', 'surround', FALSE, TRUE, 'ITU-R BS.775', 8),
('SURROUND_714', '7.1.4 Immersive', 12, '7.1.4', 'L R C LFE Ls Rs Lrs Rrs Ltf Rtf Ltr Rtr', 'immersive', TRUE, TRUE, 'ITU-R BS.2051', 9),
('SURROUND_916', '9.1.6 Immersive', 16, '9.1.6', 'L R C LFE Ls Rs Lss Rss Lw Rw Ltf Rtf Ltm Rtm Ltr Rtr', 'immersive', TRUE, TRUE, 'ITU-R BS.2051', 10),
('SURROUND_222', '22.2 Surround', 24, '22.2', 'Full 22.2 NHK layout', 'immersive', TRUE, TRUE, 'ITU-R BS.2051', 11),
('BINAURAL', 'Binaural', 2, '2.0', 'L R (3D positioned)', 'immersive', TRUE, TRUE, 'ITU-R BS.2051', 12),
('AMBISONICS_1', 'First Order Ambisonic', 4, 'FOA', 'W X Y Z', 'immersive', TRUE, TRUE, 'ITU-R BS.2051', 13),
('AMBISONICS_2', 'Second Order Ambisonic', 9, 'SOA', 'ACN channel ordering', 'immersive', TRUE, TRUE, 'ITU-R BS.2051', 14),
('AMBISONICS_3', 'Third Order Ambisonic', 16, 'TOA', 'ACN channel ordering', 'immersive', TRUE, TRUE, 'ITU-R BS.2051', 15);

-- Insert video resolutions
INSERT INTO video_resolution (code, name, width, height, aspect_ratio, pixels, category, marketing_name, is_standard, sort_order) VALUES
('QVGA', 'Quarter VGA', 320, 240, '4:3', 76800, 'legacy', 'QVGA', TRUE, 1),
('VGA', 'VGA', 640, 480, '4:3', 307200, 'legacy', 'VGA', TRUE, 2),
('SD_NTSC', 'SD NTSC', 720, 480, '3:2', 345600, 'standard_def', 'NTSC', TRUE, 3),
('SD_PAL', 'SD PAL', 720, 576, '5:4', 414720, 'standard_def', 'PAL', TRUE, 4),
('HD_720', 'HD 720p', 1280, 720, '16:9', 921600, 'high_def', '720p', TRUE, 5),
('HD_1080', 'Full HD 1080p', 1920, 1080, '16:9', 2073600, 'high_def', '1080p', TRUE, 6),
('DCI_2K', 'DCI 2K', 2048, 1080, '256:135', 2211840, 'cinema', '2K', TRUE, 7),
('QHD', 'Quad HD', 2560, 1440, '16:9', 3686400, 'high_def', '1440p', TRUE, 8),
('UHD_4K', '4K UHD', 3840, 2160, '16:9', 8294400, 'ultra_high_def', '4K', TRUE, 9),
('DCI_4K', 'DCI 4K', 4096, 2160, '256:135', 8847360, 'cinema', '4K Cinema', TRUE, 10),
('UHD_8K', '8K UHD', 7680, 4320, '16:9', 33177600, 'ultra_high_def', '8K', TRUE, 11);

-- Create essential views
CREATE VIEW audio_format_details AS
SELECT 
    ff.code AS format_code,
    ff.name AS format_name,
    ff.extension,
    ff.mime_type,
    ff.is_lossless,
    ff.max_channels,
    ff.max_sample_rate,
    ff.max_bit_depth,
    ft.name AS file_type,
    ac.name AS primary_codec,
    ac.compression_type,
    ac.max_bit_rate AS codec_max_bitrate
FROM file_format ff
JOIN file_type ft ON ff.file_type_id = ft.id
LEFT JOIN audio_codec ac ON ac.code = ff.code
WHERE ft.code = 'AUDIO';

CREATE VIEW video_format_details AS
SELECT 
    ff.code AS format_code,
    ff.name AS format_name,
    ff.extension,
    ff.mime_type,
    cf.name AS container,
    vc.name AS primary_codec,
    vc.compression_type,
    vc.max_resolution,
    vc.max_frame_rate,
    vc.supports_hdr,
    vc.supports_10bit
FROM file_format ff
JOIN file_type ft ON ff.file_type_id = ft.id
LEFT JOIN container_format cf ON cf.extension = ff.extension
LEFT JOIN video_codec vc ON vc.code = ff.code
WHERE ft.code = 'VIDEO';

-- Create indexes for performance
CREATE INDEX idx_format_compatibility_lookup ON format_compatibility(source_format_type, source_format_id, target_format_type);
CREATE INDEX idx_codec_capability_lookup ON codec_capability(codec_type, codec_id, capability);
CREATE INDEX idx_streaming_spec_platform_active ON streaming_spec(platform, is_active);
CREATE INDEX idx_metadata_schema_org_type ON metadata_schema(organization, schema_type, is_active);
CREATE INDEX idx_technical_requirement_platform_type ON technical_requirement(platform, requirement_type, is_active);

-- =====================================================
-- SECTION 17: VALIDATION & MATCHING
-- =====================================================

-- =====================================================
-- CORE MATCHING TABLES
-- =====================================================

-- Match Methods (e.g., exact, fuzzy, phonetic, AI/ML)
CREATE TABLE IF NOT EXISTS match_method (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL COMMENT 'exact, fuzzy, phonetic, ai_ml, blockchain',
    algorithm_type VARCHAR(50) COMMENT 'levenshtein, soundex, metaphone, neural_network, etc',
    
    -- Configuration
    min_score DECIMAL(5,4) DEFAULT 0.0000 COMMENT 'Minimum score to consider a match',
    requires_training BOOLEAN DEFAULT FALSE,
    supports_batch BOOLEAN DEFAULT TRUE,
    supports_realtime BOOLEAN DEFAULT TRUE,
    max_candidates INT DEFAULT 100 COMMENT 'Max candidates to evaluate',
    
    -- JSON configurations
    algorithm_params JSON COMMENT 'Algorithm-specific parameters',
    field_weights JSON COMMENT 'Weights for different fields in matching',
    preprocessing_rules JSON COMMENT 'Data preprocessing before matching',
    
    -- Performance metrics
    avg_processing_time_ms INT COMMENT 'Average processing time in milliseconds',
    accuracy_rate DECIMAL(5,4) COMMENT 'Historical accuracy rate',
    false_positive_rate DECIMAL(5,4),
    false_negative_rate DECIMAL(5,4),
    
    -- Status and ordering
    is_active BOOLEAN DEFAULT TRUE,
    is_default BOOLEAN DEFAULT FALSE,
    display_order INT DEFAULT 0,
    priority INT DEFAULT 50 COMMENT '1-100, higher = higher priority',
    
    -- Audit fields
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by VARCHAR(100),
    updated_by VARCHAR(100),
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_match_method_code (code),
    KEY idx_match_method_category (category),
    KEY idx_match_method_active (is_active),
    KEY idx_match_method_priority (priority)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Match methods and algorithms for data matching';

-- Match Confidence Levels
CREATE TABLE IF NOT EXISTS match_confidence_level (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    
    -- Thresholds
    min_score DECIMAL(5,4) NOT NULL COMMENT 'Minimum score for this level',
    max_score DECIMAL(5,4) NOT NULL COMMENT 'Maximum score for this level',
    
    -- Actions
    auto_approve BOOLEAN DEFAULT FALSE COMMENT 'Automatically approve matches at this level',
    requires_review BOOLEAN DEFAULT TRUE COMMENT 'Requires manual review',
    notification_required BOOLEAN DEFAULT FALSE,
    
    -- Visual indicators
    color_code VARCHAR(7) COMMENT 'Hex color for UI display',
    icon_name VARCHAR(50) COMMENT 'Icon identifier for UI',
    
    -- Workflow
    next_action VARCHAR(50) COMMENT 'auto_accept, manual_review, reject, escalate',
    escalation_level INT DEFAULT 0,
    
    -- Status and ordering
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    
    -- Audit fields
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_confidence_level_code (code),
    KEY idx_confidence_score_range (min_score, max_score),
    KEY idx_confidence_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Confidence levels for match results';

-- =====================================================
-- VALIDATION TABLES
-- =====================================================

-- Validation Rule Types
CREATE TABLE IF NOT EXISTS validation_rule_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL COMMENT 'format, completeness, consistency, compliance, business',
    
    -- Rule configuration
    rule_engine VARCHAR(50) COMMENT 'regex, sql, javascript, python, ml_model',
    is_synchronous BOOLEAN DEFAULT TRUE,
    can_auto_fix BOOLEAN DEFAULT FALSE,
    
    -- Applicability
    applies_to_entity VARCHAR(50) COMMENT 'song, recording, contributor, agreement, etc',
    applies_to_field VARCHAR(100) COMMENT 'Specific field or * for entire entity',
    
    -- JSON configurations
    rule_definition JSON NOT NULL COMMENT 'Actual rule logic/pattern',
    auto_fix_logic JSON COMMENT 'Logic for automatic fixes if applicable',
    validation_params JSON COMMENT 'Additional parameters for validation',
    error_message_templates JSON COMMENT 'Localized error message templates',
    
    -- Compliance
    compliance_standard VARCHAR(100) COMMENT 'CISAC, DDEX, GDPR, etc',
    is_mandatory BOOLEAN DEFAULT FALSE,
    
    -- Performance
    avg_execution_time_ms INT,
    cache_results BOOLEAN DEFAULT FALSE,
    cache_duration_seconds INT DEFAULT 3600,
    
    -- Status and ordering
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    priority INT DEFAULT 50,
    
    -- Audit fields
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by VARCHAR(100),
    updated_by VARCHAR(100),
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_validation_rule_code (code),
    KEY idx_validation_category (category),
    KEY idx_validation_entity (applies_to_entity),
    KEY idx_validation_compliance (compliance_standard),
    KEY idx_validation_active_priority (is_active, priority)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Types of validation rules available in the system';

-- Error Severity Levels
CREATE TABLE IF NOT EXISTS error_severity (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    level INT NOT NULL COMMENT '1=info, 2=warning, 3=error, 4=critical, 5=blocker',
    
    -- Actions
    blocks_processing BOOLEAN DEFAULT FALSE,
    blocks_distribution BOOLEAN DEFAULT FALSE,
    blocks_payment BOOLEAN DEFAULT FALSE,
    requires_resolution BOOLEAN DEFAULT FALSE,
    
    -- Notifications
    notify_user BOOLEAN DEFAULT TRUE,
    notify_admin BOOLEAN DEFAULT FALSE,
    escalation_hours INT COMMENT 'Hours before escalation',
    
    -- Visual indicators
    color_code VARCHAR(7),
    icon_name VARCHAR(50),
    
    -- SLA
    resolution_sla_hours INT COMMENT 'Expected resolution time',
    
    -- Status and ordering
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    
    -- Audit fields
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_error_severity_code (code),
    UNIQUE KEY uk_error_severity_level (level),
    KEY idx_error_severity_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Error severity levels for validation issues';

-- Data Quality Dimensions
CREATE TABLE IF NOT EXISTS data_quality_dimension (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    
    -- Measurement
    measurement_type VARCHAR(50) COMMENT 'percentage, count, boolean, score',
    calculation_method VARCHAR(50) COMMENT 'rule_based, statistical, ml_based',
    
    -- Thresholds
    excellent_threshold DECIMAL(5,2) COMMENT 'Threshold for excellent quality',
    good_threshold DECIMAL(5,2) COMMENT 'Threshold for good quality',
    acceptable_threshold DECIMAL(5,2) COMMENT 'Threshold for acceptable quality',
    poor_threshold DECIMAL(5,2) COMMENT 'Below this is poor quality',
    
    -- JSON configurations
    calculation_formula JSON COMMENT 'Formula or logic for calculation',
    dimension_weights JSON COMMENT 'Weights for sub-dimensions',
    industry_benchmarks JSON COMMENT 'Industry standard benchmarks',
    
    -- Aggregation
    supports_aggregation BOOLEAN DEFAULT TRUE,
    aggregation_method VARCHAR(50) COMMENT 'average, weighted_avg, min, max',
    
    -- Status and ordering
    is_active BOOLEAN DEFAULT TRUE,
    is_core_dimension BOOLEAN DEFAULT FALSE COMMENT 'Core dimension for overall quality',
    display_order INT DEFAULT 0,
    weight DECIMAL(5,4) DEFAULT 1.0000 COMMENT 'Weight in overall quality score',
    
    -- Audit fields
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_quality_dimension_code (code),
    KEY idx_quality_dimension_active (is_active),
    KEY idx_quality_dimension_core (is_core_dimension)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Data quality dimensions for measuring metadata quality';

-- =====================================================
-- SUPPORTING TABLES
-- =====================================================

-- Validation Profiles (collections of rules)
CREATE TABLE IF NOT EXISTS validation_profile (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    profile_type VARCHAR(50) COMMENT 'standard, custom, compliance, territory_specific',
    
    -- Applicability
    client_type VARCHAR(50) COMMENT 'artist, label, publisher, all',
    territory_code VARCHAR(10),
    compliance_standard VARCHAR(100),
    
    -- JSON configurations
    rule_set JSON NOT NULL COMMENT 'Array of validation rule IDs and configurations',
    exclusion_rules JSON COMMENT 'Rules to exclude from validation',
    custom_thresholds JSON COMMENT 'Custom thresholds for this profile',
    
    -- Scheduling
    is_realtime BOOLEAN DEFAULT TRUE,
    batch_schedule VARCHAR(100) COMMENT 'Cron expression for batch validation',
    
    -- Status
    is_active BOOLEAN DEFAULT TRUE,
    is_default BOOLEAN DEFAULT FALSE,
    display_order INT DEFAULT 0,
    
    -- Audit fields
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by VARCHAR(100),
    updated_by VARCHAR(100),
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_validation_profile_code (code),
    KEY idx_validation_profile_type (profile_type),
    KEY idx_validation_profile_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Validation profiles containing sets of rules';

-- Match Algorithms (specific algorithm implementations)
CREATE TABLE IF NOT EXISTS match_algorithm (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    algorithm_family VARCHAR(50) COMMENT 'string_similarity, phonetic, semantic, ml_based',
    
    -- Implementation details
    implementation_language VARCHAR(50) COMMENT 'sql, python, javascript, java',
    version VARCHAR(20),
    
    -- Configuration
    requires_preprocessing BOOLEAN DEFAULT FALSE,
    supports_multilingual BOOLEAN DEFAULT FALSE,
    supports_partial_match BOOLEAN DEFAULT TRUE,
    
    -- JSON configurations
    algorithm_code JSON COMMENT 'Actual algorithm implementation or reference',
    preprocessing_steps JSON COMMENT 'Steps for data preprocessing',
    hyperparameters JSON COMMENT 'Tunable parameters for the algorithm',
    language_support JSON COMMENT 'Supported languages and their configurations',
    
    -- Performance characteristics
    time_complexity VARCHAR(50) COMMENT 'O(n), O(n²), O(n log n), etc',
    space_complexity VARCHAR(50),
    
    -- ML specific
    model_path VARCHAR(500) COMMENT 'Path to ML model if applicable',
    training_dataset_id INT COMMENT 'Reference to training data',
    last_trained_at TIMESTAMP NULL,
    
    -- Status
    is_active BOOLEAN DEFAULT TRUE,
    is_experimental BOOLEAN DEFAULT FALSE,
    
    -- Audit fields
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by VARCHAR(100),
    updated_by VARCHAR(100),
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_match_algorithm_code (code),
    KEY idx_match_algorithm_family (algorithm_family),
    KEY idx_match_algorithm_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Specific matching algorithm implementations';

-- Data Source Priority (for multi-source reconciliation)
CREATE TABLE IF NOT EXISTS data_source_priority (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    source_type VARCHAR(100) NOT NULL COMMENT 'musicbrainz, spotify, ascap, internal, etc',
    data_category VARCHAR(50) NOT NULL COMMENT 'isrc, iswc, contributor, title, etc',
    
    -- Priority configuration
    priority_score INT NOT NULL DEFAULT 50 COMMENT '1-100, higher = more trusted',
    
    -- Trust factors
    accuracy_score DECIMAL(5,4) COMMENT 'Historical accuracy rate',
    completeness_score DECIMAL(5,4) COMMENT 'Data completeness rate',
    timeliness_score DECIMAL(5,4) COMMENT 'How current the data typically is',
    
    -- Conflict resolution
    conflict_resolution_rule VARCHAR(50) COMMENT 'highest_priority, most_recent, consensus, manual',
    requires_verification BOOLEAN DEFAULT FALSE,
    
    -- JSON configurations
    quality_metrics JSON COMMENT 'Detailed quality metrics by field',
    validation_rules JSON COMMENT 'Source-specific validation rules',
    reconciliation_logic JSON COMMENT 'Custom logic for reconciliation',
    
    -- Territory specific
    territory_code VARCHAR(10) COMMENT 'Specific territory or NULL for global',
    
    -- Status
    is_active BOOLEAN DEFAULT TRUE,
    effective_date DATE,
    expiry_date DATE,
    
    -- Audit fields
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_source_priority (source_type, data_category, territory_code),
    KEY idx_source_priority_active (is_active),
    KEY idx_source_priority_score (priority_score DESC)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Priority configuration for different data sources';

-- Match Field Mapping (field mappings between systems)
CREATE TABLE IF NOT EXISTS match_field_mapping (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    source_system VARCHAR(100) NOT NULL,
    target_system VARCHAR(100) NOT NULL,
    entity_type VARCHAR(50) NOT NULL COMMENT 'song, recording, contributor, etc',
    
    -- Field mapping
    source_field VARCHAR(200) NOT NULL,
    target_field VARCHAR(200) NOT NULL,
    
    -- Transformation
    requires_transformation BOOLEAN DEFAULT FALSE,
    transformation_type VARCHAR(50) COMMENT 'direct, lookup, formula, custom',
    
    -- JSON configurations
    transformation_logic JSON COMMENT 'Logic for field transformation',
    validation_rules JSON COMMENT 'Validation during mapping',
    default_values JSON COMMENT 'Default values if source is empty',
    
    -- Matching weight
    match_weight DECIMAL(5,4) DEFAULT 1.0000 COMMENT 'Weight in matching algorithm',
    is_key_field BOOLEAN DEFAULT FALSE COMMENT 'Key field for matching',
    
    -- Status
    is_active BOOLEAN DEFAULT TRUE,
    
    -- Audit fields
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_field_mapping (source_system, target_system, entity_type, source_field),
    KEY idx_field_mapping_systems (source_system, target_system),
    KEY idx_field_mapping_entity (entity_type),
    KEY idx_field_mapping_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Field mappings between different systems for matching';

-- Quality Score Weights (configurable weights for quality scoring)
CREATE TABLE IF NOT EXISTS quality_score_weight (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    entity_type VARCHAR(50) NOT NULL COMMENT 'song, recording, contributor, etc',
    quality_dimension_id INT UNSIGNED NOT NULL,
    
    -- Weight configuration
    weight DECIMAL(5,4) NOT NULL DEFAULT 1.0000,
    
    -- Context
    client_type VARCHAR(50) COMMENT 'Specific client type or NULL for all',
    use_case VARCHAR(50) COMMENT 'distribution, sync, registration, etc',
    
    -- Thresholds
    min_acceptable_score DECIMAL(5,2),
    target_score DECIMAL(5,2),
    
    -- Status
    is_active BOOLEAN DEFAULT TRUE,
    
    -- Audit fields
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_quality_weight (entity_type, quality_dimension_id, client_type, use_case),
    KEY idx_quality_weight_entity (entity_type),
    KEY idx_quality_weight_active (is_active),
    
    CONSTRAINT fk_quality_weight_dimension FOREIGN KEY (quality_dimension_id)
        REFERENCES data_quality_dimension(id) ON DELETE RESTRICT ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Configurable weights for quality score calculation';

-- Validation Dependencies (dependencies between validations)
CREATE TABLE IF NOT EXISTS validation_dependency (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    validation_rule_id INT UNSIGNED NOT NULL,
    depends_on_rule_id INT UNSIGNED NOT NULL,
    
    -- Dependency type
    dependency_type VARCHAR(50) NOT NULL COMMENT 'prerequisite, conditional, complementary',
    
    -- Execution control
    stop_on_dependency_failure BOOLEAN DEFAULT TRUE,
    
    -- JSON configurations
    dependency_conditions JSON COMMENT 'Conditions for dependency to apply',
    
    -- Status
    is_active BOOLEAN DEFAULT TRUE,
    
    -- Audit fields
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_validation_dependency (validation_rule_id, depends_on_rule_id),
    KEY idx_dependency_rule (validation_rule_id),
    KEY idx_dependency_depends (depends_on_rule_id),
    
    CONSTRAINT fk_val_dependency_rule FOREIGN KEY (validation_rule_id)
        REFERENCES validation_rule_type(id) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT fk_val_dependency_depends FOREIGN KEY (depends_on_rule_id)
        REFERENCES validation_rule_type(id) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Dependencies between validation rules';

-- Match Training Data (for ML-based matching)
CREATE TABLE IF NOT EXISTS match_training_data (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    dataset_name VARCHAR(100) NOT NULL,
    dataset_version VARCHAR(20) NOT NULL,
    entity_type VARCHAR(50) NOT NULL,
    
    -- Dataset info
    total_samples INT NOT NULL,
    positive_samples INT NOT NULL,
    negative_samples INT NOT NULL,
    
    -- Storage
    storage_path VARCHAR(500),
    storage_format VARCHAR(50) COMMENT 'csv, parquet, json, database',
    
    -- JSON metadata
    feature_columns JSON COMMENT 'Features used for training',
    label_columns JSON COMMENT 'Label columns',
    preprocessing_config JSON COMMENT 'Preprocessing configuration',
    dataset_statistics JSON COMMENT 'Statistical summary of dataset',
    
    -- Training info
    last_used_at TIMESTAMP NULL,
    performance_metrics JSON COMMENT 'Performance on this dataset',
    
    -- Status
    is_active BOOLEAN DEFAULT TRUE,
    is_validated BOOLEAN DEFAULT FALSE,
    
    -- Audit fields
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    created_by VARCHAR(100),
    
    PRIMARY KEY (id),
    UNIQUE KEY uk_training_data (dataset_name, dataset_version),
    KEY idx_training_data_entity (entity_type),
    KEY idx_training_data_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Training datasets for ML-based matching algorithms';

-- =====================================================
-- INITIAL DATA INSERTS
-- =====================================================

-- Insert Match Methods
INSERT INTO match_method (code, name, description, category, algorithm_type, min_score, requires_training, algorithm_params, field_weights) VALUES
('EXACT', 'Exact Match', 'Exact string matching', 'exact', 'equality', 1.0000, FALSE, '{"case_sensitive": false, "trim_whitespace": true}', '{"isrc": 1.0, "iswc": 1.0}'),
('FUZZY_LEV', 'Fuzzy Levenshtein', 'Fuzzy matching using Levenshtein distance', 'fuzzy', 'levenshtein', 0.8000, FALSE, '{"max_distance": 3, "normalize": true}', '{"title": 0.4, "artist": 0.3, "album": 0.3}'),
('FUZZY_JARO', 'Fuzzy Jaro-Winkler', 'Fuzzy matching using Jaro-Winkler distance', 'fuzzy', 'jaro_winkler', 0.8500, FALSE, '{"prefix_weight": 0.1}', '{"title": 0.4, "artist": 0.3, "album": 0.3}'),
('PHONETIC_SOUNDEX', 'Soundex Phonetic', 'Phonetic matching using Soundex', 'phonetic', 'soundex', 0.9000, FALSE, '{"language": "en"}', '{"artist_name": 0.5, "composer_name": 0.5}'),
('PHONETIC_METAPHONE', 'Metaphone Phonetic', 'Phonetic matching using Metaphone', 'phonetic', 'metaphone', 0.9000, FALSE, '{"type": "double", "max_length": 10}', '{"artist_name": 0.5, "composer_name": 0.5}'),
('AI_COMPOSITION', 'AI Composition Matching', 'AI-based matching for compositions', 'ai_ml', 'neural_network', 0.7500, TRUE, '{"model": "composition_bert_v2", "threshold": 0.75}', '{"audio_features": 0.3, "metadata": 0.4, "structure": 0.3}'),
('AI_RECORDING', 'AI Recording Matching', 'AI-based matching for recordings', 'ai_ml', 'neural_network', 0.7500, TRUE, '{"model": "recording_cnn_v3", "threshold": 0.75}', '{"audio_fingerprint": 0.5, "metadata": 0.3, "duration": 0.2}'),
('BLOCKCHAIN_HASH', 'Blockchain Hash Verification', 'Blockchain-based hash verification', 'blockchain', 'hash_verification', 1.0000, FALSE, '{"networks": ["ethereum", "solana"], "smart_contract": "0x..."}', '{"hash": 1.0}'),
('HYBRID_SMART', 'Smart Hybrid Matching', 'Intelligent hybrid matching combining multiple methods', 'ai_ml', 'ensemble', 0.8000, TRUE, '{"methods": ["EXACT", "FUZZY_LEV", "AI_COMPOSITION"], "voting": "weighted"}', NULL);

-- Insert Match Confidence Levels
INSERT INTO match_confidence_level (code, name, description, min_score, max_score, auto_approve, requires_review, color_code, next_action) VALUES
('EXACT', 'Exact Match', 'Perfect match with 100% confidence', 1.0000, 1.0000, TRUE, FALSE, '#00FF00', 'auto_accept'),
('HIGH', 'High Confidence', 'Very likely match', 0.9000, 0.9999, TRUE, FALSE, '#7FFF00', 'auto_accept'),
('MEDIUM_HIGH', 'Medium-High Confidence', 'Likely match, recommend review', 0.8000, 0.8999, FALSE, TRUE, '#FFFF00', 'manual_review'),
('MEDIUM', 'Medium Confidence', 'Possible match, requires review', 0.7000, 0.7999, FALSE, TRUE, '#FFA500', 'manual_review'),
('LOW', 'Low Confidence', 'Unlikely match, needs verification', 0.5000, 0.6999, FALSE, TRUE, '#FF4500', 'manual_review'),
('VERY_LOW', 'Very Low Confidence', 'Very unlikely match', 0.0000, 0.4999, FALSE, TRUE, '#FF0000', 'reject');

-- Insert Validation Rule Types
INSERT INTO validation_rule_type (code, name, description, category, rule_engine, applies_to_entity, rule_definition) VALUES
('ISRC_FORMAT', 'ISRC Format Validation', 'Validates ISRC format according to ISO 3901', 'format', 'regex', 'recording', '{"pattern": "^[A-Z]{2}[A-Z0-9]{3}[0-9]{2}[0-9]{5}$", "error": "Invalid ISRC format"}'),
('ISWC_FORMAT', 'ISWC Format Validation', 'Validates ISWC format', 'format', 'regex', 'song', '{"pattern": "^T-[0-9]{9}-[0-9]$", "error": "Invalid ISWC format"}'),
('EMAIL_FORMAT', 'Email Format Validation', 'Validates email address format', 'format', 'regex', 'contributor', '{"pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$", "error": "Invalid email format"}'),
('TITLE_REQUIRED', 'Title Required', 'Ensures title is not empty', 'completeness', 'sql', 'song', '{"condition": "title IS NOT NULL AND LENGTH(TRIM(title)) > 0", "error": "Title is required"}'),
('DURATION_RANGE', 'Duration Range Check', 'Validates recording duration is reasonable', 'consistency', 'sql', 'recording', '{"min": 10, "max": 7200, "unit": "seconds", "error": "Duration must be between 10 seconds and 2 hours"}'),
('SPLIT_TOTAL', 'Split Total Validation', 'Ensures ownership splits total 100%', 'business', 'javascript', 'song', '{"script": "return splits.reduce((sum, s) => sum + s.percentage, 0) === 100;", "error": "Ownership splits must total 100%"}'),
('CISAC_COMPLIANCE', 'CISAC CWR Compliance', 'Validates data meets CISAC CWR standards', 'compliance', 'python', 'song', '{"validator": "cisac_cwr_validator", "version": "3.1", "error": "Does not meet CISAC CWR standards"}'),
('DDEX_COMPLIANCE', 'DDEX ERN Compliance', 'Validates data meets DDEX ERN standards', 'compliance', 'python', 'recording', '{"validator": "ddex_ern_validator", "version": "4.3", "error": "Does not meet DDEX ERN standards"}'),
('DUPLICATE_CHECK', 'Duplicate Detection', 'Checks for duplicate entries', 'consistency', 'sql', '*', '{"method": "hash_comparison", "fields": ["title", "artist", "duration"], "error": "Potential duplicate detected"}');

-- Insert Error Severity Levels
INSERT INTO error_severity (code, name, description, level, blocks_processing, blocks_distribution, blocks_payment, color_code, icon_name) VALUES
('INFO', 'Information', 'Informational message only', 1, FALSE, FALSE, FALSE, '#0000FF', 'info-circle'),
('WARNING', 'Warning', 'Warning that should be reviewed', 2, FALSE, FALSE, FALSE, '#FFFF00', 'exclamation-triangle'),
('ERROR', 'Error', 'Error that needs correction', 3, TRUE, FALSE, FALSE, '#FFA500', 'exclamation-circle'),
('CRITICAL', 'Critical', 'Critical error affecting operations', 4, TRUE, TRUE, FALSE, '#FF4500', 'times-circle'),
('BLOCKER', 'Blocker', 'Blocking error preventing all operations', 5, TRUE, TRUE, TRUE, '#FF0000', 'ban');

-- Insert Data Quality Dimensions
INSERT INTO data_quality_dimension (code, name, description, measurement_type, calculation_method, excellent_threshold, good_threshold, acceptable_threshold, calculation_formula) VALUES
('COMPLETENESS', 'Completeness', 'Percentage of required fields populated', 'percentage', 'rule_based', 95.00, 85.00, 70.00, '{"formula": "(populated_required_fields / total_required_fields) * 100"}'),
('ACCURACY', 'Accuracy', 'Correctness of data values', 'percentage', 'rule_based', 98.00, 90.00, 80.00, '{"formula": "(correct_values / total_values) * 100"}'),
('CONSISTENCY', 'Consistency', 'Data consistency across systems', 'percentage', 'statistical', 95.00, 85.00, 75.00, '{"formula": "(consistent_records / total_records) * 100"}'),
('TIMELINESS', 'Timeliness', 'How current the data is', 'score', 'rule_based', 90.00, 75.00, 60.00, '{"formula": "100 - (days_since_update * decay_factor)"}'),
('VALIDITY', 'Validity', 'Conformance to syntax and format rules', 'percentage', 'rule_based', 99.00, 95.00, 90.00, '{"formula": "(valid_values / total_values) * 100"}'),
('UNIQUENESS', 'Uniqueness', 'Absence of duplicate records', 'percentage', 'statistical', 99.00, 95.00, 90.00, '{"formula": "(unique_records / total_records) * 100"}');

-- Insert Validation Profiles
INSERT INTO validation_profile (code, name, description, profile_type, client_type, rule_set) VALUES
('STANDARD', 'Standard Validation', 'Standard validation profile for all entities', 'standard', 'all', '["ISRC_FORMAT", "ISWC_FORMAT", "TITLE_REQUIRED", "DURATION_RANGE", "SPLIT_TOTAL"]'),
('DISTRIBUTION', 'Distribution Ready', 'Validation for distribution-ready content', 'standard', 'all', '["ISRC_FORMAT", "TITLE_REQUIRED", "DURATION_RANGE", "DDEX_COMPLIANCE", "DUPLICATE_CHECK"]'),
('LABEL_ADVANCED', 'Label Advanced', 'Advanced validation for record labels', 'custom', 'label', '["ISRC_FORMAT", "ISWC_FORMAT", "TITLE_REQUIRED", "DURATION_RANGE", "SPLIT_TOTAL", "CISAC_COMPLIANCE", "DDEX_COMPLIANCE", "DUPLICATE_CHECK"]'),
('PUBLISHER_PRO', 'Publisher Pro', 'Professional validation for publishers', 'custom', 'publisher', '["ISWC_FORMAT", "TITLE_REQUIRED", "SPLIT_TOTAL", "CISAC_COMPLIANCE", "DUPLICATE_CHECK"]');

-- Insert Data Source Priorities
INSERT INTO data_source_priority (source_type, data_category, priority_score, accuracy_score, completeness_score, conflict_resolution_rule) VALUES
('internal', 'all', 100, 1.0000, 0.9500, 'highest_priority'),
('musicbrainz', 'isrc', 90, 0.9500, 0.8500, 'highest_priority'),
('spotify', 'isrc', 85, 0.9000, 0.9000, 'consensus'),
('ascap', 'iswc', 95, 0.9800, 0.9200, 'highest_priority'),
('bmi', 'iswc', 95, 0.9800, 0.9200, 'highest_priority'),
('soundexchange', 'recording', 80, 0.8500, 0.8000, 'most_recent');

-- Create indexes for JSON search capabilities
ALTER TABLE match_method ADD FULLTEXT ft_match_method_params (algorithm_params);
ALTER TABLE validation_rule_type ADD FULLTEXT ft_validation_rules (rule_definition);
ALTER TABLE data_quality_dimension ADD FULLTEXT ft_quality_formula (calculation_formula);

-- =====================================================
-- GRANTS (Adjust based on your user setup)
-- =====================================================
-- GRANT SELECT ON astro_reference_db.* TO 'astro_read'@'%';
-- GRANT SELECT, INSERT, UPDATE ON astro_reference_db.* TO 'astro_write'@'%';
-- GRANT ALL PRIVILEGES ON astro_reference_db.* TO 'astro_admin'@'%';

-- =====================================================
-- SECTION 18: ANALYTICS
-- =====================================================

-- Core Analytics Tables

-- Metric Types (all measurable data points in music industry)
CREATE TABLE metric_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(100) NOT NULL,
    data_type VARCHAR(50) NOT NULL, -- INTEGER, DECIMAL, PERCENTAGE, CURRENCY, DURATION
    unit VARCHAR(50),
    description TEXT,
    industry_standard BOOLEAN DEFAULT FALSE,
    calculation_formula JSON,
    aggregation_allowed BOOLEAN DEFAULT TRUE,
    decimal_places TINYINT UNSIGNED DEFAULT 2,
    min_value DECIMAL(20,6),
    max_value DECIMAL(20,6),
    tags JSON,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category),
    INDEX idx_data_type (data_type),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- KPI Types (key performance indicators)
CREATE TABLE kpi_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(100) NOT NULL,
    metric_type_id INT UNSIGNED,
    formula JSON,
    target_type VARCHAR(50), -- ABSOLUTE, PERCENTAGE, GROWTH_RATE
    frequency VARCHAR(50), -- DAILY, WEEKLY, MONTHLY, QUARTERLY, YEARLY
    direction VARCHAR(20), -- HIGHER_BETTER, LOWER_BETTER, TARGET_RANGE
    industry_benchmark JSON,
    calculation_method TEXT,
    data_sources JSON,
    dependencies JSON,
    alert_thresholds JSON,
    visualization_config JSON,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (metric_type_id) REFERENCES metric_type(id),
    INDEX idx_category (category),
    INDEX idx_frequency (frequency)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Dimension Types (data slicing dimensions)
CREATE TABLE dimension_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(100) NOT NULL,
    data_type VARCHAR(50) NOT NULL,
    hierarchy_level INT UNSIGNED,
    parent_dimension_id INT UNSIGNED,
    cardinality VARCHAR(20), -- LOW, MEDIUM, HIGH, VERY_HIGH
    source_table VARCHAR(100),
    source_column VARCHAR(100),
    lookup_query TEXT,
    default_members JSON,
    member_format VARCHAR(255),
    sort_order INT UNSIGNED,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (parent_dimension_id) REFERENCES dimension_type(id),
    INDEX idx_category (category),
    INDEX idx_hierarchy (hierarchy_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Aggregation Types
CREATE TABLE aggregation_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    function_name VARCHAR(100) NOT NULL,
    sql_expression VARCHAR(500),
    supports_distinct BOOLEAN DEFAULT FALSE,
    supports_window BOOLEAN DEFAULT FALSE,
    data_type_compatibility JSON,
    description TEXT,
    example_usage TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_function (function_name)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Comparison Types
CREATE TABLE comparison_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    comparison_method VARCHAR(100) NOT NULL,
    period_offset INT,
    period_unit VARCHAR(20), -- DAY, WEEK, MONTH, QUARTER, YEAR
    calculation_formula VARCHAR(500),
    display_format VARCHAR(100),
    supports_percentage BOOLEAN DEFAULT TRUE,
    supports_absolute BOOLEAN DEFAULT TRUE,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_method (comparison_method)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Trend Types
CREATE TABLE trend_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    analysis_method VARCHAR(100) NOT NULL,
    min_data_points INT UNSIGNED DEFAULT 3,
    trend_algorithm VARCHAR(100),
    smoothing_factor DECIMAL(5,4),
    confidence_threshold DECIMAL(5,4),
    visualization_type VARCHAR(50),
    trend_indicators JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_method (analysis_method)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Chart Types
CREATE TABLE chart_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(100) NOT NULL,
    library VARCHAR(50), -- CHARTJS, D3, HIGHCHARTS, PLOTLY
    chart_config JSON,
    supported_dimensions INT UNSIGNED DEFAULT 2,
    supported_metrics INT UNSIGNED DEFAULT 1,
    supports_real_time BOOLEAN DEFAULT FALSE,
    supports_drill_down BOOLEAN DEFAULT FALSE,
    responsive_config JSON,
    interaction_config JSON,
    export_formats JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category),
    INDEX idx_library (library)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Additional Analytics Tables

-- Dashboard Types
CREATE TABLE dashboard_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(100) NOT NULL,
    target_role VARCHAR(100),
    layout_config JSON,
    default_widgets JSON,
    refresh_interval INT UNSIGNED, -- seconds
    mobile_optimized BOOLEAN DEFAULT TRUE,
    sharing_enabled BOOLEAN DEFAULT TRUE,
    embedding_enabled BOOLEAN DEFAULT FALSE,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category),
    INDEX idx_role (target_role)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Report Types
CREATE TABLE report_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(100) NOT NULL,
    template_type VARCHAR(50),
    sections JSON,
    default_metrics JSON,
    default_dimensions JSON,
    default_filters JSON,
    scheduling_enabled BOOLEAN DEFAULT TRUE,
    export_formats JSON,
    distribution_config JSON,
    compliance_standards JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category),
    INDEX idx_template (template_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Visualization Types
CREATE TABLE visualization_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(100) NOT NULL,
    render_engine VARCHAR(50),
    configuration_schema JSON,
    data_requirements JSON,
    interaction_types JSON,
    animation_config JSON,
    responsive_breakpoints JSON,
    accessibility_features JSON,
    performance_threshold JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category),
    INDEX idx_engine (render_engine)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Alert Types
CREATE TABLE alert_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(100) NOT NULL,
    severity VARCHAR(20), -- INFO, WARNING, CRITICAL, URGENT
    trigger_type VARCHAR(50), -- THRESHOLD, ANOMALY, TREND, CUSTOM
    evaluation_frequency INT UNSIGNED, -- minutes
    notification_channels JSON,
    escalation_config JSON,
    auto_resolve BOOLEAN DEFAULT FALSE,
    grouping_enabled BOOLEAN DEFAULT TRUE,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category),
    INDEX idx_severity (severity),
    INDEX idx_trigger (trigger_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Threshold Types
CREATE TABLE threshold_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    threshold_method VARCHAR(50), -- STATIC, DYNAMIC, PERCENTILE, STANDARD_DEVIATION
    calculation_formula VARCHAR(500),
    baseline_period INT UNSIGNED, -- days
    sensitivity_factor DECIMAL(5,4),
    breach_duration INT UNSIGNED, -- minutes before alert
    reset_duration INT UNSIGNED, -- minutes to clear
    seasonal_adjustment BOOLEAN DEFAULT FALSE,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_method (threshold_method)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Analytics Periods
CREATE TABLE analytics_period (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    period_type VARCHAR(50) NOT NULL,
    duration_value INT UNSIGNED,
    duration_unit VARCHAR(20),
    offset_value INT,
    offset_unit VARCHAR(20),
    fiscal_alignment BOOLEAN DEFAULT FALSE,
    timezone_sensitive BOOLEAN DEFAULT TRUE,
    date_format VARCHAR(100),
    display_format VARCHAR(100),
    sort_order INT UNSIGNED,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_type (period_type),
    INDEX idx_sort (sort_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Calculation Methods
CREATE TABLE calculation_method (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(100) NOT NULL,
    formula_type VARCHAR(50), -- SQL, JAVASCRIPT, PYTHON, API
    formula_expression TEXT,
    input_parameters JSON,
    output_type VARCHAR(50),
    validation_rules JSON,
    performance_hints JSON,
    caching_enabled BOOLEAN DEFAULT TRUE,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category),
    INDEX idx_formula_type (formula_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Data Source Types
CREATE TABLE data_source_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    source_category VARCHAR(100) NOT NULL,
    connection_type VARCHAR(50), -- DATABASE, API, FILE, STREAM, BLOCKCHAIN
    authentication_method VARCHAR(100),
    connection_config JSON,
    refresh_capability VARCHAR(50), -- REAL_TIME, NEAR_REAL_TIME, BATCH, MANUAL
    data_format VARCHAR(50),
    rate_limits JSON,
    reliability_score DECIMAL(3,2),
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (source_category),
    INDEX idx_connection (connection_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Analytics Categories
CREATE TABLE analytics_category (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    parent_category_id INT UNSIGNED,
    hierarchy_level INT UNSIGNED DEFAULT 1,
    icon VARCHAR(100),
    color_scheme JSON,
    default_metrics JSON,
    default_dimensions JSON,
    industry_specific BOOLEAN DEFAULT TRUE,
    sort_order INT UNSIGNED,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (parent_category_id) REFERENCES analytics_category(id),
    INDEX idx_parent (parent_category_id),
    INDEX idx_hierarchy (hierarchy_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Benchmark Types
CREATE TABLE benchmark_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    benchmark_category VARCHAR(100) NOT NULL,
    comparison_group VARCHAR(100), -- INDUSTRY, GENRE, REGION, CUSTOM
    calculation_method VARCHAR(100),
    percentile_ranges JSON,
    update_frequency VARCHAR(50),
    data_sources JSON,
    confidence_level DECIMAL(5,4),
    minimum_sample_size INT UNSIGNED,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (benchmark_category),
    INDEX idx_group (comparison_group)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insight Types
CREATE TABLE insight_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(100) NOT NULL,
    detection_method VARCHAR(100), -- RULE_BASED, ML_MODEL, STATISTICAL, HYBRID
    priority_level VARCHAR(20), -- LOW, MEDIUM, HIGH, CRITICAL
    actionability_score DECIMAL(3,2),
    typical_impact VARCHAR(100),
    recommendation_template TEXT,
    supporting_metrics JSON,
    validation_criteria JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category),
    INDEX idx_priority (priority_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Export Formats
CREATE TABLE export_format (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    file_extension VARCHAR(20) NOT NULL,
    mime_type VARCHAR(100) NOT NULL,
    format_type VARCHAR(50), -- STRUCTURED, DOCUMENT, IMAGE, API
    supported_features JSON,
    compression_enabled BOOLEAN DEFAULT FALSE,
    max_file_size BIGINT UNSIGNED, -- bytes
    template_config JSON,
    post_processing JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_type (format_type),
    INDEX idx_extension (file_extension)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Refresh Frequencies
CREATE TABLE refresh_frequency (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    frequency_seconds INT UNSIGNED NOT NULL,
    frequency_display VARCHAR(100),
    is_real_time BOOLEAN DEFAULT FALSE,
    suitable_for JSON, -- metric types suitable for this frequency
    resource_impact VARCHAR(20), -- LOW, MEDIUM, HIGH
    caching_strategy JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_seconds (frequency_seconds),
    INDEX idx_real_time (is_real_time)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Widget Types
CREATE TABLE widget_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(100) NOT NULL,
    size_options JSON,
    data_binding JSON,
    interaction_types JSON,
    refresh_capability BOOLEAN DEFAULT TRUE,
    customization_options JSON,
    mobile_compatible BOOLEAN DEFAULT TRUE,
    dependencies JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Filter Types
CREATE TABLE filter_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    input_type VARCHAR(50), -- DROPDOWN, MULTISELECT, DATE_RANGE, SLIDER, TEXT
    data_type VARCHAR(50),
    validation_rules JSON,
    default_operator VARCHAR(50),
    supported_operators JSON,
    ui_config JSON,
    cascading_enabled BOOLEAN DEFAULT FALSE,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_input_type (input_type),
    INDEX idx_data_type (data_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Analytics Event Types
CREATE TABLE analytics_event_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(100) NOT NULL,
    event_schema JSON,
    tracking_enabled BOOLEAN DEFAULT TRUE,
    retention_days INT UNSIGNED DEFAULT 365,
    aggregation_rules JSON,
    privacy_level VARCHAR(20), -- PUBLIC, INTERNAL, RESTRICTED
    compliance_flags JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category),
    INDEX idx_privacy (privacy_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Performance Indicators
CREATE TABLE performance_indicator (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(100) NOT NULL,
    measurement_type VARCHAR(50),
    baseline_value DECIMAL(20,6),
    target_value DECIMAL(20,6),
    tolerance_percentage DECIMAL(5,2),
    weighting_factor DECIMAL(5,4),
    rolling_average_days INT UNSIGNED,
    seasonality_adjusted BOOLEAN DEFAULT FALSE,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category),
    INDEX idx_measurement (measurement_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Goal Types
CREATE TABLE goal_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    category VARCHAR(100) NOT NULL,
    goal_period VARCHAR(50),
    measurement_frequency VARCHAR(50),
    achievement_calculation JSON,
    milestone_config JSON,
    notification_rules JSON,
    visualization_config JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category),
    INDEX idx_period (goal_period)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Analytics Segments
CREATE TABLE analytics_segment (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    segment_type VARCHAR(100) NOT NULL,
    definition_criteria JSON,
    dynamic_update BOOLEAN DEFAULT FALSE,
    size_threshold INT UNSIGNED,
    stability_score DECIMAL(3,2),
    typical_behaviors JSON,
    value_metrics JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_type (segment_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Attribution Models
CREATE TABLE attribution_model (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    model_type VARCHAR(100), -- LAST_CLICK, FIRST_CLICK, LINEAR, TIME_DECAY, POSITION_BASED, DATA_DRIVEN
    attribution_window INT UNSIGNED, -- days
    weighting_algorithm JSON,
    touchpoint_config JSON,
    conversion_definition JSON,
    model_parameters JSON,
    accuracy_metrics JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_type (model_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Cohort Types
CREATE TABLE cohort_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    cohort_basis VARCHAR(100), -- ACQUISITION_DATE, BEHAVIOR, ATTRIBUTE, CUSTOM
    grouping_interval VARCHAR(50),
    retention_metrics JSON,
    behavior_metrics JSON,
    value_metrics JSON,
    visualization_templates JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_basis (cohort_basis)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Funnel Stages
CREATE TABLE funnel_stage (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    funnel_type VARCHAR(100) NOT NULL,
    stage_order INT UNSIGNED NOT NULL,
    completion_criteria JSON,
    typical_duration INT UNSIGNED, -- seconds
    drop_off_threshold DECIMAL(5,2),
    optimization_hints JSON,
    next_stages JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_type (funnel_type),
    INDEX idx_order (stage_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Retention Types
CREATE TABLE retention_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    retention_metric VARCHAR(100), -- ROLLING, COHORT, BRACKET, RANGE
    calculation_method JSON,
    time_periods JSON,
    engagement_definition JSON,
    churn_definition JSON,
    benchmarks JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_metric (retention_metric)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Analytics Tags
CREATE TABLE analytics_tag (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    tag_category VARCHAR(100) NOT NULL,
    color VARCHAR(7), -- hex color
    icon VARCHAR(100),
    auto_apply_rules JSON,
    usage_restrictions JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (tag_category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Metric Formulas
CREATE TABLE metric_formula (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    formula_category VARCHAR(100) NOT NULL,
    expression TEXT NOT NULL,
    input_metrics JSON,
    variables JSON,
    constants JSON,
    validation_rules JSON,
    precision_level INT UNSIGNED DEFAULT 2,
    null_handling VARCHAR(50), -- IGNORE, ZERO, ERROR, PROPAGATE
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (formula_category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Analytics Presets
CREATE TABLE analytics_preset (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    preset_type VARCHAR(100) NOT NULL,
    target_audience VARCHAR(100),
    configuration JSON,
    metrics JSON,
    dimensions JSON,
    filters JSON,
    visualizations JSON,
    is_default BOOLEAN DEFAULT FALSE,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_type (preset_type),
    INDEX idx_audience (target_audience)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Data Quality Metrics
CREATE TABLE data_quality_metric (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    quality_dimension VARCHAR(100), -- ACCURACY, COMPLETENESS, CONSISTENCY, TIMELINESS, VALIDITY, UNIQUENESS
    measurement_method JSON,
    threshold_good DECIMAL(5,2),
    threshold_acceptable DECIMAL(5,2),
    remediation_actions JSON,
    impact_assessment JSON,
    monitoring_frequency VARCHAR(50),
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_dimension (quality_dimension)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Analytics Permissions
CREATE TABLE analytics_permission (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    permission_level VARCHAR(50), -- VIEW, EXPORT, EDIT, CREATE, DELETE, ADMIN
    resource_type VARCHAR(100),
    scope_definition JSON,
    restrictions JSON,
    delegation_allowed BOOLEAN DEFAULT FALSE,
    audit_required BOOLEAN DEFAULT TRUE,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_level (permission_level),
    INDEX idx_resource (resource_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Metric Relationships
CREATE TABLE metric_relationship (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    parent_metric_id INT UNSIGNED NOT NULL,
    child_metric_id INT UNSIGNED NOT NULL,
    relationship_type VARCHAR(50), -- DERIVES_FROM, CORRELATES_WITH, INFLUENCES, DEPENDS_ON
    relationship_strength DECIMAL(3,2),
    lag_period INT, -- days
    confidence_score DECIMAL(3,2),
    validation_method JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (parent_metric_id) REFERENCES metric_type(id),
    FOREIGN KEY (child_metric_id) REFERENCES metric_type(id),
    UNIQUE KEY uk_metric_relationship (parent_metric_id, child_metric_id, relationship_type),
    INDEX idx_parent (parent_metric_id),
    INDEX idx_child (child_metric_id),
    INDEX idx_type (relationship_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Drill Down Paths
CREATE TABLE drill_down_path (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    start_level VARCHAR(100) NOT NULL,
    path_sequence JSON NOT NULL,
    context_preservation JSON,
    filter_inheritance JSON,
    navigation_hints JSON,
    typical_use_cases JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_start_level (start_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Analytics Annotations
CREATE TABLE analytics_annotation (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    annotation_type VARCHAR(50), -- EVENT, INSIGHT, CORRECTION, EXPLANATION, WARNING
    priority VARCHAR(20),
    display_rules JSON,
    expiry_rules JSON,
    target_metrics JSON,
    visibility_scope VARCHAR(50),
    approval_required BOOLEAN DEFAULT FALSE,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_type (annotation_type),
    INDEX idx_priority (priority)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Anomaly Types
CREATE TABLE anomaly_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    detection_algorithm VARCHAR(100), -- STATISTICAL, ML_BASED, RULE_BASED, HYBRID
    sensitivity_levels JSON,
    training_requirements JSON,
    false_positive_rate DECIMAL(5,4),
    typical_causes JSON,
    investigation_steps JSON,
    auto_remediation JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_algorithm (detection_algorithm)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Forecast Models
CREATE TABLE forecast_model (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    model_type VARCHAR(100), -- ARIMA, PROPHET, LSTM, ENSEMBLE, EXPONENTIAL_SMOOTHING
    training_requirements JSON,
    feature_engineering JSON,
    hyperparameters JSON,
    accuracy_metrics JSON,
    confidence_intervals JSON,
    update_frequency VARCHAR(50),
    seasonal_components JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_type (model_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Correlation Types
CREATE TABLE correlation_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    correlation_method VARCHAR(100), -- PEARSON, SPEARMAN, KENDALL, MUTUAL_INFORMATION
    min_sample_size INT UNSIGNED,
    significance_threshold DECIMAL(5,4),
    lag_analysis BOOLEAN DEFAULT FALSE,
    causality_testing BOOLEAN DEFAULT FALSE,
    visualization_type VARCHAR(50),
    interpretation_guide JSON,
    description TEXT,
    metadata JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_by VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(255),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_method (correlation_method)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Create indexes for better performance
CREATE INDEX idx_metric_active_category ON metric_type(is_active, category);
CREATE INDEX idx_kpi_active_category ON kpi_type(is_active, category);
CREATE INDEX idx_dimension_active_hierarchy ON dimension_type(is_active, hierarchy_level);
CREATE INDEX idx_dashboard_active_role ON dashboard_type(is_active, target_role);
CREATE INDEX idx_report_active_category ON report_type(is_active, category);
CREATE INDEX idx_alert_active_severity ON alert_type(is_active, severity);

-- =====================================================
-- INITIAL CONFIGURATION DATA
-- =====================================================

-- Metric Types (Music Industry Specific)
INSERT INTO metric_type (code, name, category, data_type, unit, description, industry_standard, decimal_places) VALUES
('STREAMS_TOTAL', 'Total Streams', 'STREAMING', 'INTEGER', 'plays', 'Total number of streams across all platforms', TRUE, 0),
('STREAMS_SPOTIFY', 'Spotify Streams', 'STREAMING', 'INTEGER', 'plays', 'Number of streams on Spotify', TRUE, 0),
('STREAMS_APPLE', 'Apple Music Streams', 'STREAMING', 'INTEGER', 'plays', 'Number of streams on Apple Music', TRUE, 0),
('STREAMS_YOUTUBE', 'YouTube Streams', 'STREAMING', 'INTEGER', 'plays', 'Number of streams on YouTube Music', TRUE, 0),
('SKIP_RATE', 'Skip Rate', 'ENGAGEMENT', 'PERCENTAGE', '%', 'Percentage of streams skipped before 30 seconds', TRUE, 2),
('COMPLETION_RATE', 'Completion Rate', 'ENGAGEMENT', 'PERCENTAGE', '%', 'Percentage of streams played to completion', TRUE, 2),
('SAVE_RATE', 'Save Rate', 'ENGAGEMENT', 'PERCENTAGE', '%', 'Percentage of listeners who saved the track', TRUE, 2),
('PLAYLIST_ADDS', 'Playlist Additions', 'DISCOVERY', 'INTEGER', 'adds', 'Number of times added to playlists', TRUE, 0),
('REVENUE_STREAMING', 'Streaming Revenue', 'REVENUE', 'CURRENCY', 'USD', 'Revenue from streaming platforms', TRUE, 2),
('REVENUE_SYNC', 'Sync Revenue', 'REVENUE', 'CURRENCY', 'USD', 'Revenue from synchronization licenses', TRUE, 2),
('REVENUE_MECHANICAL', 'Mechanical Revenue', 'REVENUE', 'CURRENCY', 'USD', 'Revenue from mechanical royalties', TRUE, 2),
('REVENUE_PERFORMANCE', 'Performance Revenue', 'REVENUE', 'CURRENCY', 'USD', 'Revenue from performance royalties', TRUE, 2),
('SOCIAL_FOLLOWERS', 'Social Media Followers', 'SOCIAL', 'INTEGER', 'followers', 'Total followers across platforms', TRUE, 0),
('SOCIAL_ENGAGEMENT', 'Social Engagement Rate', 'SOCIAL', 'PERCENTAGE', '%', 'Average engagement rate on social posts', TRUE, 2),
('RADIO_SPINS', 'Radio Spins', 'RADIO', 'INTEGER', 'spins', 'Number of radio plays', TRUE, 0),
('RADIO_AUDIENCE', 'Radio Audience Reach', 'RADIO', 'INTEGER', 'listeners', 'Estimated radio audience reached', TRUE, 0),
('CHART_POSITION', 'Chart Position', 'CHARTS', 'INTEGER', 'position', 'Highest chart position achieved', TRUE, 0),
('VIRAL_COEFFICIENT', 'Viral Coefficient', 'VIRAL', 'DECIMAL', 'coefficient', 'Measure of viral growth potential', TRUE, 4),
('NFT_MINTS', 'NFT Mints', 'BLOCKCHAIN', 'INTEGER', 'mints', 'Number of NFTs minted', TRUE, 0),
('NFT_FLOOR_PRICE', 'NFT Floor Price', 'BLOCKCHAIN', 'CURRENCY', 'ETH', 'Lowest NFT price on secondary market', TRUE, 6),
('TOUR_REVENUE', 'Tour Revenue', 'LIVE', 'CURRENCY', 'USD', 'Revenue from live performances', TRUE, 2),
('MERCH_REVENUE', 'Merchandise Revenue', 'MERCH', 'CURRENCY', 'USD', 'Revenue from merchandise sales', TRUE, 2),
('FAN_LIFETIME_VALUE', 'Fan Lifetime Value', 'FANS', 'CURRENCY', 'USD', 'Estimated lifetime value per fan', TRUE, 2),
('DISCOVERY_RATE', 'Discovery Rate', 'DISCOVERY', 'PERCENTAGE', '%', 'Rate of new listener discovery', TRUE, 2),
('RETENTION_30D', '30-Day Retention', 'RETENTION', 'PERCENTAGE', '%', 'Listeners who return within 30 days', TRUE, 2),
('AVG_STREAM_DURATION', 'Average Stream Duration', 'ENGAGEMENT', 'DURATION', 'seconds', 'Average listening duration per stream', TRUE, 1),
('PLAYLIST_POSITION', 'Playlist Position', 'DISCOVERY', 'INTEGER', 'position', 'Average position in playlists', TRUE, 1),
('SYNC_PLACEMENTS', 'Sync Placements', 'SYNC', 'INTEGER', 'placements', 'Number of sync license placements', TRUE, 0),
('COLLAB_COUNT', 'Collaboration Count', 'SOCIAL', 'INTEGER', 'collaborations', 'Number of artist collaborations', TRUE, 0),
('TERRITORY_COUNT', 'Territory Count', 'GLOBAL', 'INTEGER', 'territories', 'Number of territories with activity', TRUE, 0);

-- KPI Types
INSERT INTO kpi_type (code, name, category, formula, target_type, frequency, direction) VALUES
('MONTHLY_STREAMS', 'Monthly Streaming Performance', 'STREAMING', '{"metric": "STREAMS_TOTAL", "aggregation": "SUM", "period": "MONTH"}', 'GROWTH_RATE', 'MONTHLY', 'HIGHER_BETTER'),
('REVENUE_PER_STREAM', 'Revenue Per Stream', 'REVENUE', '{"numerator": "REVENUE_STREAMING", "denominator": "STREAMS_TOTAL", "operation": "DIVIDE"}', 'ABSOLUTE', 'MONTHLY', 'HIGHER_BETTER'),
('FAN_ENGAGEMENT_INDEX', 'Fan Engagement Index', 'ENGAGEMENT', '{"metrics": ["SAVE_RATE", "COMPLETION_RATE", "SOCIAL_ENGAGEMENT"], "weights": [0.4, 0.3, 0.3]}', 'PERCENTAGE', 'WEEKLY', 'HIGHER_BETTER'),
('VIRAL_GROWTH_RATE', 'Viral Growth Rate', 'VIRAL', '{"metric": "VIRAL_COEFFICIENT", "baseline": 1.0, "calculation": "percentage_above_baseline"}', 'PERCENTAGE', 'DAILY', 'HIGHER_BETTER'),
('ROYALTY_EFFICIENCY', 'Royalty Collection Efficiency', 'ROYALTIES', '{"collected": "REVENUE_TOTAL", "expected": "REVENUE_PROJECTED", "operation": "efficiency_ratio"}', 'PERCENTAGE', 'QUARTERLY', 'HIGHER_BETTER');

-- Dimension Types
INSERT INTO dimension_type (code, name, category, data_type, hierarchy_level, cardinality) VALUES
('TIME_DAY', 'Day', 'TIME', 'DATE', 1, 'HIGH'),
('TIME_WEEK', 'Week', 'TIME', 'STRING', 2, 'HIGH'),
('TIME_MONTH', 'Month', 'TIME', 'STRING', 3, 'MEDIUM'),
('TIME_QUARTER', 'Quarter', 'TIME', 'STRING', 4, 'LOW'),
('TIME_YEAR', 'Year', 'TIME', 'INTEGER', 5, 'LOW'),
('GEO_COUNTRY', 'Country', 'GEOGRAPHY', 'STRING', 1, 'MEDIUM'),
('GEO_REGION', 'Region', 'GEOGRAPHY', 'STRING', 2, 'LOW'),
('GEO_CONTINENT', 'Continent', 'GEOGRAPHY', 'STRING', 3, 'LOW'),
('PLATFORM_DSP', 'Digital Service Provider', 'PLATFORM', 'STRING', 1, 'LOW'),
('PLATFORM_SOCIAL', 'Social Media Platform', 'PLATFORM', 'STRING', 1, 'LOW'),
('CONTENT_ARTIST', 'Artist', 'CONTENT', 'STRING', 1, 'HIGH'),
('CONTENT_ALBUM', 'Album', 'CONTENT', 'STRING', 2, 'HIGH'),
('CONTENT_TRACK', 'Track', 'CONTENT', 'STRING', 3, 'VERY_HIGH'),
('CONTENT_GENRE', 'Genre', 'CONTENT', 'STRING', 1, 'LOW'),
('CONTENT_MOOD', 'Mood', 'CONTENT', 'STRING', 1, 'LOW'),
('REVENUE_TYPE', 'Revenue Type', 'FINANCIAL', 'STRING', 1, 'LOW'),
('ROYALTY_TYPE', 'Royalty Type', 'FINANCIAL', 'STRING', 1, 'LOW'),
('DEVICE_TYPE', 'Device Type', 'TECHNOLOGY', 'STRING', 1, 'LOW'),
('USER_SEGMENT', 'User Segment', 'AUDIENCE', 'STRING', 1, 'LOW'),
('AGE_GROUP', 'Age Group', 'DEMOGRAPHICS', 'STRING', 1, 'LOW');

-- Aggregation Types
INSERT INTO aggregation_type (code, name, function_name, sql_expression, supports_distinct, supports_window) VALUES
('SUM', 'Sum', 'SUM', 'SUM({{column}})', TRUE, TRUE),
('AVG', 'Average', 'AVG', 'AVG({{column}})', TRUE, TRUE),
('COUNT', 'Count', 'COUNT', 'COUNT({{column}})', TRUE, TRUE),
('COUNT_DISTINCT', 'Count Distinct', 'COUNT_DISTINCT', 'COUNT(DISTINCT {{column}})', FALSE, FALSE),
('MIN', 'Minimum', 'MIN', 'MIN({{column}})', FALSE, TRUE),
('MAX', 'Maximum', 'MAX', 'MAX({{column}})', FALSE, TRUE),
('MEDIAN', 'Median', 'MEDIAN', 'PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY {{column}})', FALSE, FALSE),
('STDDEV', 'Standard Deviation', 'STDDEV', 'STDDEV({{column}})', FALSE, TRUE),
('PERCENTILE_25', '25th Percentile', 'PERCENTILE_25', 'PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY {{column}})', FALSE, FALSE),
('PERCENTILE_75', '75th Percentile', 'PERCENTILE_75', 'PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY {{column}})', FALSE, FALSE);

-- Comparison Types
INSERT INTO comparison_type (code, name, comparison_method, period_offset, period_unit, calculation_formula) VALUES
('PREV_PERIOD', 'Previous Period', 'PERIOD_OVER_PERIOD', -1, 'PERIOD', '((current - previous) / previous) * 100'),
('PREV_YEAR', 'Previous Year', 'YEAR_OVER_YEAR', -1, 'YEAR', '((current - previous_year) / previous_year) * 100'),
('PREV_MONTH', 'Previous Month', 'MONTH_OVER_MONTH', -1, 'MONTH', '((current - previous_month) / previous_month) * 100'),
('PREV_WEEK', 'Previous Week', 'WEEK_OVER_WEEK', -1, 'WEEK', '((current - previous_week) / previous_week) * 100'),
('TARGET', 'vs Target', 'TARGET_COMPARISON', 0, NULL, '((actual - target) / target) * 100'),
('BENCHMARK', 'vs Benchmark', 'BENCHMARK_COMPARISON', 0, NULL, '((actual - benchmark) / benchmark) * 100');

-- Chart Types
INSERT INTO chart_type (code, name, category, library, supported_dimensions, supported_metrics, supports_real_time) VALUES
('LINE', 'Line Chart', 'TREND', 'CHARTJS', 1, 10, TRUE),
('BAR', 'Bar Chart', 'COMPARISON', 'CHARTJS', 2, 5, TRUE),
('PIE', 'Pie Chart', 'COMPOSITION', 'CHARTJS', 1, 1, FALSE),
('SCATTER', 'Scatter Plot', 'CORRELATION', 'CHARTJS', 2, 2, FALSE),
('HEATMAP', 'Heat Map', 'DENSITY', 'D3', 2, 1, FALSE),
('GAUGE', 'Gauge Chart', 'KPI', 'CHARTJS', 0, 1, TRUE),
('WATERFALL', 'Waterfall Chart', 'FLOW', 'HIGHCHARTS', 1, 1, FALSE),
('TREEMAP', 'Treemap', 'HIERARCHY', 'D3', 3, 1, FALSE),
('RADAR', 'Radar Chart', 'MULTIVARIATE', 'CHARTJS', 1, 5, FALSE),
('STREAM_GRAPH', 'Stream Graph', 'FLOW', 'D3', 2, 5, TRUE);

-- Dashboard Types
INSERT INTO dashboard_type (code, name, category, target_role, refresh_interval) VALUES
('EXEC_OVERVIEW', 'Executive Overview', 'EXECUTIVE', 'EXECUTIVE', 3600),
('ARTIST_ANALYTICS', 'Artist Analytics', 'ARTIST', 'ARTIST', 300),
('LABEL_OPERATIONS', 'Label Operations', 'OPERATIONS', 'LABEL_MANAGER', 900),
('ROYALTY_TRACKING', 'Royalty Tracking', 'FINANCIAL', 'ROYALTY_MANAGER', 1800),
('STREAMING_REALTIME', 'Real-Time Streaming', 'STREAMING', 'ALL', 60),
('SOCIAL_MONITOR', 'Social Media Monitor', 'SOCIAL', 'MARKETING', 300),
('REVENUE_ANALYSIS', 'Revenue Analysis', 'FINANCIAL', 'FINANCE', 3600),
('PLAYLIST_PERFORMANCE', 'Playlist Performance', 'DISCOVERY', 'ARTIST', 900),
('GLOBAL_TRENDS', 'Global Trends', 'MARKET', 'ANALYST', 3600),
('AR_INSIGHTS', 'A&R Insights', 'DISCOVERY', 'AR_MANAGER', 1800);

-- Alert Types
INSERT INTO alert_type (code, name, category, severity, trigger_type, evaluation_frequency) VALUES
('STREAM_SPIKE', 'Streaming Spike Detected', 'STREAMING', 'INFO', 'ANOMALY', 5),
('REVENUE_DROP', 'Revenue Drop Alert', 'FINANCIAL', 'WARNING', 'THRESHOLD', 60),
('VIRAL_TREND', 'Viral Trend Detected', 'VIRAL', 'INFO', 'TREND', 15),
('ROYALTY_MISSING', 'Missing Royalty Data', 'ROYALTIES', 'CRITICAL', 'CUSTOM', 1440),
('PLAYLIST_REMOVAL', 'Playlist Removal Alert', 'DISCOVERY', 'WARNING', 'CUSTOM', 60),
('COPYRIGHT_CLAIM', 'Copyright Claim Detected', 'RIGHTS', 'URGENT', 'CUSTOM', 5),
('PERFORMANCE_GOAL', 'Performance Goal Alert', 'KPI', 'INFO', 'THRESHOLD', 1440),
('DATA_QUALITY', 'Data Quality Issue', 'SYSTEM', 'WARNING', 'CUSTOM', 60),
('TERRITORY_EXPANSION', 'New Territory Activity', 'GLOBAL', 'INFO', 'CUSTOM', 1440),
('FAN_CHURN', 'Fan Churn Risk', 'RETENTION', 'WARNING', 'TREND', 1440);

-- Analytics Periods
INSERT INTO analytics_period (code, name, period_type, duration_value, duration_unit, date_format, display_format, sort_order) VALUES
('REALTIME', 'Real-Time', 'INSTANT', 0, NULL, NULL, 'Now', 1),
('HOURLY', 'Hourly', 'ROLLING', 1, 'HOUR', 'YYYY-MM-DD HH:00', 'HH:00', 2),
('DAILY', 'Daily', 'CALENDAR', 1, 'DAY', 'YYYY-MM-DD', 'MMM DD', 3),
('WEEKLY', 'Weekly', 'CALENDAR', 1, 'WEEK', 'YYYY-[W]WW', 'Week WW', 4),
('MONTHLY', 'Monthly', 'CALENDAR', 1, 'MONTH', 'YYYY-MM', 'MMM YYYY', 5),
('QUARTERLY', 'Quarterly', 'CALENDAR', 1, 'QUARTER', 'YYYY-[Q]Q', 'Q YYYY', 6),
('YEARLY', 'Yearly', 'CALENDAR', 1, 'YEAR', 'YYYY', 'YYYY', 7),
('ROLLING_7D', 'Last 7 Days', 'ROLLING', 7, 'DAY', NULL, '7 Days', 8),
('ROLLING_30D', 'Last 30 Days', 'ROLLING', 30, 'DAY', NULL, '30 Days', 9),
('ROLLING_90D', 'Last 90 Days', 'ROLLING', 90, 'DAY', NULL, '90 Days', 10),
('CUSTOM', 'Custom Period', 'CUSTOM', NULL, NULL, NULL, 'Custom', 99);

-- Widget Types
INSERT INTO widget_type (code, name, category, refresh_capability, mobile_compatible) VALUES
('METRIC_CARD', 'Metric Card', 'KPI', TRUE, TRUE),
('TREND_SPARKLINE', 'Trend Sparkline', 'TREND', TRUE, TRUE),
('CHART_CONTAINER', 'Chart Container', 'VISUALIZATION', TRUE, TRUE),
('DATA_TABLE', 'Data Table', 'TABLE', TRUE, TRUE),
('FILTER_BAR', 'Filter Bar', 'CONTROL', FALSE, TRUE),
('MAP_WIDGET', 'Geographic Map', 'GEO', TRUE, TRUE),
('TIMELINE', 'Timeline', 'TIME', TRUE, FALSE),
('LEADERBOARD', 'Leaderboard', 'RANKING', TRUE, TRUE),
('ALERT_FEED', 'Alert Feed', 'NOTIFICATION', TRUE, TRUE),
('COMPARISON_GRID', 'Comparison Grid', 'ANALYSIS', TRUE, FALSE);

-- Export Formats
INSERT INTO export_format (code, name, file_extension, mime_type, format_type) VALUES
('CSV', 'Comma-Separated Values', 'csv', 'text/csv', 'STRUCTURED'),
('XLSX', 'Excel Spreadsheet', 'xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'STRUCTURED'),
('JSON', 'JSON Data', 'json', 'application/json', 'STRUCTURED'),
('PDF', 'PDF Report', 'pdf', 'application/pdf', 'DOCUMENT'),
('PNG', 'PNG Image', 'png', 'image/png', 'IMAGE'),
('API_JSON', 'API JSON Response', 'json', 'application/json', 'API'),
('CWR', 'CWR Format', 'cwr', 'text/plain', 'STRUCTURED'),
('DDEX', 'DDEX XML', 'xml', 'application/xml', 'STRUCTURED');

-- Data Source Types
INSERT INTO data_source_type (code, name, source_category, connection_type, refresh_capability) VALUES
('SPOTIFY_API', 'Spotify Web API', 'DSP', 'API', 'NEAR_REAL_TIME'),
('APPLE_MUSIC_API', 'Apple Music API', 'DSP', 'API', 'NEAR_REAL_TIME'),
('YOUTUBE_API', 'YouTube Data API', 'DSP', 'API', 'NEAR_REAL_TIME'),
('MUSICBRAINZ', 'MusicBrainz Database', 'METADATA', 'API', 'BATCH'),
('ASCAP_API', 'ASCAP API', 'PRO', 'API', 'BATCH'),
('BMI_API', 'BMI API', 'PRO', 'API', 'BATCH'),
('INTERNAL_DB', 'ASTRO Database', 'INTERNAL', 'DATABASE', 'REAL_TIME'),
('BLOCKCHAIN_ETH', 'Ethereum Blockchain', 'BLOCKCHAIN', 'BLOCKCHAIN', 'REAL_TIME'),
('SOCIAL_INSTAGRAM', 'Instagram API', 'SOCIAL', 'API', 'NEAR_REAL_TIME'),
('SOCIAL_TIKTOK', 'TikTok API', 'SOCIAL', 'API', 'NEAR_REAL_TIME');

-- Refresh Frequencies
INSERT INTO refresh_frequency (code, name, frequency_seconds, frequency_display, is_real_time, resource_impact) VALUES
('REALTIME', 'Real-Time', 1, 'Real-Time', TRUE, 'HIGH'),
('5_SEC', 'Every 5 Seconds', 5, '5 seconds', FALSE, 'HIGH'),
('1_MIN', 'Every Minute', 60, '1 minute', FALSE, 'HIGH'),
('5_MIN', 'Every 5 Minutes', 300, '5 minutes', FALSE, 'MEDIUM'),
('15_MIN', 'Every 15 Minutes', 900, '15 minutes', FALSE, 'MEDIUM'),
('30_MIN', 'Every 30 Minutes', 1800, '30 minutes', FALSE, 'MEDIUM'),
('1_HOUR', 'Hourly', 3600, '1 hour', FALSE, 'LOW'),
('6_HOUR', 'Every 6 Hours', 21600, '6 hours', FALSE, 'LOW'),
('DAILY', 'Daily', 86400, '1 day', FALSE, 'LOW'),
('WEEKLY', 'Weekly', 604800, '1 week', FALSE, 'LOW');

-- Set system user for configuration data
UPDATE metric_type SET created_by = 'SYSTEM', updated_by = 'SYSTEM' WHERE created_by IS NULL;
UPDATE kpi_type SET created_by = 'SYSTEM', updated_by = 'SYSTEM' WHERE created_by IS NULL;
UPDATE dimension_type SET created_by = 'SYSTEM', updated_by = 'SYSTEM' WHERE created_by IS NULL;
UPDATE aggregation_type SET created_by = 'SYSTEM', updated_by = 'SYSTEM' WHERE created_by IS NULL;
UPDATE comparison_type SET created_by = 'SYSTEM', updated_by = 'SYSTEM' WHERE created_by IS NULL;
UPDATE chart_type SET created_by = 'SYSTEM', updated_by = 'SYSTEM' WHERE created_by IS NULL;
UPDATE dashboard_type SET created_by = 'SYSTEM', updated_by = 'SYSTEM' WHERE created_by IS NULL;
UPDATE alert_type SET created_by = 'SYSTEM', updated_by = 'SYSTEM' WHERE created_by IS NULL;
UPDATE analytics_period SET created_by = 'SYSTEM', updated_by = 'SYSTEM' WHERE created_by IS NULL;
UPDATE widget_type SET created_by = 'SYSTEM', updated_by = 'SYSTEM' WHERE created_by IS NULL;
UPDATE export_format SET created_by = 'SYSTEM', updated_by = 'SYSTEM' WHERE created_by IS NULL;
UPDATE data_source_type SET created_by = 'SYSTEM', updated_by = 'SYSTEM' WHERE created_by IS NULL;
UPDATE refresh_frequency SET created_by = 'SYSTEM', updated_by = 'SYSTEM' WHERE created_by IS NULL;

-- =====================================================
-- SECTION 20: COMMUNICATION
-- =====================================================

-- notification_type table
CREATE TABLE notification_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    category VARCHAR(100) NOT NULL,
    subcategory VARCHAR(100),
    icon VARCHAR(100),
    color_hex VARCHAR(7),
    default_priority VARCHAR(20) DEFAULT 'MEDIUM',
    requires_action BOOLEAN DEFAULT FALSE,
    auto_dismiss BOOLEAN DEFAULT TRUE,
    dismiss_timeout_seconds INT UNSIGNED DEFAULT 300,
    sound_enabled BOOLEAN DEFAULT TRUE,
    vibration_enabled BOOLEAN DEFAULT TRUE,
    led_color VARCHAR(7),
    group_key VARCHAR(100),
    can_be_bundled BOOLEAN DEFAULT TRUE,
    max_bundle_size INT UNSIGNED DEFAULT 10,
    supports_rich_media BOOLEAN DEFAULT FALSE,
    supports_actions BOOLEAN DEFAULT FALSE,
    tracking_enabled BOOLEAN DEFAULT TRUE,
    retention_days INT UNSIGNED DEFAULT 90,
    is_transactional BOOLEAN DEFAULT TRUE,
    requires_opt_in BOOLEAN DEFAULT FALSE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_notification_type_code (code),
    KEY idx_notification_type_category (category),
    KEY idx_notification_type_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO notification_type (code, name, description, category, subcategory, default_priority, requires_action, is_transactional) VALUES
('ROYALTY_PAYMENT', 'Royalty Payment', 'Notification for royalty payment processed', 'FINANCIAL', 'PAYMENT', 'HIGH', FALSE, TRUE),
('ROYALTY_STATEMENT', 'Royalty Statement Available', 'Monthly/quarterly royalty statement ready', 'FINANCIAL', 'STATEMENT', 'MEDIUM', TRUE, TRUE),
('COPYRIGHT_CLAIM', 'Copyright Claim', 'New copyright claim on your content', 'RIGHTS', 'CLAIM', 'URGENT', TRUE, TRUE),
('COPYRIGHT_MATCH', 'Copyright Match Found', 'Potential copyright match detected', 'RIGHTS', 'DETECTION', 'HIGH', TRUE, TRUE),
('RELEASE_APPROVED', 'Release Approved', 'Your release has been approved', 'RELEASE', 'STATUS', 'MEDIUM', FALSE, TRUE),
('RELEASE_REJECTED', 'Release Rejected', 'Your release needs attention', 'RELEASE', 'STATUS', 'HIGH', TRUE, TRUE),
('RELEASE_LIVE', 'Release Now Live', 'Your release is live on platforms', 'RELEASE', 'MILESTONE', 'HIGH', FALSE, TRUE),
('COLLAB_INVITE', 'Collaboration Invitation', 'New collaboration request', 'COLLABORATION', 'INVITE', 'MEDIUM', TRUE, TRUE),
('COLLAB_ACCEPTED', 'Collaboration Accepted', 'Your collaboration was accepted', 'COLLABORATION', 'STATUS', 'MEDIUM', FALSE, TRUE),
('CONTRACT_SIGNATURE', 'Contract Needs Signature', 'Contract awaiting your signature', 'CONTRACT', 'ACTION', 'HIGH', TRUE, TRUE),
('CONTRACT_SIGNED', 'Contract Fully Signed', 'All parties have signed the contract', 'CONTRACT', 'COMPLETE', 'MEDIUM', FALSE, TRUE),
('SYNC_OPPORTUNITY', 'Sync Licensing Opportunity', 'New sync placement opportunity', 'SYNC', 'OPPORTUNITY', 'HIGH', TRUE, TRUE),
('SYNC_APPROVED', 'Sync License Approved', 'Your sync license was approved', 'SYNC', 'STATUS', 'HIGH', FALSE, TRUE),
('PRO_REGISTRATION', 'PRO Registration Update', 'Performance rights registration update', 'REGISTRATION', 'PRO', 'MEDIUM', FALSE, TRUE),
('DSP_DELIVERY', 'DSP Delivery Status', 'Digital service provider delivery update', 'DISTRIBUTION', 'DSP', 'MEDIUM', FALSE, TRUE),
('METADATA_ERROR', 'Metadata Error', 'Issues found in your metadata', 'DATA', 'ERROR', 'HIGH', TRUE, TRUE),
('METADATA_UPDATE', 'Metadata Updated', 'Metadata successfully updated', 'DATA', 'SUCCESS', 'LOW', FALSE, TRUE),
('ACCOUNT_LOGIN', 'Account Login', 'New login to your account', 'SECURITY', 'ACCESS', 'MEDIUM', FALSE, TRUE),
('PASSWORD_CHANGE', 'Password Changed', 'Your password was changed', 'SECURITY', 'CHANGE', 'HIGH', FALSE, TRUE),
('TWO_FACTOR_CODE', 'Two-Factor Code', 'Your authentication code', 'SECURITY', '2FA', 'URGENT', FALSE, TRUE),
('SUBSCRIPTION_RENEWAL', 'Subscription Renewal', 'Subscription renewal reminder', 'BILLING', 'RENEWAL', 'MEDIUM', TRUE, TRUE),
('PAYMENT_FAILED', 'Payment Failed', 'Payment processing failed', 'BILLING', 'ERROR', 'URGENT', TRUE, TRUE),
('MILESTONE_ACHIEVED', 'Milestone Achieved', 'Congratulations on your achievement', 'ACHIEVEMENT', 'MILESTONE', 'MEDIUM', FALSE, FALSE),
('ANALYTICS_REPORT', 'Analytics Report Ready', 'Your analytics report is ready', 'ANALYTICS', 'REPORT', 'LOW', FALSE, TRUE),
('BLOCKCHAIN_TX', 'Blockchain Transaction', 'Blockchain transaction update', 'BLOCKCHAIN', 'TRANSACTION', 'MEDIUM', FALSE, TRUE),
('NFT_MINTED', 'NFT Minted', 'Your NFT has been minted', 'BLOCKCHAIN', 'NFT', 'HIGH', FALSE, TRUE),
('SMART_CONTRACT_EVENT', 'Smart Contract Event', 'Smart contract event triggered', 'BLOCKCHAIN', 'CONTRACT', 'MEDIUM', FALSE, TRUE),
('SYSTEM_MAINTENANCE', 'System Maintenance', 'Scheduled system maintenance', 'SYSTEM', 'MAINTENANCE', 'LOW', FALSE, TRUE),
('FEATURE_ANNOUNCEMENT', 'New Feature', 'New platform feature available', 'SYSTEM', 'FEATURE', 'LOW', FALSE, FALSE);

-- notification_channel table
CREATE TABLE notification_channel (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    channel_type VARCHAR(50) NOT NULL,
    provider VARCHAR(100),
    is_realtime BOOLEAN DEFAULT FALSE,
    supports_rich_content BOOLEAN DEFAULT FALSE,
    supports_attachments BOOLEAN DEFAULT FALSE,
    max_message_size INT UNSIGNED,
    rate_limit_per_minute INT UNSIGNED,
    rate_limit_per_hour INT UNSIGNED,
    rate_limit_per_day INT UNSIGNED,
    requires_opt_in BOOLEAN DEFAULT TRUE,
    opt_in_verification BOOLEAN DEFAULT FALSE,
    delivery_confirmation BOOLEAN DEFAULT FALSE,
    read_receipts BOOLEAN DEFAULT FALSE,
    cost_per_message DECIMAL(10,4) DEFAULT 0.0000,
    priority_order INT UNSIGNED DEFAULT 1000,
    retry_enabled BOOLEAN DEFAULT TRUE,
    max_retries INT UNSIGNED DEFAULT 3,
    retry_delay_seconds INT UNSIGNED DEFAULT 300,
    batch_capable BOOLEAN DEFAULT FALSE,
    max_batch_size INT UNSIGNED DEFAULT 1000,
    setup_required BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_channel_code (code),
    KEY idx_channel_type (channel_type),
    KEY idx_channel_active_priority (is_active, priority_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO notification_channel (code, name, channel_type, provider, is_realtime, supports_rich_content, requires_opt_in, priority_order) VALUES
('EMAIL', 'Email', 'EMAIL', 'SendGrid', FALSE, TRUE, FALSE, 100),
('SMS', 'SMS Text Message', 'SMS', 'Twilio', TRUE, FALSE, TRUE, 200),
('PUSH_WEB', 'Web Push Notification', 'PUSH', 'Firebase', TRUE, TRUE, TRUE, 300),
('PUSH_MOBILE', 'Mobile Push Notification', 'PUSH', 'Firebase', TRUE, TRUE, TRUE, 300),
('IN_APP', 'In-App Notification', 'IN_APP', 'Internal', TRUE, TRUE, FALSE, 400),
('WEBHOOK', 'Webhook', 'WEBHOOK', 'Internal', TRUE, TRUE, FALSE, 500),
('SLACK', 'Slack', 'CHAT', 'Slack', TRUE, TRUE, TRUE, 600),
('DISCORD', 'Discord', 'CHAT', 'Discord', TRUE, TRUE, TRUE, 700),
('WHATSAPP', 'WhatsApp', 'MESSAGING', 'WhatsApp Business', TRUE, TRUE, TRUE, 800),
('TELEGRAM', 'Telegram', 'MESSAGING', 'Telegram', TRUE, TRUE, TRUE, 900),
('VOICE_CALL', 'Voice Call', 'VOICE', 'Twilio', TRUE, FALSE, TRUE, 1000),
('FAX', 'Fax', 'FAX', 'eFax', FALSE, TRUE, TRUE, 2000);

-- notification_priority table
CREATE TABLE notification_priority (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    numeric_value INT UNSIGNED NOT NULL,
    escalation_enabled BOOLEAN DEFAULT FALSE,
    escalation_delay_minutes INT UNSIGNED,
    override_dnd BOOLEAN DEFAULT FALSE,
    override_quiet_hours BOOLEAN DEFAULT FALSE,
    requires_acknowledgment BOOLEAN DEFAULT FALSE,
    acknowledgment_timeout_minutes INT UNSIGNED,
    auto_escalate_on_timeout BOOLEAN DEFAULT FALSE,
    sound_override VARCHAR(100),
    vibration_pattern VARCHAR(100),
    led_pattern VARCHAR(100),
    badge_color VARCHAR(7),
    icon_modifier VARCHAR(50),
    ttl_override_seconds INT UNSIGNED,
    delivery_guarantee VARCHAR(50),
    channel_fallback_enabled BOOLEAN DEFAULT TRUE,
    max_delivery_attempts INT UNSIGNED DEFAULT 3,
    alert_ops_on_failure BOOLEAN DEFAULT FALSE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_priority_code (code),
    UNIQUE KEY uk_priority_value (numeric_value),
    KEY idx_priority_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO notification_priority (code, name, numeric_value, override_dnd, override_quiet_hours, requires_acknowledgment, display_order) VALUES
('URGENT', 'Urgent', 100, TRUE, TRUE, TRUE, 100),
('HIGH', 'High', 75, TRUE, FALSE, FALSE, 200),
('MEDIUM', 'Medium', 50, FALSE, FALSE, FALSE, 300),
('LOW', 'Low', 25, FALSE, FALSE, FALSE, 400),
('INFO', 'Informational', 10, FALSE, FALSE, FALSE, 500);

-- template_type table
CREATE TABLE template_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    category VARCHAR(100) NOT NULL,
    channel_code VARCHAR(50) NOT NULL,
    format_code VARCHAR(50) NOT NULL,
    layout_type VARCHAR(50),
    supports_personalization BOOLEAN DEFAULT TRUE,
    supports_localization BOOLEAN DEFAULT TRUE,
    supports_branding BOOLEAN DEFAULT TRUE,
    supports_dynamic_content BOOLEAN DEFAULT TRUE,
    supports_attachments BOOLEAN DEFAULT FALSE,
    max_attachments INT UNSIGNED DEFAULT 0,
    supports_actions BOOLEAN DEFAULT FALSE,
    max_actions INT UNSIGNED DEFAULT 0,
    variable_prefix VARCHAR(10) DEFAULT '{{',
    variable_suffix VARCHAR(10) DEFAULT '}}',
    required_variables TEXT,
    optional_variables TEXT,
    preview_available BOOLEAN DEFAULT TRUE,
    test_mode_available BOOLEAN DEFAULT TRUE,
    version_control BOOLEAN DEFAULT TRUE,
    approval_required BOOLEAN DEFAULT FALSE,
    retention_days INT UNSIGNED DEFAULT 365,
    cache_ttl_seconds INT UNSIGNED DEFAULT 3600,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_template_type_code (code),
    KEY idx_template_category (category),
    KEY idx_template_channel (channel_code),
    KEY idx_template_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO template_type (code, name, category, channel_code, format_code, supports_actions, supports_attachments) VALUES
('EMAIL_ROYALTY_STATEMENT', 'Royalty Statement Email', 'FINANCIAL', 'EMAIL', 'HTML', TRUE, TRUE),
('EMAIL_PAYMENT_CONFIRM', 'Payment Confirmation Email', 'FINANCIAL', 'EMAIL', 'HTML', TRUE, TRUE),
('EMAIL_COPYRIGHT_CLAIM', 'Copyright Claim Email', 'RIGHTS', 'EMAIL', 'HTML', TRUE, TRUE),
('EMAIL_RELEASE_UPDATE', 'Release Update Email', 'RELEASE', 'EMAIL', 'HTML', TRUE, FALSE),
('EMAIL_COLLAB_INVITE', 'Collaboration Invite Email', 'COLLABORATION', 'EMAIL', 'HTML', TRUE, FALSE),
('EMAIL_CONTRACT_SIGN', 'Contract Signature Email', 'CONTRACT', 'EMAIL', 'HTML', TRUE, TRUE),
('EMAIL_WELCOME', 'Welcome Email', 'ONBOARDING', 'EMAIL', 'HTML', TRUE, FALSE),
('EMAIL_PASSWORD_RESET', 'Password Reset Email', 'SECURITY', 'EMAIL', 'HTML', TRUE, FALSE),
('SMS_ROYALTY_PAYMENT', 'Royalty Payment SMS', 'FINANCIAL', 'SMS', 'PLAIN', FALSE, FALSE),
('SMS_TWO_FACTOR', 'Two-Factor Auth SMS', 'SECURITY', 'SMS', 'PLAIN', FALSE, FALSE),
('SMS_RELEASE_LIVE', 'Release Live SMS', 'RELEASE', 'SMS', 'PLAIN', FALSE, FALSE),
('PUSH_COPYRIGHT_MATCH', 'Copyright Match Push', 'RIGHTS', 'PUSH_MOBILE', 'JSON', TRUE, FALSE),
('PUSH_SYNC_OPPORTUNITY', 'Sync Opportunity Push', 'SYNC', 'PUSH_MOBILE', 'JSON', TRUE, FALSE),
('SLACK_TEAM_UPDATE', 'Team Update Slack', 'TEAM', 'SLACK', 'MARKDOWN', TRUE, TRUE),
('WEBHOOK_ROYALTY_CALC', 'Royalty Calculation Webhook', 'FINANCIAL', 'WEBHOOK', 'JSON', FALSE, FALSE);

-- message_format table
CREATE TABLE message_format (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    mime_type VARCHAR(100) NOT NULL,
    file_extension VARCHAR(10),
    supports_styling BOOLEAN DEFAULT FALSE,
    supports_images BOOLEAN DEFAULT FALSE,
    supports_links BOOLEAN DEFAULT FALSE,
    supports_tables BOOLEAN DEFAULT FALSE,
    supports_lists BOOLEAN DEFAULT FALSE,
    supports_variables BOOLEAN DEFAULT TRUE,
    supports_conditionals BOOLEAN DEFAULT FALSE,
    supports_loops BOOLEAN DEFAULT FALSE,
    supports_includes BOOLEAN DEFAULT FALSE,
    max_size_bytes INT UNSIGNED,
    encoding VARCHAR(50) DEFAULT 'UTF-8',
    compression_supported BOOLEAN DEFAULT FALSE,
    validation_schema TEXT,
    parser_engine VARCHAR(50),
    renderer_engine VARCHAR(50),
    preview_engine VARCHAR(50),
    is_binary BOOLEAN DEFAULT FALSE,
    is_structured BOOLEAN DEFAULT FALSE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_format_code (code),
    KEY idx_format_mime (mime_type),
    KEY idx_format_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO message_format (code, name, mime_type, file_extension, supports_styling, supports_images, supports_tables) VALUES
('PLAIN', 'Plain Text', 'text/plain', 'txt', FALSE, FALSE, FALSE),
('HTML', 'HTML', 'text/html', 'html', TRUE, TRUE, TRUE),
('MARKDOWN', 'Markdown', 'text/markdown', 'md', TRUE, TRUE, TRUE),
('JSON', 'JSON', 'application/json', 'json', FALSE, FALSE, FALSE),
('XML', 'XML', 'application/xml', 'xml', FALSE, FALSE, FALSE),
('PDF', 'PDF Document', 'application/pdf', 'pdf', TRUE, TRUE, TRUE),
('RTF', 'Rich Text Format', 'application/rtf', 'rtf', TRUE, TRUE, TRUE),
('AMP', 'AMP Email', 'text/x-amp-html', 'amp', TRUE, TRUE, TRUE),
('MJML', 'MJML', 'text/mjml', 'mjml', TRUE, TRUE, TRUE);

-- delivery_protocol table
CREATE TABLE delivery_protocol (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    protocol_type VARCHAR(50) NOT NULL,
    port INT UNSIGNED,
    secure_port INT UNSIGNED,
    encryption VARCHAR(50),
    authentication_type VARCHAR(50),
    connection_timeout_ms INT UNSIGNED DEFAULT 5000,
    read_timeout_ms INT UNSIGNED DEFAULT 30000,
    write_timeout_ms INT UNSIGNED DEFAULT 30000,
    max_connections INT UNSIGNED DEFAULT 100,
    connection_pooling BOOLEAN DEFAULT TRUE,
    keep_alive BOOLEAN DEFAULT TRUE,
    compression_enabled BOOLEAN DEFAULT TRUE,
    retry_mechanism VARCHAR(50),
    circuit_breaker_enabled BOOLEAN DEFAULT TRUE,
    health_check_endpoint VARCHAR(255),
    health_check_interval_seconds INT UNSIGNED DEFAULT 60,
    supports_batch BOOLEAN DEFAULT FALSE,
    supports_streaming BOOLEAN DEFAULT FALSE,
    rate_limiting_enabled BOOLEAN DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_protocol_code (code),
    KEY idx_protocol_type (protocol_type),
    KEY idx_protocol_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO delivery_protocol (code, name, protocol_type, port, secure_port, encryption, authentication_type) VALUES
('SMTP', 'SMTP Email', 'EMAIL', 25, 587, 'TLS', 'PLAIN'),
('SMTPS', 'Secure SMTP', 'EMAIL', NULL, 465, 'SSL', 'PLAIN'),
('HTTP', 'HTTP', 'WEB', 80, NULL, 'NONE', 'VARIOUS'),
('HTTPS', 'HTTPS', 'WEB', NULL, 443, 'TLS', 'VARIOUS'),
('WEBSOCKET', 'WebSocket', 'REALTIME', 80, 443, 'TLS', 'TOKEN'),
('GRPC', 'gRPC', 'RPC', 50051, 50051, 'TLS', 'TOKEN'),
('MQTT', 'MQTT', 'IOT', 1883, 8883, 'TLS', 'USERNAME'),
('AMQP', 'AMQP', 'QUEUE', 5672, 5671, 'TLS', 'USERNAME');

-- communication_category table
CREATE TABLE communication_category (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    parent_category_code VARCHAR(50),
    icon VARCHAR(100),
    color_hex VARCHAR(7),
    requires_opt_in BOOLEAN DEFAULT FALSE,
    opt_in_default BOOLEAN DEFAULT TRUE,
    is_transactional BOOLEAN DEFAULT TRUE,
    is_marketing BOOLEAN DEFAULT FALSE,
    is_system BOOLEAN DEFAULT FALSE,
    gdpr_lawful_basis VARCHAR(50),
    data_retention_days INT UNSIGNED DEFAULT 365,
    allows_unsubscribe BOOLEAN DEFAULT TRUE,
    priority_override VARCHAR(50),
    quiet_hours_apply BOOLEAN DEFAULT TRUE,
    frequency_capping BOOLEAN DEFAULT TRUE,
    max_per_day INT UNSIGNED,
    max_per_week INT UNSIGNED,
    max_per_month INT UNSIGNED,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_comm_category_code (code),
    KEY idx_comm_category_parent (parent_category_code),
    KEY idx_comm_category_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO communication_category (code, name, is_transactional, is_marketing, is_system, gdpr_lawful_basis) VALUES
('FINANCIAL', 'Financial Communications', TRUE, FALSE, FALSE, 'CONTRACT'),
('RIGHTS', 'Rights Management', TRUE, FALSE, FALSE, 'CONTRACT'),
('RELEASE', 'Release Management', TRUE, FALSE, FALSE, 'CONTRACT'),
('COLLABORATION', 'Collaboration', TRUE, FALSE, FALSE, 'CONTRACT'),
('CONTRACT', 'Contracts & Agreements', TRUE, FALSE, FALSE, 'CONTRACT'),
('SYNC', 'Sync Licensing', TRUE, FALSE, FALSE, 'CONTRACT'),
('REGISTRATION', 'Registrations', TRUE, FALSE, FALSE, 'CONTRACT'),
('DISTRIBUTION', 'Distribution', TRUE, FALSE, FALSE, 'CONTRACT'),
('SECURITY', 'Security & Authentication', TRUE, FALSE, TRUE, 'LEGAL_OBLIGATION'),
('BILLING', 'Billing & Subscriptions', TRUE, FALSE, FALSE, 'CONTRACT'),
('ANALYTICS', 'Analytics & Reports', FALSE, FALSE, FALSE, 'LEGITIMATE_INTEREST'),
('MARKETING', 'Marketing & Promotions', FALSE, TRUE, FALSE, 'CONSENT'),
('SYSTEM', 'System Notifications', TRUE, FALSE, TRUE, 'LEGITIMATE_INTEREST'),
('ACHIEVEMENT', 'Achievements & Milestones', FALSE, FALSE, FALSE, 'LEGITIMATE_INTEREST'),
('BLOCKCHAIN', 'Blockchain & NFT', TRUE, FALSE, FALSE, 'CONTRACT');

-- sender_type table
CREATE TABLE sender_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    entity_type VARCHAR(50) NOT NULL,
    display_name_template VARCHAR(255),
    email_domain VARCHAR(100),
    reply_to_enabled BOOLEAN DEFAULT TRUE,
    from_name_override VARCHAR(100),
    from_email_override VARCHAR(100),
    signature_template TEXT,
    avatar_url_template VARCHAR(255),
    verification_required BOOLEAN DEFAULT TRUE,
    spf_configured BOOLEAN DEFAULT FALSE,
    dkim_configured BOOLEAN DEFAULT FALSE,
    dmarc_configured BOOLEAN DEFAULT FALSE,
    reputation_score DECIMAL(5,2) DEFAULT 100.00,
    max_sends_per_hour INT UNSIGNED,
    max_sends_per_day INT UNSIGNED,
    is_system BOOLEAN DEFAULT FALSE,
    is_automated BOOLEAN DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_sender_type_code (code),
    KEY idx_sender_entity_type (entity_type),
    KEY idx_sender_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO sender_type (code, name, entity_type, from_name_override, is_system, is_automated) VALUES
('SYSTEM', 'System', 'PLATFORM', 'ASTRO Platform', TRUE, TRUE),
('SUPPORT', 'Support Team', 'TEAM', 'ASTRO Support', FALSE, FALSE),
('FINANCE', 'Finance Team', 'TEAM', 'ASTRO Finance', FALSE, TRUE),
('RIGHTS', 'Rights Team', 'TEAM', 'ASTRO Rights', FALSE, TRUE),
('ARTIST', 'Artist', 'USER', NULL, FALSE, FALSE),
('LABEL', 'Record Label', 'ORGANIZATION', NULL, FALSE, FALSE),
('PUBLISHER', 'Publisher', 'ORGANIZATION', NULL, FALSE, FALSE),
('MANAGER', 'Manager', 'USER', NULL, FALSE, FALSE),
('PRO', 'PRO', 'ORGANIZATION', NULL, FALSE, TRUE),
('DSP', 'DSP', 'ORGANIZATION', NULL, FALSE, TRUE),
('API', 'API Integration', 'SYSTEM', 'ASTRO API', TRUE, TRUE);

-- recipient_type table
CREATE TABLE recipient_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    entity_type VARCHAR(50) NOT NULL,
    allows_direct_messaging BOOLEAN DEFAULT TRUE,
    allows_bulk_messaging BOOLEAN DEFAULT TRUE,
    allows_marketing BOOLEAN DEFAULT TRUE,
    allows_transactional BOOLEAN DEFAULT TRUE,
    requires_verification BOOLEAN DEFAULT TRUE,
    max_addresses INT UNSIGNED DEFAULT 1,
    grouping_supported BOOLEAN DEFAULT TRUE,
    segmentation_supported BOOLEAN DEFAULT TRUE,
    personalization_level VARCHAR(50) DEFAULT 'FULL',
    privacy_level VARCHAR(50) DEFAULT 'STANDARD',
    data_retention_override_days INT UNSIGNED,
    special_handling VARCHAR(100),
    compliance_requirements TEXT,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_recipient_type_code (code),
    KEY idx_recipient_entity_type (entity_type),
    KEY idx_recipient_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO recipient_type (code, name, entity_type, allows_marketing, requires_verification) VALUES
('ARTIST', 'Artist', 'USER', TRUE, TRUE),
('SONGWRITER', 'Songwriter', 'USER', TRUE, TRUE),
('PRODUCER', 'Producer', 'USER', TRUE, TRUE),
('LABEL_CONTACT', 'Label Contact', 'USER', TRUE, TRUE),
('PUBLISHER_CONTACT', 'Publisher Contact', 'USER', TRUE, TRUE),
('MANAGER', 'Manager', 'USER', TRUE, TRUE),
('COLLABORATOR', 'Collaborator', 'USER', TRUE, TRUE),
('ADMIN', 'Administrator', 'USER', FALSE, TRUE),
('GROUP_ARTISTS', 'Artist Group', 'GROUP', TRUE, FALSE),
('GROUP_LABELS', 'Label Group', 'GROUP', TRUE, FALSE),
('GROUP_PUBLISHERS', 'Publisher Group', 'GROUP', TRUE, FALSE),
('ALL_USERS', 'All Users', 'BROADCAST', FALSE, FALSE),
('ROLE_BASED', 'Role-Based Group', 'DYNAMIC', TRUE, FALSE);

-- delivery_status table
CREATE TABLE delivery_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    status_category VARCHAR(50) NOT NULL,
    is_final BOOLEAN DEFAULT FALSE,
    is_success BOOLEAN DEFAULT FALSE,
    is_failure BOOLEAN DEFAULT FALSE,
    is_retryable BOOLEAN DEFAULT FALSE,
    retry_after_seconds INT UNSIGNED,
    next_status_codes TEXT,
    triggers_callback BOOLEAN DEFAULT FALSE,
    callback_event VARCHAR(100),
    updates_metrics BOOLEAN DEFAULT TRUE,
    metric_impact VARCHAR(50),
    user_visible BOOLEAN DEFAULT TRUE,
    user_message TEXT,
    technical_details TEXT,
    icon VARCHAR(100),
    color_hex VARCHAR(7),
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_delivery_status_code (code),
    KEY idx_delivery_status_category (status_category),
    KEY idx_delivery_status_final (is_final),
    KEY idx_delivery_status_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO delivery_status (code, name, status_category, is_final, is_success, is_failure, is_retryable) VALUES
('PENDING', 'Pending', 'PROCESSING', FALSE, FALSE, FALSE, FALSE),
('QUEUED', 'Queued', 'PROCESSING', FALSE, FALSE, FALSE, FALSE),
('SENDING', 'Sending', 'PROCESSING', FALSE, FALSE, FALSE, FALSE),
('SENT', 'Sent', 'SENT', FALSE, FALSE, FALSE, FALSE),
('DELIVERED', 'Delivered', 'SUCCESS', TRUE, TRUE, FALSE, FALSE),
('OPENED', 'Opened', 'SUCCESS', TRUE, TRUE, FALSE, FALSE),
('CLICKED', 'Clicked', 'SUCCESS', TRUE, TRUE, FALSE, FALSE),
('BOUNCED', 'Bounced', 'FAILURE', TRUE, FALSE, TRUE, FALSE),
('SOFT_BOUNCED', 'Soft Bounced', 'TEMPORARY', FALSE, FALSE, FALSE, TRUE),
('REJECTED', 'Rejected', 'FAILURE', TRUE, FALSE, TRUE, FALSE),
('FAILED', 'Failed', 'FAILURE', TRUE, FALSE, TRUE, FALSE),
('DEFERRED', 'Deferred', 'TEMPORARY', FALSE, FALSE, FALSE, TRUE),
('UNSUBSCRIBED', 'Unsubscribed', 'FAILURE', TRUE, FALSE, TRUE, FALSE),
('SPAM', 'Marked as Spam', 'FAILURE', TRUE, FALSE, TRUE, FALSE),
('EXPIRED', 'Expired', 'FAILURE', TRUE, FALSE, TRUE, FALSE);

-- engagement_type table
CREATE TABLE engagement_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    channel_code VARCHAR(50) NOT NULL,
    action_category VARCHAR(50) NOT NULL,
    is_positive BOOLEAN DEFAULT TRUE,
    engagement_weight DECIMAL(5,2) DEFAULT 1.00,
    triggers_workflow BOOLEAN DEFAULT FALSE,
    workflow_code VARCHAR(50),
    tracks_duration BOOLEAN DEFAULT FALSE,
    tracks_location BOOLEAN DEFAULT FALSE,
    tracks_device BOOLEAN DEFAULT TRUE,
    tracks_client BOOLEAN DEFAULT TRUE,
    attribution_window_hours INT UNSIGNED DEFAULT 168,
    deduplication_window_minutes INT UNSIGNED DEFAULT 60,
    updates_profile BOOLEAN DEFAULT TRUE,
    profile_attribute VARCHAR(100),
    scoring_impact DECIMAL(5,2) DEFAULT 0.00,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_engagement_type_code (code),
    KEY idx_engagement_channel (channel_code),
    KEY idx_engagement_category (action_category),
    KEY idx_engagement_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO engagement_type (code, name, channel_code, action_category, is_positive, engagement_weight) VALUES
('EMAIL_OPEN', 'Email Opened', 'EMAIL', 'OPEN', TRUE, 1.00),
('EMAIL_CLICK', 'Email Link Clicked', 'EMAIL', 'CLICK', TRUE, 3.00),
('EMAIL_REPLY', 'Email Reply', 'EMAIL', 'REPLY', TRUE, 5.00),
('EMAIL_FORWARD', 'Email Forward', 'EMAIL', 'SHARE', TRUE, 4.00),
('EMAIL_UNSUBSCRIBE', 'Email Unsubscribe', 'EMAIL', 'OPT_OUT', FALSE, -10.00),
('EMAIL_SPAM', 'Email Marked Spam', 'EMAIL', 'COMPLAINT', FALSE, -20.00),
('SMS_CLICK', 'SMS Link Clicked', 'SMS', 'CLICK', TRUE, 3.00),
('SMS_REPLY', 'SMS Reply', 'SMS', 'REPLY', TRUE, 5.00),
('SMS_STOP', 'SMS Stop', 'SMS', 'OPT_OUT', FALSE, -10.00),
('PUSH_CLICK', 'Push Notification Clicked', 'PUSH_MOBILE', 'CLICK', TRUE, 2.00),
('PUSH_DISMISS', 'Push Notification Dismissed', 'PUSH_MOBILE', 'DISMISS', FALSE, -1.00),
('IN_APP_VIEW', 'In-App Message Viewed', 'IN_APP', 'VIEW', TRUE, 1.00),
('IN_APP_CLICK', 'In-App Message Clicked', 'IN_APP', 'CLICK', TRUE, 2.00);

-- bounce_type table
CREATE TABLE bounce_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    bounce_category VARCHAR(50) NOT NULL,
    is_permanent BOOLEAN DEFAULT FALSE,
    smtp_code VARCHAR(10),
    enhanced_code VARCHAR(20),
    reason_pattern TEXT,
    retry_eligible BOOLEAN DEFAULT TRUE,
    retry_delay_hours INT UNSIGNED DEFAULT 4,
    max_retry_attempts INT UNSIGNED DEFAULT 3,
    suppression_duration_days INT UNSIGNED,
    requires_list_cleaning BOOLEAN DEFAULT FALSE,
    requires_verification BOOLEAN DEFAULT FALSE,
    reputation_impact DECIMAL(5,2) DEFAULT -1.00,
    common_causes TEXT,
    recommended_action TEXT,
    auto_reactivation BOOLEAN DEFAULT FALSE,
    reactivation_days INT UNSIGNED,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_bounce_type_code (code),
    KEY idx_bounce_category (bounce_category),
    KEY idx_bounce_permanent (is_permanent),
    KEY idx_bounce_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO bounce_type (code, name, bounce_category, is_permanent, smtp_code, retry_eligible, suppression_duration_days) VALUES
('HARD_INVALID', 'Invalid Email Address', 'HARD', TRUE, '550', FALSE, NULL),
('HARD_NOT_EXIST', 'User Does Not Exist', 'HARD', TRUE, '550', FALSE, NULL),
('HARD_DOMAIN', 'Domain Does Not Exist', 'HARD', TRUE, '550', FALSE, NULL),
('SOFT_MAILBOX_FULL', 'Mailbox Full', 'SOFT', FALSE, '452', TRUE, 7),
('SOFT_MESSAGE_SIZE', 'Message Too Large', 'SOFT', FALSE, '552', TRUE, 1),
('SOFT_SERVER_TEMP', 'Server Temporarily Unavailable', 'SOFT', FALSE, '421', TRUE, 1),
('SOFT_CONTENT', 'Content Rejected', 'SOFT', FALSE, '550', TRUE, 3),
('BLOCK_SPAM', 'Blocked as Spam', 'BLOCK', FALSE, '554', TRUE, 30),
('BLOCK_REPUTATION', 'Sender Reputation', 'BLOCK', FALSE, '554', TRUE, 30),
('BLOCK_BLACKLIST', 'Blacklisted', 'BLOCK', TRUE, '554', FALSE, 90),
('TECHNICAL_DNS', 'DNS Failure', 'TECHNICAL', FALSE, NULL, TRUE, 1),
('TECHNICAL_NETWORK', 'Network Error', 'TECHNICAL', FALSE, NULL, TRUE, 1);

-- opt_in_type table
CREATE TABLE opt_in_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category_code VARCHAR(50) NOT NULL,
    channel_code VARCHAR(50),
    consent_level VARCHAR(50) NOT NULL,
    verification_required BOOLEAN DEFAULT FALSE,
    verification_method VARCHAR(50),
    double_opt_in BOOLEAN DEFAULT FALSE,
    explicit_consent BOOLEAN DEFAULT TRUE,
    granular_control BOOLEAN DEFAULT TRUE,
    default_state BOOLEAN DEFAULT FALSE,
    lawful_basis VARCHAR(50),
    retention_proof_years INT UNSIGNED DEFAULT 7,
    audit_trail_required BOOLEAN DEFAULT TRUE,
    ip_tracking BOOLEAN DEFAULT TRUE,
    timestamp_tracking BOOLEAN DEFAULT TRUE,
    source_tracking BOOLEAN DEFAULT TRUE,
    revocable BOOLEAN DEFAULT TRUE,
    cascade_to_children BOOLEAN DEFAULT FALSE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_opt_in_type_code (code),
    KEY idx_opt_in_category (category_code),
    KEY idx_opt_in_channel (channel_code),
    KEY idx_opt_in_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO opt_in_type (code, name, category_code, channel_code, consent_level, verification_required, default_state) VALUES
('TRANSACTIONAL_EMAIL', 'Transactional Emails', 'FINANCIAL', 'EMAIL', 'IMPLIED', FALSE, TRUE),
('MARKETING_EMAIL', 'Marketing Emails', 'MARKETING', 'EMAIL', 'EXPLICIT', TRUE, FALSE),
('SMS_ALERTS', 'SMS Alerts', 'FINANCIAL', 'SMS', 'EXPLICIT', TRUE, FALSE),
('SMS_MARKETING', 'SMS Marketing', 'MARKETING', 'SMS', 'EXPLICIT', TRUE, FALSE),
('PUSH_NOTIFICATIONS', 'Push Notifications', 'SYSTEM', 'PUSH_MOBILE', 'EXPLICIT', FALSE, FALSE),
('NEWSLETTER', 'Newsletter', 'MARKETING', 'EMAIL', 'EXPLICIT', TRUE, FALSE),
('PRODUCT_UPDATES', 'Product Updates', 'SYSTEM', 'EMAIL', 'IMPLIED', FALSE, TRUE),
('SECURITY_ALERTS', 'Security Alerts', 'SECURITY', 'EMAIL', 'IMPLIED', FALSE, TRUE),
('ROYALTY_NOTIFICATIONS', 'Royalty Notifications', 'FINANCIAL', NULL, 'IMPLIED', FALSE, TRUE),
('COLLABORATION_INVITES', 'Collaboration Invites', 'COLLABORATION', NULL, 'IMPLIED', FALSE, TRUE),
('ANALYTICS_REPORTS', 'Analytics Reports', 'ANALYTICS', 'EMAIL', 'EXPLICIT', FALSE, TRUE),
('PARTNER_COMMUNICATIONS', 'Partner Communications', 'MARKETING', NULL, 'EXPLICIT', TRUE, FALSE);

-- frequency_cap table
CREATE TABLE frequency_cap (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    cap_type VARCHAR(50) NOT NULL,
    scope VARCHAR(50) NOT NULL,
    category_code VARCHAR(50),
    channel_code VARCHAR(50),
    time_window VARCHAR(50) NOT NULL,
    max_messages INT UNSIGNED NOT NULL,
    rolling_window BOOLEAN DEFAULT TRUE,
    include_transactional BOOLEAN DEFAULT FALSE,
    reset_time_utc TIME,
    timezone_aware BOOLEAN DEFAULT TRUE,
    user_override_allowed BOOLEAN DEFAULT TRUE,
    min_interval_minutes INT UNSIGNED,
    burst_allowed BOOLEAN DEFAULT FALSE,
    burst_limit INT UNSIGNED,
    burst_window_minutes INT UNSIGNED,
    enforcement_level VARCHAR(50) DEFAULT 'STRICT',
    warning_threshold_percent INT UNSIGNED DEFAULT 80,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_frequency_cap_code (code),
    KEY idx_freq_cap_type_scope (cap_type, scope),
    KEY idx_freq_cap_category (category_code),
    KEY idx_freq_cap_channel (channel_code),
    KEY idx_freq_cap_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO frequency_cap (code, name, cap_type, scope, time_window, max_messages, include_transactional) VALUES
('GLOBAL_DAILY', 'Global Daily Cap', 'GLOBAL', 'USER', 'DAY', 50, FALSE),
('GLOBAL_WEEKLY', 'Global Weekly Cap', 'GLOBAL', 'USER', 'WEEK', 200, FALSE),
('MARKETING_DAILY', 'Marketing Daily Cap', 'CATEGORY', 'USER', 'DAY', 5, FALSE),
('MARKETING_WEEKLY', 'Marketing Weekly Cap', 'CATEGORY', 'USER', 'WEEK', 15, FALSE),
('EMAIL_HOURLY', 'Email Hourly Cap', 'CHANNEL', 'USER', 'HOUR', 10, TRUE),
('SMS_DAILY', 'SMS Daily Cap', 'CHANNEL', 'USER', 'DAY', 5, TRUE),
('PUSH_HOURLY', 'Push Hourly Cap', 'CHANNEL', 'USER', 'HOUR', 3, FALSE),
('FINANCIAL_DAILY', 'Financial Daily Cap', 'CATEGORY', 'USER', 'DAY', 20, TRUE),
('BURST_PROTECTION', 'Burst Protection', 'GLOBAL', 'USER', 'MINUTE', 5, TRUE);

-- Additional tables for comprehensive communication system

-- localization_type table
CREATE TABLE localization_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    language_code VARCHAR(10) NOT NULL,
    country_code VARCHAR(2),
    region_code VARCHAR(50),
    locale_code VARCHAR(20) NOT NULL,
    native_name VARCHAR(100),
    writing_direction VARCHAR(10) DEFAULT 'LTR',
    decimal_separator VARCHAR(5) DEFAULT '.',
    thousands_separator VARCHAR(5) DEFAULT ',',
    currency_code VARCHAR(3),
    currency_symbol VARCHAR(10),
    date_format VARCHAR(50) DEFAULT 'YYYY-MM-DD',
    time_format VARCHAR(50) DEFAULT 'HH:mm:ss',
    timezone VARCHAR(50),
    week_start_day VARCHAR(10) DEFAULT 'MONDAY',
    measurement_system VARCHAR(20) DEFAULT 'METRIC',
    phone_format VARCHAR(50),
    address_format TEXT,
    is_primary BOOLEAN DEFAULT FALSE,
    fallback_locale_code VARCHAR(20),
    translation_complete BOOLEAN DEFAULT FALSE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_localization_code (code),
    UNIQUE KEY uk_locale_code (locale_code),
    KEY idx_localization_language (language_code),
    KEY idx_localization_country (country_code),
    KEY idx_localization_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO localization_type (code, name, language_code, country_code, locale_code, native_name, currency_code, is_primary) VALUES
('EN_US', 'English (United States)', 'en', 'US', 'en-US', 'English', 'USD', TRUE),
('EN_GB', 'English (United Kingdom)', 'en', 'GB', 'en-GB', 'English', 'GBP', FALSE),
('ES_ES', 'Spanish (Spain)', 'es', 'ES', 'es-ES', 'Español', 'EUR', FALSE),
('ES_MX', 'Spanish (Mexico)', 'es', 'MX', 'es-MX', 'Español', 'MXN', FALSE),
('FR_FR', 'French (France)', 'fr', 'FR', 'fr-FR', 'Français', 'EUR', FALSE),
('DE_DE', 'German (Germany)', 'de', 'DE', 'de-DE', 'Deutsch', 'EUR', FALSE),
('JA_JP', 'Japanese (Japan)', 'ja', 'JP', 'ja-JP', '日本語', 'JPY', FALSE),
('KO_KR', 'Korean (South Korea)', 'ko', 'KR', 'ko-KR', '한국어', 'KRW', FALSE),
('ZH_CN', 'Chinese (Simplified)', 'zh', 'CN', 'zh-CN', '简体中文', 'CNY', FALSE),
('PT_BR', 'Portuguese (Brazil)', 'pt', 'BR', 'pt-BR', 'Português', 'BRL', FALSE),
('RU_RU', 'Russian (Russia)', 'ru', 'RU', 'ru-RU', 'Русский', 'RUB', FALSE),
('AR_SA', 'Arabic (Saudi Arabia)', 'ar', 'SA', 'ar-SA', 'العربية', 'SAR', FALSE),
('HI_IN', 'Hindi (India)', 'hi', 'IN', 'hi-IN', 'हिन्दी', 'INR', FALSE);

-- attachment_type table
CREATE TABLE attachment_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    mime_type VARCHAR(100) NOT NULL,
    file_extensions TEXT,
    category VARCHAR(50) NOT NULL,
    max_size_mb DECIMAL(10,2) DEFAULT 10.00,
    allowed_channels TEXT,
    virus_scan_required BOOLEAN DEFAULT TRUE,
    content_validation BOOLEAN DEFAULT TRUE,
    compression_allowed BOOLEAN DEFAULT TRUE,
    preview_available BOOLEAN DEFAULT FALSE,
    thumbnail_generation BOOLEAN DEFAULT FALSE,
    metadata_extraction BOOLEAN DEFAULT TRUE,
    retention_days INT UNSIGNED DEFAULT 90,
    inline_display BOOLEAN DEFAULT FALSE,
    requires_encryption BOOLEAN DEFAULT FALSE,
    watermark_supported BOOLEAN DEFAULT FALSE,
    digital_signature BOOLEAN DEFAULT FALSE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_attachment_type_code (code),
    KEY idx_attachment_mime (mime_type),
    KEY idx_attachment_category (category),
    KEY idx_attachment_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO attachment_type (code, name, mime_type, file_extensions, category, max_size_mb, virus_scan_required) VALUES
('PDF_DOCUMENT', 'PDF Document', 'application/pdf', 'pdf', 'DOCUMENT', 25.00, TRUE),
('WORD_DOCUMENT', 'Word Document', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'docx,doc', 'DOCUMENT', 25.00, TRUE),
('EXCEL_SPREADSHEET', 'Excel Spreadsheet', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'xlsx,xls', 'SPREADSHEET', 50.00, TRUE),
('CSV_FILE', 'CSV File', 'text/csv', 'csv', 'DATA', 100.00, TRUE),
('IMAGE_JPEG', 'JPEG Image', 'image/jpeg', 'jpg,jpeg', 'IMAGE', 10.00, TRUE),
('IMAGE_PNG', 'PNG Image', 'image/png', 'png', 'IMAGE', 10.00, TRUE),
('AUDIO_MP3', 'MP3 Audio', 'audio/mpeg', 'mp3', 'AUDIO', 50.00, TRUE),
('AUDIO_WAV', 'WAV Audio', 'audio/wav', 'wav', 'AUDIO', 100.00, TRUE),
('CONTRACT_PDF', 'Contract PDF', 'application/pdf', 'pdf', 'LEGAL', 50.00, TRUE),
('STATEMENT_PDF', 'Statement PDF', 'application/pdf', 'pdf', 'FINANCIAL', 25.00, TRUE);

-- webhook_type table
CREATE TABLE webhook_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    event_category VARCHAR(50) NOT NULL,
    http_method VARCHAR(10) DEFAULT 'POST',
    content_type VARCHAR(50) DEFAULT 'application/json',
    authentication_type VARCHAR(50),
    retry_policy VARCHAR(50) DEFAULT 'EXPONENTIAL',
    max_retries INT UNSIGNED DEFAULT 3,
    timeout_seconds INT UNSIGNED DEFAULT 30,
    success_codes VARCHAR(100) DEFAULT '200,201,202,204',
    signature_header VARCHAR(100),
    signature_algorithm VARCHAR(50),
    include_metadata BOOLEAN DEFAULT TRUE,
    batch_supported BOOLEAN DEFAULT FALSE,
    max_batch_size INT UNSIGNED DEFAULT 100,
    compression_supported BOOLEAN DEFAULT TRUE,
    rate_limit_per_minute INT UNSIGNED,
    circuit_breaker_enabled BOOLEAN DEFAULT TRUE,
    health_check_required BOOLEAN DEFAULT TRUE,
    transformation_template TEXT,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_webhook_type_code (code),
    KEY idx_webhook_category (event_category),
    KEY idx_webhook_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO webhook_type (code, name, event_category, authentication_type, signature_algorithm) VALUES
('MESSAGE_SENT', 'Message Sent', 'DELIVERY', 'HMAC', 'SHA256'),
('MESSAGE_DELIVERED', 'Message Delivered', 'DELIVERY', 'HMAC', 'SHA256'),
('MESSAGE_FAILED', 'Message Failed', 'DELIVERY', 'HMAC', 'SHA256'),
('EMAIL_OPENED', 'Email Opened', 'ENGAGEMENT', 'HMAC', 'SHA256'),
('EMAIL_CLICKED', 'Email Clicked', 'ENGAGEMENT', 'HMAC', 'SHA256'),
('UNSUBSCRIBED', 'Unsubscribed', 'SUBSCRIPTION', 'HMAC', 'SHA256'),
('BOUNCED', 'Message Bounced', 'DELIVERY', 'HMAC', 'SHA256'),
('COMPLAINT', 'Spam Complaint', 'COMPLAINT', 'HMAC', 'SHA256'),
('ROYALTY_CALCULATED', 'Royalty Calculated', 'FINANCIAL', 'HMAC', 'SHA256'),
('PAYMENT_PROCESSED', 'Payment Processed', 'FINANCIAL', 'HMAC', 'SHA256');

-- escalation_rule table
CREATE TABLE escalation_rule (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    trigger_condition VARCHAR(100) NOT NULL,
    escalation_level INT UNSIGNED NOT NULL DEFAULT 1,
    delay_minutes INT UNSIGNED NOT NULL,
    target_channel_code VARCHAR(50),
    target_recipient_type VARCHAR(50),
    priority_override VARCHAR(50),
    template_override VARCHAR(50),
    max_escalations INT UNSIGNED DEFAULT 3,
    stop_on_acknowledgment BOOLEAN DEFAULT TRUE,
    stop_on_resolution BOOLEAN DEFAULT TRUE,
    include_context BOOLEAN DEFAULT TRUE,
    include_history BOOLEAN DEFAULT TRUE,
    notification_aggregation BOOLEAN DEFAULT FALSE,
    business_hours_only BOOLEAN DEFAULT FALSE,
    timezone VARCHAR(50),
    active_days VARCHAR(50) DEFAULT 'MON,TUE,WED,THU,FRI',
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_escalation_rule_code (code),
    KEY idx_escalation_level (escalation_level),
    KEY idx_escalation_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO escalation_rule (code, name, trigger_condition, escalation_level, delay_minutes, priority_override) VALUES
('COPYRIGHT_CLAIM_L1', 'Copyright Claim Level 1', 'NO_RESPONSE', 1, 60, 'HIGH'),
('COPYRIGHT_CLAIM_L2', 'Copyright Claim Level 2', 'NO_RESPONSE', 2, 240, 'URGENT'),
('PAYMENT_FAILURE_L1', 'Payment Failure Level 1', 'PAYMENT_FAILED', 1, 30, 'HIGH'),
('PAYMENT_FAILURE_L2', 'Payment Failure Level 2', 'NO_RESPONSE', 2, 120, 'URGENT'),
('CONTRACT_SIGN_L1', 'Contract Signature Level 1', 'NO_RESPONSE', 1, 1440, 'HIGH'),
('SYSTEM_ALERT_L1', 'System Alert Level 1', 'CRITICAL_ERROR', 1, 15, 'URGENT'),
('SYNC_OPPORTUNITY_L1', 'Sync Opportunity Level 1', 'NO_RESPONSE', 1, 720, 'HIGH');

-- communication_tag table
CREATE TABLE communication_tag (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    tag_category VARCHAR(50) NOT NULL,
    color_hex VARCHAR(7),
    icon VARCHAR(100),
    auto_apply_rules TEXT,
    retention_days INT UNSIGNED DEFAULT 365,
    searchable BOOLEAN DEFAULT TRUE,
    user_visible BOOLEAN DEFAULT TRUE,
    system_tag BOOLEAN DEFAULT FALSE,
    hierarchical BOOLEAN DEFAULT FALSE,
    parent_tag_code VARCHAR(50),
    metadata_schema TEXT,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_comm_tag_code (code),
    KEY idx_comm_tag_category (tag_category),
    KEY idx_comm_tag_parent (parent_tag_code),
    KEY idx_comm_tag_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO communication_tag (code, name, tag_category, system_tag, user_visible) VALUES
('IMPORTANT', 'Important', 'PRIORITY', FALSE, TRUE),
('URGENT_ACTION', 'Urgent Action Required', 'PRIORITY', TRUE, TRUE),
('FINANCIAL', 'Financial', 'CATEGORY', TRUE, TRUE),
('LEGAL', 'Legal', 'CATEGORY', TRUE, TRUE),
('TECHNICAL', 'Technical', 'CATEGORY', TRUE, TRUE),
('AUTOMATED', 'Automated', 'SOURCE', TRUE, TRUE),
('MANUAL', 'Manual', 'SOURCE', TRUE, TRUE),
('BATCH', 'Batch Communication', 'TYPE', TRUE, TRUE),
('TRANSACTIONAL', 'Transactional', 'TYPE', TRUE, TRUE),
('MARKETING', 'Marketing', 'TYPE', TRUE, TRUE),
('REPLIED', 'Replied', 'STATUS', TRUE, TRUE),
('PENDING_RESPONSE', 'Pending Response', 'STATUS', TRUE, TRUE);

-- suppression_type table
CREATE TABLE suppression_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    suppression_category VARCHAR(50) NOT NULL,
    scope VARCHAR(50) NOT NULL,
    duration_type VARCHAR(50) NOT NULL,
    duration_days INT UNSIGNED,
    applies_to_channels TEXT,
    applies_to_categories TEXT,
    reason_required BOOLEAN DEFAULT TRUE,
    user_initiated BOOLEAN DEFAULT TRUE,
    system_initiated BOOLEAN DEFAULT TRUE,
    reversible BOOLEAN DEFAULT TRUE,
    reversal_requires_verification BOOLEAN DEFAULT TRUE,
    compliance_related BOOLEAN DEFAULT FALSE,
    legal_requirement VARCHAR(100),
    notification_on_attempt BOOLEAN DEFAULT TRUE,
    auto_expire BOOLEAN DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_suppression_type_code (code),
    KEY idx_suppression_category (suppression_category),
    KEY idx_suppression_scope (scope),
    KEY idx_suppression_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO suppression_type (code, name, suppression_category, scope, duration_type, compliance_related) VALUES
('GLOBAL_UNSUBSCRIBE', 'Global Unsubscribe', 'UNSUBSCRIBE', 'GLOBAL', 'PERMANENT', TRUE),
('CATEGORY_UNSUBSCRIBE', 'Category Unsubscribe', 'UNSUBSCRIBE', 'CATEGORY', 'PERMANENT', TRUE),
('CHANNEL_UNSUBSCRIBE', 'Channel Unsubscribe', 'UNSUBSCRIBE', 'CHANNEL', 'PERMANENT', TRUE),
('HARD_BOUNCE', 'Hard Bounce', 'BOUNCE', 'ADDRESS', 'PERMANENT', FALSE),
('SOFT_BOUNCE', 'Soft Bounce', 'BOUNCE', 'ADDRESS', 'TEMPORARY', FALSE),
('SPAM_COMPLAINT', 'Spam Complaint', 'COMPLAINT', 'ADDRESS', 'PERMANENT', TRUE),
('INVALID_ADDRESS', 'Invalid Address', 'QUALITY', 'ADDRESS', 'PERMANENT', FALSE),
('ROLE_ACCOUNT', 'Role Account', 'QUALITY', 'ADDRESS', 'PERMANENT', FALSE),
('TEMPORARY_FAILURE', 'Temporary Failure', 'TECHNICAL', 'ADDRESS', 'TEMPORARY', FALSE),
('VACATION_MODE', 'Vacation Mode', 'USER', 'USER', 'TEMPORARY', FALSE),
('DO_NOT_DISTURB', 'Do Not Disturb', 'USER', 'USER', 'TEMPORARY', FALSE);

-- personalization_type table
CREATE TABLE personalization_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    data_source VARCHAR(50) NOT NULL,
    variable_name VARCHAR(100) NOT NULL,
    data_type VARCHAR(50) NOT NULL,
    default_value TEXT,
    fallback_strategy VARCHAR(50),
    transformation_rules TEXT,
    validation_rules TEXT,
    cache_duration_seconds INT UNSIGNED DEFAULT 3600,
    real_time_lookup BOOLEAN DEFAULT FALSE,
    sensitive_data BOOLEAN DEFAULT FALSE,
    encryption_required BOOLEAN DEFAULT FALSE,
    audit_access BOOLEAN DEFAULT FALSE,
    available_channels TEXT,
    preview_sample TEXT,
    documentation_url VARCHAR(255),
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_personalization_code (code),
    UNIQUE KEY uk_personalization_variable (variable_name),
    KEY idx_personalization_source (data_source),
    KEY idx_personalization_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO personalization_type (code, name, data_source, variable_name, data_type, sensitive_data) VALUES
('USER_FIRST_NAME', 'User First Name', 'USER_PROFILE', 'first_name', 'STRING', FALSE),
('USER_LAST_NAME', 'User Last Name', 'USER_PROFILE', 'last_name', 'STRING', FALSE),
('USER_FULL_NAME', 'User Full Name', 'USER_PROFILE', 'full_name', 'STRING', FALSE),
('ARTIST_NAME', 'Artist Name', 'USER_PROFILE', 'artist_name', 'STRING', FALSE),
('ROYALTY_AMOUNT', 'Royalty Amount', 'FINANCIAL', 'royalty_amount', 'CURRENCY', TRUE),
('ROYALTY_PERIOD', 'Royalty Period', 'FINANCIAL', 'royalty_period', 'DATE_RANGE', FALSE),
('RELEASE_TITLE', 'Release Title', 'CATALOG', 'release_title', 'STRING', FALSE),
('TRACK_COUNT', 'Track Count', 'ANALYTICS', 'track_count', 'NUMBER', FALSE),
('LAST_LOGIN', 'Last Login Date', 'ACTIVITY', 'last_login', 'DATETIME', FALSE),
('SUBSCRIPTION_TIER', 'Subscription Tier', 'BILLING', 'subscription_tier', 'STRING', FALSE),
('CONTRACT_NAME', 'Contract Name', 'LEGAL', 'contract_name', 'STRING', FALSE),
('COPYRIGHT_WORK', 'Copyrighted Work', 'RIGHTS', 'copyright_work', 'STRING', FALSE);

-- campaign_type table
CREATE TABLE campaign_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    campaign_category VARCHAR(50) NOT NULL,
    objective VARCHAR(100),
    target_audience VARCHAR(100),
    channel_strategy VARCHAR(50),
    required_channels TEXT,
    optional_channels TEXT,
    scheduling_type VARCHAR(50) DEFAULT 'IMMEDIATE',
    recurrence_supported BOOLEAN DEFAULT FALSE,
    segmentation_required BOOLEAN DEFAULT TRUE,
    ab_testing_supported BOOLEAN DEFAULT TRUE,
    personalization_level VARCHAR(50) DEFAULT 'STANDARD',
    approval_workflow VARCHAR(50),
    budget_tracking BOOLEAN DEFAULT FALSE,
    roi_measurement BOOLEAN DEFAULT TRUE,
    compliance_check_required BOOLEAN DEFAULT TRUE,
    template_library VARCHAR(100),
    success_metrics TEXT,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_campaign_type_code (code),
    KEY idx_campaign_category (campaign_category),
    KEY idx_campaign_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO campaign_type (code, name, campaign_category, objective, scheduling_type, ab_testing_supported) VALUES
('RELEASE_ANNOUNCE', 'Release Announcement', 'PROMOTIONAL', 'AWARENESS', 'SCHEDULED', TRUE),
('ROYALTY_STATEMENT', 'Royalty Statement', 'TRANSACTIONAL', 'INFORM', 'RECURRING', FALSE),
('NEWSLETTER_MONTHLY', 'Monthly Newsletter', 'ENGAGEMENT', 'ENGAGE', 'RECURRING', TRUE),
('ONBOARDING_SERIES', 'Onboarding Series', 'LIFECYCLE', 'EDUCATE', 'TRIGGERED', TRUE),
('REACTIVATION', 'Reactivation Campaign', 'RETENTION', 'REACTIVATE', 'SCHEDULED', TRUE),
('MILESTONE_CELEBRATION', 'Milestone Celebration', 'ENGAGEMENT', 'CELEBRATE', 'TRIGGERED', FALSE),
('FEATURE_LAUNCH', 'Feature Launch', 'PRODUCT', 'ADOPTION', 'SCHEDULED', TRUE),
('SYNC_OPPORTUNITIES', 'Sync Opportunities', 'REVENUE', 'MONETIZE', 'IMMEDIATE', FALSE),
('RIGHTS_EXPIRY', 'Rights Expiry Notice', 'COMPLIANCE', 'INFORM', 'SCHEDULED', FALSE),
('SURVEY_FEEDBACK', 'Feedback Survey', 'RESEARCH', 'FEEDBACK', 'SCHEDULED', TRUE);

-- trigger_event table
CREATE TABLE trigger_event (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    event_source VARCHAR(50) NOT NULL,
    event_category VARCHAR(50) NOT NULL,
    trigger_conditions TEXT,
    evaluation_type VARCHAR(50) DEFAULT 'IMMEDIATE',
    evaluation_delay_minutes INT UNSIGNED DEFAULT 0,
    cooldown_minutes INT UNSIGNED DEFAULT 0,
    max_triggers_per_user INT UNSIGNED,
    max_triggers_per_day INT UNSIGNED,
    data_requirements TEXT,
    validation_rules TEXT,
    priority VARCHAR(50) DEFAULT 'MEDIUM',
    channels_enabled TEXT,
    template_mapping TEXT,
    active_hours_only BOOLEAN DEFAULT FALSE,
    timezone_aware BOOLEAN DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_trigger_event_code (code),
    KEY idx_trigger_source (event_source),
    KEY idx_trigger_category (event_category),
    KEY idx_trigger_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO trigger_event (code, name, event_source, event_category, evaluation_type, cooldown_minutes) VALUES
('USER_SIGNUP', 'User Signup', 'PLATFORM', 'LIFECYCLE', 'IMMEDIATE', 0),
('FIRST_LOGIN', 'First Login', 'PLATFORM', 'LIFECYCLE', 'IMMEDIATE', 0),
('ROYALTY_CALCULATED', 'Royalty Calculated', 'FINANCIAL', 'TRANSACTION', 'BATCH', 0),
('PAYMENT_PROCESSED', 'Payment Processed', 'FINANCIAL', 'TRANSACTION', 'IMMEDIATE', 0),
('RELEASE_SUBMITTED', 'Release Submitted', 'CATALOG', 'WORKFLOW', 'IMMEDIATE', 60),
('RELEASE_APPROVED', 'Release Approved', 'CATALOG', 'WORKFLOW', 'IMMEDIATE', 0),
('COPYRIGHT_MATCH', 'Copyright Match Found', 'RIGHTS', 'DETECTION', 'IMMEDIATE', 1440),
('CONTRACT_EXPIRING', 'Contract Expiring', 'LEGAL', 'LIFECYCLE', 'SCHEDULED', 0),
('MILESTONE_REACHED', 'Milestone Reached', 'ANALYTICS', 'ACHIEVEMENT', 'BATCH', 1440),
('INACTIVITY_30DAYS', 'Inactive 30 Days', 'PLATFORM', 'RETENTION', 'SCHEDULED', 0);

-- delivery_window table
CREATE TABLE delivery_window (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    window_type VARCHAR(50) NOT NULL,
    timezone_handling VARCHAR(50) DEFAULT 'USER_LOCAL',
    start_time TIME,
    end_time TIME,
    days_of_week VARCHAR(50),
    days_of_month VARCHAR(100),
    months VARCHAR(50),
    exclude_holidays BOOLEAN DEFAULT TRUE,
    holiday_calendar VARCHAR(50),
    business_days_only BOOLEAN DEFAULT FALSE,
    optimal_send_time BOOLEAN DEFAULT FALSE,
    machine_learning_enabled BOOLEAN DEFAULT FALSE,
    fallback_window_code VARCHAR(50),
    buffer_minutes INT UNSIGNED DEFAULT 0,
    max_daily_volume INT UNSIGNED,
    distribution_strategy VARCHAR(50) DEFAULT 'EVEN',
    priority_override_allowed BOOLEAN DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_delivery_window_code (code),
    KEY idx_delivery_window_type (window_type),
    KEY idx_delivery_window_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO delivery_window (code, name, window_type, start_time, end_time, days_of_week, business_days_only) VALUES
('BUSINESS_HOURS', 'Business Hours', 'DAILY', '09:00:00', '17:00:00', 'MON,TUE,WED,THU,FRI', TRUE),
('EXTENDED_HOURS', 'Extended Hours', 'DAILY', '08:00:00', '20:00:00', 'MON,TUE,WED,THU,FRI,SAT', FALSE),
('MORNING_WINDOW', 'Morning Window', 'DAILY', '08:00:00', '12:00:00', 'ALL', FALSE),
('AFTERNOON_WINDOW', 'Afternoon Window', 'DAILY', '12:00:00', '17:00:00', 'ALL', FALSE),
('EVENING_WINDOW', 'Evening Window', 'DAILY', '17:00:00', '21:00:00', 'ALL', FALSE),
('ANYTIME', 'Anytime', 'ALWAYS', NULL, NULL, 'ALL', FALSE),
('URGENT_ONLY', 'Urgent Only', 'ALWAYS', NULL, NULL, 'ALL', FALSE),
('WEEKEND_MORNING', 'Weekend Morning', 'DAILY', '10:00:00', '12:00:00', 'SAT,SUN', FALSE),
('MONTH_END', 'Month End', 'MONTHLY', '09:00:00', '17:00:00', NULL, TRUE),
('OPTIMAL_ENGAGEMENT', 'Optimal Engagement', 'DYNAMIC', NULL, NULL, 'ALL', FALSE);

-- retry_policy table
CREATE TABLE retry_policy (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    retry_strategy VARCHAR(50) NOT NULL,
    max_attempts INT UNSIGNED NOT NULL DEFAULT 3,
    initial_delay_seconds INT UNSIGNED DEFAULT 60,
    max_delay_seconds INT UNSIGNED DEFAULT 3600,
    backoff_multiplier DECIMAL(3,2) DEFAULT 2.00,
    jitter_enabled BOOLEAN DEFAULT TRUE,
    jitter_factor DECIMAL(3,2) DEFAULT 0.10,
    retry_on_statuses VARCHAR(255),
    skip_on_statuses VARCHAR(255),
    circuit_breaker_enabled BOOLEAN DEFAULT TRUE,
    circuit_breaker_threshold INT UNSIGNED DEFAULT 5,
    circuit_breaker_timeout_seconds INT UNSIGNED DEFAULT 300,
    dead_letter_queue BOOLEAN DEFAULT TRUE,
    alert_on_exhaustion BOOLEAN DEFAULT TRUE,
    fallback_action VARCHAR(50),
    preserve_order BOOLEAN DEFAULT FALSE,
    idempotency_required BOOLEAN DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_retry_policy_code (code),
    KEY idx_retry_strategy (retry_strategy),
    KEY idx_retry_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO retry_policy (code, name, retry_strategy, max_attempts, initial_delay_seconds, backoff_multiplier) VALUES
('STANDARD_EXPONENTIAL', 'Standard Exponential', 'EXPONENTIAL', 3, 60, 2.00),
('AGGRESSIVE_EXPONENTIAL', 'Aggressive Exponential', 'EXPONENTIAL', 5, 30, 1.50),
('LINEAR_RETRY', 'Linear Retry', 'LINEAR', 3, 300, 1.00),
('IMMEDIATE_RETRY', 'Immediate Retry', 'IMMEDIATE', 2, 0, 1.00),
('SLOW_RETRY', 'Slow Retry', 'EXPONENTIAL', 5, 600, 3.00),
('NO_RETRY', 'No Retry', 'NONE', 0, 0, 1.00),
('WEBHOOK_RETRY', 'Webhook Retry', 'EXPONENTIAL', 6, 10, 2.00),
('EMAIL_RETRY', 'Email Retry', 'EXPONENTIAL', 3, 300, 2.00),
('SMS_RETRY', 'SMS Retry', 'LINEAR', 2, 60, 1.00),
('CRITICAL_RETRY', 'Critical Retry', 'EXPONENTIAL', 10, 5, 1.50);

-- compliance_type table
CREATE TABLE compliance_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    regulation VARCHAR(100) NOT NULL,
    jurisdiction VARCHAR(100),
    effective_date DATE,
    compliance_category VARCHAR(50),
    requirements TEXT,
    documentation_required BOOLEAN DEFAULT TRUE,
    audit_frequency_days INT UNSIGNED DEFAULT 365,
    penalty_amount DECIMAL(12,2),
    penalty_currency VARCHAR(3),
    consent_required BOOLEAN DEFAULT TRUE,
    data_retention_max_days INT UNSIGNED,
    data_deletion_required BOOLEAN DEFAULT TRUE,
    opt_out_mechanism VARCHAR(50),
    reporting_required BOOLEAN DEFAULT FALSE,
    certification_available BOOLEAN DEFAULT FALSE,
    reference_url VARCHAR(255),
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_compliance_type_code (code),
    KEY idx_compliance_regulation (regulation),
    KEY idx_compliance_category (compliance_category),
    KEY idx_compliance_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO compliance_type (code, name, regulation, jurisdiction, compliance_category, consent_required) VALUES
('GDPR_EMAIL', 'GDPR Email Compliance', 'GDPR', 'EU', 'DATA_PRIVACY', TRUE),
('CCPA_MARKETING', 'CCPA Marketing Compliance', 'CCPA', 'CA_US', 'DATA_PRIVACY', TRUE),
('CAN_SPAM', 'CAN-SPAM Compliance', 'CAN_SPAM', 'US', 'EMAIL', TRUE),
('TCPA_SMS', 'TCPA SMS Compliance', 'TCPA', 'US', 'TELEPHONY', TRUE),
('CASL', 'CASL Compliance', 'CASL', 'CA', 'EMAIL', TRUE),
('PECR', 'PECR Compliance', 'PECR', 'UK', 'ELECTRONIC', TRUE),
('LGPD', 'LGPD Compliance', 'LGPD', 'BR', 'DATA_PRIVACY', TRUE),
('PIPEDA', 'PIPEDA Compliance', 'PIPEDA', 'CA', 'DATA_PRIVACY', TRUE),
('APPI', 'APPI Compliance', 'APPI', 'JP', 'DATA_PRIVACY', TRUE),
('SPAM_ACT', 'Spam Act Compliance', 'SPAM_ACT', 'AU', 'EMAIL', TRUE);

-- channel_preference table
CREATE TABLE channel_preference (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    preference_type VARCHAR(50) NOT NULL,
    user_segment VARCHAR(50),
    primary_channel_code VARCHAR(50) NOT NULL,
    secondary_channel_code VARCHAR(50),
    tertiary_channel_code VARCHAR(50),
    category_overrides TEXT,
    time_based_routing BOOLEAN DEFAULT FALSE,
    day_channel_code VARCHAR(50),
    evening_channel_code VARCHAR(50),
    weekend_channel_code VARCHAR(50),
    urgency_overrides TEXT,
    device_based_routing BOOLEAN DEFAULT FALSE,
    mobile_channel_code VARCHAR(50),
    desktop_channel_code VARCHAR(50),
    cost_optimization BOOLEAN DEFAULT FALSE,
    quality_score_threshold DECIMAL(5,2) DEFAULT 80.00,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_channel_pref_code (code),
    KEY idx_channel_pref_type (preference_type),
    KEY idx_channel_pref_primary (primary_channel_code),
    KEY idx_channel_pref_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO channel_preference (code, name, preference_type, primary_channel_code, secondary_channel_code, tertiary_channel_code) VALUES
('DEFAULT_MULTI', 'Default Multi-Channel', 'DEFAULT', 'EMAIL', 'PUSH_MOBILE', 'SMS'),
('EMAIL_ONLY', 'Email Only', 'RESTRICTIVE', 'EMAIL', NULL, NULL),
('MOBILE_FIRST', 'Mobile First', 'MOBILE', 'PUSH_MOBILE', 'SMS', 'EMAIL'),
('INSTANT_PRIORITY', 'Instant Priority', 'REAL_TIME', 'PUSH_MOBILE', 'SMS', 'EMAIL'),
('COST_EFFECTIVE', 'Cost Effective', 'ECONOMICAL', 'EMAIL', 'IN_APP', 'PUSH_WEB'),
('HIGH_ENGAGEMENT', 'High Engagement', 'ENGAGEMENT', 'PUSH_MOBILE', 'EMAIL', 'SMS'),
('DEVELOPER_FRIENDLY', 'Developer Friendly', 'TECHNICAL', 'WEBHOOK', 'EMAIL', 'SLACK'),
('TRADITIONAL', 'Traditional', 'CONSERVATIVE', 'EMAIL', 'VOICE_CALL', 'FAX');

-- notification_group table
CREATE TABLE notification_group (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    group_category VARCHAR(50) NOT NULL,
    grouping_key VARCHAR(100),
    aggregation_type VARCHAR(50) DEFAULT 'DIGEST',
    max_group_size INT UNSIGNED DEFAULT 50,
    time_window_minutes INT UNSIGNED DEFAULT 60,
    collapse_similar BOOLEAN DEFAULT TRUE,
    similarity_threshold DECIMAL(3,2) DEFAULT 0.80,
    priority_handling VARCHAR(50) DEFAULT 'HIGHEST',
    sort_order VARCHAR(50) DEFAULT 'CHRONOLOGICAL',
    summary_template TEXT,
    detail_template TEXT,
    expansion_supported BOOLEAN DEFAULT TRUE,
    channels_supported TEXT,
    retention_minutes INT UNSIGNED DEFAULT 1440,
    auto_dismiss BOOLEAN DEFAULT FALSE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_notification_group_code (code),
    KEY idx_notification_group_category (group_category),
    KEY idx_notification_group_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO notification_group (code, name, group_category, aggregation_type, max_group_size, time_window_minutes) VALUES
('ROYALTY_UPDATES', 'Royalty Updates', 'FINANCIAL', 'DIGEST', 100, 1440),
('COPYRIGHT_ALERTS', 'Copyright Alerts', 'RIGHTS', 'PRIORITY', 50, 60),
('RELEASE_ACTIVITY', 'Release Activity', 'CATALOG', 'CHRONOLOGICAL', 25, 360),
('COLLABORATION_REQUESTS', 'Collaboration Requests', 'SOCIAL', 'DIGEST', 20, 720),
('SYSTEM_NOTIFICATIONS', 'System Notifications', 'SYSTEM', 'CATEGORY', 50, 1440),
('ANALYTICS_INSIGHTS', 'Analytics Insights', 'ANALYTICS', 'DIGEST', 30, 1440),
('SYNC_OPPORTUNITIES', 'Sync Opportunities', 'BUSINESS', 'PRIORITY', 10, 2880),
('SECURITY_ALERTS', 'Security Alerts', 'SECURITY', 'IMMEDIATE', 5, 5);

-- template_variable table
CREATE TABLE template_variable (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    variable_category VARCHAR(50) NOT NULL,
    data_type VARCHAR(50) NOT NULL,
    source_table VARCHAR(100),
    source_column VARCHAR(100),
    transformation_function VARCHAR(255),
    format_pattern VARCHAR(100),
    null_handling VARCHAR(50) DEFAULT 'DEFAULT',
    default_value TEXT,
    validation_regex VARCHAR(255),
    min_length INT UNSIGNED,
    max_length INT UNSIGNED,
    sanitization_required BOOLEAN DEFAULT TRUE,
    html_escape BOOLEAN DEFAULT TRUE,
    url_encode BOOLEAN DEFAULT FALSE,
    case_sensitive BOOLEAN DEFAULT TRUE,
    culture_specific BOOLEAN DEFAULT FALSE,
    cacheable BOOLEAN DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_template_variable_code (code),
    KEY idx_template_var_category (variable_category),
    KEY idx_template_var_type (data_type),
    KEY idx_template_var_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO template_variable (code, name, variable_category, data_type, source_table, source_column) VALUES
('USER_FIRST_NAME', 'User First Name', 'USER', 'STRING', 'users', 'first_name'),
('USER_LAST_NAME', 'User Last Name', 'USER', 'STRING', 'users', 'last_name'),
('USER_EMAIL', 'User Email', 'USER', 'EMAIL', 'users', 'email'),
('ARTIST_NAME', 'Artist Name', 'USER', 'STRING', 'artist_profiles', 'artist_name'),
('ROYALTY_AMOUNT', 'Royalty Amount', 'FINANCIAL', 'CURRENCY', 'royalty_statements', 'total_amount'),
('ROYALTY_CURRENCY', 'Royalty Currency', 'FINANCIAL', 'STRING', 'royalty_statements', 'currency_code'),
('PAYMENT_DATE', 'Payment Date', 'FINANCIAL', 'DATE', 'payments', 'payment_date'),
('RELEASE_TITLE', 'Release Title', 'CATALOG', 'STRING', 'releases', 'title'),
('TRACK_TITLE', 'Track Title', 'CATALOG', 'STRING', 'tracks', 'title'),
('CONTRACT_NAME', 'Contract Name', 'LEGAL', 'STRING', 'contracts', 'name'),
('PLATFORM_NAME', 'Platform Name', 'SYSTEM', 'STRING', NULL, NULL),
('CURRENT_DATE', 'Current Date', 'SYSTEM', 'DATE', NULL, NULL),
('UNSUBSCRIBE_LINK', 'Unsubscribe Link', 'SYSTEM', 'URL', NULL, NULL);

-- communication_log_type table
CREATE TABLE communication_log_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    log_category VARCHAR(50) NOT NULL,
    severity_level VARCHAR(20) NOT NULL,
    retention_days INT UNSIGNED DEFAULT 90,
    pii_content BOOLEAN DEFAULT FALSE,
    encryption_required BOOLEAN DEFAULT FALSE,
    searchable BOOLEAN DEFAULT TRUE,
    exportable BOOLEAN DEFAULT TRUE,
    real_time_stream BOOLEAN DEFAULT FALSE,
    batch_interval_minutes INT UNSIGNED DEFAULT 5,
    compression_enabled BOOLEAN DEFAULT TRUE,
    archive_after_days INT UNSIGNED DEFAULT 30,
    regulatory_hold BOOLEAN DEFAULT FALSE,
    alert_threshold INT UNSIGNED,
    alert_window_minutes INT UNSIGNED,
    dashboard_visible BOOLEAN DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_comm_log_type_code (code),
    KEY idx_comm_log_category (log_category),
    KEY idx_comm_log_severity (severity_level),
    KEY idx_comm_log_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO communication_log_type (code, name, log_category, severity_level, retention_days, pii_content) VALUES
('MESSAGE_SENT', 'Message Sent', 'DELIVERY', 'INFO', 90, TRUE),
('MESSAGE_DELIVERED', 'Message Delivered', 'DELIVERY', 'INFO', 90, FALSE),
('MESSAGE_FAILED', 'Message Failed', 'DELIVERY', 'ERROR', 365, TRUE),
('MESSAGE_BOUNCED', 'Message Bounced', 'DELIVERY', 'WARNING', 180, TRUE),
('USER_ENGAGEMENT', 'User Engagement', 'ENGAGEMENT', 'INFO', 180, FALSE),
('UNSUBSCRIBE', 'Unsubscribe', 'SUBSCRIPTION', 'WARNING', 2555, TRUE),
('SPAM_COMPLAINT', 'Spam Complaint', 'COMPLIANCE', 'ERROR', 2555, TRUE),
('API_REQUEST', 'API Request', 'TECHNICAL', 'DEBUG', 30, FALSE),
('SYSTEM_ERROR', 'System Error', 'TECHNICAL', 'ERROR', 365, FALSE),
('RATE_LIMIT', 'Rate Limit Hit', 'PERFORMANCE', 'WARNING', 90, FALSE),
('TEMPLATE_RENDER', 'Template Render', 'PROCESSING', 'DEBUG', 7, FALSE),
('WEBHOOK_CALL', 'Webhook Call', 'INTEGRATION', 'INFO', 90, FALSE);

-- feedback_type table
CREATE TABLE feedback_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    feedback_category VARCHAR(50) NOT NULL,
    collection_method VARCHAR(50),
    response_scale VARCHAR(50),
    min_value INT,
    max_value INT,
    labels TEXT,
    follow_up_enabled BOOLEAN DEFAULT TRUE,
    anonymous_allowed BOOLEAN DEFAULT TRUE,
    incentive_eligible BOOLEAN DEFAULT FALSE,
    analysis_method VARCHAR(50),
    sentiment_tracking BOOLEAN DEFAULT TRUE,
    actionable BOOLEAN DEFAULT TRUE,
    escalation_threshold DECIMAL(5,2),
    response_time_sla_hours INT UNSIGNED,
    auto_acknowledge BOOLEAN DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_feedback_type_code (code),
    KEY idx_feedback_category (feedback_category),
    KEY idx_feedback_method (collection_method),
    KEY idx_feedback_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO feedback_type (code, name, feedback_category, collection_method, response_scale, min_value, max_value) VALUES
('NPS_SCORE', 'Net Promoter Score', 'SATISFACTION', 'SURVEY', 'NUMERIC', 0, 10),
('CSAT_RATING', 'Customer Satisfaction', 'SATISFACTION', 'INLINE', 'STAR', 1, 5),
('MESSAGE_HELPFUL', 'Message Helpfulness', 'CONTENT', 'INLINE', 'BINARY', 0, 1),
('FEATURE_REQUEST', 'Feature Request', 'PRODUCT', 'FORM', 'TEXT', NULL, NULL),
('BUG_REPORT', 'Bug Report', 'TECHNICAL', 'FORM', 'STRUCTURED', NULL, NULL),
('CONTENT_QUALITY', 'Content Quality', 'CONTENT', 'SURVEY', 'LIKERT', 1, 5),
('DELIVERY_PREFERENCE', 'Delivery Preference', 'PREFERENCE', 'FORM', 'CHOICE', NULL, NULL),
('UNSUBSCRIBE_REASON', 'Unsubscribe Reason', 'SUBSCRIPTION', 'EXIT', 'CHOICE', NULL, NULL);

-- unsubscribe_reason table
CREATE TABLE unsubscribe_reason (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    reason_category VARCHAR(50) NOT NULL,
    severity VARCHAR(20) DEFAULT 'MEDIUM',
    follow_up_action VARCHAR(100),
    retention_eligible BOOLEAN DEFAULT TRUE,
    reactivation_delay_days INT UNSIGNED DEFAULT 30,
    feedback_prompt TEXT,
    alternative_suggestion TEXT,
    partial_unsubscribe_option BOOLEAN DEFAULT TRUE,
    frequency_reduction_option BOOLEAN DEFAULT TRUE,
    channel_switch_option BOOLEAN DEFAULT TRUE,
    pause_option BOOLEAN DEFAULT TRUE,
    impact_score DECIMAL(5,2) DEFAULT 5.00,
    requires_confirmation BOOLEAN DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_unsubscribe_reason_code (code),
    KEY idx_unsub_reason_category (reason_category),
    KEY idx_unsub_reason_severity (severity),
    KEY idx_unsub_reason_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO unsubscribe_reason (code, name, reason_category, severity, retention_eligible, partial_unsubscribe_option) VALUES
('TOO_FREQUENT', 'Too Many Emails', 'FREQUENCY', 'LOW', TRUE, TRUE),
('NOT_RELEVANT', 'Content Not Relevant', 'RELEVANCE', 'MEDIUM', TRUE, TRUE),
('NEVER_SIGNED_UP', 'Never Signed Up', 'CONSENT', 'HIGH', FALSE, FALSE),
('PRIVACY_CONCERNS', 'Privacy Concerns', 'PRIVACY', 'HIGH', FALSE, FALSE),
('TOO_MANY_ADS', 'Too Many Advertisements', 'CONTENT', 'MEDIUM', TRUE, TRUE),
('PREFER_OTHER_CHANNEL', 'Prefer Other Channel', 'PREFERENCE', 'LOW', TRUE, TRUE),
('TEMPORARY_BREAK', 'Taking a Break', 'TEMPORARY', 'LOW', TRUE, TRUE),
('ACCOUNT_CLOSING', 'Closing Account', 'PERMANENT', 'HIGH', FALSE, FALSE),
('TECHNICAL_ISSUES', 'Technical Issues', 'TECHNICAL', 'MEDIUM', TRUE, FALSE),
('OTHER', 'Other Reason', 'OTHER', 'MEDIUM', TRUE, TRUE);

-- communication_workflow table
CREATE TABLE communication_workflow (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    workflow_type VARCHAR(50) NOT NULL,
    trigger_type VARCHAR(50),
    entry_criteria TEXT,
    exit_criteria TEXT,
    max_duration_days INT UNSIGNED,
    steps_count INT UNSIGNED DEFAULT 1,
    branching_enabled BOOLEAN DEFAULT FALSE,
    conditional_logic TEXT,
    personalization_enabled BOOLEAN DEFAULT TRUE,
    ab_testing_enabled BOOLEAN DEFAULT FALSE,
    goal_metric VARCHAR(100),
    success_threshold DECIMAL(5,2),
    fallback_workflow_code VARCHAR(50),
    pause_on_response BOOLEAN DEFAULT TRUE,
    skip_weekends BOOLEAN DEFAULT FALSE,
    skip_holidays BOOLEAN DEFAULT TRUE,
    timezone_handling VARCHAR(50) DEFAULT 'USER_LOCAL',
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_comm_workflow_code (code),
    KEY idx_comm_workflow_type (workflow_type),
    KEY idx_comm_workflow_trigger (trigger_type),
    KEY idx_comm_workflow_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO communication_workflow (code, name, workflow_type, trigger_type, max_duration_days, steps_count) VALUES
('WELCOME_SERIES', 'Welcome Series', 'ONBOARDING', 'USER_SIGNUP', 30, 5),
('ROYALTY_NOTIFICATION', 'Royalty Notification Flow', 'TRANSACTIONAL', 'ROYALTY_CALCULATED', 7, 3),
('COPYRIGHT_CLAIM_FLOW', 'Copyright Claim Flow', 'ESCALATION', 'COPYRIGHT_MATCH', 14, 4),
('RELEASE_PROMOTION', 'Release Promotion', 'MARKETING', 'RELEASE_APPROVED', 30, 6),
('REENGAGEMENT_CAMPAIGN', 'Re-engagement Campaign', 'RETENTION', 'INACTIVITY_30DAYS', 60, 4),
('CONTRACT_RENEWAL', 'Contract Renewal', 'LIFECYCLE', 'CONTRACT_EXPIRING', 90, 5),
('PAYMENT_FAILURE_RECOVERY', 'Payment Failure Recovery', 'RECOVERY', 'PAYMENT_FAILED', 14, 4),
('MILESTONE_CELEBRATION', 'Milestone Celebration', 'ENGAGEMENT', 'MILESTONE_REACHED', 7, 2);

-- alert_severity table
CREATE TABLE alert_severity (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    numeric_level INT UNSIGNED NOT NULL,
    color_hex VARCHAR(7),
    icon VARCHAR(100),
    sound_alert BOOLEAN DEFAULT FALSE,
    sound_file VARCHAR(100),
    visual_alert BOOLEAN DEFAULT TRUE,
    haptic_feedback BOOLEAN DEFAULT FALSE,
    override_dnd BOOLEAN DEFAULT FALSE,
    override_quiet_hours BOOLEAN DEFAULT FALSE,
    auto_escalate BOOLEAN DEFAULT FALSE,
    escalation_minutes INT UNSIGNED,
    acknowledgment_required BOOLEAN DEFAULT FALSE,
    acknowledgment_timeout_minutes INT UNSIGNED,
    ops_notification BOOLEAN DEFAULT FALSE,
    incident_creation BOOLEAN DEFAULT FALSE,
    sla_minutes INT UNSIGNED,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_alert_severity_code (code),
    UNIQUE KEY uk_alert_severity_level (numeric_level),
    KEY idx_alert_severity_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO alert_severity (code, name, numeric_level, color_hex, override_dnd, acknowledgment_required, sla_minutes) VALUES
('CRITICAL', 'Critical', 100, '#FF0000', TRUE, TRUE, 15),
('HIGH', 'High', 75, '#FF6600', TRUE, FALSE, 60),
('MEDIUM', 'Medium', 50, '#FFAA00', FALSE, FALSE, 240),
('LOW', 'Low', 25, '#0066FF', FALSE, FALSE, 1440),
('INFO', 'Informational', 10, '#00AA00', FALSE, FALSE, NULL);

-- message_lifecycle table
CREATE TABLE message_lifecycle (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    lifecycle_stage VARCHAR(50) NOT NULL,
    stage_order INT UNSIGNED NOT NULL,
    is_terminal BOOLEAN DEFAULT FALSE,
    can_retry BOOLEAN DEFAULT FALSE,
    can_cancel BOOLEAN DEFAULT TRUE,
    duration_estimate_seconds INT UNSIGNED,
    success_rate_threshold DECIMAL(5,2) DEFAULT 95.00,
    monitoring_enabled BOOLEAN DEFAULT TRUE,
    alert_on_delay BOOLEAN DEFAULT FALSE,
    delay_threshold_seconds INT UNSIGNED,
    data_retention_days INT UNSIGNED DEFAULT 90,
    audit_required BOOLEAN DEFAULT TRUE,
    metrics_tracked TEXT,
    next_stages TEXT,
    rollback_allowed BOOLEAN DEFAULT FALSE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_msg_lifecycle_code (code),
    KEY idx_msg_lifecycle_stage (lifecycle_stage),
    KEY idx_msg_lifecycle_order (stage_order),
    KEY idx_msg_lifecycle_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO message_lifecycle (code, name, lifecycle_stage, stage_order, is_terminal, can_retry) VALUES
('CREATED', 'Created', 'INITIATION', 100, FALSE, FALSE),
('VALIDATED', 'Validated', 'PROCESSING', 200, FALSE, TRUE),
('RENDERED', 'Rendered', 'PROCESSING', 300, FALSE, TRUE),
('QUEUED', 'Queued', 'DELIVERY', 400, FALSE, FALSE),
('SENDING', 'Sending', 'DELIVERY', 500, FALSE, TRUE),
('SENT', 'Sent', 'DELIVERY', 600, FALSE, FALSE),
('DELIVERED', 'Delivered', 'COMPLETION', 700, TRUE, FALSE),
('OPENED', 'Opened', 'ENGAGEMENT', 800, TRUE, FALSE),
('CLICKED', 'Clicked', 'ENGAGEMENT', 900, TRUE, FALSE),
('FAILED', 'Failed', 'ERROR', 1000, TRUE, TRUE),
('BOUNCED', 'Bounced', 'ERROR', 1100, TRUE, FALSE),
('CANCELLED', 'Cancelled', 'TERMINATION', 1200, TRUE, FALSE);

-- channel_integration table
CREATE TABLE channel_integration (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    provider VARCHAR(100) NOT NULL,
    integration_type VARCHAR(50) NOT NULL,
    api_version VARCHAR(20),
    authentication_method VARCHAR(50),
    base_url VARCHAR(255),
    sandbox_url VARCHAR(255),
    rate_limit_per_second INT UNSIGNED,
    rate_limit_per_minute INT UNSIGNED,
    rate_limit_per_hour INT UNSIGNED,
    bulk_support BOOLEAN DEFAULT FALSE,
    bulk_max_size INT UNSIGNED,
    webhook_support BOOLEAN DEFAULT FALSE,
    webhook_validation VARCHAR(50),
    features_supported TEXT,
    regions_supported TEXT,
    compliance_certifications TEXT,
    sla_uptime_percent DECIMAL(5,2) DEFAULT 99.90,
    support_tier VARCHAR(50),
    documentation_url VARCHAR(255),
    status_page_url VARCHAR(255),
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_channel_integration_code (code),
    KEY idx_channel_integration_provider (provider),
    KEY idx_channel_integration_type (integration_type),
    KEY idx_channel_integration_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO channel_integration (code, name, provider, integration_type, api_version, authentication_method, rate_limit_per_second) VALUES
('SENDGRID_EMAIL', 'SendGrid Email', 'SendGrid', 'EMAIL', 'v3', 'API_KEY', 100),
('TWILIO_SMS', 'Twilio SMS', 'Twilio', 'SMS', '2010-04-01', 'BASIC_AUTH', 10),
('TWILIO_VOICE', 'Twilio Voice', 'Twilio', 'VOICE', '2010-04-01', 'BASIC_AUTH', 5),
('FIREBASE_PUSH', 'Firebase Push', 'Google', 'PUSH', 'v1', 'OAUTH2', 50),
('SLACK_WEBHOOK', 'Slack Webhook', 'Slack', 'CHAT', 'v1', 'WEBHOOK_URL', 1),
('DISCORD_WEBHOOK', 'Discord Webhook', 'Discord', 'CHAT', 'v1', 'WEBHOOK_URL', 5),
('WHATSAPP_BUSINESS', 'WhatsApp Business', 'Meta', 'MESSAGING', 'v17.0', 'BEARER_TOKEN', 20),
('MAILCHIMP_MARKETING', 'Mailchimp Marketing', 'Mailchimp', 'EMAIL', 'v3', 'API_KEY', 10),
('AMAZON_SES', 'Amazon SES', 'AWS', 'EMAIL', 'v2', 'AWS_SIGNATURE', 100),
('WEBHOOK_GENERIC', 'Generic Webhook', 'Custom', 'WEBHOOK', 'v1', 'VARIOUS', 50);

-- =====================================================
-- ADDITIONAL INDEXES FOR PERFORMANCE
-- =====================================================

-- Composite indexes for common query patterns
CREATE INDEX idx_notification_type_cat_active ON notification_type(category, is_active, display_order);
CREATE INDEX idx_notification_type_priority ON notification_type(default_priority, is_active);

-- Channel routing indexes
CREATE INDEX idx_channel_realtime ON notification_channel(is_realtime, is_active, priority_order);
CREATE INDEX idx_channel_cost ON notification_channel(cost_per_message, is_active);

-- Template lookup indexes
CREATE INDEX idx_template_channel_cat ON template_type(channel_code, category, is_active);
CREATE INDEX idx_template_format ON template_type(format_code, is_active);

-- Delivery tracking indexes
CREATE INDEX idx_delivery_status_success ON delivery_status(is_success, is_final);
CREATE INDEX idx_delivery_status_retry ON delivery_status(is_retryable, retry_after_seconds);

-- Engagement analytics indexes
CREATE INDEX idx_engagement_positive ON engagement_type(is_positive, engagement_weight);
CREATE INDEX idx_engagement_channel_action ON engagement_type(channel_code, action_category, is_active);

-- Bounce management indexes
CREATE INDEX idx_bounce_retry ON bounce_type(retry_eligible, retry_delay_hours);
CREATE INDEX idx_bounce_suppress ON bounce_type(suppression_duration_days, is_permanent);

-- Opt-in/consent indexes
CREATE INDEX idx_opt_in_consent ON opt_in_type(consent_level, verification_required);
CREATE INDEX idx_opt_in_default ON opt_in_type(default_state, is_active);

-- Frequency capping indexes
CREATE INDEX idx_freq_cap_window ON frequency_cap(time_window, max_messages);
CREATE INDEX idx_freq_cap_scope_cat ON frequency_cap(scope, category_code, is_active);

-- Localization indexes
CREATE INDEX idx_localization_primary ON localization_type(is_primary, is_active);
CREATE INDEX idx_localization_fallback ON localization_type(fallback_locale_code);

-- Webhook performance indexes
CREATE INDEX idx_webhook_event ON webhook_type(event_category, is_active);
CREATE INDEX idx_webhook_retry ON webhook_type(retry_policy, max_retries);

-- Escalation routing indexes
CREATE INDEX idx_escalation_trigger ON escalation_rule(trigger_condition, escalation_level);
CREATE INDEX idx_escalation_delay ON escalation_rule(delay_minutes, is_active);

-- Suppression list indexes
CREATE INDEX idx_suppression_duration ON suppression_type(duration_type, duration_days);
CREATE INDEX idx_suppression_compliance ON suppression_type(compliance_related, is_active);

-- Campaign management indexes
CREATE INDEX idx_campaign_schedule ON campaign_type(scheduling_type, is_active);
CREATE INDEX idx_campaign_objective ON campaign_type(objective, campaign_category);

-- Trigger event indexes
CREATE INDEX idx_trigger_eval ON trigger_event(evaluation_type, evaluation_delay_minutes);
CREATE INDEX idx_trigger_cooldown ON trigger_event(cooldown_minutes, is_active);

-- Delivery window indexes
CREATE INDEX idx_delivery_window_time ON delivery_window(start_time, end_time);
CREATE INDEX idx_delivery_window_optimal ON delivery_window(optimal_send_time, machine_learning_enabled);

-- Workflow management indexes
CREATE INDEX idx_workflow_duration ON communication_workflow(max_duration_days, is_active);
CREATE INDEX idx_workflow_goal ON communication_workflow(goal_metric, success_threshold);

-- Log analysis indexes
CREATE INDEX idx_log_retention ON communication_log_type(retention_days, archive_after_days);
CREATE INDEX idx_log_search ON communication_log_type(searchable, log_category, severity_level);

-- Integration monitoring indexes
CREATE INDEX idx_integration_status ON channel_integration(is_active, sla_uptime_percent);
CREATE INDEX idx_integration_limits ON channel_integration(rate_limit_per_second, rate_limit_per_minute);

-- Full-text search indexes for better search capabilities
CREATE FULLTEXT INDEX ft_notification_type ON notification_type(name, description);
CREATE FULLTEXT INDEX ft_template_type ON template_type(name, description);
CREATE FULLTEXT INDEX ft_communication_tag ON communication_tag(name, description);

-- =====================================================
-- SECTION 21: SYNC & LICENSING
-- =====================================================

CREATE TABLE sync_category (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    parent_category_id INT UNSIGNED,
    category_level TINYINT UNSIGNED DEFAULT 1,
    typical_fee_range VARCHAR(50),
    requires_master BOOLEAN DEFAULT TRUE,
    requires_publishing BOOLEAN DEFAULT TRUE,
    blockchain_enabled BOOLEAN DEFAULT FALSE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_parent (parent_category_id),
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO sync_category (code, name, description, typical_fee_range, blockchain_enabled, display_order) VALUES
('FILM', 'Film & Cinema', 'Motion pictures, feature films, documentaries', '$10K-$500K+', TRUE, 100),
('TV', 'Television', 'TV series, shows, specials, made-for-TV movies', '$5K-$250K', TRUE, 200),
('ADVERTISING', 'Advertising & Commercials', 'TV commercials, online ads, radio spots', '$25K-$1M+', TRUE, 300),
('GAMING', 'Video Games', 'Console, PC, mobile games, VR/AR gaming', '$5K-$100K', TRUE, 400),
('STREAMING', 'Streaming Content', 'Netflix, Disney+, YouTube, Twitch content', '$2K-$100K', TRUE, 500),
('TRAILER', 'Trailers & Promos', 'Movie trailers, TV promos, teasers', '$15K-$200K', TRUE, 600),
('DIGITAL', 'Digital Media', 'Web series, podcasts, online video', '$500-$50K', TRUE, 700),
('CORPORATE', 'Corporate & Industrial', 'Corporate videos, presentations, training', '$1K-$25K', FALSE, 800),
('SOCIAL', 'Social Media', 'TikTok, Instagram, Facebook, Twitter content', '$100-$10K', TRUE, 900),
('METAVERSE', 'Metaverse & Virtual Worlds', 'Virtual concerts, worlds, experiences', '$5K-$250K', TRUE, 1000),
('NFT', 'NFT & Web3', 'NFT projects, blockchain games, DeFi', '$1K-$100K', TRUE, 1100),
('AI_CONTENT', 'AI-Generated Content', 'AI films, synthetic media, deepfakes', '$1K-$50K', TRUE, 1200),
('VR_AR', 'VR/AR Experiences', 'Virtual reality, augmented reality content', '$5K-$100K', TRUE, 1300),
('PODCAST', 'Podcasts & Audio', 'Podcast intros, audio dramas, audiobooks', '$500-$25K', FALSE, 1400),
('SPORTS', 'Sports Broadcasting', 'Sports events, highlights, documentaries', '$10K-$500K', FALSE, 1500),
('NEWS', 'News & Documentary', 'News programs, documentaries, current affairs', '$2K-$50K', FALSE, 1600),
('EDUCATION', 'Educational Content', 'E-learning, tutorials, educational videos', '$500-$20K', FALSE, 1700),
('LIVE_EVENT', 'Live Events', 'Concerts, festivals, conferences', '$5K-$100K', TRUE, 1800),
('THEME_PARK', 'Theme Parks & Attractions', 'Rides, shows, ambient music', '$10K-$250K', FALSE, 1900),
('RETAIL', 'Retail & In-Store', 'Background music, retail environments', '$1K-$50K', FALSE, 2000);

CREATE TABLE media_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category_id INT UNSIGNED,
    typical_duration VARCHAR(50),
    distribution_method VARCHAR(100),
    clearance_complexity ENUM('LOW', 'MEDIUM', 'HIGH', 'VERY_HIGH') DEFAULT 'MEDIUM',
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category_id),
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order),
    FOREIGN KEY (category_id) REFERENCES sync_category(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO media_type (code, name, description, typical_duration, distribution_method, clearance_complexity, display_order) VALUES
('FEATURE_FILM', 'Feature Film', 'Theatrical release films', '90-180 minutes', 'Theatrical/Streaming', 'HIGH', 100),
('SHORT_FILM', 'Short Film', 'Films under 40 minutes', '5-40 minutes', 'Festival/Online', 'MEDIUM', 200),
('DOCUMENTARY', 'Documentary', 'Non-fiction films and series', '60-120 minutes', 'Theatrical/TV/Streaming', 'HIGH', 300),
('TV_SERIES', 'TV Series', 'Episodic television content', '22-60 minutes/episode', 'Broadcast/Cable/Streaming', 'HIGH', 400),
('TV_MOVIE', 'TV Movie', 'Made-for-TV films', '90-120 minutes', 'Broadcast/Cable', 'MEDIUM', 500),
('MINI_SERIES', 'Mini Series', 'Limited series', '45-60 minutes/episode', 'TV/Streaming', 'HIGH', 600),
('REALITY_TV', 'Reality TV', 'Unscripted television', '30-60 minutes', 'TV/Streaming', 'MEDIUM', 700),
('COMMERCIAL_NATIONAL', 'National Commercial', 'Nationwide advertising', '15-60 seconds', 'TV/Online/Radio', 'VERY_HIGH', 800),
('COMMERCIAL_REGIONAL', 'Regional Commercial', 'Regional advertising', '15-60 seconds', 'Local TV/Radio', 'HIGH', 900),
('COMMERCIAL_ONLINE', 'Online Commercial', 'Digital-only advertising', '6-120 seconds', 'YouTube/Social/Web', 'MEDIUM', 1000),
('CONSOLE_GAME', 'Console Game', 'PlayStation, Xbox, Nintendo', 'Variable', 'Physical/Digital', 'HIGH', 1100),
('MOBILE_GAME', 'Mobile Game', 'iOS/Android games', 'Variable', 'App Stores', 'MEDIUM', 1200),
('PC_GAME', 'PC Game', 'Computer games', 'Variable', 'Steam/Epic/Direct', 'HIGH', 1300),
('VR_GAME', 'VR Game', 'Virtual reality games', 'Variable', 'VR Platforms', 'HIGH', 1400),
('WEB_SERIES', 'Web Series', 'Online episodic content', '5-30 minutes', 'YouTube/Vimeo/Platform', 'MEDIUM', 1500),
('YOUTUBE_VIDEO', 'YouTube Video', 'YouTube content', '5-60 minutes', 'YouTube', 'LOW', 1600),
('TIKTOK_VIDEO', 'TikTok Video', 'Short-form social content', '15-180 seconds', 'TikTok', 'LOW', 1700),
('INSTAGRAM_CONTENT', 'Instagram Content', 'Reels, IGTV, Stories', '15-60 seconds', 'Instagram', 'LOW', 1800),
('PODCAST_EPISODE', 'Podcast Episode', 'Audio podcast content', '20-120 minutes', 'Podcast Platforms', 'LOW', 1900),
('STREAMING_ORIGINAL', 'Streaming Original', 'Platform exclusive content', '30-60 minutes', 'Netflix/Disney+/etc', 'VERY_HIGH', 2000),
('METAVERSE_EXPERIENCE', 'Metaverse Experience', 'Virtual world content', 'Variable', 'Metaverse Platforms', 'HIGH', 2100),
('NFT_PROJECT', 'NFT Project', 'Non-fungible token content', 'Variable', 'Blockchain', 'MEDIUM', 2200),
('AI_FILM', 'AI-Generated Film', 'AI-created video content', 'Variable', 'Various', 'HIGH', 2300),
('CORPORATE_VIDEO', 'Corporate Video', 'Business presentations', '2-30 minutes', 'Internal/Web', 'LOW', 2400),
('TRAINING_VIDEO', 'Training Video', 'Educational content', '10-60 minutes', 'LMS/Internal', 'LOW', 2500),
('MUSIC_VIDEO', 'Music Video', 'Promotional music videos', '3-5 minutes', 'YouTube/TV', 'MEDIUM', 2600),
('LIVE_STREAM', 'Live Stream', 'Live broadcast content', 'Variable', 'Twitch/YouTube Live', 'MEDIUM', 2700),
('AR_EXPERIENCE', 'AR Experience', 'Augmented reality content', 'Variable', 'Mobile/AR Glasses', 'HIGH', 2800),
('THEATRICAL_TRAILER', 'Theatrical Trailer', 'Movie theater trailers', '90-150 seconds', 'Cinema/Online', 'VERY_HIGH', 2900),
('TV_PROMO', 'TV Promo', 'Television promotional spots', '15-30 seconds', 'TV/Streaming', 'HIGH', 3000);

CREATE TABLE production_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    typical_budget_range VARCHAR(100),
    negotiation_flexibility ENUM('NONE', 'LOW', 'MEDIUM', 'HIGH') DEFAULT 'MEDIUM',
    approval_speed ENUM('IMMEDIATE', 'FAST', 'STANDARD', 'SLOW') DEFAULT 'STANDARD',
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO production_type (code, name, description, typical_budget_range, negotiation_flexibility, approval_speed, display_order) VALUES
('MAJOR_STUDIO', 'Major Studio', 'Disney, Warner, Universal, Sony, Paramount', '$50M-$300M+', 'LOW', 'SLOW', 100),
('MINI_MAJOR', 'Mini Major Studio', 'Lionsgate, STX, MGM', '$10M-$100M', 'MEDIUM', 'STANDARD', 200),
('INDEPENDENT', 'Independent', 'Independent production companies', '$100K-$20M', 'HIGH', 'FAST', 300),
('STREAMING_PLATFORM', 'Streaming Platform', 'Netflix, Amazon, Apple, Disney+', '$5M-$200M', 'LOW', 'STANDARD', 400),
('NETWORK_TV', 'Network Television', 'ABC, CBS, NBC, FOX', '$1M-$10M/episode', 'LOW', 'SLOW', 500),
('CABLE_TV', 'Cable Television', 'HBO, Showtime, AMC, FX', '$500K-$5M/episode', 'MEDIUM', 'STANDARD', 600),
('ADVERTISING_AGENCY', 'Advertising Agency', 'Major ad agencies and brands', '$100K-$5M', 'LOW', 'FAST', 700),
('GAME_PUBLISHER_AAA', 'AAA Game Publisher', 'EA, Activision, Ubisoft, 2K', '$50M-$200M', 'LOW', 'SLOW', 800),
('GAME_PUBLISHER_INDIE', 'Indie Game Publisher', 'Independent game studios', '$10K-$5M', 'HIGH', 'FAST', 900),
('DIGITAL_AGENCY', 'Digital Agency', 'Digital marketing and content', '$10K-$500K', 'MEDIUM', 'FAST', 1000),
('PRODUCTION_HOUSE', 'Production House', 'Commercial production companies', '$50K-$2M', 'MEDIUM', 'STANDARD', 1100),
('STUDENT', 'Student Production', 'Film school and student projects', '$0-$50K', 'HIGH', 'IMMEDIATE', 1200),
('NON_PROFIT', 'Non-Profit', 'Charitable organizations', '$1K-$100K', 'HIGH', 'FAST', 1300),
('GOVERNMENT', 'Government', 'Government agencies and PSAs', '$10K-$500K', 'LOW', 'SLOW', 1400),
('STARTUP', 'Tech Startup', 'Technology and app companies', '$5K-$500K', 'HIGH', 'IMMEDIATE', 1500),
('FORTUNE_500', 'Fortune 500', 'Major corporations', '$50K-$5M', 'LOW', 'SLOW', 1600),
('SMALL_BUSINESS', 'Small Business', 'Local and small businesses', '$500-$50K', 'HIGH', 'IMMEDIATE', 1700),
('CONTENT_CREATOR', 'Content Creator', 'YouTubers, influencers, streamers', '$100-$50K', 'HIGH', 'IMMEDIATE', 1800),
('PODCAST_NETWORK', 'Podcast Network', 'Spotify, iHeart, Wondery', '$1K-$100K', 'MEDIUM', 'FAST', 1900),
('MUSIC_LABEL', 'Music Label', 'Record labels producing content', '$10K-$1M', 'MEDIUM', 'STANDARD', 2000),
('BROADCAST_NETWORK', 'Broadcast Network', 'International broadcasters', '$10K-$1M', 'LOW', 'STANDARD', 2100),
('FESTIVAL', 'Festival/Event', 'Film festivals, music festivals', '$5K-$500K', 'MEDIUM', 'FAST', 2200),
('THEATER_CHAIN', 'Theater Chain', 'AMC, Regal, Cinemark', '$10K-$100K', 'LOW', 'STANDARD', 2300),
('SPORTS_LEAGUE', 'Sports League', 'NFL, NBA, FIFA, Olympics', '$50K-$5M', 'LOW', 'SLOW', 2400),
('NEWS_OUTLET', 'News Organization', 'CNN, BBC, Reuters', '$5K-$100K', 'MEDIUM', 'FAST', 2500),
('EDUCATIONAL_INST', 'Educational Institution', 'Universities, schools, e-learning', '$1K-$50K', 'MEDIUM', 'STANDARD', 2600),
('METAVERSE_COMPANY', 'Metaverse Company', 'Meta, Roblox, Epic Games', '$10K-$1M', 'MEDIUM', 'FAST', 2700),
('NFT_PLATFORM', 'NFT Platform', 'OpenSea, Rarible, Foundation', '$1K-$100K', 'HIGH', 'IMMEDIATE', 2800),
('AI_COMPANY', 'AI Company', 'OpenAI, Anthropic, Stability AI', '$5K-$500K', 'MEDIUM', 'FAST', 2900),
('VR_STUDIO', 'VR/AR Studio', 'Oculus Studios, Magic Leap', '$10K-$500K', 'MEDIUM', 'STANDARD', 3000);

CREATE TABLE budget_range (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    min_amount DECIMAL(12,2),
    max_amount DECIMAL(12,2),
    currency_code VARCHAR(3) DEFAULT 'USD',
    typical_sync_fee_percentage DECIMAL(5,2),
    negotiation_required BOOLEAN DEFAULT TRUE,
    mfn_applicable BOOLEAN DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_amount_range (min_amount, max_amount),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO budget_range (code, name, min_amount, max_amount, typical_sync_fee_percentage, negotiation_required, mfn_applicable, display_order) VALUES
('MICRO', 'Micro Budget', 0.00, 10000.00, 5.00, FALSE, FALSE, 100),
('ULTRA_LOW', 'Ultra Low Budget', 10000.01, 50000.00, 3.00, TRUE, FALSE, 200),
('LOW', 'Low Budget', 50000.01, 250000.00, 2.50, TRUE, TRUE, 300),
('LOW_MID', 'Low-Mid Budget', 250000.01, 1000000.00, 2.00, TRUE, TRUE, 400),
('MID', 'Mid Budget', 1000000.01, 5000000.00, 1.50, TRUE, TRUE, 500),
('MID_HIGH', 'Mid-High Budget', 5000000.01, 15000000.00, 1.25, TRUE, TRUE, 600),
('HIGH', 'High Budget', 15000000.01, 50000000.00, 1.00, TRUE, TRUE, 700),
('BLOCKBUSTER', 'Blockbuster Budget', 50000000.01, 200000000.00, 0.75, TRUE, TRUE, 800),
('MEGA', 'Mega Budget', 200000000.01, 500000000.00, 0.50, TRUE, TRUE, 900),
('UNLIMITED', 'Unlimited Budget', 500000000.01, 999999999.99, 0.25, TRUE, TRUE, 1000),
('FESTIVAL', 'Festival Circuit', 0.00, 100000.00, 0.00, FALSE, FALSE, 1100),
('STUDENT_FILM', 'Student Film', 0.00, 5000.00, 0.00, FALSE, FALSE, 1200),
('NON_PROFIT_SMALL', 'Non-Profit Small', 0.00, 25000.00, 0.50, TRUE, FALSE, 1300),
('NON_PROFIT_LARGE', 'Non-Profit Large', 25000.01, 500000.00, 1.00, TRUE, FALSE, 1400),
('INDIE_GAME', 'Indie Game', 10000.00, 500000.00, 2.00, TRUE, FALSE, 1500),
('AAA_GAME', 'AAA Game', 10000000.00, 200000000.00, 1.00, TRUE, TRUE, 1600),
('COMMERCIAL_LOCAL', 'Commercial Local', 5000.00, 50000.00, 10.00, TRUE, FALSE, 1700),
('COMMERCIAL_REGIONAL', 'Commercial Regional', 50000.00, 500000.00, 8.00, TRUE, TRUE, 1800),
('COMMERCIAL_NATIONAL', 'Commercial National', 500000.00, 5000000.00, 5.00, TRUE, TRUE, 1900),
('COMMERCIAL_GLOBAL', 'Commercial Global', 5000000.00, 50000000.00, 3.00, TRUE, TRUE, 2000),
('STREAMING_ORIGINAL', 'Streaming Original', 1000000.00, 100000000.00, 1.50, TRUE, TRUE, 2100),
('NETWORK_SERIES', 'Network TV Series', 500000.00, 10000000.00, 2.00, TRUE, TRUE, 2200),
('CABLE_SERIES', 'Cable TV Series', 250000.00, 5000000.00, 2.50, TRUE, TRUE, 2300),
('WEB_SERIES', 'Web Series', 1000.00, 250000.00, 3.00, TRUE, FALSE, 2400),
('PODCAST', 'Podcast Production', 0.00, 100000.00, 5.00, TRUE, FALSE, 2500),
('CORPORATE', 'Corporate Production', 5000.00, 500000.00, 4.00, TRUE, FALSE, 2600),
('MUSIC_VIDEO', 'Music Video', 5000.00, 2000000.00, 0.00, FALSE, FALSE, 2700),
('TRAILER', 'Trailer Production', 100000.00, 5000000.00, 3.00, TRUE, TRUE, 2800),
('VR_AR_PRODUCTION', 'VR/AR Production', 50000.00, 10000000.00, 2.00, TRUE, TRUE, 2900),
('METAVERSE_PROJECT', 'Metaverse Project', 100000.00, 50000000.00, 1.50, TRUE, TRUE, 3000);

CREATE TABLE term_length (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    duration_months INT UNSIGNED,
    duration_description VARCHAR(100),
    is_perpetual BOOLEAN DEFAULT FALSE,
    renewal_option BOOLEAN DEFAULT FALSE,
    typical_fee_multiplier DECIMAL(4,2) DEFAULT 1.00,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_duration (duration_months),
    INDEX idx_perpetual (is_perpetual),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO term_length (code, name, duration_months, duration_description, is_perpetual, renewal_option, typical_fee_multiplier, display_order) VALUES
('PERPETUAL', 'Perpetual', NULL, 'Forever', TRUE, FALSE, 5.00, 100),
('1_MONTH', '1 Month', 1, '30 days', FALSE, TRUE, 0.25, 200),
('3_MONTHS', '3 Months', 3, '90 days', FALSE, TRUE, 0.50, 300),
('6_MONTHS', '6 Months', 6, '180 days', FALSE, TRUE, 0.75, 400),
('1_YEAR', '1 Year', 12, '365 days', FALSE, TRUE, 1.00, 500),
('2_YEARS', '2 Years', 24, '730 days', FALSE, TRUE, 1.50, 600),
('3_YEARS', '3 Years', 36, '1,095 days', FALSE, TRUE, 2.00, 700),
('5_YEARS', '5 Years', 60, '1,825 days', FALSE, TRUE, 2.50, 800),
('7_YEARS', '7 Years', 84, '2,555 days', FALSE, TRUE, 3.00, 900),
('10_YEARS', '10 Years', 120, '3,650 days', FALSE, TRUE, 3.50, 1000),
('15_YEARS', '15 Years', 180, '5,475 days', FALSE, TRUE, 4.00, 1100),
('20_YEARS', '20 Years', 240, '7,300 days', FALSE, TRUE, 4.50, 1200),
('LIFE_OF_PRODUCTION', 'Life of Production', NULL, 'Duration of production', FALSE, FALSE, 3.00, 1300),
('THEATRICAL_RUN', 'Theatrical Run', 6, 'Theater release period', FALSE, TRUE, 1.50, 1400),
('SEASON', 'TV Season', 9, 'Broadcast season', FALSE, TRUE, 1.25, 1500),
('CAMPAIGN', 'Campaign Period', 3, 'Advertising campaign', FALSE, TRUE, 1.00, 1600),
('FESTIVAL_RUN', 'Festival Run', 12, 'Film festival circuit', FALSE, FALSE, 0.50, 1700),
('INITIAL_RELEASE', 'Initial Release', 3, 'First 90 days', FALSE, TRUE, 0.75, 1800),
('PLATFORM_EXCLUSIVE', 'Platform Exclusive', 6, 'Platform exclusivity', FALSE, TRUE, 1.25, 1900),
('TEST_PERIOD', 'Test Period', 1, 'Trial/test usage', FALSE, TRUE, 0.10, 2000),
('EVENT_SPECIFIC', 'Event Specific', NULL, 'Single event only', FALSE, FALSE, 0.50, 2100),
('COPYRIGHT_TERM', 'Copyright Term', NULL, 'Life + 70 years', TRUE, FALSE, 10.00, 2200),
('DISTRIBUTION_TERM', 'Distribution Term', 84, 'Standard distribution', FALSE, TRUE, 2.50, 2300),
('HOME_VIDEO', 'Home Video Release', 60, 'DVD/Blu-ray period', FALSE, TRUE, 2.00, 2400),
('STREAMING_WINDOW', 'Streaming Window', 24, 'Streaming exclusive', FALSE, TRUE, 1.75, 2500),
('BROADCAST_WINDOW', 'Broadcast Window', 36, 'TV broadcast period', FALSE, TRUE, 2.00, 2600),
('GAME_LIFECYCLE', 'Game Lifecycle', 120, 'Active game support', FALSE, FALSE, 3.00, 2700),
('APP_LIFECYCLE', 'App Lifecycle', 60, 'Mobile app active', FALSE, TRUE, 2.00, 2800),
('METAVERSE_TERM', 'Metaverse Term', NULL, 'Virtual world active', FALSE, TRUE, 3.50, 2900),
('NFT_MINT_PERIOD', 'NFT Mint Period', 12, 'NFT minting window', FALSE, FALSE, 2.00, 3000);

CREATE TABLE exclusivity_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    fee_multiplier DECIMAL(4,2) DEFAULT 1.00,
    allows_competing_use BOOLEAN DEFAULT TRUE,
    territory_specific BOOLEAN DEFAULT FALSE,
    media_specific BOOLEAN DEFAULT FALSE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO exclusivity_type (code, name, description, fee_multiplier, allows_competing_use, territory_specific, media_specific, display_order) VALUES
('EXCLUSIVE', 'Fully Exclusive', 'Complete exclusivity across all uses', 3.00, FALSE, FALSE, FALSE, 100),
('NON_EXCLUSIVE', 'Non-Exclusive', 'No exclusivity restrictions', 1.00, TRUE, FALSE, FALSE, 200),
('CATEGORY_EXCLUSIVE', 'Category Exclusive', 'Exclusive within product category', 2.00, FALSE, FALSE, TRUE, 300),
('TERRITORY_EXCLUSIVE', 'Territory Exclusive', 'Exclusive within specific territories', 1.50, TRUE, TRUE, FALSE, 400),
('MEDIA_EXCLUSIVE', 'Media Exclusive', 'Exclusive within media type', 1.75, TRUE, FALSE, TRUE, 500),
('TIME_EXCLUSIVE', 'Time Window Exclusive', 'Exclusive for initial period', 1.50, TRUE, FALSE, FALSE, 600),
('PLATFORM_EXCLUSIVE', 'Platform Exclusive', 'Exclusive to specific platform', 2.00, TRUE, FALSE, TRUE, 700),
('BRAND_EXCLUSIVE', 'Brand Exclusive', 'Exclusive to brand/company', 2.50, FALSE, FALSE, FALSE, 800),
('INDUSTRY_EXCLUSIVE', 'Industry Exclusive', 'Exclusive within industry vertical', 2.25, FALSE, FALSE, TRUE, 900),
('FIRST_USE', 'First Use Rights', 'First to use before others', 1.75, TRUE, FALSE, FALSE, 1000),
('HOLDBACK', 'With Holdbacks', 'Specific holdback periods', 1.25, TRUE, TRUE, TRUE, 1100),
('MOST_FAVORED', 'Most Favored Nations', 'MFN pricing protection', 1.50, TRUE, FALSE, FALSE, 1200),
('CO_EXCLUSIVE', 'Co-Exclusive', 'Shared exclusivity with others', 1.25, TRUE, FALSE, FALSE, 1300),
('SEMI_EXCLUSIVE', 'Semi-Exclusive', 'Limited exclusivity rights', 1.50, TRUE, TRUE, TRUE, 1400),
('FESTIVAL_EXCLUSIVE', 'Festival Exclusive', 'Film festival exclusivity', 1.25, TRUE, FALSE, TRUE, 1500),
('STREAMING_EXCLUSIVE', 'Streaming Exclusive', 'Streaming platform exclusive', 2.00, TRUE, FALSE, TRUE, 1600),
('THEATRICAL_EXCLUSIVE', 'Theatrical Exclusive', 'Cinema exclusive window', 1.75, TRUE, TRUE, TRUE, 1700),
('BROADCAST_EXCLUSIVE', 'Broadcast Exclusive', 'TV broadcast exclusive', 1.75, TRUE, TRUE, TRUE, 1800),
('DIGITAL_EXCLUSIVE', 'Digital Exclusive', 'Digital platforms only', 1.50, TRUE, FALSE, TRUE, 1900),
('RETAIL_EXCLUSIVE', 'Retail Exclusive', 'Retail channel exclusive', 1.50, TRUE, TRUE, FALSE, 2000),
('GAME_EXCLUSIVE', 'Game Platform Exclusive', 'Single gaming platform', 2.50, FALSE, FALSE, TRUE, 2100),
('SOCIAL_EXCLUSIVE', 'Social Media Exclusive', 'Single social platform', 1.75, TRUE, FALSE, TRUE, 2200),
('NFT_EXCLUSIVE', 'NFT Exclusive', 'Exclusive NFT rights', 3.00, FALSE, FALSE, TRUE, 2300),
('METAVERSE_EXCLUSIVE', 'Metaverse Exclusive', 'Single metaverse platform', 2.50, FALSE, FALSE, TRUE, 2400),
('AI_EXCLUSIVE', 'AI Usage Exclusive', 'Exclusive AI training rights', 3.50, FALSE, FALSE, TRUE, 2500),
('LANGUAGE_EXCLUSIVE', 'Language Exclusive', 'Exclusive in language', 1.50, TRUE, TRUE, FALSE, 2600),
('DEVICE_EXCLUSIVE', 'Device Exclusive', 'Specific device type', 1.75, TRUE, FALSE, TRUE, 2700),
('COMPETITOR_EXCLUSIVE', 'Competitor Exclusive', 'Excludes direct competitors', 2.25, FALSE, FALSE, FALSE, 2800),
('CHANNEL_EXCLUSIVE', 'Channel Exclusive', 'Distribution channel exclusive', 1.75, TRUE, FALSE, TRUE, 2900),
('EVENT_EXCLUSIVE', 'Event Exclusive', 'Single event usage', 1.50, FALSE, FALSE, FALSE, 3000);

CREATE TABLE sync_usage_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category_id INT UNSIGNED,
    requires_separate_master BOOLEAN DEFAULT TRUE,
    requires_separate_publishing BOOLEAN DEFAULT TRUE,
    typical_placement VARCHAR(100),
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category (category_id),
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order),
    FOREIGN KEY (category_id) REFERENCES sync_category(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO sync_usage_type (code, name, description, requires_separate_master, requires_separate_publishing, typical_placement, display_order) VALUES
('OPENING_TITLE', 'Opening Title', 'Main title sequence', TRUE, TRUE, 'Opening credits', 100),
('CLOSING_CREDITS', 'Closing Credits', 'End credits sequence', TRUE, TRUE, 'End credits', 200),
('FEATURED_SCENE', 'Featured Scene', 'Prominent scene usage', TRUE, TRUE, 'Key scene', 300),
('BACKGROUND', 'Background Music', 'Background/underscore', TRUE, TRUE, 'Throughout', 400),
('SOURCE', 'Source Music', 'Diegetic/on-screen source', TRUE, TRUE, 'In scene', 500),
('MONTAGE', 'Montage Sequence', 'Montage/compilation', TRUE, TRUE, 'Montage', 600),
('TRAILER_MUSIC', 'Trailer Music', 'Theatrical trailer usage', TRUE, TRUE, 'Trailer', 700),
('THEME_SONG', 'Theme Song', 'Main theme/title song', TRUE, TRUE, 'Opening/closing', 800),
('SCORE', 'Original Score', 'Composed score', FALSE, TRUE, 'Throughout', 900),
('SONG_PERFORMANCE', 'Song Performance', 'On-screen performance', TRUE, TRUE, 'Performance scene', 1000),
('AMBIENT', 'Ambient Music', 'Atmospheric background', TRUE, TRUE, 'Background', 1100),
('TRANSITION', 'Transition Music', 'Scene transitions', TRUE, TRUE, 'Between scenes', 1200),
('ACTION_SEQUENCE', 'Action Sequence', 'Action/fight scenes', TRUE, TRUE, 'Action scenes', 1300),
('EMOTIONAL_SCENE', 'Emotional Scene', 'Dramatic moments', TRUE, TRUE, 'Key moments', 1400),
('COMEDY_BEAT', 'Comedy Beat', 'Comedic timing', TRUE, TRUE, 'Comedy scenes', 1500),
('MENU_MUSIC', 'Menu/Interface Music', 'Game/app menus', TRUE, TRUE, 'User interface', 1600),
('GAMEPLAY', 'Gameplay Music', 'In-game background', TRUE, TRUE, 'During gameplay', 1700),
('CUTSCENE', 'Cutscene Music', 'Game cinematics', TRUE, TRUE, 'Story sequences', 1800),
('LOADING_SCREEN', 'Loading Screen', 'Loading/waiting music', TRUE, TRUE, 'Loading screens', 1900),
('COMMERCIAL_JINGLE', 'Commercial Jingle', 'Advertising jingle', TRUE, TRUE, 'Throughout ad', 2000),
('PRODUCT_DEMO', 'Product Demo', 'Product demonstration', TRUE, TRUE, 'Demo sequence', 2100),
('BRAND_ANTHEM', 'Brand Anthem', 'Brand identity music', TRUE, TRUE, 'Brand moments', 2200),
('CALL_TO_ACTION', 'Call to Action', 'CTA music', TRUE, TRUE, 'End of ad', 2300),
('PODCAST_INTRO', 'Podcast Intro', 'Opening theme', TRUE, TRUE, 'Episode start', 2400),
('PODCAST_OUTRO', 'Podcast Outro', 'Closing theme', TRUE, TRUE, 'Episode end', 2500),
('SEGMENT_BUMPER', 'Segment Bumper', 'Section transitions', TRUE, TRUE, 'Between segments', 2600),
('LIVESTREAM_ALERT', 'Livestream Alert', 'Notification sounds', TRUE, TRUE, 'During stream', 2700),
('VIRTUAL_CONCERT', 'Virtual Concert', 'Metaverse performance', TRUE, TRUE, 'Virtual venue', 2800),
('NFT_AUDIO', 'NFT Audio Component', 'NFT soundtrack', TRUE, TRUE, 'With NFT', 2900),
('AI_TRAINING', 'AI Training Data', 'ML model training', TRUE, TRUE, 'Dataset', 3000);

CREATE TABLE territory_restriction (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    includes_territories TEXT,
    excludes_territories TEXT,
    is_worldwide BOOLEAN DEFAULT FALSE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_worldwide (is_worldwide),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO territory_restriction (code, name, description, includes_territories, excludes_territories, is_worldwide, display_order) VALUES
('WORLDWIDE', 'Worldwide', 'All territories globally', 'All', NULL, TRUE, 100),
('WORLDWIDE_EX_US', 'Worldwide excluding USA', 'All territories except USA', 'All', 'US', FALSE, 200),
('NORTH_AMERICA', 'North America', 'US, Canada, Mexico', 'US,CA,MX', NULL, FALSE, 300),
('USA_ONLY', 'USA Only', 'United States only', 'US', NULL, FALSE, 400),
('EUROPE', 'Europe', 'European Union + UK', 'EU,GB', NULL, FALSE, 500),
('ASIA_PACIFIC', 'Asia Pacific', 'Asia and Pacific regions', 'APAC', NULL, FALSE, 600),
('LATIN_AMERICA', 'Latin America', 'Central and South America', 'LATAM', NULL, FALSE, 700),
('ENGLISH_SPEAKING', 'English Speaking', 'English language territories', 'US,GB,CA,AU,NZ,IE', NULL, FALSE, 800),
('SPANISH_SPEAKING', 'Spanish Speaking', 'Spanish language territories', 'ES,MX,AR,CO,CL,PE', NULL, FALSE, 900),
('MAJOR_MARKETS', 'Major Markets', 'Top 10 music markets', 'US,JP,DE,GB,FR,KR,CA,AU,BR,IT', NULL, FALSE, 1000),
('STREAMING_TIER1', 'Streaming Tier 1', 'Premium streaming markets', 'US,GB,DE,JP,FR,CA,AU', NULL, FALSE, 1100),
('THEATRICAL_MAJOR', 'Major Theatrical', 'Major cinema markets', 'US,CN,JP,GB,FR,DE,KR,IN', NULL, FALSE, 1200),
('EU_ONLY', 'European Union Only', 'EU member states', 'EU', NULL, FALSE, 1300),
('COMMONWEALTH', 'Commonwealth', 'Commonwealth nations', 'GB,CA,AU,NZ,IN,ZA', NULL, FALSE, 1400),
('MIDDLE_EAST', 'Middle East', 'Middle Eastern countries', 'AE,SA,EG,IL,TR', NULL, FALSE, 1500),
('AFRICA', 'Africa', 'African continent', 'AFRICA', NULL, FALSE, 1600),
('CHINA_ONLY', 'China Only', 'Mainland China', 'CN', NULL, FALSE, 1700),
('JAPAN_ONLY', 'Japan Only', 'Japan', 'JP', NULL, FALSE, 1800),
('KOREA_ONLY', 'Korea Only', 'South Korea', 'KR', NULL, FALSE, 1900),
('INDIA_SUBCONTINENT', 'India Subcontinent', 'India, Pakistan, Bangladesh', 'IN,PK,BD', NULL, FALSE, 2000),
('SOUTHEAST_ASIA', 'Southeast Asia', 'ASEAN countries', 'SG,MY,TH,ID,PH,VN', NULL, FALSE, 2100),
('NORDICS', 'Nordic Countries', 'Scandinavia', 'SE,NO,DK,FI,IS', NULL, FALSE, 2200),
('DACH', 'DACH Region', 'Germany, Austria, Switzerland', 'DE,AT,CH', NULL, FALSE, 2300),
('BENELUX', 'Benelux', 'Belgium, Netherlands, Luxembourg', 'BE,NL,LU', NULL, FALSE, 2400),
('BRICS', 'BRICS Nations', 'Brazil, Russia, India, China, SA', 'BR,RU,IN,CN,ZA', NULL, FALSE, 2500),
('G7', 'G7 Countries', 'G7 member nations', 'US,GB,FR,DE,IT,CA,JP', NULL, FALSE, 2600),
('FESTIVAL_CIRCUIT', 'Festival Circuit', 'Film festival territories', 'FESTIVAL', NULL, FALSE, 2700),
('ONLINE_ONLY', 'Online Only', 'Digital distribution only', 'ONLINE', NULL, FALSE, 2800),
('METAVERSE', 'Metaverse Territories', 'Virtual world regions', 'VIRTUAL', NULL, FALSE, 2900),
('BLOCKCHAIN', 'Blockchain Networks', 'Decentralized networks', 'BLOCKCHAIN', NULL, FALSE, 3000);

CREATE TABLE sync_fee_structure (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    calculation_method VARCHAR(50),
    base_fee_applicable BOOLEAN DEFAULT TRUE,
    percentage_applicable BOOLEAN DEFAULT FALSE,
    mfn_compatible BOOLEAN DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO sync_fee_structure (code, name, description, calculation_method, base_fee_applicable, percentage_applicable, mfn_compatible, display_order) VALUES
('FLAT_FEE', 'Flat Fee', 'One-time flat payment', 'FIXED', TRUE, FALSE, TRUE, 100),
('BUDGET_PERCENTAGE', 'Budget Percentage', 'Percentage of production budget', 'PERCENTAGE', FALSE, TRUE, TRUE, 200),
('TIERED_BUDGET', 'Tiered by Budget', 'Fee scales with budget size', 'TIERED', TRUE, FALSE, TRUE, 300),
('PER_SECOND', 'Per Second Rate', 'Rate per second of usage', 'DURATION', TRUE, FALSE, TRUE, 400),
('BUYOUT', 'Complete Buyout', 'All rights buyout', 'FIXED', TRUE, FALSE, FALSE, 500),
('ADVANCE_ROYALTY', 'Advance Plus Royalty', 'Upfront plus backend', 'HYBRID', TRUE, TRUE, TRUE, 600),
('ROYALTY_ONLY', 'Royalty Only', 'Backend participation only', 'PERCENTAGE', FALSE, TRUE, TRUE, 700),
('STEP_DEAL', 'Step Deal', 'Increases with success', 'STEPPED', TRUE, TRUE, TRUE, 800),
('OPTIONS', 'Options Structure', 'Initial plus option periods', 'OPTIONS', TRUE, FALSE, TRUE, 900),
('REVENUE_SHARE', 'Revenue Share', 'Percentage of revenues', 'PERCENTAGE', FALSE, TRUE, TRUE, 1000),
('EQUITY', 'Equity Participation', 'Ownership stake', 'EQUITY', FALSE, TRUE, FALSE, 1100),
('GRATIS', 'Gratis/Free', 'No fee usage', 'FREE', FALSE, FALSE, FALSE, 1200),
('DONATION', 'Donation/Charity', 'Charitable contribution', 'DONATION', TRUE, FALSE, FALSE, 1300),
('PROMOTIONAL', 'Promotional Rate', 'Reduced promotional fee', 'REDUCED', TRUE, FALSE, TRUE, 1400),
('FESTIVAL_RATE', 'Festival Rate', 'Film festival pricing', 'FIXED', TRUE, FALSE, FALSE, 1500),
('STUDENT_RATE', 'Student Rate', 'Educational discount', 'REDUCED', TRUE, FALSE, FALSE, 1600),
('PACKAGE_DEAL', 'Package Deal', 'Multiple song bundle', 'BUNDLE', TRUE, FALSE, TRUE, 1700),
('BLANKET_LICENSE', 'Blanket License', 'Unlimited catalog access', 'SUBSCRIPTION', TRUE, FALSE, TRUE, 1800),
('PERFORMANCE_BASED', 'Performance Based', 'Based on viewership/sales', 'PERFORMANCE', TRUE, TRUE, TRUE, 1900),
('MILESTONE_BASED', 'Milestone Based', 'Payments at milestones', 'MILESTONE', TRUE, FALSE, TRUE, 2000),
('TERRITORY_BASED', 'Territory Based', 'Different rates by region', 'TERRITORY', TRUE, FALSE, TRUE, 2100),
('MEDIA_BASED', 'Media Based', 'Different rates by media', 'MEDIA', TRUE, FALSE, TRUE, 2200),
('HYBRID_MODEL', 'Hybrid Model', 'Combined fee structures', 'HYBRID', TRUE, TRUE, TRUE, 2300),
('NFT_ROYALTY', 'NFT Royalty', 'Smart contract royalties', 'BLOCKCHAIN', FALSE, TRUE, FALSE, 2400),
('STREAMING_MODEL', 'Streaming Model', 'Per-stream calculation', 'STREAMING', FALSE, TRUE, TRUE, 2500),
('SUBSCRIPTION_BASED', 'Subscription Based', 'Recurring payments', 'SUBSCRIPTION', TRUE, FALSE, TRUE, 2600),
('AUCTION_BASED', 'Auction Based', 'Competitive bidding', 'AUCTION', TRUE, FALSE, FALSE, 2700),
('DYNAMIC_PRICING', 'Dynamic Pricing', 'AI-adjusted pricing', 'DYNAMIC', TRUE, TRUE, FALSE, 2800),
('CRYPTOCURRENCY', 'Cryptocurrency', 'Crypto payments', 'CRYPTO', TRUE, FALSE, FALSE, 2900),
('BARTER_EXCHANGE', 'Barter Exchange', 'Service exchange', 'BARTER', FALSE, FALSE, FALSE, 3000);

CREATE TABLE clearance_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    clearance_scope VARCHAR(100),
    typical_timeline_days INT UNSIGNED,
    complexity_level ENUM('LOW', 'MEDIUM', 'HIGH', 'VERY_HIGH') DEFAULT 'MEDIUM',
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_complexity (complexity_level),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO clearance_type (code, name, description, clearance_scope, typical_timeline_days, complexity_level, display_order) VALUES
('MASTER_ONLY', 'Master Recording Only', 'Sound recording rights only', 'Master', 7, 'LOW', 100),
('PUBLISHING_ONLY', 'Publishing Only', 'Composition rights only', 'Publishing', 14, 'MEDIUM', 200),
('MASTER_AND_PUB', 'Master and Publishing', 'Both recording and composition', 'Master + Publishing', 21, 'HIGH', 300),
('ALL_IN', 'All-In Rights', 'Complete rights package', 'All Rights', 30, 'VERY_HIGH', 400),
('SYNC_ONLY', 'Sync Rights Only', 'Synchronization rights', 'Sync', 14, 'MEDIUM', 500),
('PERFORMANCE', 'Performance Rights', 'Public performance rights', 'Performance', 7, 'LOW', 600),
('MECHANICAL', 'Mechanical Rights', 'Reproduction rights', 'Mechanical', 14, 'MEDIUM', 700),
('GRAND_RIGHTS', 'Grand Rights', 'Dramatic performance rights', 'Grand', 30, 'HIGH', 800),
('ADAPTATION', 'Adaptation Rights', 'Arrangement/adaptation rights', 'Adaptation', 21, 'HIGH', 900),
('SAMPLE_CLEARANCE', 'Sample Clearance', 'Sampling rights', 'Sample', 30, 'VERY_HIGH', 1000),
('INTERPOLATION', 'Interpolation Rights', 'Re-recording rights', 'Interpolation', 21, 'HIGH', 1100),
('COVER_VERSION', 'Cover Version Rights', 'Cover recording rights', 'Cover', 14, 'MEDIUM', 1200),
('REMIX_RIGHTS', 'Remix Rights', 'Remix and derivative works', 'Remix', 21, 'HIGH', 1300),
('TRANSLATION', 'Translation Rights', 'Lyric translation rights', 'Translation', 14, 'MEDIUM', 1400),
('MORAL_RIGHTS', 'Moral Rights', 'Artist integrity rights', 'Moral', 30, 'HIGH', 1500),
('NEIGHBORING', 'Neighboring Rights', 'Performer/producer rights', 'Neighboring', 21, 'HIGH', 1600),
('DIGITAL_RIGHTS', 'Digital Rights', 'Digital distribution rights', 'Digital', 14, 'MEDIUM', 1700),
('STREAMING_RIGHTS', 'Streaming Rights', 'Streaming platform rights', 'Streaming', 14, 'MEDIUM', 1800),
('BROADCAST_RIGHTS', 'Broadcast Rights', 'TV/radio broadcast rights', 'Broadcast', 14, 'MEDIUM', 1900),
('THEATRICAL_RIGHTS', 'Theatrical Rights', 'Cinema exhibition rights', 'Theatrical', 21, 'HIGH', 2000),
('HOME_VIDEO_RIGHTS', 'Home Video Rights', 'DVD/Blu-ray rights', 'Home Video', 14, 'MEDIUM', 2100),
('MERCHANDISING', 'Merchandising Rights', 'Product/merchandise rights', 'Merchandise', 30, 'HIGH', 2200),
('PRINT_RIGHTS', 'Print Rights', 'Sheet music/lyric rights', 'Print', 14, 'MEDIUM', 2300),
('KARAOKE_RIGHTS', 'Karaoke Rights', 'Karaoke usage rights', 'Karaoke', 14, 'MEDIUM', 2400),
('RINGTONE_RIGHTS', 'Ringtone Rights', 'Mobile ringtone rights', 'Ringtone', 7, 'LOW', 2500),
('INTERACTIVE_RIGHTS', 'Interactive Rights', 'Gaming/interactive media', 'Interactive', 21, 'HIGH', 2600),
('NFT_RIGHTS', 'NFT Rights', 'Non-fungible token rights', 'NFT', 30, 'VERY_HIGH', 2700),
('AI_RIGHTS', 'AI Usage Rights', 'Artificial intelligence usage', 'AI', 30, 'VERY_HIGH', 2800),
('METAVERSE_RIGHTS', 'Metaverse Rights', 'Virtual world usage rights', 'Metaverse', 30, 'VERY_HIGH', 2900),
('BLOCKCHAIN_RIGHTS', 'Blockchain Rights', 'On-chain usage rights', 'Blockchain', 30, 'VERY_HIGH', 3000);

CREATE TABLE sync_approval_level (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    approval_required_from VARCHAR(200),
    typical_response_days INT UNSIGNED,
    auto_approve_threshold DECIMAL(10,2),
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO sync_approval_level (code, name, description, approval_required_from, typical_response_days, auto_approve_threshold, display_order) VALUES
('PRE_APPROVED', 'Pre-Approved', 'No approval needed', 'None', 0, 999999.99, 100),
('LABEL_ONLY', 'Label Only', 'Record label approval', 'Record Label', 5, 50000.00, 200),
('PUBLISHER_ONLY', 'Publisher Only', 'Music publisher approval', 'Publisher', 7, 50000.00, 300),
('ARTIST_ONLY', 'Artist Only', 'Artist approval', 'Artist', 10, 25000.00, 400),
('WRITER_ONLY', 'Writer Only', 'Songwriter approval', 'Songwriter', 10, 25000.00, 500),
('LABEL_AND_ARTIST', 'Label and Artist', 'Both label and artist', 'Label + Artist', 14, 10000.00, 600),
('PUBLISHER_AND_WRITER', 'Publisher and Writer', 'Both publisher and writer', 'Publisher + Writer', 14, 10000.00, 700),
('ALL_PARTIES', 'All Parties', 'All rights holders', 'All Rights Holders', 21, 5000.00, 800),
('MANAGEMENT', 'Management Approval', 'Artist management', 'Management', 7, 25000.00, 900),
('ESTATE', 'Estate Approval', 'Estate administrator', 'Estate', 30, 0.00, 1000),
('BAND_UNANIMOUS', 'Band Unanimous', 'All band members', 'All Band Members', 14, 0.00, 1100),
('BAND_MAJORITY', 'Band Majority', 'Majority of band', 'Band Majority', 10, 10000.00, 1200),
('CO_WRITER_ALL', 'All Co-Writers', 'All songwriters', 'All Co-Writers', 21, 0.00, 1300),
('CO_WRITER_MAJORITY', 'Majority Co-Writers', 'Majority of writers', 'Writer Majority', 14, 10000.00, 1400),
('SAMPLE_OWNER', 'Sample Owner', 'Original sample owner', 'Sample Rights Holder', 30, 0.00, 1500),
('FEATURED_ARTIST', 'Featured Artist', 'Guest artist approval', 'Featured Artist', 10, 10000.00, 1600),
('PRODUCER', 'Producer Approval', 'Record producer', 'Producer', 7, 25000.00, 1700),
('LEGAL_TEAM', 'Legal Team', 'Legal department review', 'Legal', 14, 0.00, 1800),
('BUSINESS_AFFAIRS', 'Business Affairs', 'Business affairs review', 'Business Affairs', 10, 50000.00, 1900),
('BRAND_APPROVAL', 'Brand Approval', 'Brand/endorsement review', 'Brand Team', 14, 0.00, 2000),
('MORAL_RIGHTS_HOLDER', 'Moral Rights Holder', 'Moral rights approval', 'Moral Rights Holder', 21, 0.00, 2100),
('SYNC_AGENT', 'Sync Agent', 'Sync licensing agent', 'Sync Agent', 5, 100000.00, 2200),
('SUB_PUBLISHER', 'Sub-Publisher', 'Territory sub-publisher', 'Sub-Publisher', 10, 25000.00, 2300),
('COLLECTIVE', 'Collective Society', 'PRO/CMO approval', 'Collective Society', 14, 10000.00, 2400),
('DISTRIBUTOR', 'Distributor Approval', 'Distribution company', 'Distributor', 7, 50000.00, 2500),
('INVESTOR', 'Investor Approval', 'Financial stakeholder', 'Investor', 14, 0.00, 2600),
('COMMITTEE', 'Committee Review', 'Approval committee', 'Committee', 21, 0.00, 2700),
('BOARD_APPROVAL', 'Board Approval', 'Board of directors', 'Board', 30, 0.00, 2800),
('BLOCKCHAIN_DAO', 'DAO Approval', 'Decentralized voting', 'DAO Members', 7, 10000.00, 2900),
('AI_AUTOMATED', 'AI Automated', 'Automated approval system', 'AI System', 1, 100000.00, 3000);

CREATE TABLE media_format (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    technical_specs VARCHAR(200),
    is_digital BOOLEAN DEFAULT TRUE,
    is_physical BOOLEAN DEFAULT FALSE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_digital (is_digital),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO media_format (code, name, description, technical_specs, is_digital, is_physical, display_order) VALUES
('THEATRICAL_2D', 'Theatrical 2D', 'Standard cinema projection', '2K/4K DCP', TRUE, FALSE, 100),
('THEATRICAL_3D', 'Theatrical 3D', '3D cinema projection', '2K/4K DCP 3D', TRUE, FALSE, 200),
('THEATRICAL_IMAX', 'IMAX', 'IMAX format projection', 'IMAX DMR', TRUE, FALSE, 300),
('STREAMING_HD', 'Streaming HD', 'HD streaming delivery', '1080p H.264/H.265', TRUE, FALSE, 400),
('STREAMING_4K', 'Streaming 4K', '4K streaming delivery', '4K HDR H.265/AV1', TRUE, FALSE, 500),
('STREAMING_8K', 'Streaming 8K', '8K streaming delivery', '8K HDR AV1', TRUE, FALSE, 600),
('BROADCAST_SD', 'Broadcast SD', 'Standard definition TV', '480i/576i MPEG-2', TRUE, FALSE, 700),
('BROADCAST_HD', 'Broadcast HD', 'High definition TV', '1080i/720p MPEG-2/4', TRUE, FALSE, 800),
('BROADCAST_4K', 'Broadcast 4K', '4K television broadcast', '2160p HEVC', TRUE, FALSE, 900),
('DVD', 'DVD', 'Digital versatile disc', 'DVD-Video MPEG-2', FALSE, TRUE, 1000),
('BLURAY', 'Blu-ray', 'Blu-ray disc', 'BD-ROM H.264/H.265', FALSE, TRUE, 1100),
('BLURAY_4K', '4K Ultra HD Blu-ray', '4K UHD disc', 'BD-ROM 4K HDR HEVC', FALSE, TRUE, 1200),
('DIGITAL_DOWNLOAD', 'Digital Download', 'Download to own', 'Variable codec', TRUE, FALSE, 1300),
('MOBILE_STREAM', 'Mobile Streaming', 'Mobile optimized', 'Adaptive bitrate', TRUE, FALSE, 1400),
('PODCAST_AUDIO', 'Podcast Audio', 'Podcast format', 'MP3/AAC 128-320kbps', TRUE, FALSE, 1500),
('RADIO_BROADCAST', 'Radio Broadcast', 'Traditional radio', 'FM/AM/DAB', TRUE, FALSE, 1600),
('RADIO_DIGITAL', 'Digital Radio', 'Internet radio', 'AAC/MP3 stream', TRUE, FALSE, 1700),
('VINYL_RECORD', 'Vinyl Record', 'Analog vinyl', '33/45 RPM', FALSE, TRUE, 1800),
('CD_AUDIO', 'Compact Disc', 'Audio CD', 'Red Book 44.1kHz', FALSE, TRUE, 1900),
('CASSETTE', 'Cassette Tape', 'Analog cassette', 'Compact Cassette', FALSE, TRUE, 2000),
('VR_360', 'VR 360 Video', '360-degree video', '4K-8K 360 H.265', TRUE, FALSE, 2100),
('VR_INTERACTIVE', 'VR Interactive', 'Interactive VR', 'Unity/Unreal Engine', TRUE, FALSE, 2200),
('AR_MOBILE', 'AR Mobile', 'Mobile AR experience', 'ARCore/ARKit', TRUE, FALSE, 2300),
('AR_GLASSES', 'AR Glasses', 'AR glasses display', 'HoloLens/Magic Leap', TRUE, FALSE, 2400),
('HOLOGRAPHIC', 'Holographic', 'Holographic display', 'Light field display', TRUE, FALSE, 2500),
('NFT_VIDEO', 'NFT Video', 'Video NFT format', 'IPFS/Arweave MP4', TRUE, FALSE, 2600),
('NFT_AUDIO', 'NFT Audio', 'Audio NFT format', 'IPFS/Arweave FLAC', TRUE, FALSE, 2700),
('METAVERSE_STREAM', 'Metaverse Stream', 'Virtual world stream', 'Real-time 3D', TRUE, FALSE, 2800),
('AI_GENERATED', 'AI Generated', 'AI-created format', 'Neural synthesis', TRUE, FALSE, 2900),
('QUANTUM', 'Quantum Format', 'Quantum computing', 'Quantum encoded', TRUE, FALSE, 3000);

CREATE TABLE broadcast_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    reach_type VARCHAR(50),
    typical_audience_size VARCHAR(100),
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO broadcast_type (code, name, description, reach_type, typical_audience_size, display_order) VALUES
('NETWORK_PRIME', 'Network Primetime', 'Major network primetime', 'National', '5M-20M viewers', 100),
('NETWORK_DAYTIME', 'Network Daytime', 'Network daytime programming', 'National', '1M-5M viewers', 200),
('NETWORK_LATE', 'Network Late Night', 'Late night programming', 'National', '500K-3M viewers', 300),
('CABLE_PREMIUM', 'Premium Cable', 'HBO, Showtime, etc.', 'National', '500K-5M viewers', 400),
('CABLE_BASIC', 'Basic Cable', 'Standard cable channels', 'National', '100K-2M viewers', 500),
('LOCAL_TV', 'Local Television', 'Local TV stations', 'Local/Regional', '50K-500K viewers', 600),
('PUBLIC_TV', 'Public Television', 'PBS and public TV', 'National', '100K-2M viewers', 700),
('SATELLITE_TV', 'Satellite TV', 'Satellite broadcast', 'National/International', '100K-5M viewers', 800),
('STREAMING_LIVE', 'Live Streaming', 'Live stream broadcast', 'Global', '1K-10M viewers', 900),
('STREAMING_VOD', 'Video on Demand', 'On-demand streaming', 'Global', 'Variable', 1000),
('RADIO_NATIONAL', 'National Radio', 'National radio networks', 'National', '100K-5M listeners', 1100),
('RADIO_LOCAL', 'Local Radio', 'Local radio stations', 'Local/Regional', '10K-500K listeners', 1200),
('RADIO_SATELLITE', 'Satellite Radio', 'SiriusXM, etc.', 'National', '50K-2M listeners', 1300),
('RADIO_INTERNET', 'Internet Radio', 'Online radio stations', 'Global', '1K-500K listeners', 1400),
('PODCAST_MAJOR', 'Major Podcast', 'Top podcast networks', 'Global', '50K-5M downloads', 1500),
('PODCAST_INDIE', 'Independent Podcast', 'Independent podcasts', 'Global', '100-50K downloads', 1600),
('CINEMA_WIDE', 'Wide Theatrical', '2000+ screens', 'National', '1M-50M tickets', 1700),
('CINEMA_LIMITED', 'Limited Theatrical', '<1000 screens', 'Regional', '10K-1M tickets', 1800),
('FESTIVAL_MAJOR', 'Major Festival', 'Cannes, Sundance, etc.', 'International', '1K-100K attendees', 1900),
('FESTIVAL_REGIONAL', 'Regional Festival', 'Local film festivals', 'Regional', '100-10K attendees', 2000),
('SPORTS_MAJOR', 'Major Sports Event', 'Super Bowl, World Cup', 'Global', '10M-1B viewers', 2100),
('SPORTS_REGULAR', 'Regular Sports', 'Regular season games', 'National', '100K-10M viewers', 2200),
('NEWS_BREAKING', 'Breaking News', 'Live news coverage', 'National/Global', '1M-50M viewers', 2300),
('NEWS_REGULAR', 'Regular News', 'Daily news programs', 'National', '500K-5M viewers', 2400),
('AWARD_SHOW', 'Award Show', 'Oscars, Grammys, etc.', 'Global', '5M-50M viewers', 2500),
('LIVE_CONCERT', 'Live Concert Stream', 'Concert broadcasts', 'Global', '10K-5M viewers', 2600),
('ESPORTS', 'Esports Broadcast', 'Gaming competitions', 'Global', '50K-10M viewers', 2700),
('METAVERSE_EVENT', 'Metaverse Event', 'Virtual world events', 'Virtual Global', '1K-10M avatars', 2800),
('SOCIAL_LIVE', 'Social Media Live', 'Instagram/TikTok Live', 'Global', '100-1M viewers', 2900),
('AI_BROADCAST', 'AI-Generated Broadcast', 'AI-created content', 'Variable', 'Variable', 3000);

CREATE TABLE sync_placement_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    prominence_level ENUM('BACKGROUND', 'MODERATE', 'FEATURED', 'PROMINENT') DEFAULT 'MODERATE',
    typical_duration VARCHAR(50),
    fee_impact_multiplier DECIMAL(4,2) DEFAULT 1.00,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_prominence (prominence_level),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO sync_placement_type (code, name, description, prominence_level, typical_duration, fee_impact_multiplier, display_order) VALUES
('MAIN_TITLE', 'Main Title Sequence', 'Opening title sequence', 'PROMINENT', '30-120 seconds', 3.00, 100),
('END_TITLE', 'End Title/Credits', 'Closing credits', 'FEATURED', '60-300 seconds', 2.00, 200),
('KEY_SCENE', 'Key Scene', 'Pivotal story moment', 'PROMINENT', '30-180 seconds', 2.50, 300),
('MONTAGE', 'Montage Sequence', 'Montage/compilation', 'FEATURED', '60-180 seconds', 2.00, 400),
('BACKGROUND_SCENE', 'Background Scene', 'Background music', 'BACKGROUND', '30-300 seconds', 1.00, 500),
('SOURCE_VISIBLE', 'Visible Source', 'On-screen source', 'MODERATE', '15-120 seconds', 1.50, 600),
('SOURCE_IMPLIED', 'Implied Source', 'Off-screen source', 'BACKGROUND', '15-120 seconds', 1.25, 700),
('VOCAL_PERFORMANCE', 'Vocal Performance', 'Character singing', 'PROMINENT', '60-240 seconds', 3.00, 800),
('INSTRUMENTAL_PERF', 'Instrumental Performance', 'Character playing', 'FEATURED', '30-180 seconds', 2.50, 900),
('DANCE_SEQUENCE', 'Dance Sequence', 'Dance scene', 'PROMINENT', '60-300 seconds', 2.50, 1000),
('ACTION_SEQUENCE', 'Action Sequence', 'Fight/chase scene', 'FEATURED', '60-300 seconds', 2.00, 1100),
('ROMANTIC_SCENE', 'Romantic Scene', 'Love scene', 'FEATURED', '30-180 seconds', 2.00, 1200),
('DRAMATIC_MOMENT', 'Dramatic Moment', 'Emotional climax', 'PROMINENT', '30-120 seconds', 2.50, 1300),
('COMEDY_BEAT', 'Comedy Beat', 'Comedic timing', 'MODERATE', '5-30 seconds', 1.50, 1400),
('TRANSITION', 'Scene Transition', 'Between scenes', 'BACKGROUND', '5-15 seconds', 0.75, 1500),
('ESTABLISHING', 'Establishing Shot', 'Location establishment', 'BACKGROUND', '10-30 seconds', 1.00, 1600),
('TRAILER_FEATURED', 'Trailer Featured', 'Prominent in trailer', 'PROMINENT', '15-150 seconds', 3.50, 1700),
('TRAILER_BACKGROUND', 'Trailer Background', 'Background in trailer', 'MODERATE', '15-150 seconds', 2.00, 1800),
('PROMO_MAIN', 'Promo Main Music', 'Main promo music', 'PROMINENT', '15-60 seconds', 3.00, 1900),
('BUMPER_IN', 'Bumper In', 'Segment intro', 'MODERATE', '3-10 seconds', 1.25, 2000),
('BUMPER_OUT', 'Bumper Out', 'Segment outro', 'MODERATE', '3-10 seconds', 1.25, 2100),
('LOGO_MUSIC', 'Logo/Ident Music', 'Brand logo music', 'FEATURED', '3-15 seconds', 2.00, 2200),
('MENU_MUSIC', 'Menu/Interface', 'UI/menu music', 'BACKGROUND', 'Looped', 1.00, 2300),
('LOADING_MUSIC', 'Loading Screen', 'Loading/waiting', 'BACKGROUND', 'Looped', 0.75, 2400),
('CUTSCENE', 'Game Cutscene', 'Story cinematics', 'FEATURED', '30-300 seconds', 2.00, 2500),
('GAMEPLAY_DYNAMIC', 'Dynamic Gameplay', 'Adaptive music', 'MODERATE', 'Variable', 1.50, 2600),
('VICTORY_MUSIC', 'Victory/Achievement', 'Success moments', 'FEATURED', '5-30 seconds', 1.75, 2700),
('AMBIENT_WORLD', 'Ambient World', 'Environment music', 'BACKGROUND', 'Continuous', 1.00, 2800),
('BOSS_BATTLE', 'Boss Battle', 'Major confrontation', 'PROMINENT', '120-600 seconds', 2.50, 2900),
('CHARACTER_THEME', 'Character Theme', 'Character-specific', 'FEATURED', 'Variable', 2.00, 3000);

CREATE TABLE music_usage_context (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    emotional_tone VARCHAR(100),
    narrative_function VARCHAR(100),
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO music_usage_context (code, name, description, emotional_tone, narrative_function, display_order) VALUES
('EMOTIONAL_CLIMAX', 'Emotional Climax', 'Peak emotional moment', 'Intense/Moving', 'Character revelation', 100),
('ROMANTIC_MOMENT', 'Romantic Moment', 'Love/romance scenes', 'Romantic/Tender', 'Relationship development', 200),
('ACTION_INTENSE', 'Intense Action', 'High-energy action', 'Exciting/Tense', 'Conflict escalation', 300),
('SUSPENSE_BUILD', 'Suspense Building', 'Creating tension', 'Tense/Mysterious', 'Plot development', 400),
('COMEDY_TIMING', 'Comedy Timing', 'Comedic moments', 'Light/Humorous', 'Comic relief', 500),
('TRAGEDY_LOSS', 'Tragedy/Loss', 'Death/loss scenes', 'Sad/Mournful', 'Character loss', 600),
('VICTORY_TRIUMPH', 'Victory/Triumph', 'Success moments', 'Triumphant/Uplifting', 'Goal achievement', 700),
('MYSTERY_REVEAL', 'Mystery Reveal', 'Plot revelations', 'Mysterious/Revealing', 'Story revelation', 800),
('HORROR_SCARE', 'Horror/Scare', 'Frightening moments', 'Scary/Disturbing', 'Fear creation', 900),
('NOSTALGIA', 'Nostalgic Moment', 'Memory/flashback', 'Nostalgic/Wistful', 'Past reflection', 1000),
('CELEBRATION', 'Celebration', 'Party/festive scenes', 'Joyful/Festive', 'Success celebration', 1100),
('CONTEMPLATION', 'Contemplation', 'Thoughtful moments', 'Reflective/Pensive', 'Character thought', 1200),
('TRANSFORMATION', 'Transformation', 'Character change', 'Evolving/Dynamic', 'Character growth', 1300),
('ESTABLISHING_MOOD', 'Establishing Mood', 'Setting tone', 'Variable', 'Atmosphere creation', 1400),
('TRANSITION_SMOOTH', 'Smooth Transition', 'Scene connection', 'Neutral/Flowing', 'Scene bridge', 1500),
('MONTAGE_PASSAGE', 'Time Passage', 'Showing time pass', 'Progressive', 'Time compression', 1600),
('CHASE_PURSUIT', 'Chase/Pursuit', 'Chase sequences', 'Urgent/Intense', 'Action progression', 1700),
('DREAM_SEQUENCE', 'Dream Sequence', 'Dream/fantasy', 'Ethereal/Surreal', 'Subconscious exploration', 1800),
('FLASHBACK', 'Flashback', 'Past events', 'Nostalgic/Historical', 'Backstory reveal', 1900),
('FORESHADOWING', 'Foreshadowing', 'Hinting future', 'Ominous/Suggestive', 'Plot setup', 2000),
('CHARACTER_INTRO', 'Character Introduction', 'New character', 'Defining/Memorable', 'Character establishment', 2100),
('LOCATION_ESTABLISH', 'Location Establishment', 'New setting', 'Atmospheric', 'Setting introduction', 2200),
('CONFLICT_RESOLUTION', 'Conflict Resolution', 'Problem solving', 'Resolving/Calming', 'Story resolution', 2300),
('CLIFFHANGER', 'Cliffhanger', 'Episode ending', 'Suspenseful/Unresolved', 'Audience retention', 2400),
('REUNION', 'Reunion Scene', 'Characters reuniting', 'Emotional/Joyful', 'Relationship restoration', 2500),
('BETRAYAL', 'Betrayal Moment', 'Trust broken', 'Dark/Shocking', 'Plot twist', 2600),
('DISCOVERY', 'Discovery', 'Finding something', 'Curious/Exciting', 'Plot advancement', 2700),
('SACRIFICE', 'Sacrifice Scene', 'Character sacrifice', 'Noble/Tragic', 'Character depth', 2800),
('REDEMPTION', 'Redemption Arc', 'Character redemption', 'Hopeful/Transformative', 'Character completion', 2900),
('APOCALYPTIC', 'Apocalyptic/End', 'World ending', 'Epic/Devastating', 'Ultimate stakes', 3000);

CREATE TABLE sync_pricing_model (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    calculation_basis VARCHAR(100),
    includes_backend BOOLEAN DEFAULT FALSE,
    negotiable BOOLEAN DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO sync_pricing_model (code, name, description, calculation_basis, includes_backend, negotiable, display_order) VALUES
('FLAT_FEE_SIMPLE', 'Simple Flat Fee', 'One-time payment', 'Fixed amount', FALSE, TRUE, 100),
('MFN', 'Most Favored Nations', 'Equal to highest paid', 'Highest comparable', FALSE, FALSE, 200),
('BUDGET_PERCENT', 'Budget Percentage', 'Percent of production budget', 'Production budget', FALSE, TRUE, 300),
('MUSIC_BUDGET_PERCENT', 'Music Budget Percentage', 'Percent of music budget', 'Music budget', FALSE, TRUE, 400),
('PER_SECOND_RATE', 'Per Second Rate', 'Rate multiplied by duration', 'Usage duration', FALSE, TRUE, 500),
('TIERED_BY_MEDIA', 'Tiered by Media', 'Different rates per media', 'Media type', FALSE, TRUE, 600),
('TIERED_BY_TERRITORY', 'Tiered by Territory', 'Different rates per region', 'Territory', FALSE, TRUE, 700),
('STEP_DEAL_SUCCESS', 'Step Deal', 'Increases with success', 'Performance metrics', TRUE, TRUE, 800),
('ROYALTY_ADVANCE', 'Advance + Royalty', 'Upfront plus backend', 'Hybrid', TRUE, TRUE, 900),
('PURE_ROYALTY', 'Pure Royalty', 'Backend only', 'Revenue share', TRUE, TRUE, 1000),
('OPTION_STRUCTURE', 'Option Structure', 'Initial plus options', 'Term-based', FALSE, TRUE, 1100),
('SLIDING_SCALE', 'Sliding Scale', 'Decreases over time', 'Time-based', FALSE, TRUE, 1200),
('PERFORMANCE_BASED', 'Performance Based', 'Based on metrics', 'KPIs', TRUE, TRUE, 1300),
('AUCTION_DYNAMIC', 'Dynamic Auction', 'Market-based pricing', 'Competitive bid', FALSE, FALSE, 1400),
('PACKAGE_BUNDLE', 'Package Bundle', 'Multiple songs discount', 'Volume', FALSE, TRUE, 1500),
('BLANKET_DEAL', 'Blanket Deal', 'All catalog access', 'Catalog-wide', FALSE, TRUE, 1600),
('REVENUE_SHARE', 'Revenue Share', 'Percentage of revenue', 'Gross revenue', TRUE, FALSE, 1700),
('PROFIT_SHARE', 'Profit Share', 'Percentage of profit', 'Net profit', TRUE, TRUE, 1800),
('EQUITY_STAKE', 'Equity Stake', 'Ownership participation', 'Company equity', TRUE, FALSE, 1900),
('MILESTONE_BASED', 'Milestone Payments', 'Payments at milestones', 'Project milestones', FALSE, TRUE, 2000),
('SUBSCRIPTION_MODEL', 'Subscription Model', 'Recurring payments', 'Time-based', FALSE, TRUE, 2100),
('FREEMIUM', 'Freemium Model', 'Free with upgrades', 'Tiered access', FALSE, FALSE, 2200),
('DONATION_BASED', 'Donation Based', 'Voluntary payment', 'Goodwill', FALSE, FALSE, 2300),
('CRYPTOCURRENCY', 'Crypto Payment', 'Blockchain currency', 'Crypto value', FALSE, TRUE, 2400),
('NFT_SMART_CONTRACT', 'NFT Smart Contract', 'Automated royalties', 'Blockchain', TRUE, FALSE, 2500),
('AI_DYNAMIC', 'AI Dynamic Pricing', 'Algorithm-based', 'AI calculation', FALSE, FALSE, 2600),
('STREAMING_MICRO', 'Streaming Micropayment', 'Per-stream payment', 'Stream count', TRUE, FALSE, 2700),
('METAVERSE_ECONOMY', 'Metaverse Economy', 'Virtual currency', 'Virtual economy', TRUE, TRUE, 2800),
('CARBON_OFFSET', 'Carbon Offset Model', 'Environmental impact', 'Carbon credits', FALSE, FALSE, 2900),
('SOCIAL_IMPACT', 'Social Impact Pricing', 'Cause-based pricing', 'Social metrics', FALSE, TRUE, 3000);

CREATE TABLE rights_included (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    scope_description VARCHAR(200),
    typically_included BOOLEAN DEFAULT TRUE,
    additional_fee BOOLEAN DEFAULT FALSE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_included (typically_included),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO rights_included (code, name, description, scope_description, typically_included, additional_fee, display_order) VALUES
('SYNC_BASIC', 'Basic Sync Rights', 'Standard synchronization', 'Audio with visual', TRUE, FALSE, 100),
('MASTER_USE', 'Master Use Rights', 'Sound recording usage', 'Specific recording', TRUE, FALSE, 200),
('PUBLISHING_RIGHTS', 'Publishing Rights', 'Composition rights', 'Underlying composition', TRUE, FALSE, 300),
('PERFORMANCE_RIGHTS', 'Performance Rights', 'Public performance', 'Broadcast/streaming', TRUE, FALSE, 400),
('MECHANICAL_RIGHTS', 'Mechanical Rights', 'Reproduction rights', 'Physical/digital copies', TRUE, FALSE, 500),
('THEATRICAL_EXHIBITION', 'Theatrical Exhibition', 'Cinema screening', 'Movie theaters', TRUE, FALSE, 600),
('HOME_VIDEO', 'Home Video Rights', 'DVD/Blu-ray', 'Physical media', TRUE, TRUE, 700),
('STREAMING_RIGHTS', 'Streaming Rights', 'Digital streaming', 'VOD platforms', TRUE, FALSE, 800),
('BROADCAST_RIGHTS', 'Broadcast Rights', 'TV broadcast', 'Television airing', TRUE, FALSE, 900),
('TRAILER_RIGHTS', 'Trailer Rights', 'Use in trailers', 'Promotional trailers', FALSE, TRUE, 1000),
('ADVERTISING_RIGHTS', 'Advertising Rights', 'Use in ads', 'Commercials/promos', FALSE, TRUE, 1100),
('MAKING_OF', 'Making Of Rights', 'Behind the scenes', 'Documentary use', FALSE, TRUE, 1200),
('SOUNDTRACK_ALBUM', 'Soundtrack Album', 'Soundtrack release', 'Album inclusion', FALSE, TRUE, 1300),
('REMIXES', 'Remix Rights', 'Create remixes', 'Modified versions', FALSE, TRUE, 1400),
('SAMPLES', 'Sampling Rights', 'Use as samples', 'Sample creation', FALSE, TRUE, 1500),
('COVERS', 'Cover Rights', 'Cover versions', 'Re-recording rights', FALSE, TRUE, 1600),
('TRANSLATIONS', 'Translation Rights', 'Lyric translations', 'Foreign languages', FALSE, TRUE, 1700),
('ADAPTATIONS', 'Adaptation Rights', 'Musical adaptations', 'Arrangements', FALSE, TRUE, 1800),
('MERCHANDISING', 'Merchandising Rights', 'Product merchandise', 'Physical products', FALSE, TRUE, 1900),
('SHEET_MUSIC', 'Sheet Music Rights', 'Print music', 'Notation/lyrics', FALSE, TRUE, 2000),
('KARAOKE', 'Karaoke Rights', 'Karaoke usage', 'Sing-along versions', FALSE, TRUE, 2100),
('RINGTONES', 'Ringtone Rights', 'Mobile ringtones', 'Phone alerts', FALSE, TRUE, 2200),
('VIDEO_GAMES', 'Video Game Rights', 'Game usage', 'Interactive media', TRUE, FALSE, 2300),
('VIRTUAL_REALITY', 'VR Rights', 'Virtual reality', 'VR experiences', FALSE, TRUE, 2400),
('AUGMENTED_REALITY', 'AR Rights', 'Augmented reality', 'AR applications', FALSE, TRUE, 2500),
('NFT_RIGHTS', 'NFT Rights', 'Non-fungible tokens', 'Blockchain assets', FALSE, TRUE, 2600),
('METAVERSE_RIGHTS', 'Metaverse Rights', 'Virtual worlds', 'Metaverse usage', FALSE, TRUE, 2700),
('AI_TRAINING', 'AI Training Rights', 'Machine learning', 'AI model training', FALSE, TRUE, 2800),
('HOLOGRAPHIC', 'Holographic Rights', 'Hologram usage', 'Holographic display', FALSE, TRUE, 2900),
('PERPETUAL_RIGHTS', 'Perpetual Rights', 'Forever usage', 'No time limit', FALSE, TRUE, 3000);

CREATE TABLE sync_deliverable (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    format_specification VARCHAR(200),
    typical_delivery_days INT UNSIGNED,
    is_required BOOLEAN DEFAULT TRUE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_required (is_required),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO sync_deliverable (code, name, description, format_specification, typical_delivery_days, is_required, display_order) VALUES
('MASTER_WAV', 'Master WAV File', 'High-quality audio master', '48kHz/24-bit WAV', 2, TRUE, 100),
('MASTER_AIFF', 'Master AIFF File', 'Alternative master format', '48kHz/24-bit AIFF', 2, FALSE, 200),
('MP3_320', 'MP3 320kbps', 'Compressed audio', '320kbps MP3', 1, TRUE, 300),
('STEMS_AUDIO', 'Audio Stems', 'Separated audio tracks', 'Multi-track WAV', 5, FALSE, 400),
('INSTRUMENTAL', 'Instrumental Version', 'No vocals version', '48kHz/24-bit WAV', 3, FALSE, 500),
('CLEAN_VERSION', 'Clean/Edited Version', 'Radio-safe version', '48kHz/24-bit WAV', 3, FALSE, 600),
('LYRICS_DOC', 'Lyrics Document', 'Song lyrics', 'PDF/DOC format', 1, TRUE, 700),
('CUE_SHEET', 'Cue Sheet', 'Music cue information', 'Industry standard format', 2, TRUE, 800),
('METADATA_COMPLETE', 'Complete Metadata', 'All song information', 'XML/JSON format', 1, TRUE, 900),
('ISRC_CODES', 'ISRC Codes', 'Recording identifiers', 'Text format', 1, TRUE, 1000),
('ISWC_CODES', 'ISWC Codes', 'Composition identifiers', 'Text format', 1, TRUE, 1100),
('SPLIT_SHEET', 'Split Sheet', 'Ownership splits', 'PDF signed', 3, TRUE, 1200),
('LICENSE_AGREEMENT', 'License Agreement', 'Signed license', 'PDF executed', 5, TRUE, 1300),
('CHAIN_OF_TITLE', 'Chain of Title', 'Ownership documentation', 'Legal documents', 7, FALSE, 1400),
('PUBLISHER_APPROVAL', 'Publisher Approval', 'Publisher consent', 'Signed letter', 7, TRUE, 1500),
('MASTER_APPROVAL', 'Master Owner Approval', 'Label consent', 'Signed letter', 7, TRUE, 1600),
('PERFORMANCE_LICENSE', 'Performance License', 'PRO documentation', 'License certificate', 5, FALSE, 1700),
('SYNC_LICENSE', 'Sync License', 'Synchronization license', 'Executed agreement', 5, TRUE, 1800),
('MASTER_LICENSE', 'Master Use License', 'Recording license', 'Executed agreement', 5, TRUE, 1900),
('WORK_FOR_HIRE', 'Work for Hire Agreement', 'WFH documentation', 'Signed agreement', 5, FALSE, 2000),
('UNION_CLEARANCE', 'Union Clearance', 'AFM/SAG clearance', 'Union documents', 10, FALSE, 2100),
('SAMPLE_CLEARANCE', 'Sample Clearance', 'Sample permissions', 'Rights documentation', 14, FALSE, 2200),
('TRANSLATION_APPROVAL', 'Translation Approval', 'For translated lyrics', 'Signed approval', 7, FALSE, 2300),
('VIDEO_MASTER', 'Music Video Master', 'If applicable', 'ProRes/MP4', 5, FALSE, 2400),
('ALBUM_ARTWORK', 'Album Artwork', 'Cover art files', '3000x3000 minimum', 2, FALSE, 2500),
('BIOGRAPHIC_INFO', 'Artist Biography', 'Artist information', 'Text document', 1, FALSE, 2600),
('PHOTO_HIRES', 'Hi-Res Photos', 'Promotional photos', '300dpi minimum', 2, FALSE, 2700),
('BLOCKCHAIN_CERT', 'Blockchain Certificate', 'On-chain verification', 'Smart contract address', 3, FALSE, 2800),
('NFT_METADATA', 'NFT Metadata', 'Token information', 'JSON metadata', 2, FALSE, 2900),
('AI_TRAINING_CONSENT', 'AI Training Consent', 'ML usage permission', 'Signed consent', 5, FALSE, 3000);

CREATE TABLE cue_sheet_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    format_standard VARCHAR(100),
    required_fields TEXT,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO cue_sheet_type (code, name, description, format_standard, required_fields, display_order) VALUES
('FILM_THEATRICAL', 'Film Theatrical', 'Theatrical film cue sheet', 'SMPTE standard', 'Title,Composer,Publisher,Duration,Usage', 100),
('TV_SERIES', 'TV Series', 'Television series cue sheet', 'Broadcast standard', 'Episode,Title,Writer,Duration,Usage', 200),
('TV_MOVIE', 'TV Movie', 'Made-for-TV movie', 'Broadcast standard', 'Title,Composer,Publisher,Duration,Usage', 300),
('COMMERCIAL', 'Commercial/Ad', 'Advertising cue sheet', 'Ad industry standard', 'Product,Agency,Title,Duration,Usage', 400),
('TRAILER', 'Trailer', 'Movie trailer cue sheet', 'Studio standard', 'Film,Title,Composer,Duration,Version', 500),
('PROMO', 'TV Promo', 'Television promo', 'Network standard', 'Show,Title,Duration,Airings', 600),
('DOCUMENTARY', 'Documentary', 'Documentary cue sheet', 'Doc standard', 'Title,Source,Rights,Duration,Context', 700),
('GAME_LINEAR', 'Game Linear', 'Linear game music', 'Game industry', 'Level,Track,Composer,Duration,Loop', 800),
('GAME_DYNAMIC', 'Game Dynamic', 'Adaptive game music', 'Interactive standard', 'State,Layers,Composer,Triggers', 900),
('STREAMING_ORIGINAL', 'Streaming Original', 'Streaming platform', 'Platform standard', 'Series,Episode,Title,Duration,Usage', 1000),
('PODCAST', 'Podcast', 'Podcast cue sheet', 'Podcast standard', 'Episode,Segment,Music,Duration,Usage', 1100),
('LIVE_BROADCAST', 'Live Broadcast', 'Live TV/stream', 'Live standard', 'Event,Music,Duration,Performance', 1200),
('SPORTS_EVENT', 'Sports Event', 'Sports broadcast', 'Sports standard', 'Event,Usage,Music,Duration,Context', 1300),
('NEWS_PROGRAM', 'News Program', 'News broadcast', 'News standard', 'Program,Segment,Music,Duration', 1400),
('AWARD_SHOW', 'Award Show', 'Awards ceremony', 'Special event', 'Segment,Performance,Music,Duration', 1500),
('CONCERT_BROADCAST', 'Concert Broadcast', 'Live concert', 'Concert standard', 'Artist,Song,Duration,Rights', 1600),
('WEB_SERIES', 'Web Series', 'Online series', 'Digital standard', 'Episode,Platform,Music,Duration', 1700),
('CORPORATE_VIDEO', 'Corporate Video', 'Business video', 'Corporate standard', 'Project,Music,Duration,Usage', 1800),
('EDUCATIONAL', 'Educational', 'Educational content', 'Education standard', 'Course,Module,Music,Duration', 1900),
('VR_EXPERIENCE', 'VR Experience', 'Virtual reality', 'VR standard', 'Scene,Music,Duration,Spatial', 2000),
('AR_APPLICATION', 'AR Application', 'Augmented reality', 'AR standard', 'Trigger,Music,Duration,Context', 2100),
('METAVERSE_EVENT', 'Metaverse Event', 'Virtual world event', 'Metaverse standard', 'World,Location,Music,Duration', 2200),
('NFT_COLLECTION', 'NFT Collection', 'NFT music usage', 'Blockchain standard', 'Token,Music,Rights,Smart Contract', 2300),
('AI_GENERATED', 'AI Generated', 'AI content usage', 'AI standard', 'Model,Input,Output,Music,Rights', 2400),
('SOCIAL_MEDIA', 'Social Media', 'Social platform', 'Platform standard', 'Post,Music,Duration,Territory', 2500),
('USER_GENERATED', 'User Generated', 'UGC content', 'UGC standard', 'Platform,Creator,Music,Usage', 2600),
('FESTIVAL_SCREENING', 'Festival Screening', 'Film festival', 'Festival standard', 'Festival,Film,Music,Screenings', 2700),
('THEME_PARK', 'Theme Park', 'Attraction usage', 'Park standard', 'Attraction,Music,Duration,Loop', 2800),
('RETAIL_INSTORE', 'Retail In-Store', 'Store background', 'Retail standard', 'Location,Playlist,Music,Hours', 2900),
('AIRLINE_INFLIGHT', 'Airline In-Flight', 'In-flight entertainment', 'Aviation standard', 'Route,Program,Music,Duration', 3000);

CREATE TABLE sync_restriction (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(30) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    restriction_type VARCHAR(50),
    impact_on_fee ENUM('REDUCES', 'INCREASES', 'NEUTRAL') DEFAULT 'NEUTRAL',
    commonly_requested BOOLEAN DEFAULT FALSE,
    display_order INT UNSIGNED DEFAULT 1000,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_code (code),
    INDEX idx_type (restriction_type),
    INDEX idx_active_order (is_active, display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO sync_restriction (code, name, description, restriction_type, impact_on_fee, commonly_requested, display_order) VALUES
('NO_COMPETITORS', 'No Competitor Use', 'Excludes direct competitors', 'COMPETITIVE', 'INCREASES', TRUE, 100),
('NO_POLITICAL', 'No Political Use', 'No political campaigns', 'CONTENT', 'NEUTRAL', TRUE, 200),
('NO_RELIGIOUS', 'No Religious Use', 'No religious content', 'CONTENT', 'NEUTRAL', TRUE, 300),
('NO_ALCOHOL', 'No Alcohol Ads', 'No alcohol advertising', 'PRODUCT', 'REDUCES', TRUE, 400),
('NO_TOBACCO', 'No Tobacco', 'No tobacco products', 'PRODUCT', 'REDUCES', TRUE, 500),
('NO_GAMBLING', 'No Gambling', 'No gambling/betting', 'PRODUCT', 'REDUCES', TRUE, 600),
('NO_ADULT', 'No Adult Content', 'No adult/explicit content', 'CONTENT', 'REDUCES', TRUE, 700),
('NO_VIOLENCE', 'No Violent Content', 'No violent scenes', 'CONTENT', 'REDUCES', FALSE, 800),
('NO_PHARMA', 'No Pharmaceuticals', 'No drug advertising', 'PRODUCT', 'REDUCES', TRUE, 900),
('NO_FAST_FOOD', 'No Fast Food', 'No fast food chains', 'PRODUCT', 'REDUCES', FALSE, 1000),
('NO_EDIT', 'No Editing', 'Cannot edit/cut song', 'CREATIVE', 'INCREASES', TRUE, 1100),
('NO_REMIX', 'No Remixing', 'No remixes allowed', 'CREATIVE', 'NEUTRAL', TRUE, 1200),
('NO_COVER', 'No Cover Versions', 'Original recording only', 'CREATIVE', 'NEUTRAL', FALSE, 1300),
('NO_TRANSLATION', 'No Translation', 'No lyric translation', 'CREATIVE', 'NEUTRAL', FALSE, 1400),
('CREDIT_REQUIRED', 'Credit Required', 'Must credit artist', 'ATTRIBUTION', 'REDUCES', TRUE, 1500),
('APPROVAL_REQUIRED', 'Approval Required', 'Needs prior approval', 'PROCESS', 'REDUCES', TRUE, 1600),
('CONTEXT_APPROVAL', 'Context Approval', 'Scene context approval', 'CREATIVE', 'REDUCES', TRUE, 1700),
('NO_NEGATIVE', 'No Negative Context', 'No negative portrayal', 'CONTENT', 'REDUCES', TRUE, 1800),
('NO_PARODY', 'No Parody/Satire', 'No comedic use', 'CREATIVE', 'REDUCES', FALSE, 1900),
('TERRITORY_LIMIT', 'Territory Limited', 'Geographic restrictions', 'TERRITORIAL', 'REDUCES', TRUE, 2000),
('TIME_LIMIT', 'Time Limited', 'Duration restrictions', 'TEMPORAL', 'REDUCES', TRUE, 2100),
('MEDIA_LIMIT', 'Media Limited', 'Platform restrictions', 'DISTRIBUTION', 'REDUCES', TRUE, 2200),
('NO_DIGITAL', 'No Digital Use', 'Traditional media only', 'DISTRIBUTION', 'REDUCES', FALSE, 2300),
('NO_SOCIAL', 'No Social Media', 'No social platforms', 'DISTRIBUTION', 'REDUCES', TRUE, 2400),
('NO_STREAMING', 'No Streaming', 'No streaming platforms', 'DISTRIBUTION', 'REDUCES', FALSE, 2500),
('NO_DERIVATIVE', 'No Derivative Works', 'No adaptations', 'CREATIVE', 'NEUTRAL', TRUE, 2600),
('NO_SAMPLING', 'No Sampling', 'Cannot be sampled', 'CREATIVE', 'NEUTRAL', TRUE, 2700),
('NO_AI_TRAINING', 'No AI Training', 'Not for ML datasets', 'TECHNOLOGY', 'NEUTRAL', TRUE, 2800),
('NO_NFT', 'No NFT Use', 'No blockchain tokens', 'TECHNOLOGY', 'NEUTRAL', TRUE, 2900),
('NO_METAVERSE', 'No Metaverse Use', 'No virtual worlds', 'TECHNOLOGY', 'NEUTRAL', TRUE, 3000);

-- =====================================================
-- SECTION 22: SECURITY
-- =====================================================

-- Table: user_role_type
CREATE TABLE user_role_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    permission_level INT UNSIGNED DEFAULT 0,
    is_system_role BOOLEAN DEFAULT FALSE,
    can_be_deleted BOOLEAN DEFAULT TRUE,
    max_users INT UNSIGNED DEFAULT NULL,
    hierarchy_level INT UNSIGNED DEFAULT 1,
    requires_mfa BOOLEAN DEFAULT FALSE,
    requires_approval BOOLEAN DEFAULT FALSE,
    session_timeout_minutes INT UNSIGNED DEFAULT 60,
    concurrent_sessions INT UNSIGNED DEFAULT 1,
    ip_restriction_enabled BOOLEAN DEFAULT FALSE,
    time_restriction_enabled BOOLEAN DEFAULT FALSE,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_user_role_type_code (code),
    KEY idx_user_role_type_status (status),
    KEY idx_user_role_type_level (permission_level),
    KEY idx_user_role_type_hierarchy (hierarchy_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO user_role_type (code, name, description, permission_level, is_system_role, can_be_deleted, hierarchy_level, requires_mfa) VALUES
('SUPER_ADMIN', 'Super Administrator', 'Full system access with all privileges', 1000, TRUE, FALSE, 1, TRUE),
('PLATFORM_ADMIN', 'Platform Administrator', 'Platform-wide administration', 950, TRUE, FALSE, 2, TRUE),
('SECURITY_ADMIN', 'Security Administrator', 'Security and compliance management', 900, TRUE, FALSE, 2, TRUE),
('ENTERPRISE_OWNER', 'Enterprise Owner', 'Enterprise account owner', 850, FALSE, TRUE, 3, TRUE),
('ENTERPRISE_ADMIN', 'Enterprise Administrator', 'Enterprise account management', 800, FALSE, TRUE, 4, TRUE),
('LABEL_OWNER', 'Record Label Owner', 'Label company owner', 750, FALSE, TRUE, 5, FALSE),
('LABEL_ADMIN', 'Label Administrator', 'Label catalog management', 700, FALSE, TRUE, 6, FALSE),
('PUBLISHER_OWNER', 'Publisher Owner', 'Publishing company owner', 750, FALSE, TRUE, 5, FALSE),
('PUBLISHER_ADMIN', 'Publisher Administrator', 'Publishing catalog management', 700, FALSE, TRUE, 6, FALSE),
('DISTRIBUTOR', 'Distributor', 'Distribution rights manager', 650, FALSE, TRUE, 6, FALSE),
('ARTIST_MANAGER', 'Artist Manager', 'Artist representation', 600, FALSE, TRUE, 7, FALSE),
('ARTIST', 'Artist/Performer', 'Musical artist or band', 550, FALSE, TRUE, 8, FALSE),
('SONGWRITER', 'Songwriter/Composer', 'Music creator', 500, FALSE, TRUE, 8, FALSE),
('PRODUCER', 'Music Producer', 'Recording producer', 450, FALSE, TRUE, 8, FALSE),
('COLLABORATOR', 'Collaborator', 'Project contributor', 400, FALSE, TRUE, 9, FALSE),
('RIGHTS_MANAGER', 'Rights Manager', 'Rights administration', 350, FALSE, TRUE, 7, FALSE),
('ROYALTY_ANALYST', 'Royalty Analyst', 'Royalty processing and analysis', 300, FALSE, TRUE, 8, FALSE),
('SYNC_MANAGER', 'Sync Licensing Manager', 'Synchronization rights', 280, FALSE, TRUE, 8, FALSE),
('METADATA_EDITOR', 'Metadata Editor', 'Catalog metadata management', 250, FALSE, TRUE, 9, FALSE),
('FINANCIAL_VIEWER', 'Financial Viewer', 'Financial reports access', 200, FALSE, TRUE, 9, FALSE),
('COMPLIANCE_AUDITOR', 'Compliance Auditor', 'Compliance verification', 180, FALSE, TRUE, 8, TRUE),
('SUPPORT_AGENT', 'Support Agent', 'Customer support', 150, FALSE, TRUE, 9, FALSE),
('API_USER', 'API User', 'System integration account', 120, FALSE, TRUE, 10, TRUE),
('VIEWER', 'Viewer', 'Read-only access', 100, FALSE, TRUE, 10, FALSE),
('GUEST', 'Guest User', 'Limited temporary access', 50, TRUE, FALSE, 11, FALSE),
('INACTIVE', 'Inactive User', 'Deactivated account', 0, TRUE, FALSE, 12, FALSE);

-- Table: permission_type
CREATE TABLE permission_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(100) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL,
    resource_type VARCHAR(50),
    action VARCHAR(50),
    scope VARCHAR(50) DEFAULT 'own',
    risk_level VARCHAR(20) DEFAULT 'low',
    requires_mfa BOOLEAN DEFAULT FALSE,
    requires_approval BOOLEAN DEFAULT FALSE,
    approval_timeout_hours INT UNSIGNED DEFAULT 24,
    is_delegatable BOOLEAN DEFAULT TRUE,
    audit_level VARCHAR(20) DEFAULT 'standard',
    data_sensitivity VARCHAR(20) DEFAULT 'medium',
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_permission_type_code (code),
    KEY idx_permission_type_category (category),
    KEY idx_permission_type_resource (resource_type),
    KEY idx_permission_type_action (action),
    KEY idx_permission_type_risk (risk_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO permission_type (code, name, description, category, resource_type, action, scope, risk_level, requires_mfa) VALUES
('SYSTEM_ADMIN', 'System Administration', 'Full system control', 'system', 'all', 'all', 'global', 'critical', TRUE),
('USER_CREATE', 'Create Users', 'Create new user accounts', 'user', 'user', 'create', 'organization', 'high', TRUE),
('USER_READ', 'View Users', 'View user profiles', 'user', 'user', 'read', 'organization', 'low', FALSE),
('USER_UPDATE', 'Update Users', 'Modify user information', 'user', 'user', 'update', 'organization', 'medium', FALSE),
('USER_DELETE', 'Delete Users', 'Remove user accounts', 'user', 'user', 'delete', 'organization', 'high', TRUE),
('USER_SUSPEND', 'Suspend Users', 'Suspend user access', 'user', 'user', 'suspend', 'organization', 'high', TRUE),
('ROLE_ASSIGN', 'Assign Roles', 'Grant roles to users', 'security', 'role', 'assign', 'organization', 'critical', TRUE),
('PERMISSION_GRANT', 'Grant Permissions', 'Assign permissions', 'security', 'permission', 'grant', 'organization', 'critical', TRUE),
('CATALOG_CREATE', 'Create Catalog Items', 'Add music assets', 'catalog', 'asset', 'create', 'own', 'medium', FALSE),
('CATALOG_READ', 'View Catalog', 'View music catalog', 'catalog', 'asset', 'read', 'organization', 'low', FALSE),
('CATALOG_UPDATE', 'Update Catalog', 'Modify catalog items', 'catalog', 'asset', 'update', 'own', 'medium', FALSE),
('CATALOG_DELETE', 'Delete Catalog Items', 'Remove catalog items', 'catalog', 'asset', 'delete', 'own', 'high', TRUE),
('CATALOG_PUBLISH', 'Publish Catalog', 'Make catalog public', 'catalog', 'asset', 'publish', 'own', 'high', TRUE),
('CONTRACT_CREATE', 'Create Contracts', 'Draft new contracts', 'contract', 'contract', 'create', 'organization', 'high', TRUE),
('CONTRACT_READ', 'View Contracts', 'Access contract details', 'contract', 'contract', 'read', 'own', 'medium', FALSE),
('CONTRACT_UPDATE', 'Update Contracts', 'Modify contract terms', 'contract', 'contract', 'update', 'own', 'high', TRUE),
('CONTRACT_APPROVE', 'Approve Contracts', 'Approve contract changes', 'contract', 'contract', 'approve', 'organization', 'critical', TRUE),
('CONTRACT_SIGN', 'Sign Contracts', 'Execute contracts', 'contract', 'contract', 'sign', 'own', 'critical', TRUE),
('ROYALTY_VIEW', 'View Royalties', 'Access royalty data', 'financial', 'royalty', 'read', 'own', 'medium', FALSE),
('ROYALTY_CALCULATE', 'Calculate Royalties', 'Process royalty calculations', 'financial', 'royalty', 'calculate', 'organization', 'high', TRUE),
('ROYALTY_APPROVE', 'Approve Royalties', 'Approve royalty payments', 'financial', 'royalty', 'approve', 'organization', 'critical', TRUE),
('PAYMENT_PROCESS', 'Process Payments', 'Execute payments', 'financial', 'payment', 'process', 'organization', 'critical', TRUE),
('REPORT_VIEW', 'View Reports', 'Access reports', 'reporting', 'report', 'read', 'own', 'low', FALSE),
('REPORT_CREATE', 'Create Reports', 'Generate custom reports', 'reporting', 'report', 'create', 'organization', 'medium', FALSE),
('REPORT_EXPORT', 'Export Reports', 'Export report data', 'reporting', 'report', 'export', 'own', 'medium', TRUE),
('API_ACCESS', 'API Access', 'Use platform APIs', 'integration', 'api', 'access', 'own', 'medium', TRUE),
('API_MANAGE', 'Manage APIs', 'Configure API settings', 'integration', 'api', 'manage', 'organization', 'high', TRUE),
('BLOCKCHAIN_READ', 'View Blockchain', 'Access blockchain data', 'blockchain', 'blockchain', 'read', 'public', 'low', FALSE),
('BLOCKCHAIN_WRITE', 'Write Blockchain', 'Create blockchain transactions', 'blockchain', 'blockchain', 'write', 'own', 'critical', TRUE),
('AUDIT_VIEW', 'View Audit Logs', 'Access audit trails', 'compliance', 'audit', 'read', 'organization', 'medium', TRUE);

-- Table: access_level
CREATE TABLE access_level (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    numeric_level INT UNSIGNED NOT NULL,
    scope VARCHAR(50),
    inheritance_type VARCHAR(50) DEFAULT 'none',
    can_delegate BOOLEAN DEFAULT FALSE,
    max_delegation_depth INT UNSIGNED DEFAULT 0,
    delegation_expires_days INT UNSIGNED DEFAULT 30,
    requires_justification BOOLEAN DEFAULT FALSE,
    requires_approval BOOLEAN DEFAULT FALSE,
    approval_levels INT UNSIGNED DEFAULT 1,
    auto_expire_days INT UNSIGNED DEFAULT NULL,
    review_frequency_days INT UNSIGNED DEFAULT 90,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_access_level_code (code),
    UNIQUE KEY uk_access_level_numeric (numeric_level),
    KEY idx_access_level_scope (scope),
    KEY idx_access_level_status (status)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO access_level (code, name, description, numeric_level, scope, inheritance_type, can_delegate, requires_approval) VALUES
('PLATFORM', 'Platform Level', 'Entire platform access', 1000, 'platform', 'full', TRUE, TRUE),
('ENTERPRISE', 'Enterprise Level', 'All enterprise resources', 900, 'enterprise', 'hierarchical', TRUE, TRUE),
('ORGANIZATION', 'Organization Level', 'Organization-wide access', 800, 'organization', 'hierarchical', TRUE, FALSE),
('BUSINESS_UNIT', 'Business Unit Level', 'Business unit resources', 700, 'business_unit', 'hierarchical', TRUE, FALSE),
('DEPARTMENT', 'Department Level', 'Department resources', 600, 'department', 'hierarchical', TRUE, FALSE),
('TEAM', 'Team Level', 'Team resources only', 500, 'team', 'hierarchical', FALSE, FALSE),
('PROJECT', 'Project Level', 'Specific project access', 400, 'project', 'explicit', FALSE, FALSE),
('CATALOG', 'Catalog Level', 'Catalog-specific access', 350, 'catalog', 'explicit', FALSE, FALSE),
('ASSET', 'Asset Level', 'Individual asset access', 300, 'asset', 'explicit', FALSE, FALSE),
('PERSONAL', 'Personal Level', 'Own resources only', 200, 'personal', 'none', FALSE, FALSE),
('DELEGATED', 'Delegated Level', 'Temporary delegated access', 150, 'delegated', 'temporary', FALSE, TRUE),
('RESTRICTED', 'Restricted Level', 'Limited specific access', 100, 'restricted', 'none', FALSE, TRUE),
('PUBLIC', 'Public Level', 'Public information only', 50, 'public', 'none', FALSE, FALSE);

-- Table: authentication_method
CREATE TABLE authentication_method (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    method_type VARCHAR(50) NOT NULL,
    security_level INT UNSIGNED DEFAULT 1,
    requires_setup BOOLEAN DEFAULT FALSE,
    setup_complexity VARCHAR(20) DEFAULT 'medium',
    supports_mfa BOOLEAN DEFAULT FALSE,
    is_passwordless BOOLEAN DEFAULT FALSE,
    requires_device BOOLEAN DEFAULT FALSE,
    requires_network BOOLEAN DEFAULT TRUE,
    session_lifetime_seconds INT UNSIGNED DEFAULT 3600,
    refresh_allowed BOOLEAN DEFAULT TRUE,
    max_attempts INT UNSIGNED DEFAULT 5,
    lockout_duration_minutes INT UNSIGNED DEFAULT 30,
    recovery_options VARCHAR(200),
    supported_platforms VARCHAR(200) DEFAULT 'all',
    compliance_approved VARCHAR(200),
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_authentication_method_code (code),
    KEY idx_authentication_method_type (method_type),
    KEY idx_authentication_method_level (security_level),
    KEY idx_authentication_method_passwordless (is_passwordless)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO authentication_method (code, name, description, method_type, security_level, requires_setup, supports_mfa, is_passwordless) VALUES
('USERNAME_PASSWORD', 'Username and Password', 'Traditional authentication', 'password', 1, FALSE, TRUE, FALSE),
('EMAIL_PASSWORD', 'Email and Password', 'Email-based login', 'password', 1, FALSE, TRUE, FALSE),
('SSO_SAML', 'SAML Single Sign-On', 'SAML 2.0 SSO', 'sso', 3, TRUE, TRUE, TRUE),
('SSO_OAUTH2', 'OAuth 2.0', 'OAuth 2.0 authentication', 'sso', 3, TRUE, TRUE, TRUE),
('SSO_OPENID', 'OpenID Connect', 'OpenID Connect SSO', 'sso', 3, TRUE, TRUE, TRUE),
('GOOGLE_OAUTH', 'Google Sign-In', 'Google OAuth login', 'social', 2, FALSE, TRUE, TRUE),
('MICROSOFT_OAUTH', 'Microsoft Sign-In', 'Microsoft OAuth login', 'social', 2, FALSE, TRUE, TRUE),
('APPLE_ID', 'Sign in with Apple', 'Apple ID authentication', 'social', 2, FALSE, TRUE, TRUE),
('FACEBOOK_OAUTH', 'Facebook Login', 'Facebook OAuth login', 'social', 2, FALSE, TRUE, TRUE),
('METAMASK', 'MetaMask Wallet', 'Ethereum wallet login', 'blockchain', 4, TRUE, FALSE, TRUE),
('WALLETCONNECT', 'WalletConnect', 'Multi-chain wallet login', 'blockchain', 4, TRUE, FALSE, TRUE),
('LEDGER', 'Ledger Hardware Wallet', 'Hardware wallet auth', 'blockchain', 5, TRUE, FALSE, TRUE),
('MAGIC_LINK', 'Magic Link Email', 'Passwordless email link', 'passwordless', 2, FALSE, FALSE, TRUE),
('SMS_OTP', 'SMS One-Time Password', 'SMS verification code', 'otp', 2, TRUE, FALSE, TRUE),
('WEBAUTHN', 'WebAuthn/FIDO2', 'Biometric or security key', 'biometric', 5, TRUE, FALSE, TRUE),
('FINGERPRINT', 'Fingerprint', 'Biometric fingerprint', 'biometric', 4, TRUE, FALSE, TRUE),
('FACE_ID', 'Face Recognition', 'Facial biometric', 'biometric', 4, TRUE, FALSE, TRUE),
('API_KEY', 'API Key', 'Static API key', 'api', 2, TRUE, FALSE, TRUE),
('JWT_BEARER', 'JWT Bearer Token', 'JSON Web Token', 'token', 3, FALSE, TRUE, TRUE),
('CERTIFICATE', 'Client Certificate', 'X.509 certificate', 'certificate', 5, TRUE, FALSE, TRUE);

-- Table: encryption_algorithm
CREATE TABLE encryption_algorithm (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    algorithm_type VARCHAR(50) NOT NULL,
    algorithm_family VARCHAR(50),
    key_size_bits INT UNSIGNED NOT NULL,
    block_size_bits INT UNSIGNED DEFAULT NULL,
    mode VARCHAR(20) DEFAULT NULL,
    padding VARCHAR(20) DEFAULT NULL,
    is_symmetric BOOLEAN DEFAULT TRUE,
    is_quantum_resistant BOOLEAN DEFAULT FALSE,
    performance_rating INT UNSIGNED DEFAULT 5,
    security_rating INT UNSIGNED DEFAULT 5,
    cpu_intensity VARCHAR(20) DEFAULT 'medium',
    memory_usage VARCHAR(20) DEFAULT 'low',
    recommended_use VARCHAR(100),
    compliance_approved VARCHAR(200),
    deprecation_date DATE DEFAULT NULL,
    replacement_algorithm VARCHAR(50) DEFAULT NULL,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_encryption_algorithm_code (code),
    KEY idx_encryption_algorithm_type (algorithm_type),
    KEY idx_encryption_algorithm_family (algorithm_family),
    KEY idx_encryption_algorithm_symmetric (is_symmetric),
    KEY idx_encryption_algorithm_quantum (is_quantum_resistant)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO encryption_algorithm (code, name, description, algorithm_type, algorithm_family, key_size_bits, block_size_bits, mode, is_symmetric, security_rating, recommended_use) VALUES
('AES_256_GCM', 'AES-256-GCM', 'Advanced Encryption Standard with Galois/Counter Mode', 'block', 'aes', 256, 128, 'GCM', TRUE, 10, 'Data at rest'),
('AES_256_CBC', 'AES-256-CBC', 'AES with Cipher Block Chaining', 'block', 'aes', 256, 128, 'CBC', TRUE, 9, 'Legacy systems'),
('AES_256_CTR', 'AES-256-CTR', 'AES with Counter Mode', 'block', 'aes', 256, 128, 'CTR', TRUE, 9, 'Streaming data'),
('AES_128_GCM', 'AES-128-GCM', 'AES 128-bit with GCM', 'block', 'aes', 128, 128, 'GCM', TRUE, 8, 'Performance critical'),
('CHACHA20_POLY1305', 'ChaCha20-Poly1305', 'ChaCha20 stream cipher with Poly1305', 'stream', 'chacha', 256, NULL, NULL, TRUE, 9, 'Mobile devices'),
('RSA_4096_OAEP', 'RSA-4096 OAEP', 'RSA with Optimal Asymmetric Encryption Padding', 'asymmetric', 'rsa', 4096, NULL, 'OAEP', FALSE, 9, 'Key exchange'),
('RSA_2048_OAEP', 'RSA-2048 OAEP', 'RSA 2048-bit with OAEP', 'asymmetric', 'rsa', 2048, NULL, 'OAEP', FALSE, 7, 'Legacy compatibility'),
('ECDSA_P384', 'ECDSA P-384', 'Elliptic Curve DSA with P-384', 'asymmetric', 'ecc', 384, NULL, NULL, FALSE, 9, 'Digital signatures'),
('ECDSA_P256', 'ECDSA P-256', 'Elliptic Curve DSA with P-256', 'asymmetric', 'ecc', 256, NULL, NULL, FALSE, 8, 'Standard signatures'),
('ED25519', 'Ed25519', 'Edwards-curve Digital Signature', 'asymmetric', 'ecc', 256, NULL, NULL, FALSE, 9, 'Modern signatures'),
('X25519', 'X25519', 'Curve25519 key exchange', 'asymmetric', 'ecc', 256, NULL, NULL, FALSE, 9, 'Key agreement'),
('SECP256K1', 'secp256k1', 'Bitcoin/Ethereum curve', 'asymmetric', 'ecc', 256, NULL, NULL, FALSE, 8, 'Blockchain'),
('TWOFISH_256', 'Twofish-256', 'Twofish block cipher', 'block', 'twofish', 256, 128, 'CBC', TRUE, 8, 'Alternative encryption'),
('SERPENT_256', 'Serpent-256', 'Serpent block cipher', 'block', 'serpent', 256, 128, 'CBC', TRUE, 8, 'High security'),
('POST_QUANTUM_KYBER', 'CRYSTALS-Kyber', 'Post-quantum key encapsulation', 'pqc', 'lattice', 1024, NULL, NULL, FALSE, 10, 'Future-proof');

-- Table: hash_algorithm
CREATE TABLE hash_algorithm (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    algorithm_family VARCHAR(50) NOT NULL,
    output_size_bits INT UNSIGNED NOT NULL,
    block_size_bits INT UNSIGNED DEFAULT NULL,
    is_cryptographic BOOLEAN DEFAULT TRUE,
    is_password_suitable BOOLEAN DEFAULT FALSE,
    collision_resistance VARCHAR(20) DEFAULT 'strong',
    preimage_resistance VARCHAR(20) DEFAULT 'strong',
    performance_rating INT UNSIGNED DEFAULT 5,
    security_rating INT UNSIGNED DEFAULT 5,
    salt_required BOOLEAN DEFAULT FALSE,
    salt_size_bytes INT UNSIGNED DEFAULT NULL,
    iterations_default INT UNSIGNED DEFAULT NULL,
    iterations_minimum INT UNSIGNED DEFAULT NULL,
    memory_cost_kb INT UNSIGNED DEFAULT NULL,
    parallelism_factor INT UNSIGNED DEFAULT NULL,
    deprecation_date DATE DEFAULT NULL,
    replacement_algorithm VARCHAR(50) DEFAULT NULL,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_hash_algorithm_code (code),
    KEY idx_hash_algorithm_family (algorithm_family),
    KEY idx_hash_algorithm_cryptographic (is_cryptographic),
    KEY idx_hash_algorithm_password (is_password_suitable)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO hash_algorithm (code, name, description, algorithm_family, output_size_bits, is_cryptographic, is_password_suitable, security_rating, salt_required, iterations_default) VALUES
('SHA3_512', 'SHA3-512', 'SHA-3 Keccak 512-bit', 'sha3', 512, TRUE, FALSE, 10, FALSE, NULL),
('SHA3_256', 'SHA3-256', 'SHA-3 Keccak 256-bit', 'sha3', 256, TRUE, FALSE, 10, FALSE, NULL),
('SHA512', 'SHA-512', 'SHA-2 512-bit', 'sha2', 512, TRUE, FALSE, 9, FALSE, NULL),
('SHA256', 'SHA-256', 'SHA-2 256-bit', 'sha2', 256, TRUE, FALSE, 9, FALSE, NULL),
('BLAKE3', 'BLAKE3', 'BLAKE3 hash function', 'blake', 256, TRUE, FALSE, 10, FALSE, NULL),
('BLAKE2B', 'BLAKE2b', 'BLAKE2b variable output', 'blake', 512, TRUE, FALSE, 9, FALSE, NULL),
('ARGON2ID', 'Argon2id', 'Argon2 hybrid mode', 'argon2', 256, TRUE, TRUE, 10, TRUE, 3),
('ARGON2I', 'Argon2i', 'Argon2 data-independent', 'argon2', 256, TRUE, TRUE, 9, TRUE, 3),
('SCRYPT', 'scrypt', 'Memory-hard function', 'scrypt', 256, TRUE, TRUE, 9, TRUE, 16384),
('BCRYPT', 'bcrypt', 'Blowfish-based hash', 'bcrypt', 184, TRUE, TRUE, 8, TRUE, 12),
('PBKDF2_SHA256', 'PBKDF2-SHA256', 'Key derivation function', 'pbkdf2', 256, TRUE, TRUE, 7, TRUE, 100000),
('SHA1', 'SHA-1', 'Deprecated SHA-1', 'sha1', 160, TRUE, FALSE, 3, FALSE, NULL),
('MD5', 'MD5', 'Deprecated MD5', 'md5', 128, TRUE, FALSE, 1, FALSE, NULL),
('KECCAK256', 'Keccak-256', 'Ethereum hash function', 'keccak', 256, TRUE, FALSE, 9, FALSE, NULL),
('RIPEMD160', 'RIPEMD-160', 'Bitcoin address hash', 'ripemd', 160, TRUE, FALSE, 7, FALSE, NULL),
('XXHASH64', 'xxHash64', 'Non-cryptographic fast hash', 'xxhash', 64, FALSE, FALSE, 0, FALSE, NULL),
('MURMUR3_128', 'MurmurHash3', 'Non-cryptographic hash', 'murmur', 128, FALSE, FALSE, 0, FALSE, NULL),
('CRC32', 'CRC32', 'Cyclic redundancy check', 'crc', 32, FALSE, FALSE, 0, FALSE, NULL);

-- Table: security_protocol
CREATE TABLE security_protocol (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    protocol_type VARCHAR(50) NOT NULL,
    osi_layer INT UNSIGNED DEFAULT NULL,
    version VARCHAR(20),
    min_version VARCHAR(20) DEFAULT NULL,
    max_version VARCHAR(20) DEFAULT NULL,
    default_port INT UNSIGNED DEFAULT NULL,
    is_encrypted BOOLEAN DEFAULT TRUE,
    encryption_algorithms VARCHAR(500),
    supported_ciphers TEXT,
    key_exchange_methods VARCHAR(500),
    authentication_methods VARCHAR(500),
    integrity_check VARCHAR(100),
    perfect_forward_secrecy BOOLEAN DEFAULT FALSE,
    session_resumption BOOLEAN DEFAULT TRUE,
    compression_support BOOLEAN DEFAULT FALSE,
    security_rating INT UNSIGNED DEFAULT 5,
    compliance_approved VARCHAR(200),
    deprecation_date DATE DEFAULT NULL,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_security_protocol_code (code),
    KEY idx_security_protocol_type (protocol_type),
    KEY idx_security_protocol_layer (osi_layer),
    KEY idx_security_protocol_encrypted (is_encrypted)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO security_protocol (code, name, description, protocol_type, osi_layer, version, default_port, is_encrypted, security_rating, perfect_forward_secrecy) VALUES
('TLS_1_3', 'TLS 1.3', 'Transport Layer Security 1.3', 'transport', 4, '1.3', 443, TRUE, 10, TRUE),
('TLS_1_2', 'TLS 1.2', 'Transport Layer Security 1.2', 'transport', 4, '1.2', 443, TRUE, 8, TRUE),
('DTLS_1_3', 'DTLS 1.3', 'Datagram TLS 1.3', 'transport', 4, '1.3', 443, TRUE, 9, TRUE),
('QUIC', 'QUIC', 'Quick UDP Internet Connections', 'transport', 4, '1', 443, TRUE, 9, TRUE),
('HTTPS', 'HTTPS', 'HTTP over TLS', 'application', 7, '1.1', 443, TRUE, 9, FALSE),
('HTTP2', 'HTTP/2', 'HTTP version 2', 'application', 7, '2', 443, TRUE, 9, FALSE),
('HTTP3', 'HTTP/3', 'HTTP over QUIC', 'application', 7, '3', 443, TRUE, 10, TRUE),
('WSS', 'Secure WebSocket', 'WebSocket over TLS', 'application', 7, '13', 443, TRUE, 9, FALSE),
('SSH2', 'SSH-2', 'Secure Shell Protocol 2', 'remote', 7, '2.0', 22, TRUE, 9, TRUE),
('SFTP', 'SFTP', 'SSH File Transfer Protocol', 'file', 7, '3', 22, TRUE, 9, TRUE),
('IPSEC', 'IPsec', 'Internet Protocol Security', 'network', 3, '2', NULL, TRUE, 9, TRUE),
('WIREGUARD', 'WireGuard', 'Modern VPN protocol', 'vpn', 3, '1', 51820, TRUE, 10, TRUE),
('OAUTH2', 'OAuth 2.0', 'Authorization framework', 'auth', 7, '2.0', 443, TRUE, 8, FALSE),
('SAML2', 'SAML 2.0', 'Security Assertion Markup Language', 'auth', 7, '2.0', 443, TRUE, 8, FALSE),
('OPENID_CONNECT', 'OpenID Connect', 'Identity layer on OAuth 2.0', 'auth', 7, '1.0', 443, TRUE, 9, FALSE),
('KERBEROS5', 'Kerberos 5', 'Network authentication protocol', 'auth', 7, '5', 88, TRUE, 8, FALSE),
('LDAPS', 'LDAPS', 'LDAP over TLS', 'directory', 7, '3', 636, TRUE, 8, FALSE),
('DNSSEC', 'DNSSEC', 'DNS Security Extensions', 'dns', 7, '1', 53, TRUE, 8, FALSE),
('BLOCKCHAIN_P2P', 'Blockchain P2P', 'Peer-to-peer blockchain protocol', 'blockchain', 7, '1', 8333, TRUE, 9, TRUE),
('GRPC_TLS', 'gRPC over TLS', 'Google RPC with TLS', 'rpc', 7, '1', 443, TRUE, 9, TRUE);

-- Table: security_event_type
CREATE TABLE security_event_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(100) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL,
    subcategory VARCHAR(50) DEFAULT NULL,
    severity VARCHAR(20) NOT NULL,
    risk_score INT UNSIGNED DEFAULT 5,
    confidence_level INT UNSIGNED DEFAULT 80,
    requires_notification BOOLEAN DEFAULT FALSE,
    notification_channels VARCHAR(200) DEFAULT NULL,
    notification_delay_minutes INT UNSIGNED DEFAULT 0,
    requires_investigation BOOLEAN DEFAULT FALSE,
    investigation_priority VARCHAR(20) DEFAULT 'medium',
    auto_response_enabled BOOLEAN DEFAULT FALSE,
    auto_response_action VARCHAR(100) DEFAULT NULL,
    evidence_required VARCHAR(500),
    retention_days INT UNSIGNED DEFAULT 90,
    compliance_relevant BOOLEAN DEFAULT FALSE,
    forensic_value VARCHAR(20) DEFAULT 'medium',
    false_positive_rate INT UNSIGNED DEFAULT 5,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_security_event_type_code (code),
    KEY idx_security_event_type_category (category, subcategory),
    KEY idx_security_event_type_severity (severity),
    KEY idx_security_event_type_risk (risk_score),
    KEY idx_security_event_type_compliance (compliance_relevant)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO security_event_type (code, name, description, category, severity, risk_score, requires_notification, requires_investigation, auto_response_enabled) VALUES
('AUTH_SUCCESS', 'Authentication Success', 'Successful user authentication', 'authentication', 'info', 1, FALSE, FALSE, FALSE),
('AUTH_FAILED', 'Authentication Failed', 'Failed login attempt', 'authentication', 'warning', 3, FALSE, FALSE, FALSE),
('AUTH_FAILED_REPEATED', 'Repeated Auth Failures', 'Multiple failed login attempts', 'authentication', 'high', 7, TRUE, TRUE, TRUE),
('AUTH_LOCKOUT', 'Account Lockout', 'Account locked due to failures', 'authentication', 'high', 8, TRUE, TRUE, TRUE),
('AUTH_IMPOSSIBLE_TRAVEL', 'Impossible Travel', 'Login from impossible locations', 'authentication', 'critical', 9, TRUE, TRUE, TRUE),
('PASSWORD_RESET', 'Password Reset', 'Password reset requested', 'authentication', 'medium', 5, TRUE, FALSE, FALSE),
('MFA_BYPASS', 'MFA Bypass Attempt', 'Attempted MFA bypass', 'authentication', 'critical', 10, TRUE, TRUE, TRUE),
('PRIVILEGE_ESCALATION', 'Privilege Escalation', 'Unauthorized privilege increase', 'authorization', 'critical', 10, TRUE, TRUE, TRUE),
('UNAUTHORIZED_ACCESS', 'Unauthorized Access', 'Access to restricted resource', 'authorization', 'high', 8, TRUE, TRUE, TRUE),
('DATA_EXFILTRATION', 'Data Exfiltration', 'Large data download detected', 'data', 'critical', 10, TRUE, TRUE, TRUE),
('SQL_INJECTION', 'SQL Injection Attempt', 'SQL injection attack detected', 'attack', 'critical', 10, TRUE, TRUE, TRUE),
('XSS_ATTEMPT', 'XSS Attack', 'Cross-site scripting attempt', 'attack', 'high', 9, TRUE, TRUE, TRUE),
('CSRF_ATTEMPT', 'CSRF Attack', 'Cross-site request forgery', 'attack', 'high', 8, TRUE, TRUE, TRUE),
('DDOS_DETECTED', 'DDoS Attack', 'Distributed denial of service', 'attack', 'critical', 10, TRUE, TRUE, TRUE),
('MALWARE_DETECTED', 'Malware Detected', 'Malicious software found', 'malware', 'critical', 10, TRUE, TRUE, TRUE),
('RANSOMWARE_DETECTED', 'Ransomware Activity', 'Ransomware behavior detected', 'malware', 'critical', 10, TRUE, TRUE, TRUE),
('PHISHING_CLICKED', 'Phishing Link Clicked', 'User clicked phishing link', 'social', 'high', 7, TRUE, TRUE, FALSE),
('INSIDER_THREAT', 'Insider Threat Activity', 'Suspicious insider behavior', 'insider', 'critical', 9, TRUE, TRUE, TRUE),
('API_ABUSE', 'API Abuse', 'Excessive API usage', 'api', 'medium', 6, TRUE, TRUE, TRUE),
('BLOCKCHAIN_ANOMALY', 'Blockchain Anomaly', 'Unusual blockchain activity', 'blockchain', 'high', 8, TRUE, TRUE, FALSE),
('SMART_CONTRACT_EXPLOIT', 'Smart Contract Exploit', 'Contract vulnerability exploited', 'blockchain', 'critical', 10, TRUE, TRUE, TRUE),
('CERTIFICATE_EXPIRED', 'Certificate Expired', 'SSL/TLS certificate expired', 'certificate', 'high', 7, TRUE, FALSE, FALSE),
('COMPLIANCE_VIOLATION', 'Compliance Violation', 'Regulatory requirement breach', 'compliance', 'critical', 9, TRUE, TRUE, FALSE),
('DATA_BREACH_CONFIRMED', 'Data Breach Confirmed', 'Confirmed data breach', 'breach', 'critical', 10, TRUE, TRUE, TRUE),
('ZERO_DAY_EXPLOIT', 'Zero-Day Exploit', 'Unknown vulnerability exploited', 'exploit', 'critical', 10, TRUE, TRUE, TRUE);

-- Table: audit_action_type
CREATE TABLE audit_action_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(100) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL,
    subcategory VARCHAR(50) DEFAULT NULL,
    resource_type VARCHAR(50),
    action_verb VARCHAR(50),
    is_sensitive BOOLEAN DEFAULT FALSE,
    is_destructive BOOLEAN DEFAULT FALSE,
    is_financial BOOLEAN DEFAULT FALSE,
    requires_reason BOOLEAN DEFAULT FALSE,
    requires_approval BOOLEAN DEFAULT FALSE,
    data_before_capture BOOLEAN DEFAULT TRUE,
    data_after_capture BOOLEAN DEFAULT TRUE,
    retention_days INT UNSIGNED DEFAULT 2555,
    compliance_required BOOLEAN DEFAULT TRUE,
    pii_involved BOOLEAN DEFAULT FALSE,
    phi_involved BOOLEAN DEFAULT FALSE,
    pci_involved BOOLEAN DEFAULT FALSE,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_audit_action_type_code (code),
    KEY idx_audit_action_type_category (category, subcategory),
    KEY idx_audit_action_type_resource (resource_type),
    KEY idx_audit_action_type_sensitive (is_sensitive),
    KEY idx_audit_action_type_compliance (compliance_required)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO audit_action_type (code, name, description, category, resource_type, action_verb, is_sensitive, retention_days, compliance_required) VALUES
('USER_LOGIN', 'User Login', 'User authenticated successfully', 'authentication', 'session', 'create', FALSE, 365, TRUE),
('USER_LOGOUT', 'User Logout', 'User session terminated', 'authentication', 'session', 'delete', FALSE, 365, TRUE),
('USER_CREATED', 'User Created', 'New user account created', 'user_management', 'user', 'create', TRUE, 2555, TRUE),
('USER_UPDATED', 'User Updated', 'User account modified', 'user_management', 'user', 'update', TRUE, 2555, TRUE),
('USER_DELETED', 'User Deleted', 'User account removed', 'user_management', 'user', 'delete', TRUE, 2555, TRUE),
('USER_SUSPENDED', 'User Suspended', 'User access suspended', 'user_management', 'user', 'suspend', TRUE, 2555, TRUE),
('USER_ACTIVATED', 'User Activated', 'User access restored', 'user_management', 'user', 'activate', TRUE, 2555, TRUE),
('PASSWORD_CHANGED', 'Password Changed', 'User password modified', 'authentication', 'credential', 'update', TRUE, 2555, TRUE),
('MFA_ENABLED', 'MFA Enabled', 'Multi-factor auth activated', 'authentication', 'security', 'enable', TRUE, 2555, TRUE),
('MFA_DISABLED', 'MFA Disabled', 'Multi-factor auth deactivated', 'authentication', 'security', 'disable', TRUE, 2555, TRUE),
('ROLE_ASSIGNED', 'Role Assigned', 'User role granted', 'authorization', 'role', 'assign', TRUE, 2555, TRUE),
('ROLE_REVOKED', 'Role Revoked', 'User role removed', 'authorization', 'role', 'revoke', TRUE, 2555, TRUE),
('PERMISSION_GRANTED', 'Permission Granted', 'Permission assigned to user', 'authorization', 'permission', 'grant', TRUE, 2555, TRUE),
('PERMISSION_REVOKED', 'Permission Revoked', 'Permission removed from user', 'authorization', 'permission', 'revoke', TRUE, 2555, TRUE),
('CATALOG_CREATED', 'Catalog Item Created', 'New music asset added', 'catalog', 'asset', 'create', FALSE, 2555, TRUE),
('CATALOG_UPDATED', 'Catalog Item Updated', 'Music asset modified', 'catalog', 'asset', 'update', FALSE, 2555, TRUE),
('CATALOG_DELETED', 'Catalog Item Deleted', 'Music asset removed', 'catalog', 'asset', 'delete', TRUE, 2555, TRUE),
('CONTRACT_CREATED', 'Contract Created', 'New contract drafted', 'contract', 'contract', 'create', TRUE, 2555, TRUE),
('CONTRACT_SIGNED', 'Contract Signed', 'Contract executed', 'contract', 'contract', 'sign', TRUE, 2555, TRUE),
('CONTRACT_AMENDED', 'Contract Amended', 'Contract terms modified', 'contract', 'contract', 'amend', TRUE, 2555, TRUE),
('ROYALTY_CALCULATED', 'Royalty Calculated', 'Royalty computation performed', 'financial', 'royalty', 'calculate', TRUE, 2555, TRUE),
('ROYALTY_APPROVED', 'Royalty Approved', 'Royalty payment approved', 'financial', 'royalty', 'approve', TRUE, 2555, TRUE),
('PAYMENT_PROCESSED', 'Payment Processed', 'Financial transaction completed', 'financial', 'payment', 'process', TRUE, 2555, TRUE),
('BLOCKCHAIN_WRITE', 'Blockchain Write', 'Data written to blockchain', 'blockchain', 'transaction', 'write', TRUE, 3650, TRUE),
('NFT_MINTED', 'NFT Minted', 'NFT created on blockchain', 'blockchain', 'nft', 'mint', TRUE, 3650, TRUE),
('API_KEY_CREATED', 'API Key Created', 'New API key generated', 'api', 'api_key', 'create', TRUE, 2555, TRUE),
('DATA_EXPORTED', 'Data Exported', 'Data export performed', 'data', 'export', 'download', TRUE, 2555, TRUE),
('COMPLIANCE_CHECKED', 'Compliance Check', 'Compliance verification performed', 'compliance', 'audit', 'verify', TRUE, 2555, TRUE),
('SECURITY_INCIDENT', 'Security Incident', 'Security event logged', 'security', 'incident', 'detect', TRUE, 3650, TRUE);

-- Table: ip_restriction_type
CREATE TABLE ip_restriction_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    restriction_level VARCHAR(50) NOT NULL,
    scope VARCHAR(50) DEFAULT 'global',
    target_type VARCHAR(50) DEFAULT 'ip',
    action VARCHAR(50) DEFAULT 'block',
    evaluation_order INT UNSIGNED DEFAULT 100,
    applies_to VARCHAR(100),
    is_temporary BOOLEAN DEFAULT FALSE,
    duration_hours INT UNSIGNED DEFAULT NULL,
    max_attempts INT UNSIGNED DEFAULT NULL,
    attempt_window_minutes INT UNSIGNED DEFAULT NULL,
    cooldown_minutes INT UNSIGNED DEFAULT NULL,
    bypass_methods VARCHAR(200),
    logging_level VARCHAR(20) DEFAULT 'standard',
    notification_required BOOLEAN DEFAULT FALSE,
    automated_response BOOLEAN DEFAULT TRUE,
    review_required BOOLEAN DEFAULT FALSE,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_ip_restriction_type_code (code),
    KEY idx_ip_restriction_type_level (restriction_level),
    KEY idx_ip_restriction_type_scope (scope),
    KEY idx_ip_restriction_type_order (evaluation_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO ip_restriction_type (code, name, description, restriction_level, scope, action, evaluation_order, automated_response) VALUES
('WHITELIST_GLOBAL', 'Global Whitelist', 'Always allowed IPs', 'whitelist', 'global', 'allow', 10, TRUE),
('WHITELIST_ADMIN', 'Admin Whitelist', 'Admin panel access only', 'whitelist', 'admin', 'allow', 20, TRUE),
('BLACKLIST_PERMANENT', 'Permanent Blacklist', 'Permanently blocked IPs', 'blacklist', 'global', 'block', 30, TRUE),
('BLACKLIST_TEMPORARY', 'Temporary Blacklist', 'Temporarily blocked IPs', 'blacklist', 'global', 'block', 40, TRUE),
('GEOBLOCK_COUNTRY', 'Country Block', 'Block specific countries', 'geographic', 'country', 'block', 50, TRUE),
('GEOBLOCK_REGION', 'Region Block', 'Block geographic regions', 'geographic', 'region', 'block', 60, TRUE),
('GEOALLOW_COUNTRY', 'Country Allow', 'Allow only specific countries', 'geographic', 'country', 'allow', 70, TRUE),
('RATE_LIMIT_GLOBAL', 'Global Rate Limit', 'Overall request rate limiting', 'rate_limit', 'global', 'throttle', 80, TRUE),
('RATE_LIMIT_API', 'API Rate Limit', 'API endpoint rate limiting', 'rate_limit', 'api', 'throttle', 90, TRUE),
('RATE_LIMIT_AUTH', 'Auth Rate Limit', 'Authentication rate limiting', 'rate_limit', 'auth', 'throttle', 100, TRUE),
('BRUTE_FORCE_BLOCK', 'Brute Force Protection', 'Block brute force attempts', 'security', 'auth', 'block', 110, TRUE),
('SUSPICIOUS_BLOCK', 'Suspicious Activity', 'Block suspicious behavior', 'security', 'behavior', 'block', 120, TRUE),
('VPN_BLOCK', 'VPN Detection', 'Block VPN connections', 'anonymizer', 'vpn', 'block', 130, TRUE),
('TOR_BLOCK', 'Tor Network Block', 'Block Tor exit nodes', 'anonymizer', 'tor', 'block', 140, TRUE),
('PROXY_BLOCK', 'Proxy Detection', 'Block proxy servers', 'anonymizer', 'proxy', 'block', 150, TRUE),
('DATACENTER_BLOCK', 'Datacenter IPs', 'Block hosting provider IPs', 'infrastructure', 'datacenter', 'block', 160, TRUE),
('BOT_BLOCK', 'Bot Detection', 'Block automated bots', 'automation', 'bot', 'block', 170, TRUE),
('CRAWLER_ALLOW', 'Search Engine Allow', 'Allow search engine crawlers', 'automation', 'crawler', 'allow', 180, TRUE),
('PARTNER_WHITELIST', 'Partner Networks', 'Allow partner IP ranges', 'business', 'partner', 'allow', 190, TRUE),
('COMPLIANCE_BLOCK', 'Compliance Block', 'Regulatory compliance blocks', 'compliance', 'regulatory', 'block', 200, TRUE);

-- Table: session_type
CREATE TABLE session_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    session_category VARCHAR(50) NOT NULL,
    platform VARCHAR(50) DEFAULT 'web',
    lifetime_seconds INT UNSIGNED DEFAULT 3600,
    idle_timeout_seconds INT UNSIGNED DEFAULT 1800,
    absolute_timeout_seconds INT UNSIGNED DEFAULT 86400,
    renewable BOOLEAN DEFAULT TRUE,
    renewal_window_seconds INT UNSIGNED DEFAULT 300,
    max_renewals INT UNSIGNED DEFAULT NULL,
    concurrent_allowed BOOLEAN DEFAULT TRUE,
    max_concurrent INT UNSIGNED DEFAULT 5,
    location_binding BOOLEAN DEFAULT FALSE,
    device_binding BOOLEAN DEFAULT FALSE,
    ip_binding BOOLEAN DEFAULT FALSE,
    secure_only BOOLEAN DEFAULT TRUE,
    requires_verification BOOLEAN DEFAULT FALSE,
    verification_interval_seconds INT UNSIGNED DEFAULT NULL,
    storage_type VARCHAR(50) DEFAULT 'server',
    cookie_settings VARCHAR(200) DEFAULT 'secure; httponly; samesite=strict',
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_session_type_code (code),
    KEY idx_session_type_category (session_category),
    KEY idx_session_type_platform (platform),
    KEY idx_session_type_lifetime (lifetime_seconds)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO session_type (code, name, description, session_category, platform, lifetime_seconds, idle_timeout_seconds, max_concurrent) VALUES
('WEB_STANDARD', 'Standard Web Session', 'Regular web browser session', 'user', 'web', 7200, 1800, 3),
('WEB_EXTENDED', 'Extended Web Session', 'Remember me web session', 'user', 'web', 2592000, 86400, 3),
('MOBILE_APP', 'Mobile App Session', 'Mobile application session', 'user', 'mobile', 2592000, 259200, 5),
('DESKTOP_APP', 'Desktop App Session', 'Desktop application session', 'user', 'desktop', 604800, 86400, 2),
('API_SESSION', 'API Session', 'API client session', 'api', 'api', 3600, 0, 10),
('ADMIN_SESSION', 'Admin Session', 'Administrative access session', 'admin', 'web', 1800, 600, 1),
('SUPPORT_SESSION', 'Support Session', 'Customer support session', 'support', 'web', 3600, 900, 1),
('SSO_SESSION', 'SSO Session', 'Single sign-on session', 'sso', 'web', 28800, 3600, 5),
('OAUTH_SESSION', 'OAuth Session', 'OAuth provider session', 'oauth', 'web', 3600, 0, 10),
('GUEST_SESSION', 'Guest Session', 'Unauthenticated guest session', 'guest', 'web', 1800, 600, 1),
('PREVIEW_SESSION', 'Preview Session', 'Content preview session', 'preview', 'web', 900, 300, 1),
('DOWNLOAD_SESSION', 'Download Session', 'File download session', 'download', 'web', 3600, 0, 3),
('STREAMING_SESSION', 'Streaming Session', 'Media streaming session', 'streaming', 'web', 14400, 0, 3),
('COLLABORATION_SESSION', 'Collaboration Session', 'Real-time collaboration', 'collaboration', 'web', 28800, 1800, 1),
('BLOCKCHAIN_SESSION', 'Blockchain Session', 'Web3 wallet session', 'blockchain', 'web', 86400, 3600, 1);

-- Table: token_type
CREATE TABLE token_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    token_category VARCHAR(50) NOT NULL,
    token_format VARCHAR(50) DEFAULT 'jwt',
    signing_algorithm VARCHAR(50) DEFAULT 'RS256',
    lifetime_seconds INT UNSIGNED DEFAULT 3600,
    renewable BOOLEAN DEFAULT FALSE,
    renewal_window_seconds INT UNSIGNED DEFAULT NULL,
    revocable BOOLEAN DEFAULT TRUE,
    single_use BOOLEAN DEFAULT FALSE,
    max_uses INT UNSIGNED DEFAULT NULL,
    scope_required BOOLEAN DEFAULT TRUE,
    audience_validation BOOLEAN DEFAULT TRUE,
    issuer VARCHAR(200) DEFAULT NULL,
    claims_required VARCHAR(500),
    custom_claims_allowed BOOLEAN DEFAULT TRUE,
    encryption_required BOOLEAN DEFAULT FALSE,
    binding_required VARCHAR(50) DEFAULT NULL,
    rotation_enabled BOOLEAN DEFAULT FALSE,
    rotation_interval_seconds INT UNSIGNED DEFAULT NULL,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_token_type_code (code),
    KEY idx_token_type_category (token_category),
    KEY idx_token_type_format (token_format),
    KEY idx_token_type_lifetime (lifetime_seconds)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO token_type (code, name, description, token_category, token_format, lifetime_seconds, renewable, revocable, single_use) VALUES
('ACCESS_TOKEN', 'Access Token', 'API access token', 'access', 'jwt', 3600, FALSE, TRUE, FALSE),
('REFRESH_TOKEN', 'Refresh Token', 'Token refresh mechanism', 'refresh', 'opaque', 2592000, TRUE, TRUE, FALSE),
('ID_TOKEN', 'Identity Token', 'User identity token', 'identity', 'jwt', 3600, FALSE, FALSE, FALSE),
('SESSION_TOKEN', 'Session Token', 'Web session token', 'session', 'opaque', 7200, TRUE, TRUE, FALSE),
('API_KEY', 'API Key', 'Long-lived API key', 'api', 'opaque', 31536000, FALSE, TRUE, FALSE),
('BEARER_TOKEN', 'Bearer Token', 'Bearer authentication token', 'bearer', 'jwt', 3600, FALSE, TRUE, FALSE),
('CSRF_TOKEN', 'CSRF Token', 'Cross-site request forgery protection', 'security', 'opaque', 86400, FALSE, FALSE, TRUE),
('VERIFICATION_TOKEN', 'Verification Token', 'Email/phone verification', 'verification', 'opaque', 86400, FALSE, FALSE, TRUE),
('RESET_TOKEN', 'Reset Token', 'Password reset token', 'reset', 'opaque', 3600, FALSE, FALSE, TRUE),
('INVITATION_TOKEN', 'Invitation Token', 'User invitation token', 'invitation', 'opaque', 604800, FALSE, FALSE, TRUE),
('DOWNLOAD_TOKEN', 'Download Token', 'Secure file download', 'download', 'jwt', 3600, FALSE, FALSE, TRUE),
('UPLOAD_TOKEN', 'Upload Token', 'Secure file upload', 'upload', 'jwt', 3600, FALSE, FALSE, FALSE),
('WEBHOOK_TOKEN', 'Webhook Token', 'Webhook verification', 'webhook', 'opaque', 31536000, FALSE, TRUE, FALSE),
('MFA_TOKEN', 'MFA Token', 'Multi-factor auth token', 'mfa', 'opaque', 300, FALSE, FALSE, TRUE),
('DELEGATION_TOKEN', 'Delegation Token', 'Delegated access token', 'delegation', 'jwt', 86400, FALSE, TRUE, FALSE);

-- Table: mfa_type
CREATE TABLE mfa_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    mfa_category VARCHAR(50) NOT NULL,
    factor_type VARCHAR(50) NOT NULL,
    security_level INT UNSIGNED DEFAULT 5,
    setup_complexity VARCHAR(20) DEFAULT 'medium',
    user_friendly BOOLEAN DEFAULT TRUE,
    requires_device BOOLEAN DEFAULT FALSE,
    requires_app BOOLEAN DEFAULT FALSE,
    requires_phone BOOLEAN DEFAULT FALSE,
    requires_biometric BOOLEAN DEFAULT FALSE,
    backup_supported BOOLEAN DEFAULT TRUE,
    recovery_codes_count INT UNSIGNED DEFAULT 10,
    validity_seconds INT UNSIGNED DEFAULT 30,
    max_attempts INT UNSIGNED DEFAULT 3,
    cooldown_seconds INT UNSIGNED DEFAULT 60,
    replay_protection BOOLEAN DEFAULT TRUE,
    phishing_resistant BOOLEAN DEFAULT FALSE,
    compliance_approved VARCHAR(200),
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_mfa_type_code (code),
    KEY idx_mfa_type_category (mfa_category),
    KEY idx_mfa_type_factor (factor_type),
    KEY idx_mfa_type_level (security_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO mfa_type (code, name, description, mfa_category, factor_type, security_level, requires_device, requires_app, phishing_resistant) VALUES
('TOTP_APP', 'Authenticator App', 'Time-based one-time password', 'totp', 'something_you_have', 7, TRUE, TRUE, FALSE),
('SMS_OTP', 'SMS Code', 'SMS one-time password', 'sms', 'something_you_have', 4, TRUE, FALSE, FALSE),
('VOICE_OTP', 'Voice Call', 'Voice call with code', 'voice', 'something_you_have', 4, TRUE, FALSE, FALSE),
('EMAIL_OTP', 'Email Code', 'Email one-time password', 'email', 'something_you_have', 3, FALSE, FALSE, FALSE),
('PUSH_NOTIFICATION', 'Push Notification', 'Mobile app push approval', 'push', 'something_you_have', 8, TRUE, TRUE, TRUE),
('HARDWARE_KEY_FIDO2', 'FIDO2 Security Key', 'Hardware security key', 'hardware', 'something_you_have', 10, TRUE, FALSE, TRUE),
('HARDWARE_KEY_U2F', 'U2F Security Key', 'Universal 2nd Factor key', 'hardware', 'something_you_have', 9, TRUE, FALSE, TRUE),
('BIOMETRIC_FINGERPRINT', 'Fingerprint', 'Fingerprint biometric', 'biometric', 'something_you_are', 8, TRUE, FALSE, TRUE),
('BIOMETRIC_FACE', 'Face Recognition', 'Facial recognition', 'biometric', 'something_you_are', 8, TRUE, FALSE, TRUE),
('BIOMETRIC_IRIS', 'Iris Scan', 'Iris recognition', 'biometric', 'something_you_are', 9, TRUE, FALSE, TRUE),
('PASSKEY', 'Passkey', 'FIDO2 platform authenticator', 'passkey', 'something_you_have', 9, TRUE, FALSE, TRUE),
('BACKUP_CODES', 'Backup Codes', 'Pre-generated recovery codes', 'backup', 'something_you_know', 5, FALSE, FALSE, FALSE),
('SECURITY_QUESTIONS', 'Security Questions', 'Knowledge-based authentication', 'knowledge', 'something_you_know', 2, FALSE, FALSE, FALSE),
('BLOCKCHAIN_SIGNATURE', 'Blockchain Signature', 'Crypto wallet signature', 'blockchain', 'something_you_have', 8, TRUE, TRUE, TRUE),
('TRUSTED_DEVICE', 'Trusted Device', 'Previously verified device', 'device', 'something_you_have', 6, TRUE, FALSE, FALSE);

-- Table: password_policy
CREATE TABLE password_policy (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    policy_level VARCHAR(50) NOT NULL,
    min_length INT UNSIGNED DEFAULT 8,
    max_length INT UNSIGNED DEFAULT 128,
    require_uppercase BOOLEAN DEFAULT TRUE,
    min_uppercase INT UNSIGNED DEFAULT 1,
    require_lowercase BOOLEAN DEFAULT TRUE,
    min_lowercase INT UNSIGNED DEFAULT 1,
    require_numbers BOOLEAN DEFAULT TRUE,
    min_numbers INT UNSIGNED DEFAULT 1,
    require_special_chars BOOLEAN DEFAULT TRUE,
    min_special_chars INT UNSIGNED DEFAULT 1,
    special_chars_set VARCHAR(100) DEFAULT '!@#$%^&*()_+-=[]{}|;:,.<>?',
    forbidden_chars VARCHAR(100) DEFAULT NULL,
    min_unique_chars INT UNSIGNED DEFAULT 4,
    max_consecutive_chars INT UNSIGNED DEFAULT 3,
    max_repeated_chars INT UNSIGNED DEFAULT 3,
    disallow_username BOOLEAN DEFAULT TRUE,
    disallow_email BOOLEAN DEFAULT TRUE,
    disallow_common_passwords BOOLEAN DEFAULT TRUE,
    disallow_dictionary_words BOOLEAN DEFAULT TRUE,
    disallow_personal_info BOOLEAN DEFAULT TRUE,
    history_count INT UNSIGNED DEFAULT 5,
    min_age_days INT UNSIGNED DEFAULT 1,
    max_age_days INT UNSIGNED DEFAULT NULL,
    expiration_warning_days INT UNSIGNED DEFAULT 14,
    grace_period_days INT UNSIGNED DEFAULT 7,
    complexity_score_min INT UNSIGNED DEFAULT 3,
    entropy_bits_min INT UNSIGNED DEFAULT 50,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_password_policy_code (code),
    KEY idx_password_policy_level (policy_level),
    KEY idx_password_policy_complexity (complexity_score_min)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO password_policy (code, name, description, policy_level, min_length, require_uppercase, require_lowercase, require_numbers, require_special_chars, max_age_days, history_count) VALUES
('MAXIMUM_SECURITY', 'Maximum Security', 'Highest security requirements', 'maximum', 20, TRUE, TRUE, TRUE, TRUE, 60, 12),
('HIGH_SECURITY', 'High Security', 'Strong security requirements', 'high', 16, TRUE, TRUE, TRUE, TRUE, 90, 10),
('STANDARD_SECURITY', 'Standard Security', 'Default security level', 'standard', 12, TRUE, TRUE, TRUE, TRUE, 180, 5),
('BASIC_SECURITY', 'Basic Security', 'Minimum requirements', 'basic', 8, TRUE, TRUE, TRUE, FALSE, 365, 3),
('ENTERPRISE', 'Enterprise Policy', 'Corporate standard', 'enterprise', 14, TRUE, TRUE, TRUE, TRUE, 90, 8),
('FINANCIAL', 'Financial Services', 'Banking compliance', 'financial', 16, TRUE, TRUE, TRUE, TRUE, 60, 12),
('HEALTHCARE', 'Healthcare Policy', 'HIPAA compliance', 'healthcare', 12, TRUE, TRUE, TRUE, TRUE, 90, 6),
('GOVERNMENT', 'Government Policy', 'Federal requirements', 'government', 18, TRUE, TRUE, TRUE, TRUE, 60, 12),
('DEVELOPER', 'Developer Policy', 'Development accounts', 'developer', 16, TRUE, TRUE, TRUE, TRUE, NULL, 5),
('API_KEY_POLICY', 'API Key Policy', 'API key generation', 'api', 32, FALSE, FALSE, FALSE, FALSE, 365, 1),
('TEMPORARY', 'Temporary Password', 'Must change on login', 'temporary', 8, TRUE, TRUE, TRUE, FALSE, 1, 0),
('SERVICE_ACCOUNT', 'Service Account', 'Automated accounts', 'service', 24, TRUE, TRUE, TRUE, TRUE, NULL, 3);

-- Table: security_question_type
CREATE TABLE security_question_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(100) NOT NULL,
    name VARCHAR(200) NOT NULL,
    question_text TEXT NOT NULL,
    question_category VARCHAR(50) NOT NULL,
    difficulty_level INT UNSIGNED DEFAULT 3,
    guessability_score INT UNSIGNED DEFAULT 5,
    memorability_score INT UNSIGNED DEFAULT 5,
    stability_score INT UNSIGNED DEFAULT 5,
    cultural_bias VARCHAR(50) DEFAULT 'low',
    age_appropriate_min INT UNSIGNED DEFAULT 13,
    answer_format VARCHAR(50) DEFAULT 'text',
    min_answer_length INT UNSIGNED DEFAULT 3,
    max_answer_length INT UNSIGNED DEFAULT 50,
    case_sensitive BOOLEAN DEFAULT FALSE,
    normalize_spaces BOOLEAN DEFAULT TRUE,
    allow_numbers BOOLEAN DEFAULT TRUE,
    language_code VARCHAR(10) DEFAULT 'en',
    is_custom BOOLEAN DEFAULT FALSE,
    usage_count INT UNSIGNED DEFAULT 0,
    success_rate DECIMAL(5,2) DEFAULT NULL,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_security_question_type_code (code),
    KEY idx_security_question_type_category (question_category),
    KEY idx_security_question_type_language (language_code),
    KEY idx_security_question_type_custom (is_custom)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO security_question_type (code, name, question_text, question_category, difficulty_level, memorability_score, stability_score) VALUES
('FIRST_PET_NAME', 'First Pet Name', 'What was the name of your first pet?', 'personal', 3, 8, 9),
('BIRTH_CITY', 'Birth City', 'In what city were you born?', 'personal', 2, 9, 10),
('MOTHER_MAIDEN_NAME', 'Mother\'s Maiden Name', 'What is your mother\'s maiden name?', 'family', 2, 8, 10),
('FAVORITE_TEACHER', 'Favorite Teacher', 'What was the name of your favorite teacher?', 'education', 4, 7, 8),
('FIRST_SCHOOL', 'First School', 'What was the name of your elementary school?', 'education', 3, 8, 9),
('CHILDHOOD_NICKNAME', 'Childhood Nickname', 'What was your childhood nickname?', 'personal', 5, 7, 8),
('CHILDHOOD_FRIEND', 'Best Childhood Friend', 'What was the name of your best friend in childhood?', 'personal', 4, 7, 7),
('FIRST_CAR_MAKE', 'First Car Make', 'What was the make of your first car?', 'possessions', 3, 8, 9),
('FAVORITE_FOOD', 'Favorite Food', 'What is your favorite food?', 'preferences', 2, 6, 5),
('DREAM_JOB_CHILD', 'Childhood Dream Job', 'What did you want to be when you grew up?', 'personal', 4, 7, 8),
('FAVORITE_MOVIE', 'Favorite Movie', 'What is your all-time favorite movie?', 'preferences', 3, 6, 6),
('FAVORITE_BOOK', 'Favorite Book', 'What is your favorite book?', 'preferences', 4, 6, 6),
('WEDDING_LOCATION', 'Wedding Location', 'Where did you get married? (Enter "N/A" if not applicable)', 'life_events', 5, 9, 10),
('FIRST_EMPLOYER', 'First Employer', 'Who was your first employer?', 'work', 3, 8, 9),
('FAVORITE_VACATION', 'Favorite Vacation Spot', 'What is your favorite vacation destination?', 'preferences', 3, 6, 6);

-- Table: data_classification
CREATE TABLE data_classification (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    sensitivity_level INT UNSIGNED NOT NULL,
    confidentiality VARCHAR(20) NOT NULL,
    integrity_requirement VARCHAR(20) NOT NULL,
    availability_requirement VARCHAR(20) NOT NULL,
    privacy_level VARCHAR(20) NOT NULL,
    regulatory_impact VARCHAR(20) DEFAULT 'medium',
    encryption_required BOOLEAN DEFAULT TRUE,
    encryption_at_rest BOOLEAN DEFAULT TRUE,
    encryption_in_transit BOOLEAN DEFAULT TRUE,
    access_control_level VARCHAR(50) DEFAULT 'standard',
    audit_requirement VARCHAR(20) DEFAULT 'standard',
    retention_period_days INT UNSIGNED DEFAULT NULL,
    disposal_method VARCHAR(50) DEFAULT 'secure_delete',
    backup_requirement VARCHAR(20) DEFAULT 'standard',
    geographic_restrictions VARCHAR(200) DEFAULT NULL,
    allowed_storage_locations VARCHAR(200) DEFAULT NULL,
    prohibited_storage_locations VARCHAR(200) DEFAULT NULL,
    handling_instructions TEXT,
    breach_notification_required BOOLEAN DEFAULT TRUE,
    breach_notification_hours INT UNSIGNED DEFAULT 72,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_data_classification_code (code),
    UNIQUE KEY uk_data_classification_level (sensitivity_level),
    KEY idx_data_classification_privacy (privacy_level),
    KEY idx_data_classification_regulatory (regulatory_impact)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_classification (code, name, description, sensitivity_level, confidentiality, integrity_requirement, availability_requirement, privacy_level, encryption_required, retention_period_days) VALUES
('PUBLIC', 'Public Information', 'Publicly available data', 1, 'public', 'low', 'low', 'none', FALSE, NULL),
('INTERNAL', 'Internal Use', 'Internal business data', 2, 'internal', 'medium', 'medium', 'low', FALSE, 2555),
('CONFIDENTIAL', 'Confidential', 'Confidential business data', 3, 'confidential', 'high', 'medium', 'medium', TRUE, 2555),
('RESTRICTED', 'Restricted', 'Highly sensitive data', 4, 'restricted', 'critical', 'high', 'high', TRUE, 2555),
('SECRET', 'Secret', 'Classified information', 5, 'secret', 'critical', 'critical', 'critical', TRUE, 3650),
('PII', 'Personal Information', 'Personally identifiable information', 4, 'restricted', 'high', 'medium', 'high', TRUE, 2555),
('PII_SENSITIVE', 'Sensitive PII', 'SSN, financial, health data', 5, 'secret', 'critical', 'high', 'critical', TRUE, 2555),
('FINANCIAL', 'Financial Data', 'Financial records and transactions', 5, 'secret', 'critical', 'critical', 'high', TRUE, 2555),
('HEALTH', 'Health Information', 'Protected health information', 5, 'secret', 'critical', 'high', 'critical', TRUE, 2555),
('PAYMENT_CARD', 'Payment Card Data', 'Credit card information', 5, 'secret', 'critical', 'high', 'critical', TRUE, 2555),
('INTELLECTUAL_PROPERTY', 'Intellectual Property', 'Trade secrets and IP', 5, 'secret', 'critical', 'high', 'high', TRUE, NULL),
('LEGAL_PRIVILEGED', 'Legal Privileged', 'Attorney-client communications', 5, 'secret', 'critical', 'medium', 'critical', TRUE, 2555),
('CONTRACTS', 'Contract Data', 'Legal agreements and terms', 4, 'restricted', 'critical', 'high', 'high', TRUE, 3650),
('BLOCKCHAIN_KEYS', 'Blockchain Keys', 'Private keys and seeds', 5, 'secret', 'critical', 'critical', 'critical', TRUE, NULL),
('ARTIST_PRIVATE', 'Artist Private Data', 'Private artist information', 4, 'restricted', 'high', 'medium', 'high', TRUE, 2555);

-- Table: access_control_type
CREATE TABLE access_control_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    control_model VARCHAR(50) NOT NULL,
    implementation_type VARCHAR(50) DEFAULT 'mandatory',
    granularity VARCHAR(50) DEFAULT 'resource',
    inheritance_model VARCHAR(50) DEFAULT 'none',
    delegation_allowed BOOLEAN DEFAULT FALSE,
    time_based_controls BOOLEAN DEFAULT FALSE,
    context_aware BOOLEAN DEFAULT FALSE,
    attribute_based BOOLEAN DEFAULT FALSE,
    rule_based BOOLEAN DEFAULT FALSE,
    default_deny BOOLEAN DEFAULT TRUE,
    explicit_allow_required BOOLEAN DEFAULT TRUE,
    conflict_resolution VARCHAR(50) DEFAULT 'deny_override',
    evaluation_order VARCHAR(50) DEFAULT 'sequential',
    caching_allowed BOOLEAN DEFAULT TRUE,
    cache_ttl_seconds INT UNSIGNED DEFAULT 300,
    audit_level VARCHAR(20) DEFAULT 'standard',
    performance_impact VARCHAR(20) DEFAULT 'medium',
    complexity_level VARCHAR(20) DEFAULT 'medium',
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_access_control_type_code (code),
    KEY idx_access_control_type_model (control_model),
    KEY idx_access_control_type_implementation (implementation_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO access_control_type (code, name, description, control_model, implementation_type, inheritance_model, context_aware, default_deny) VALUES
('RBAC', 'Role-Based Access Control', 'Traditional role-based model', 'role_based', 'mandatory', 'hierarchical', FALSE, TRUE),
('RBAC_HIERARCHICAL', 'Hierarchical RBAC', 'RBAC with role inheritance', 'role_based', 'mandatory', 'hierarchical', FALSE, TRUE),
('RBAC_CONSTRAINED', 'Constrained RBAC', 'RBAC with separation of duties', 'role_based', 'mandatory', 'hierarchical', TRUE, TRUE),
('ABAC', 'Attribute-Based Access Control', 'Flexible attribute policies', 'attribute_based', 'mandatory', 'none', TRUE, TRUE),
('PBAC', 'Policy-Based Access Control', 'Declarative policy rules', 'policy_based', 'mandatory', 'none', TRUE, TRUE),
('MAC', 'Mandatory Access Control', 'System-enforced labels', 'label_based', 'mandatory', 'none', FALSE, TRUE),
('DAC', 'Discretionary Access Control', 'Owner-controlled access', 'owner_based', 'discretionary', 'none', FALSE, TRUE),
('TBAC', 'Task-Based Access Control', 'Task-oriented permissions', 'task_based', 'dynamic', 'none', TRUE, TRUE),
('CBAC', 'Context-Based Access Control', 'Environmental context aware', 'context_based', 'dynamic', 'none', TRUE, TRUE),
('RuBAC', 'Rule-Based Access Control', 'Business rule driven', 'rule_based', 'mandatory', 'none', TRUE, TRUE),
('OrBAC', 'Organization-Based AC', 'Organizational structure based', 'organization_based', 'mandatory', 'hierarchical', FALSE, TRUE),
('ZBAC', 'Zone-Based Access Control', 'Network zone isolation', 'zone_based', 'mandatory', 'none', FALSE, TRUE),
('RABAC', 'Risk-Adaptive Access Control', 'Risk score based decisions', 'risk_based', 'adaptive', 'none', TRUE, TRUE),
('ZTA', 'Zero Trust Access', 'Never trust, always verify', 'zero_trust', 'dynamic', 'none', TRUE, TRUE),
('SMART_CONTRACT_AC', 'Smart Contract Access', 'Blockchain-enforced access', 'blockchain', 'immutable', 'none', FALSE, TRUE);

-- Table: threat_type
CREATE TABLE threat_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(100) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL,
    threat_actor VARCHAR(50),
    severity VARCHAR(20) NOT NULL,
    likelihood VARCHAR(20) DEFAULT 'medium',
    impact VARCHAR(20) DEFAULT 'medium',
    risk_score INT UNSIGNED DEFAULT 50,
    attack_vector VARCHAR(100),
    attack_complexity VARCHAR(20) DEFAULT 'medium',
    privileges_required VARCHAR(20) DEFAULT 'none',
    user_interaction VARCHAR(20) DEFAULT 'none',
    scope_change BOOLEAN DEFAULT FALSE,
    confidentiality_impact VARCHAR(20) DEFAULT 'none',
    integrity_impact VARCHAR(20) DEFAULT 'none',
    availability_impact VARCHAR(20) DEFAULT 'none',
    mitre_att_ck_id VARCHAR(50) DEFAULT NULL,
    cve_examples VARCHAR(500) DEFAULT NULL,
    indicators_of_compromise TEXT,
    detection_methods TEXT,
    prevention_measures TEXT,
    mitigation_strategies TEXT,
    recovery_procedures TEXT,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_threat_type_code (code),
    KEY idx_threat_type_category (category),
    KEY idx_threat_type_severity (severity),
    KEY idx_threat_type_risk (risk_score),
    KEY idx_threat_type_mitre (mitre_att_ck_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO threat_type (code, name, description, category, threat_actor, severity, likelihood, impact, risk_score) VALUES
('MALWARE_RANSOMWARE', 'Ransomware Attack', 'Encryption-based extortion', 'malware', 'criminal', 'critical', 'high', 'critical', 95),
('MALWARE_TROJAN', 'Trojan Horse', 'Disguised malicious software', 'malware', 'various', 'high', 'high', 'high', 80),
('MALWARE_ROOTKIT', 'Rootkit', 'System-level compromise', 'malware', 'advanced', 'critical', 'medium', 'critical', 90),
('PHISHING_SPEAR', 'Spear Phishing', 'Targeted phishing attack', 'social_engineering', 'criminal', 'high', 'high', 'high', 85),
('PHISHING_WHALING', 'Whaling', 'Executive-targeted phishing', 'social_engineering', 'criminal', 'critical', 'medium', 'critical', 90),
('INSIDER_MALICIOUS', 'Malicious Insider', 'Intentional insider threat', 'insider', 'insider', 'critical', 'low', 'critical', 85),
('INSIDER_NEGLIGENT', 'Negligent Insider', 'Unintentional insider threat', 'insider', 'insider', 'medium', 'high', 'medium', 60),
('APT', 'Advanced Persistent Threat', 'Sophisticated long-term attack', 'advanced', 'nation_state', 'critical', 'low', 'critical', 95),
('DDOS_VOLUMETRIC', 'Volumetric DDoS', 'Bandwidth exhaustion attack', 'dos', 'various', 'high', 'medium', 'high', 75),
('DDOS_APPLICATION', 'Application DDoS', 'Application layer attack', 'dos', 'various', 'high', 'high', 'high', 80),
('INJECTION_SQL', 'SQL Injection', 'Database query manipulation', 'injection', 'various', 'high', 'high', 'high', 85),
('INJECTION_COMMAND', 'Command Injection', 'OS command execution', 'injection', 'various', 'critical', 'medium', 'critical', 90),
('XSS_STORED', 'Stored XSS', 'Persistent script injection', 'injection', 'various', 'high', 'medium', 'high', 80),
('SUPPLY_CHAIN', 'Supply Chain Attack', 'Third-party compromise', 'supply_chain', 'advanced', 'critical', 'low', 'critical', 90),
('ZERO_DAY', 'Zero-Day Exploit', 'Unknown vulnerability exploit', 'exploit', 'advanced', 'critical', 'low', 'critical', 95),
('MITM', 'Man-in-the-Middle', 'Communication interception', 'interception', 'various', 'high', 'medium', 'high', 75),
('CREDENTIAL_STUFFING', 'Credential Stuffing', 'Automated login attempts', 'authentication', 'criminal', 'medium', 'high', 'medium', 65),
('BLOCKCHAIN_51', '51% Attack', 'Blockchain consensus attack', 'blockchain', 'criminal', 'critical', 'low', 'critical', 85),
('AI_ADVERSARIAL', 'AI Adversarial Attack', 'Machine learning manipulation', 'ai', 'advanced', 'high', 'low', 'high', 70),
('DEEPFAKE', 'Deepfake Attack', 'AI-generated impersonation', 'ai', 'various', 'high', 'medium', 'high', 75);

-- Table: vulnerability_type
CREATE TABLE vulnerability_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(100) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL,
    severity VARCHAR(20) NOT NULL,
    cvss_base_score DECIMAL(3,1) DEFAULT NULL,
    cvss_vector VARCHAR(200) DEFAULT NULL,
    cwe_id VARCHAR(50) DEFAULT NULL,
    owasp_category VARCHAR(50) DEFAULT NULL,
    affected_components VARCHAR(500),
    affected_versions VARCHAR(200) DEFAULT NULL,
    discovery_method VARCHAR(50) DEFAULT NULL,
    exploit_available BOOLEAN DEFAULT FALSE,
    exploit_difficulty VARCHAR(20) DEFAULT 'medium',
    patch_available BOOLEAN DEFAULT FALSE,
    patch_url VARCHAR(500) DEFAULT NULL,
    workaround_available BOOLEAN DEFAULT FALSE,
    workaround_description TEXT,
    detection_methods TEXT,
    false_positive_rate VARCHAR(20) DEFAULT 'low',
    business_impact TEXT,
    technical_impact TEXT,
    remediation_cost VARCHAR(20) DEFAULT 'medium',
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_vulnerability_type_code (code),
    KEY idx_vulnerability_type_category (category),
    KEY idx_vulnerability_type_severity (severity),
    KEY idx_vulnerability_type_cvss (cvss_base_score),
    KEY idx_vulnerability_type_cwe (cwe_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO vulnerability_type (code, name, description, category, severity, cvss_base_score, cwe_id, owasp_category) VALUES
('INJECTION_SQL', 'SQL Injection', 'Database query manipulation', 'injection', 'critical', 9.8, 'CWE-89', 'A03:2021'),
('INJECTION_NOSQL', 'NoSQL Injection', 'NoSQL database manipulation', 'injection', 'high', 8.5, 'CWE-943', 'A03:2021'),
('XSS_REFLECTED', 'Reflected XSS', 'Non-persistent script injection', 'xss', 'high', 7.5, 'CWE-79', 'A03:2021'),
('XSS_STORED', 'Stored XSS', 'Persistent script injection', 'xss', 'critical', 8.8, 'CWE-79', 'A03:2021'),
('XSS_DOM', 'DOM-based XSS', 'Client-side script injection', 'xss', 'high', 7.5, 'CWE-79', 'A03:2021'),
('BROKEN_AUTH', 'Broken Authentication', 'Authentication mechanism flaws', 'authentication', 'critical', 9.1, 'CWE-287', 'A07:2021'),
('SENSITIVE_DATA_EXPOSURE', 'Sensitive Data Exposure', 'Unprotected sensitive data', 'data_exposure', 'high', 7.5, 'CWE-200', 'A02:2021'),
('XXE', 'XML External Entity', 'XML parser vulnerability', 'injection', 'high', 8.2, 'CWE-611', 'A05:2021'),
('BROKEN_ACCESS_CONTROL', 'Broken Access Control', 'Authorization bypass', 'access_control', 'critical', 8.8, 'CWE-284', 'A01:2021'),
('SECURITY_MISCONFIGURATION', 'Security Misconfiguration', 'Insecure default settings', 'configuration', 'medium', 6.5, 'CWE-16', 'A05:2021'),
('INSECURE_DESERIALIZATION', 'Insecure Deserialization', 'Unsafe object deserialization', 'deserialization', 'critical', 8.1, 'CWE-502', 'A08:2021'),
('KNOWN_VULNERABILITIES', 'Using Components with Known Vulnerabilities', 'Outdated dependencies', 'components', 'high', 7.5, 'CWE-937', 'A06:2021'),
('INSUFFICIENT_LOGGING', 'Insufficient Logging', 'Inadequate security monitoring', 'logging', 'medium', 5.0, 'CWE-778', 'A09:2021'),
('CSRF', 'Cross-Site Request Forgery', 'Forged user requests', 'csrf', 'high', 7.5, 'CWE-352', 'A01:2021'),
('SSRF', 'Server-Side Request Forgery', 'Internal resource access', 'ssrf', 'high', 8.6, 'CWE-918', 'A10:2021'),
('PATH_TRAVERSAL', 'Path Traversal', 'Directory traversal attack', 'path_traversal', 'high', 7.5, 'CWE-22', 'A01:2021'),
('LDAP_INJECTION', 'LDAP Injection', 'LDAP query manipulation', 'injection', 'high', 7.5, 'CWE-90', 'A03:2021'),
('RACE_CONDITION', 'Race Condition', 'Time-of-check time-of-use', 'concurrency', 'medium', 6.8, 'CWE-362', NULL),
('BUFFER_OVERFLOW', 'Buffer Overflow', 'Memory corruption', 'memory', 'critical', 9.8, 'CWE-119', NULL),
('SMART_CONTRACT_REENTRANCY', 'Reentrancy Attack', 'Smart contract recursion flaw', 'blockchain', 'critical', 9.0, NULL, NULL);

-- Table: security_compliance_type
CREATE TABLE security_compliance_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL,
    compliance_type VARCHAR(50) NOT NULL,
    geographic_scope VARCHAR(100),
    industry_scope VARCHAR(200),
    regulatory_body VARCHAR(200),
    enforcement_agency VARCHAR(200),
    effective_date DATE,
    sunset_date DATE DEFAULT NULL,
    version VARCHAR(20) DEFAULT NULL,
    parent_regulation VARCHAR(50) DEFAULT NULL,
    supersedes VARCHAR(50) DEFAULT NULL,
    certification_available BOOLEAN DEFAULT FALSE,
    certification_required BOOLEAN DEFAULT FALSE,
    certification_validity_days INT UNSIGNED DEFAULT NULL,
    self_assessment_allowed BOOLEAN DEFAULT TRUE,
    third_party_audit_required BOOLEAN DEFAULT FALSE,
    audit_frequency_days INT UNSIGNED DEFAULT 365,
    continuous_monitoring BOOLEAN DEFAULT FALSE,
    penalty_type VARCHAR(50) DEFAULT 'financial',
    max_penalty_amount DECIMAL(15,2) DEFAULT NULL,
    penalty_currency VARCHAR(3) DEFAULT 'USD',
    reporting_required BOOLEAN DEFAULT TRUE,
    breach_notification_hours INT UNSIGNED DEFAULT 72,
    documentation_requirements TEXT,
    technical_requirements TEXT,
    organizational_requirements TEXT,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_security_compliance_type_code (code),
    KEY idx_security_compliance_type_category (category),
    KEY idx_security_compliance_type_type (compliance_type),
    KEY idx_security_compliance_type_geo (geographic_scope),
    KEY idx_security_compliance_type_cert (certification_required)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO security_compliance_type (code, name, description, category, compliance_type, geographic_scope, regulatory_body, certification_available, audit_frequency_days, breach_notification_hours) VALUES
('GDPR', 'General Data Protection Regulation', 'EU data protection and privacy', 'privacy', 'regulation', 'EU', 'European Commission', TRUE, 365, 72),
('CCPA', 'California Consumer Privacy Act', 'California privacy rights', 'privacy', 'regulation', 'US-CA', 'California AG', FALSE, 365, 72),
('CPRA', 'California Privacy Rights Act', 'Enhanced CCPA', 'privacy', 'regulation', 'US-CA', 'California Privacy Protection Agency', FALSE, 365, 72),
('LGPD', 'Lei Geral de Proteção de Dados', 'Brazilian data protection', 'privacy', 'regulation', 'BR', 'ANPD', FALSE, 365, 72),
('PIPEDA', 'Personal Information Protection Act', 'Canadian privacy law', 'privacy', 'regulation', 'CA', 'Privacy Commissioner', FALSE, 365, 72),
('APPI', 'Act on Protection of Personal Information', 'Japanese privacy law', 'privacy', 'regulation', 'JP', 'Personal Information Protection Commission', FALSE, 365, 72),
('HIPAA', 'Health Insurance Portability Act', 'US healthcare privacy', 'healthcare', 'regulation', 'US', 'HHS', TRUE, 365, 60),
('PCI_DSS_4', 'Payment Card Industry DSS v4', 'Payment card security', 'financial', 'standard', 'Global', 'PCI Security Standards Council', TRUE, 365, 24),
('SOX', 'Sarbanes-Oxley Act', 'US financial reporting', 'financial', 'regulation', 'US', 'SEC', TRUE, 365, 96),
('ISO_27001_2022', 'ISO/IEC 27001:2022', 'Information security management', 'security', 'standard', 'Global', 'ISO', TRUE, 365, NULL),
('ISO_27701_2019', 'ISO/IEC 27701:2019', 'Privacy information management', 'privacy', 'standard', 'Global', 'ISO', TRUE, 365, NULL),
('SOC2_TYPE2', 'SOC 2 Type II', 'Service organization controls', 'audit', 'standard', 'US', 'AICPA', TRUE, 365, NULL),
('NIST_CSF', 'NIST Cybersecurity Framework', 'Cybersecurity best practices', 'security', 'framework', 'US', 'NIST', FALSE, 365, NULL),
('GLBA', 'Gramm-Leach-Bliley Act', 'US financial privacy', 'financial', 'regulation', 'US', 'FTC', FALSE, 365, 72),
('FERPA', 'Family Educational Rights Privacy Act', 'US education privacy', 'education', 'regulation', 'US', 'Department of Education', FALSE, 365, 72),
('COPPA', 'Children\'s Online Privacy Protection', 'US children\'s privacy', 'privacy', 'regulation', 'US', 'FTC', FALSE, 365, 24),
('CISAC', 'CISAC Standards', 'Music rights society standards', 'music', 'standard', 'Global', 'CISAC', FALSE, 365, NULL),
('DDEX', 'Digital Data Exchange', 'Music industry data standards', 'music', 'standard', 'Global', 'DDEX', FALSE, 365, NULL),
('MLC', 'Mechanical Licensing Collective', 'US mechanical licensing', 'music', 'regulation', 'US', 'US Copyright Office', TRUE, 365, NULL),
('WCAG_2_1', 'Web Content Accessibility Guidelines', 'Web accessibility standards', 'accessibility', 'standard', 'Global', 'W3C', FALSE, 365, NULL);

-- Table: encryption_key_type
CREATE TABLE encryption_key_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    key_category VARCHAR(50) NOT NULL,
    key_purpose VARCHAR(100) NOT NULL,
    algorithm_family VARCHAR(50) NOT NULL,
    key_size_bits INT UNSIGNED NOT NULL,
    key_format VARCHAR(50) DEFAULT 'raw',
    key_encoding VARCHAR(50) DEFAULT 'base64',
    generation_method VARCHAR(50) DEFAULT 'random',
    derivation_function VARCHAR(50) DEFAULT NULL,
    hardware_backed BOOLEAN DEFAULT FALSE,
    exportable BOOLEAN DEFAULT FALSE,
    extractable BOOLEAN DEFAULT FALSE,
    usage_limits INT UNSIGNED DEFAULT NULL,
    rotation_required BOOLEAN DEFAULT TRUE,
    rotation_period_days INT UNSIGNED DEFAULT 365,
    escrow_required BOOLEAN DEFAULT FALSE,
    split_knowledge BOOLEAN DEFAULT FALSE,
    dual_control BOOLEAN DEFAULT FALSE,
    compliance_standards VARCHAR(200),
    storage_requirements VARCHAR(100) DEFAULT 'hsm',
    backup_required BOOLEAN DEFAULT TRUE,
    destruction_method VARCHAR(50) DEFAULT 'crypto_shred',
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_encryption_key_type_code (code),
    KEY idx_encryption_key_type_category (key_category),
    KEY idx_encryption_key_type_purpose (key_purpose),
    KEY idx_encryption_key_type_algorithm (algorithm_family),
    KEY idx_encryption_key_type_rotation (rotation_period_days)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO encryption_key_type (code, name, description, key_category, key_purpose, algorithm_family, key_size_bits, rotation_period_days, hardware_backed) VALUES
('ROOT_MASTER_KEY', 'Root Master Key', 'Top-level key encryption key', 'master', 'key_encryption', 'aes', 256, 1095, TRUE),
('KEK_DATABASE', 'Database KEK', 'Database key encryption key', 'kek', 'key_encryption', 'aes', 256, 365, TRUE),
('KEK_APPLICATION', 'Application KEK', 'Application key encryption key', 'kek', 'key_encryption', 'aes', 256, 365, FALSE),
('DEK_DATABASE', 'Database DEK', 'Database data encryption key', 'dek', 'data_encryption', 'aes', 256, 180, FALSE),
('DEK_FILE', 'File DEK', 'File encryption key', 'dek', 'data_encryption', 'aes', 256, 90, FALSE),
('DEK_FIELD', 'Field-level DEK', 'Column encryption key', 'dek', 'data_encryption', 'aes', 256, 90, FALSE),
('TLS_PRIVATE', 'TLS Private Key', 'TLS certificate private key', 'tls', 'key_exchange', 'rsa', 4096, 365, TRUE),
('TLS_SESSION', 'TLS Session Key', 'TLS session encryption', 'session', 'data_encryption', 'aes', 256, 0, FALSE),
('SIGNING_RSA', 'RSA Signing Key', 'Digital signature key', 'signing', 'digital_signature', 'rsa', 4096, 730, TRUE),
('SIGNING_ECDSA', 'ECDSA Signing Key', 'Elliptic curve signatures', 'signing', 'digital_signature', 'ecdsa', 384, 365, TRUE),
('JWT_SIGNING', 'JWT Signing Key', 'JSON Web Token signatures', 'jwt', 'token_signing', 'ecdsa', 256, 90, FALSE),
('API_ENCRYPTION', 'API Encryption Key', 'API payload encryption', 'api', 'data_encryption', 'aes', 256, 180, FALSE),
('BLOCKCHAIN_PRIVATE', 'Blockchain Private Key', 'Cryptocurrency wallet key', 'blockchain', 'digital_signature', 'secp256k1', 256, 0, TRUE),
('BLOCKCHAIN_HD_SEED', 'HD Wallet Seed', 'Hierarchical deterministic seed', 'blockchain', 'key_derivation', 'bip39', 256, 0, TRUE),
('BACKUP_ENCRYPTION', 'Backup Encryption Key', 'Backup data protection', 'backup', 'data_encryption', 'aes', 256, 365, FALSE),
('RECOVERY_KEY', 'Recovery Key', 'Emergency access key', 'recovery', 'key_recovery', 'aes', 256, 0, TRUE),
('EPHEMERAL_KEY', 'Ephemeral Key', 'Temporary encryption key', 'ephemeral', 'data_encryption', 'aes', 256, 0, FALSE),
('TOKENIZATION_KEY', 'Tokenization Key', 'Data tokenization', 'tokenization', 'format_preserving', 'ff3', 256, 365, TRUE),
('HMAC_KEY', 'HMAC Key', 'Message authentication', 'mac', 'authentication', 'hmac', 256, 180, FALSE),
('WRAPPING_KEY', 'Key Wrapping Key', 'Key transport encryption', 'transport', 'key_wrapping', 'aes_kwp', 256, 365, TRUE);

-- Table: certificate_type
CREATE TABLE certificate_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    certificate_category VARCHAR(50) NOT NULL,
    certificate_class VARCHAR(50) DEFAULT 'standard',
    issuer_type VARCHAR(50) DEFAULT 'ca',
    validation_level VARCHAR(50) DEFAULT 'domain',
    key_algorithm VARCHAR(50) DEFAULT 'rsa',
    key_size_bits INT UNSIGNED DEFAULT 2048,
    signature_algorithm VARCHAR(50) DEFAULT 'sha256WithRSAEncryption',
    validity_days INT UNSIGNED DEFAULT 365,
    renewal_window_days INT UNSIGNED DEFAULT 30,
    auto_renewal_enabled BOOLEAN DEFAULT FALSE,
    key_usage VARCHAR(500),
    extended_key_usage VARCHAR(500),
    subject_requirements VARCHAR(500),
    san_support BOOLEAN DEFAULT TRUE,
    wildcard_allowed BOOLEAN DEFAULT FALSE,
    ct_logging_required BOOLEAN DEFAULT TRUE,
    ocsp_must_staple BOOLEAN DEFAULT FALSE,
    pin_in_browser BOOLEAN DEFAULT FALSE,
    mobile_compatible BOOLEAN DEFAULT TRUE,
    compliance_frameworks VARCHAR(200),
    price_tier VARCHAR(20) DEFAULT 'standard',
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_certificate_type_code (code),
    KEY idx_certificate_type_category (certificate_category),
    KEY idx_certificate_type_class (certificate_class),
    KEY idx_certificate_type_validation (validation_level),
    KEY idx_certificate_type_validity (validity_days)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO certificate_type (code, name, description, certificate_category, certificate_class, validation_level, validity_days, wildcard_allowed) VALUES
('SSL_DV_SINGLE', 'DV SSL Single Domain', 'Domain validated single domain', 'ssl', 'standard', 'domain', 365, FALSE),
('SSL_DV_WILDCARD', 'DV SSL Wildcard', 'Domain validated wildcard', 'ssl', 'wildcard', 'domain', 365, TRUE),
('SSL_OV_SINGLE', 'OV SSL Single Domain', 'Organization validated single', 'ssl', 'standard', 'organization', 365, FALSE),
('SSL_OV_WILDCARD', 'OV SSL Wildcard', 'Organization validated wildcard', 'ssl', 'wildcard', 'organization', 365, TRUE),
('SSL_EV_SINGLE', 'EV SSL Certificate', 'Extended validation SSL', 'ssl', 'ev', 'extended', 365, FALSE),
('SSL_MULTI_DOMAIN', 'Multi-Domain SSL', 'Multiple domains (SAN)', 'ssl', 'multi', 'domain', 365, FALSE),
('CODE_SIGNING_STANDARD', 'Code Signing Standard', 'Software code signing', 'code_signing', 'standard', 'organization', 1095, FALSE),
('CODE_SIGNING_EV', 'Code Signing EV', 'Extended validation code signing', 'code_signing', 'ev', 'extended', 1095, FALSE),
('EMAIL_PERSONAL', 'Personal Email Certificate', 'S/MIME personal email', 'email', 'personal', 'email', 365, FALSE),
('EMAIL_BUSINESS', 'Business Email Certificate', 'S/MIME business email', 'email', 'business', 'organization', 365, FALSE),
('CLIENT_AUTH_STANDARD', 'Client Authentication', 'User authentication certificate', 'client', 'standard', 'identity', 365, FALSE),
('CLIENT_AUTH_DEVICE', 'Device Certificate', 'Device authentication', 'client', 'device', 'device', 730, FALSE),
('DOCUMENT_SIGNING', 'Document Signing', 'PDF and document signing', 'document', 'standard', 'identity', 730, FALSE),
('TIMESTAMP_CERT', 'Timestamping Certificate', 'Trusted timestamping', 'timestamp', 'standard', 'organization', 1095, FALSE),
('INTERNAL_CA_ROOT', 'Internal Root CA', 'Private root certificate', 'ca', 'root', 'none', 7300, FALSE),
('INTERNAL_CA_INTERMEDIATE', 'Internal Intermediate CA', 'Private intermediate CA', 'ca', 'intermediate', 'none', 3650, FALSE),
('IOT_DEVICE', 'IoT Device Certificate', 'Internet of Things device', 'iot', 'device', 'device', 1825, FALSE),
('BLOCKCHAIN_NODE', 'Blockchain Node Certificate', 'Blockchain network node', 'blockchain', 'node', 'node', 365, FALSE),
('VPN_SERVER', 'VPN Server Certificate', 'VPN server authentication', 'vpn', 'server', 'server', 365, FALSE),
('API_GATEWAY', 'API Gateway Certificate', 'API endpoint protection', 'api', 'standard', 'domain', 365, TRUE);

-- Table: security_zone
CREATE TABLE security_zone (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    zone_type VARCHAR(50) NOT NULL,
    trust_level INT UNSIGNED DEFAULT 0,
    classification_level VARCHAR(50) DEFAULT 'internal',
    network_segment VARCHAR(50),
    vlan_id INT UNSIGNED DEFAULT NULL,
    subnet_cidr VARCHAR(50) DEFAULT NULL,
    gateway_required BOOLEAN DEFAULT TRUE,
    firewall_policy VARCHAR(50) DEFAULT 'default_deny',
    ids_enabled BOOLEAN DEFAULT TRUE,
    ips_enabled BOOLEAN DEFAULT TRUE,
    encryption_required BOOLEAN DEFAULT TRUE,
    encryption_in_transit BOOLEAN DEFAULT TRUE,
    encryption_at_rest BOOLEAN DEFAULT TRUE,
    access_control_type VARCHAR(50) DEFAULT 'rbac',
    authentication_required BOOLEAN DEFAULT TRUE,
    mfa_required BOOLEAN DEFAULT FALSE,
    monitoring_level VARCHAR(20) DEFAULT 'standard',
    logging_level VARCHAR(20) DEFAULT 'info',
    retention_days INT UNSIGNED DEFAULT 90,
    allowed_protocols VARCHAR(500),
    blocked_protocols VARCHAR(500),
    allowed_services VARCHAR(500),
    compliance_scope VARCHAR(200),
    data_types_allowed VARCHAR(500),
    geographic_restriction VARCHAR(200) DEFAULT NULL,
    interconnects_with VARCHAR(500),
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_security_zone_code (code),
    KEY idx_security_zone_type (zone_type),
    KEY idx_security_zone_trust (trust_level),
    KEY idx_security_zone_classification (classification_level),
    KEY idx_security_zone_network (network_segment)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO security_zone (code, name, description, zone_type, trust_level, classification_level, network_segment, encryption_required, mfa_required, monitoring_level) VALUES
('INTERNET', 'Internet Zone', 'Public internet facing', 'external', 0, 'public', 'internet', TRUE, FALSE, 'critical'),
('DMZ', 'Demilitarized Zone', 'Public-facing services', 'dmz', 1, 'public', 'dmz', TRUE, FALSE, 'high'),
('PERIMETER', 'Perimeter Zone', 'Edge network services', 'perimeter', 2, 'internal', 'perimeter', TRUE, TRUE, 'high'),
('APPLICATION', 'Application Zone', 'Application servers', 'application', 5, 'internal', 'app', TRUE, FALSE, 'standard'),
('DATABASE', 'Database Zone', 'Database servers', 'data', 8, 'confidential', 'data', TRUE, TRUE, 'critical'),
('MANAGEMENT', 'Management Zone', 'Infrastructure management', 'management', 9, 'restricted', 'mgmt', TRUE, TRUE, 'critical'),
('BACKUP', 'Backup Zone', 'Backup infrastructure', 'backup', 7, 'confidential', 'backup', TRUE, TRUE, 'high'),
('DEVELOPMENT', 'Development Zone', 'Development environment', 'development', 3, 'internal', 'dev', FALSE, FALSE, 'minimal'),
('STAGING', 'Staging Zone', 'Pre-production testing', 'staging', 4, 'internal', 'stage', TRUE, FALSE, 'standard'),
('PRODUCTION', 'Production Zone', 'Live production systems', 'production', 6, 'confidential', 'prod', TRUE, TRUE, 'critical'),
('PARTNER', 'Partner Zone', 'B2B partner connections', 'partner', 4, 'internal', 'partner', TRUE, TRUE, 'high'),
('CUSTOMER', 'Customer Zone', 'Customer-facing services', 'customer', 3, 'internal', 'customer', TRUE, FALSE, 'high'),
('ANALYTICS', 'Analytics Zone', 'Data analytics systems', 'analytics', 5, 'internal', 'analytics', TRUE, FALSE, 'standard'),
('BLOCKCHAIN', 'Blockchain Zone', 'Blockchain infrastructure', 'blockchain', 6, 'confidential', 'blockchain', TRUE, TRUE, 'high'),
('HSM', 'HSM Zone', 'Hardware security modules', 'hsm', 10, 'secret', 'hsm', TRUE, TRUE, 'critical'),
('AUDIT', 'Audit Zone', 'Audit and compliance systems', 'audit', 8, 'restricted', 'audit', TRUE, TRUE, 'critical'),
('DR_SITE', 'Disaster Recovery Zone', 'DR site systems', 'dr', 6, 'confidential', 'dr', TRUE, TRUE, 'high'),
('CLOUD_PUBLIC', 'Public Cloud Zone', 'Public cloud resources', 'cloud', 4, 'internal', 'cloud-public', TRUE, TRUE, 'high'),
('CLOUD_PRIVATE', 'Private Cloud Zone', 'Private cloud resources', 'cloud', 6, 'confidential', 'cloud-private', TRUE, TRUE, 'high'),
('RESTRICTED', 'Restricted Zone', 'Highly sensitive systems', 'restricted', 10, 'secret', 'restricted', TRUE, TRUE, 'critical');

-- Table: privilege_type
CREATE TABLE privilege_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(100) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    privilege_category VARCHAR(50) NOT NULL,
    privilege_level INT UNSIGNED DEFAULT 1,
    risk_score INT UNSIGNED DEFAULT 5,
    system_privilege BOOLEAN DEFAULT FALSE,
    administrative BOOLEAN DEFAULT FALSE,
    elevated BOOLEAN DEFAULT TRUE,
    temporary_allowed BOOLEAN DEFAULT TRUE,
    max_duration_hours INT UNSIGNED DEFAULT NULL,
    delegation_allowed BOOLEAN DEFAULT FALSE,
    delegation_levels INT UNSIGNED DEFAULT 0,
    approval_required BOOLEAN DEFAULT TRUE,
    approver_count INT UNSIGNED DEFAULT 1,
    justification_required BOOLEAN DEFAULT TRUE,
    emergency_use BOOLEAN DEFAULT FALSE,
    break_glass BOOLEAN DEFAULT FALSE,
    audit_priority VARCHAR(20) DEFAULT 'high',
    monitoring_required BOOLEAN DEFAULT TRUE,
    session_recording BOOLEAN DEFAULT FALSE,
    command_filtering BOOLEAN DEFAULT FALSE,
    time_restrictions BOOLEAN DEFAULT FALSE,
    location_restrictions BOOLEAN DEFAULT FALSE,
    incompatible_with VARCHAR(500),
    prerequisites VARCHAR(500),
    certification_required VARCHAR(200),
    recertification_days INT UNSIGNED DEFAULT 90,
    auto_revoke_days INT UNSIGNED DEFAULT NULL,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_privilege_type_code (code),
    KEY idx_privilege_type_category (privilege_category),
    KEY idx_privilege_type_level (privilege_level),
    KEY idx_privilege_type_risk (risk_score),
    KEY idx_privilege_type_admin (administrative)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO privilege_type (code, name, description, privilege_category, privilege_level, risk_score, administrative, approval_required, session_recording) VALUES
('ROOT_ACCESS', 'Root/Administrator Access', 'Full system control', 'system', 100, 100, TRUE, TRUE, TRUE),
('SUDO_ACCESS', 'Sudo Privileges', 'Elevated command execution', 'system', 90, 90, TRUE, TRUE, TRUE),
('SERVICE_ACCOUNT_MGMT', 'Service Account Management', 'Manage service accounts', 'account', 85, 85, TRUE, TRUE, FALSE),
('USER_PROVISIONING', 'User Provisioning', 'Create and modify users', 'account', 80, 80, TRUE, TRUE, FALSE),
('PASSWORD_RESET_ADMIN', 'Password Reset Admin', 'Reset any user password', 'account', 75, 85, TRUE, TRUE, FALSE),
('SECURITY_CONFIG', 'Security Configuration', 'Modify security settings', 'security', 95, 95, TRUE, TRUE, TRUE),
('FIREWALL_ADMIN', 'Firewall Administration', 'Configure firewall rules', 'network', 85, 90, TRUE, TRUE, TRUE),
('DATABASE_ADMIN', 'Database Administrator', 'Full database control', 'database', 90, 95, TRUE, TRUE, TRUE),
('BACKUP_ADMIN', 'Backup Administrator', 'Manage backup systems', 'backup', 70, 75, TRUE, TRUE, FALSE),
('AUDIT_ADMIN', 'Audit Administrator', 'Access all audit logs', 'audit', 80, 70, TRUE, TRUE, FALSE),
('COMPLIANCE_ADMIN', 'Compliance Administrator', 'Manage compliance settings', 'compliance', 75, 70, TRUE, TRUE, FALSE),
('CRYPTO_ADMIN', 'Cryptographic Administrator', 'Manage encryption keys', 'crypto', 95, 100, TRUE, TRUE, TRUE),
('CERTIFICATE_ADMIN', 'Certificate Administrator', 'Manage digital certificates', 'crypto', 80, 85, TRUE, TRUE, FALSE),
('APPLICATION_DEPLOY', 'Application Deployment', 'Deploy applications', 'application', 70, 80, TRUE, TRUE, FALSE),
('CODE_PROMOTE', 'Code Promotion', 'Promote code to production', 'development', 65, 75, TRUE, TRUE, FALSE),
('FINANCIAL_APPROVE', 'Financial Approval', 'Approve financial transactions', 'financial', 85, 90, TRUE, TRUE, TRUE),
('CONTRACT_SIGN', 'Contract Signing', 'Execute legal contracts', 'legal', 80, 85, TRUE, TRUE, TRUE),
('DATA_EXPORT_BULK', 'Bulk Data Export', 'Export large datasets', 'data', 70, 80, TRUE, TRUE, TRUE),
('EMERGENCY_ACCESS', 'Emergency Access', 'Break-glass emergency access', 'emergency', 100, 100, TRUE, TRUE, TRUE),
('DELEGATION_ADMIN', 'Delegation Administrator', 'Manage privilege delegation', 'delegation', 75, 80, TRUE, TRUE, FALSE);

-- Table: security_policy_type
CREATE TABLE security_policy_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(100) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    policy_category VARCHAR(50) NOT NULL,
    policy_domain VARCHAR(50) NOT NULL,
    scope VARCHAR(50) DEFAULT 'organization',
    enforcement_mode VARCHAR(20) DEFAULT 'mandatory',
    implementation_type VARCHAR(50) DEFAULT 'technical',
    priority INT UNSIGNED DEFAULT 100,
    risk_addressed VARCHAR(200),
    objectives TEXT,
    requirements TEXT,
    controls VARCHAR(500),
    exceptions_allowed BOOLEAN DEFAULT TRUE,
    exception_approval_required BOOLEAN DEFAULT TRUE,
    waiver_max_days INT UNSIGNED DEFAULT 90,
    owner_role VARCHAR(100),
    approver_role VARCHAR(100),
    reviewer_role VARCHAR(100),
    stakeholders VARCHAR(500),
    review_cycle_days INT UNSIGNED DEFAULT 365,
    last_review_date DATE DEFAULT NULL,
    next_review_date DATE DEFAULT NULL,
    compliance_frameworks VARCHAR(500),
    related_policies VARCHAR(500),
    supporting_procedures VARCHAR(500),
    training_required BOOLEAN DEFAULT TRUE,
    acknowledgment_required BOOLEAN DEFAULT TRUE,
    testing_required BOOLEAN DEFAULT TRUE,
    metrics VARCHAR(500),
    documentation_url VARCHAR(500),
    version VARCHAR(20) DEFAULT '1.0',
    effective_date DATE DEFAULT NULL,
    sunset_date DATE DEFAULT NULL,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_security_policy_type_code (code),
    KEY idx_security_policy_type_category (policy_category),
    KEY idx_security_policy_type_domain (policy_domain),
    KEY idx_security_policy_type_enforcement (enforcement_mode),
    KEY idx_security_policy_type_review (next_review_date)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO security_policy_type (code, name, description, policy_category, policy_domain, enforcement_mode, review_cycle_days, training_required) VALUES
('INFORMATION_SECURITY', 'Information Security Policy', 'Overall security governance', 'governance', 'security', 'mandatory', 365, TRUE),
('ACCEPTABLE_USE', 'Acceptable Use Policy', 'Appropriate system usage', 'usage', 'security', 'mandatory', 365, TRUE),
('ACCESS_CONTROL', 'Access Control Policy', 'User access management', 'access', 'security', 'mandatory', 180, TRUE),
('PASSWORD_MANAGEMENT', 'Password Management Policy', 'Password requirements', 'authentication', 'security', 'mandatory', 180, TRUE),
('DATA_CLASSIFICATION', 'Data Classification Policy', 'Information categorization', 'data', 'security', 'mandatory', 365, TRUE),
('DATA_PROTECTION', 'Data Protection Policy', 'Data security measures', 'data', 'security', 'mandatory', 365, TRUE),
('ENCRYPTION', 'Encryption Policy', 'Cryptographic controls', 'crypto', 'security', 'mandatory', 365, TRUE),
('INCIDENT_RESPONSE', 'Incident Response Policy', 'Security incident handling', 'incident', 'security', 'mandatory', 180, TRUE),
('BUSINESS_CONTINUITY', 'Business Continuity Policy', 'Continuity planning', 'continuity', 'operations', 'mandatory', 365, TRUE),
('DISASTER_RECOVERY', 'Disaster Recovery Policy', 'Recovery procedures', 'continuity', 'operations', 'mandatory', 365, TRUE),
('BACKUP', 'Backup Policy', 'Data backup requirements', 'backup', 'operations', 'mandatory', 365, TRUE),
('CHANGE_MANAGEMENT', 'Change Management Policy', 'System change controls', 'change', 'operations', 'mandatory', 365, TRUE),
('VULNERABILITY_MANAGEMENT', 'Vulnerability Management Policy', 'Vulnerability handling', 'vulnerability', 'security', 'mandatory', 180, TRUE),
('PATCH_MANAGEMENT', 'Patch Management Policy', 'System patching requirements', 'patch', 'operations', 'mandatory', 180, TRUE),
('NETWORK_SECURITY', 'Network Security Policy', 'Network protection measures', 'network', 'security', 'mandatory', 365, TRUE),
('REMOTE_ACCESS', 'Remote Access Policy', 'Remote connection requirements', 'access', 'security', 'mandatory', 180, TRUE),
('MOBILE_DEVICE', 'Mobile Device Policy', 'Mobile device management', 'device', 'security', 'mandatory', 365, TRUE),
('BYOD', 'Bring Your Own Device Policy', 'Personal device usage', 'device', 'security', 'mandatory', 365, TRUE),
('THIRD_PARTY', 'Third Party Security Policy', 'Vendor security requirements', 'vendor', 'security', 'mandatory', 365, TRUE),
('PRIVACY', 'Privacy Policy', 'Personal data protection', 'privacy', 'compliance', 'mandatory', 180, TRUE),
('RETENTION', 'Data Retention Policy', 'Information lifecycle', 'data', 'compliance', 'mandatory', 365, TRUE),
('MONITORING', 'Security Monitoring Policy', 'System monitoring requirements', 'monitoring', 'security', 'mandatory', 365, TRUE),
('PHYSICAL_SECURITY', 'Physical Security Policy', 'Facility protection', 'physical', 'security', 'mandatory', 365, TRUE),
('CLEAN_DESK', 'Clean Desk Policy', 'Workspace security', 'physical', 'security', 'mandatory', 365, FALSE),
('SOCIAL_MEDIA', 'Social Media Policy', 'Social platform usage', 'communication', 'compliance', 'recommended', 365, TRUE),
('CODE_OF_CONDUCT', 'Security Code of Conduct', 'Security behavior expectations', 'governance', 'compliance', 'mandatory', 365, TRUE);

-- Table: incident_severity
CREATE TABLE incident_severity (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    severity_level INT UNSIGNED NOT NULL,
    priority_score INT UNSIGNED NOT NULL,
    response_sla_minutes INT UNSIGNED NOT NULL,
    update_frequency_minutes INT UNSIGNED NOT NULL,
    resolution_sla_hours INT UNSIGNED NOT NULL,
    escalation_time_minutes INT UNSIGNED DEFAULT NULL,
    incident_commander_required BOOLEAN DEFAULT FALSE,
    executive_notification BOOLEAN DEFAULT FALSE,
    board_notification BOOLEAN DEFAULT FALSE,
    external_communication BOOLEAN DEFAULT FALSE,
    pr_involvement BOOLEAN DEFAULT FALSE,
    legal_involvement BOOLEAN DEFAULT FALSE,
    law_enforcement_notification BOOLEAN DEFAULT FALSE,
    regulatory_notification BOOLEAN DEFAULT FALSE,
    customer_notification BOOLEAN DEFAULT FALSE,
    partner_notification BOOLEAN DEFAULT FALSE,
    public_disclosure BOOLEAN DEFAULT FALSE,
    war_room_required BOOLEAN DEFAULT FALSE,
    bridge_line_required BOOLEAN DEFAULT FALSE,
    documentation_level VARCHAR(20) DEFAULT 'standard',
    post_mortem_required BOOLEAN DEFAULT FALSE,
    root_cause_deadline_days INT UNSIGNED DEFAULT NULL,
    color_code VARCHAR(7) DEFAULT '#000000',
    icon_name VARCHAR(50) DEFAULT NULL,
    dashboard_priority INT UNSIGNED DEFAULT 100,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_incident_severity_code (code),
    UNIQUE KEY uk_incident_severity_level (severity_level),
    KEY idx_incident_severity_priority (priority_score),
    KEY idx_incident_severity_response (response_sla_minutes)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO incident_severity (code, name, description, severity_level, priority_score, response_sla_minutes, update_frequency_minutes, resolution_sla_hours, executive_notification, color_code, war_room_required) VALUES
('SEV1', 'Severity 1 - Critical', 'Business critical outage or breach', 1, 100, 15, 30, 4, TRUE, '#FF0000', TRUE),
('SEV2', 'Severity 2 - High', 'Major functionality impaired', 2, 80, 30, 60, 8, TRUE, '#FF6600', TRUE),
('SEV3', 'Severity 3 - Medium', 'Moderate business impact', 3, 60, 60, 120, 24, FALSE, '#FFAA00', FALSE),
('SEV4', 'Severity 4 - Low', 'Minor issue or degradation', 4, 40, 240, 480, 72, FALSE, '#FFFF00', FALSE),
('SEV5', 'Severity 5 - Info', 'Informational only', 5, 20, 1440, 1440, 168, FALSE, '#00FF00', FALSE);

-- Table: breach_type
CREATE TABLE breach_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(100) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    breach_category VARCHAR(50) NOT NULL,
    data_types_affected VARCHAR(500),
    severity VARCHAR(20) NOT NULL,
    typical_impact VARCHAR(50) DEFAULT 'high',
    discovery_methods VARCHAR(500),
    common_causes VARCHAR(500),
    immediate_actions TEXT,
    containment_steps TEXT,
    eradication_steps TEXT,
    recovery_steps TEXT,
    notification_required BOOLEAN DEFAULT TRUE,
    notification_timeline_hours INT UNSIGNED DEFAULT 72,
    regulatory_agencies VARCHAR(500),
    law_enforcement_contact BOOLEAN DEFAULT FALSE,
    forensics_required BOOLEAN DEFAULT TRUE,
    evidence_preservation TEXT,
    legal_implications TEXT,
    pr_considerations TEXT,
    insurance_coverage VARCHAR(200),
    estimated_cost_range VARCHAR(50),
    reputation_impact VARCHAR(20) DEFAULT 'high',
    operational_impact VARCHAR(20) DEFAULT 'medium',
    financial_impact VARCHAR(20) DEFAULT 'high',
    recovery_time_estimate_hours INT UNSIGNED DEFAULT NULL,
    lessons_learned_deadline_days INT UNSIGNED DEFAULT 30,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_breach_type_code (code),
    KEY idx_breach_type_category (breach_category),
    KEY idx_breach_type_severity (severity),
    KEY idx_breach_type_notification (notification_timeline_hours)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO breach_type (code, name, description, breach_category, severity, notification_timeline_hours, forensics_required, law_enforcement_contact) VALUES
('PII_BREACH', 'Personal Information Breach', 'Unauthorized PII access/disclosure', 'data', 'critical', 72, TRUE, FALSE),
('PII_SENSITIVE_BREACH', 'Sensitive PII Breach', 'SSN, financial, health data exposed', 'data', 'critical', 24, TRUE, TRUE),
('FINANCIAL_DATA_BREACH', 'Financial Data Breach', 'Banking/payment information exposed', 'financial', 'critical', 24, TRUE, TRUE),
('HEALTH_DATA_BREACH', 'Health Information Breach', 'Protected health information exposed', 'health', 'critical', 60, TRUE, TRUE),
('CREDENTIAL_BREACH', 'Credential Breach', 'User passwords compromised', 'authentication', 'high', 24, TRUE, FALSE),
('PAYMENT_CARD_BREACH', 'Payment Card Breach', 'Credit card data compromised', 'financial', 'critical', 24, TRUE, TRUE),
('INTELLECTUAL_PROPERTY_THEFT', 'IP Theft', 'Trade secrets or proprietary data stolen', 'ip', 'critical', 72, TRUE, TRUE),
('CUSTOMER_DATA_BREACH', 'Customer Data Breach', 'Customer information exposed', 'customer', 'high', 72, TRUE, FALSE),
('EMPLOYEE_DATA_BREACH', 'Employee Data Breach', 'Employee records compromised', 'employee', 'high', 72, TRUE, FALSE),
('RANSOMWARE_BREACH', 'Ransomware Attack', 'Data encrypted and held for ransom', 'malware', 'critical', 24, TRUE, TRUE),
('INSIDER_DATA_THEFT', 'Insider Data Theft', 'Employee/contractor data theft', 'insider', 'critical', 72, TRUE, TRUE),
('THIRD_PARTY_BREACH', 'Third Party Breach', 'Vendor/partner security breach', 'vendor', 'high', 72, TRUE, FALSE),
('CLOUD_BREACH', 'Cloud Service Breach', 'Cloud storage/service compromised', 'cloud', 'high', 24, TRUE, FALSE),
('PHYSICAL_BREACH', 'Physical Security Breach', 'Device theft or facility breach', 'physical', 'medium', 24, TRUE, TRUE),
('ACCIDENTAL_DISCLOSURE', 'Accidental Disclosure', 'Unintentional data exposure', 'accidental', 'medium', 72, FALSE, FALSE),
('WEBSITE_DEFACEMENT', 'Website Defacement', 'Public website compromised', 'web', 'medium', 24, TRUE, FALSE),
('EMAIL_BREACH', 'Email System Breach', 'Email accounts compromised', 'communication', 'high', 72, TRUE, FALSE),
('DATABASE_BREACH', 'Database Breach', 'Database unauthorized access', 'database', 'critical', 24, TRUE, FALSE),
('API_DATA_BREACH', 'API Data Breach', 'API security breach', 'api', 'high', 24, TRUE, FALSE),
('BLOCKCHAIN_KEY_BREACH', 'Blockchain Key Breach', 'Private keys compromised', 'blockchain', 'critical', 1, TRUE, TRUE);

-- Table: security_tool_type
CREATE TABLE security_tool_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    tool_category VARCHAR(50) NOT NULL,
    tool_subcategory VARCHAR(50) DEFAULT NULL,
    deployment_model VARCHAR(50) DEFAULT 'hybrid',
    architecture VARCHAR(50) DEFAULT 'distributed',
    platform_support VARCHAR(200) DEFAULT 'all',
    integration_methods VARCHAR(200),
    api_available BOOLEAN DEFAULT TRUE,
    cloud_native BOOLEAN DEFAULT TRUE,
    on_premise_option BOOLEAN DEFAULT TRUE,
    saas_option BOOLEAN DEFAULT TRUE,
    licensing_model VARCHAR(50) DEFAULT 'subscription',
    pricing_model VARCHAR(50) DEFAULT 'per_user',
    scalability VARCHAR(20) DEFAULT 'high',
    performance_impact VARCHAR(20) DEFAULT 'medium',
    resource_requirements TEXT,
    storage_requirements TEXT,
    network_requirements TEXT,
    skill_level_required VARCHAR(20) DEFAULT 'intermediate',
    training_available BOOLEAN DEFAULT TRUE,
    support_levels VARCHAR(200) DEFAULT '24x7',
    compliance_certifications VARCHAR(500),
    integration_complexity VARCHAR(20) DEFAULT 'medium',
    time_to_deploy_days INT UNSIGNED DEFAULT 30,
    maturity_level VARCHAR(20) DEFAULT 'mature',
    vendor_lock_in VARCHAR(20) DEFAULT 'medium',
    open_source_alternative BOOLEAN DEFAULT FALSE,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_security_tool_type_code (code),
    KEY idx_security_tool_type_category (tool_category, tool_subcategory),
    KEY idx_security_tool_type_deployment (deployment_model),
    KEY idx_security_tool_type_cloud (cloud_native)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO security_tool_type (code, name, description, tool_category, deployment_model, cloud_native, scalability, integration_complexity) VALUES
('SIEM', 'Security Information Event Management', 'Centralized security event analysis', 'monitoring', 'hybrid', TRUE, 'high', 'high'),
('SOAR', 'Security Orchestration and Response', 'Automated incident response', 'automation', 'cloud', TRUE, 'high', 'high'),
('EDR', 'Endpoint Detection and Response', 'Endpoint threat detection', 'endpoint', 'hybrid', TRUE, 'high', 'medium'),
('XDR', 'Extended Detection and Response', 'Cross-platform threat detection', 'detection', 'cloud', TRUE, 'high', 'high'),
('NDR', 'Network Detection and Response', 'Network traffic analysis', 'network', 'hybrid', TRUE, 'high', 'medium'),
('WAF', 'Web Application Firewall', 'Web application protection', 'application', 'cloud', TRUE, 'high', 'low'),
('RASP', 'Runtime Application Self-Protection', 'Application runtime protection', 'application', 'hybrid', TRUE, 'medium', 'medium'),
('CASB', 'Cloud Access Security Broker', 'Cloud service security', 'cloud', 'cloud', TRUE, 'high', 'medium'),
('CSPM', 'Cloud Security Posture Management', 'Cloud configuration monitoring', 'cloud', 'cloud', TRUE, 'high', 'medium'),
('CWPP', 'Cloud Workload Protection Platform', 'Cloud workload security', 'cloud', 'cloud', TRUE, 'high', 'medium'),
('DLP', 'Data Loss Prevention', 'Data exfiltration prevention', 'data', 'hybrid', TRUE, 'high', 'high'),
('DAM', 'Database Activity Monitoring', 'Database access monitoring', 'database', 'hybrid', FALSE, 'high', 'medium'),
('PAM', 'Privileged Access Management', 'Privileged account security', 'access', 'hybrid', TRUE, 'high', 'high'),
('IAM', 'Identity and Access Management', 'Identity lifecycle management', 'identity', 'cloud', TRUE, 'high', 'high'),
('MFA', 'Multi-Factor Authentication', 'Additional authentication factors', 'authentication', 'cloud', TRUE, 'high', 'low'),
('VULNERABILITY_SCANNER', 'Vulnerability Assessment', 'Security vulnerability scanning', 'vulnerability', 'hybrid', TRUE, 'high', 'low'),
('PENETRATION_TESTING', 'Penetration Testing Platform', 'Security testing automation', 'testing', 'cloud', TRUE, 'medium', 'medium'),
('DEVSECOPS', 'DevSecOps Platform', 'Security in CI/CD pipeline', 'development', 'cloud', TRUE, 'high', 'high'),
('THREAT_INTELLIGENCE', 'Threat Intelligence Platform', 'Threat data aggregation', 'intelligence', 'cloud', TRUE, 'high', 'medium'),
('SECURITY_AWARENESS', 'Security Awareness Platform', 'Security training delivery', 'training', 'cloud', TRUE, 'high', 'low');

-- Table: log_retention_policy
CREATE TABLE log_retention_policy (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    log_category VARCHAR(50) NOT NULL,
    log_subcategory VARCHAR(50) DEFAULT NULL,
    log_source VARCHAR(100),
    criticality VARCHAR(20) DEFAULT 'medium',
    retention_days INT UNSIGNED NOT NULL,
    retention_location VARCHAR(50) DEFAULT 'primary',
    archive_after_days INT UNSIGNED DEFAULT NULL,
    archive_location VARCHAR(50) DEFAULT 'cold_storage',
    archive_format VARCHAR(50) DEFAULT 'compressed',
    compression_algorithm VARCHAR(50) DEFAULT 'gzip',
    compression_ratio_estimate DECIMAL(3,1) DEFAULT 5.0,
    encryption_required BOOLEAN DEFAULT TRUE,
    encryption_algorithm VARCHAR(50) DEFAULT 'AES-256-GCM',
    integrity_check BOOLEAN DEFAULT TRUE,
    integrity_algorithm VARCHAR(50) DEFAULT 'SHA-256',
    backup_required BOOLEAN DEFAULT TRUE,
    backup_frequency VARCHAR(50) DEFAULT 'daily',
    backup_retention_days INT UNSIGNED DEFAULT NULL,
    deletion_method VARCHAR(50) DEFAULT 'secure_delete',
    deletion_verification BOOLEAN DEFAULT TRUE,
    immutable_storage BOOLEAN DEFAULT FALSE,
    worm_compliance BOOLEAN DEFAULT FALSE,
    legal_hold_capable BOOLEAN DEFAULT TRUE,
    search_index_days INT UNSIGNED DEFAULT 90,
    real_time_analysis BOOLEAN DEFAULT FALSE,
    compliance_mappings VARCHAR(500),
    estimated_daily_volume_gb DECIMAL(10,2) DEFAULT NULL,
    estimated_monthly_cost_usd DECIMAL(10,2) DEFAULT NULL,
    access_frequency VARCHAR(20) DEFAULT 'medium',
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_log_retention_policy_code (code),
    KEY idx_log_retention_policy_category (log_category, log_subcategory),
    KEY idx_log_retention_policy_retention (retention_days),
    KEY idx_log_retention_policy_criticality (criticality)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO log_retention_policy (code, name, description, log_category, retention_days, archive_after_days, encryption_required, immutable_storage, compliance_mappings) VALUES
('SECURITY_EVENTS', 'Security Event Logs', 'Security incidents and alerts', 'security', 2555, 365, TRUE, TRUE, 'SOC2,ISO27001,PCI-DSS'),
('AUTHENTICATION_LOGS', 'Authentication Logs', 'Login and authentication events', 'authentication', 365, 90, TRUE, FALSE, 'SOC2,GDPR,HIPAA'),
('AUTHORIZATION_LOGS', 'Authorization Logs', 'Access control decisions', 'authorization', 365, 90, TRUE, FALSE, 'SOC2,ISO27001'),
('AUDIT_LOGS', 'Audit Trail Logs', 'User activity audit trail', 'audit', 2555, 180, TRUE, TRUE, 'SOC2,GDPR,HIPAA,PCI-DSS'),
('SYSTEM_LOGS', 'System Logs', 'Operating system events', 'system', 90, 30, FALSE, FALSE, 'ISO27001'),
('APPLICATION_LOGS', 'Application Logs', 'Application events and errors', 'application', 90, 30, FALSE, FALSE, 'SOC2'),
('DATABASE_LOGS', 'Database Activity Logs', 'Database queries and changes', 'database', 365, 90, TRUE, FALSE, 'SOC2,PCI-DSS,HIPAA'),
('NETWORK_LOGS', 'Network Traffic Logs', 'Network flow and firewall logs', 'network', 30, 7, FALSE, FALSE, 'ISO27001'),
('API_LOGS', 'API Access Logs', 'API requests and responses', 'api', 180, 60, TRUE, FALSE, 'SOC2,GDPR'),
('WEB_ACCESS_LOGS', 'Web Server Logs', 'HTTP access logs', 'web', 90, 30, FALSE, FALSE, 'PCI-DSS'),
('EMAIL_LOGS', 'Email System Logs', 'Email server and gateway logs', 'email', 90, 30, TRUE, FALSE, 'GDPR'),
('FILE_ACCESS_LOGS', 'File Access Logs', 'File system access events', 'file', 180, 60, TRUE, FALSE, 'HIPAA,GDPR'),
('PRIVILEGED_ACCESS_LOGS', 'Privileged Access Logs', 'Administrative action logs', 'privileged', 2555, 365, TRUE, TRUE, 'SOC2,ISO27001,PCI-DSS'),
('CHANGE_LOGS', 'Change Management Logs', 'System change records', 'change', 2555, 365, TRUE, TRUE, 'SOC2,ISO27001'),
('INCIDENT_LOGS', 'Security Incident Logs', 'Incident response records', 'incident', 2555, 365, TRUE, TRUE, 'All'),
('COMPLIANCE_LOGS', 'Compliance Activity Logs', 'Compliance verification logs', 'compliance', 2555, 365, TRUE, TRUE, 'All'),
('BLOCKCHAIN_LOGS', 'Blockchain Transaction Logs', 'Blockchain activity logs', 'blockchain', 3650, 365, TRUE, TRUE, 'SOC2'),
('FINANCIAL_LOGS', 'Financial Transaction Logs', 'Payment and royalty logs', 'financial', 2555, 365, TRUE, TRUE, 'SOX,PCI-DSS'),
('BACKUP_LOGS', 'Backup Operation Logs', 'Backup job execution logs', 'backup', 365, 90, FALSE, FALSE, 'ISO27001'),
('DEBUG_LOGS', 'Debug Logs', 'Development debug information', 'debug', 7, NULL, FALSE, FALSE, 'None');

-- Table: security_training_type
CREATE TABLE security_training_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    training_category VARCHAR(50) NOT NULL,
    delivery_method VARCHAR(50) DEFAULT 'online',
    format VARCHAR(50) DEFAULT 'interactive',
    target_audience VARCHAR(500),
    role_specific BOOLEAN DEFAULT FALSE,
    required_roles VARCHAR(500),
    difficulty_level VARCHAR(20) DEFAULT 'beginner',
    prerequisites VARCHAR(500),
    duration_minutes INT UNSIGNED DEFAULT 60,
    modules_count INT UNSIGNED DEFAULT 1,
    languages_available VARCHAR(200) DEFAULT 'en',
    frequency_required VARCHAR(50) DEFAULT 'annual',
    initial_deadline_days INT UNSIGNED DEFAULT 30,
    renewal_deadline_days INT UNSIGNED DEFAULT 365,
    passing_score_percent INT UNSIGNED DEFAULT 80,
    max_attempts INT UNSIGNED DEFAULT 3,
    certificate_provided BOOLEAN DEFAULT TRUE,
    certificate_validity_days INT UNSIGNED DEFAULT 365,
    compliance_credit VARCHAR(200),
    tracks_progress BOOLEAN DEFAULT TRUE,
    includes_assessment BOOLEAN DEFAULT TRUE,
    includes_simulation BOOLEAN DEFAULT FALSE,
    includes_labs BOOLEAN DEFAULT FALSE,
    mobile_compatible BOOLEAN DEFAULT TRUE,
    offline_capable BOOLEAN DEFAULT FALSE,
    accessibility_compliant BOOLEAN DEFAULT TRUE,
    content_version VARCHAR(20) DEFAULT '1.0',
    last_updated DATE DEFAULT NULL,
    effectiveness_score DECIMAL(3,1) DEFAULT NULL,
    completion_rate DECIMAL(5,2) DEFAULT NULL,
    satisfaction_score DECIMAL(3,1) DEFAULT NULL,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_security_training_type_code (code),
    KEY idx_security_training_type_category (training_category),
    KEY idx_security_training_type_audience (role_specific),
    KEY idx_security_training_type_frequency (frequency_required)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO security_training_type (code, name, description, training_category, delivery_method, duration_minutes, frequency_required, passing_score_percent, includes_simulation) VALUES
('SECURITY_AWARENESS_BASIC', 'Basic Security Awareness', 'Foundation security concepts', 'awareness', 'online', 45, 'annual', 80, FALSE),
('SECURITY_AWARENESS_ADVANCED', 'Advanced Security Awareness', 'In-depth security topics', 'awareness', 'online', 90, 'annual', 85, TRUE),
('PHISHING_AWARENESS', 'Phishing Recognition', 'Identify phishing attempts', 'phishing', 'online', 30, 'quarterly', 90, TRUE),
('SOCIAL_ENGINEERING', 'Social Engineering Defense', 'Recognize manipulation tactics', 'social', 'online', 45, 'annual', 85, TRUE),
('PASSWORD_SECURITY', 'Password Best Practices', 'Strong password creation', 'authentication', 'online', 20, 'annual', 80, FALSE),
('DATA_PRIVACY_GDPR', 'GDPR Privacy Training', 'EU data protection compliance', 'privacy', 'online', 60, 'annual', 85, FALSE),
('DATA_PRIVACY_CCPA', 'CCPA Privacy Training', 'California privacy compliance', 'privacy', 'online', 45, 'annual', 85, FALSE),
('HIPAA_COMPLIANCE', 'HIPAA Compliance Training', 'Healthcare privacy requirements', 'compliance', 'online', 60, 'annual', 90, FALSE),
('PCI_DSS_COMPLIANCE', 'PCI DSS Training', 'Payment card security', 'compliance', 'online', 60, 'annual', 90, FALSE),
('INSIDER_THREAT', 'Insider Threat Awareness', 'Recognize insider risks', 'threat', 'online', 45, 'annual', 85, TRUE),
('INCIDENT_RESPONSE', 'Incident Response Basics', 'How to report incidents', 'incident', 'online', 30, 'annual', 80, TRUE),
('SECURE_CODING', 'Secure Coding Practices', 'Developer security training', 'technical', 'online', 120, 'annual', 90, TRUE),
('CLOUD_SECURITY', 'Cloud Security Fundamentals', 'Cloud service security', 'technical', 'online', 60, 'annual', 85, FALSE),
('MOBILE_SECURITY', 'Mobile Device Security', 'Smartphone and tablet security', 'device', 'online', 30, 'annual', 80, FALSE),
('REMOTE_WORK_SECURITY', 'Secure Remote Work', 'Work from home security', 'operational', 'online', 45, 'annual', 85, FALSE),
('PHYSICAL_SECURITY', 'Physical Security Awareness', 'Facility and device security', 'physical', 'online', 30, 'annual', 80, FALSE),
('EXECUTIVE_SECURITY', 'Executive Security Briefing', 'C-suite targeted training', 'executive', 'instructor', 30, 'semi-annual', 75, FALSE),
('BLOCKCHAIN_SECURITY', 'Blockchain Security Basics', 'Cryptocurrency and NFT security', 'technical', 'online', 45, 'annual', 85, FALSE),
('AI_ML_SECURITY', 'AI/ML Security Awareness', 'Machine learning security risks', 'technical', 'online', 60, 'annual', 85, FALSE),
('MUSIC_INDUSTRY_SECURITY', 'Music Industry Security', 'Industry-specific threats', 'industry', 'online', 60, 'annual', 85, TRUE);

-- Table: device_trust_level
CREATE TABLE device_trust_level (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    trust_score INT UNSIGNED NOT NULL,
    device_category VARCHAR(50) DEFAULT 'unknown',
    ownership_model VARCHAR(50) DEFAULT 'unknown',
    management_status VARCHAR(50) DEFAULT 'unmanaged',
    compliance_required BOOLEAN DEFAULT TRUE,
    enrollment_required BOOLEAN DEFAULT FALSE,
    mdm_required BOOLEAN DEFAULT FALSE,
    certificate_required BOOLEAN DEFAULT FALSE,
    health_check_required BOOLEAN DEFAULT TRUE,
    health_check_frequency_hours INT UNSIGNED DEFAULT 24,
    patch_level_required VARCHAR(50) DEFAULT 'current',
    av_required BOOLEAN DEFAULT TRUE,
    firewall_required BOOLEAN DEFAULT TRUE,
    encryption_required BOOLEAN DEFAULT TRUE,
    password_policy_enforced BOOLEAN DEFAULT TRUE,
    biometric_enabled BOOLEAN DEFAULT FALSE,
    jailbreak_detection BOOLEAN DEFAULT TRUE,
    app_whitelist_enforced BOOLEAN DEFAULT FALSE,
    app_blacklist_enforced BOOLEAN DEFAULT TRUE,
    location_services VARCHAR(50) DEFAULT 'optional',
    remote_wipe_capable BOOLEAN DEFAULT TRUE,
    offline_access_days INT UNSIGNED DEFAULT 30,
    vpn_required BOOLEAN DEFAULT FALSE,
    network_restrictions VARCHAR(200),
    data_access_level VARCHAR(50) DEFAULT 'limited',
    application_access VARCHAR(200),
    session_timeout_minutes INT UNSIGNED DEFAULT 60,
    reauthentication_hours INT UNSIGNED DEFAULT 24,
    risk_score_threshold INT UNSIGNED DEFAULT 70,
    conditional_access BOOLEAN DEFAULT TRUE,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_device_trust_level_code (code),
    UNIQUE KEY uk_device_trust_level_score (trust_score),
    KEY idx_device_trust_level_category (device_category),
    KEY idx_device_trust_level_ownership (ownership_model),
    KEY idx_device_trust_level_management (management_status)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO device_trust_level (code, name, description, trust_score, device_category, ownership_model, management_status, mdm_required, encryption_required, data_access_level) VALUES
('CORP_MANAGED', 'Corporate Managed', 'Company-owned, fully managed', 100, 'corporate', 'company', 'managed', TRUE, TRUE, 'full'),
('CORP_KIOSK', 'Corporate Kiosk', 'Locked-down corporate device', 95, 'corporate', 'company', 'kiosk', TRUE, TRUE, 'restricted'),
('BYOD_COMPLIANT', 'BYOD Compliant', 'Personal device, compliant', 80, 'personal', 'employee', 'compliant', TRUE, TRUE, 'standard'),
('BYOD_ENROLLED', 'BYOD Enrolled', 'Personal device, MDM enrolled', 70, 'personal', 'employee', 'enrolled', TRUE, TRUE, 'limited'),
('PARTNER_MANAGED', 'Partner Managed', 'Partner organization device', 60, 'partner', 'partner', 'managed', FALSE, TRUE, 'limited'),
('TRUSTED_PERSONAL', 'Trusted Personal', 'Verified personal device', 50, 'personal', 'employee', 'trusted', FALSE, TRUE, 'basic'),
('REGISTERED_DEVICE', 'Registered Device', 'Known but unmanaged device', 40, 'personal', 'employee', 'registered', FALSE, FALSE, 'basic'),
('GUEST_DEVICE', 'Guest Device', 'Temporary guest access', 30, 'guest', 'visitor', 'unmanaged', FALSE, FALSE, 'minimal'),
('UNKNOWN_DEVICE', 'Unknown Device', 'Unregistered device', 20, 'unknown', 'unknown', 'unmanaged', FALSE, FALSE, 'minimal'),
('SUSPICIOUS_DEVICE', 'Suspicious Device', 'Potentially compromised', 10, 'suspicious', 'unknown', 'suspicious', FALSE, FALSE, 'none'),
('BLOCKED_DEVICE', 'Blocked Device', 'Denied access device', 0, 'blocked', 'any', 'blocked', FALSE, FALSE, 'none');

-- Table: network_security_type
CREATE TABLE network_security_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    security_category VARCHAR(50) NOT NULL,
    network_layer VARCHAR(50) NOT NULL,
    osi_layer INT UNSIGNED DEFAULT NULL,
    deployment_location VARCHAR(50) DEFAULT 'perimeter',
    protection_mechanism VARCHAR(100),
    threat_mitigation VARCHAR(500),
    performance_impact VARCHAR(20) DEFAULT 'medium',
    latency_added_ms INT UNSIGNED DEFAULT NULL,
    throughput_gbps DECIMAL(10,2) DEFAULT NULL,
    scalability VARCHAR(20) DEFAULT 'high',
    high_availability BOOLEAN DEFAULT TRUE,
    failover_time_seconds INT UNSIGNED DEFAULT 5,
    stateful_inspection BOOLEAN DEFAULT TRUE,
    deep_packet_inspection BOOLEAN DEFAULT FALSE,
    ssl_inspection BOOLEAN DEFAULT FALSE,
    application_aware BOOLEAN DEFAULT FALSE,
    user_aware BOOLEAN DEFAULT FALSE,
    content_filtering BOOLEAN DEFAULT FALSE,
    threat_intelligence_enabled BOOLEAN DEFAULT TRUE,
    machine_learning_enabled BOOLEAN DEFAULT FALSE,
    automation_capable BOOLEAN DEFAULT TRUE,
    api_integration BOOLEAN DEFAULT TRUE,
    logging_capability VARCHAR(50) DEFAULT 'comprehensive',
    compliance_support VARCHAR(200),
    licensing_model VARCHAR(50) DEFAULT 'throughput',
    typical_deployment VARCHAR(100),
    management_complexity VARCHAR(20) DEFAULT 'medium',
    skills_required VARCHAR(200),
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_network_security_type_code (code),
    KEY idx_network_security_type_category (security_category),
    KEY idx_network_security_type_layer (network_layer),
    KEY idx_network_security_type_osi (osi_layer),
    KEY idx_network_security_type_location (deployment_location)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO network_security_type (code, name, description, security_category, network_layer, osi_layer, deployment_location, stateful_inspection, deep_packet_inspection, ssl_inspection) VALUES
('FIREWALL_STATEFUL', 'Stateful Firewall', 'Connection state tracking', 'firewall', 'network', 4, 'perimeter', TRUE, FALSE, FALSE),
('FIREWALL_NGFW', 'Next-Gen Firewall', 'Application-aware firewall', 'firewall', 'application', 7, 'perimeter', TRUE, TRUE, TRUE),
('IDS_NETWORK', 'Network IDS', 'Intrusion detection system', 'detection', 'network', 3, 'internal', FALSE, TRUE, FALSE),
('IPS_NETWORK', 'Network IPS', 'Intrusion prevention system', 'prevention', 'network', 3, 'perimeter', TRUE, TRUE, TRUE),
('WAF', 'Web Application Firewall', 'HTTP/HTTPS protection', 'application', 'application', 7, 'dmz', TRUE, TRUE, TRUE),
('DDOS_PROTECTION', 'DDoS Protection', 'Volumetric attack mitigation', 'availability', 'network', 3, 'edge', TRUE, FALSE, FALSE),
('VPN_IPSEC', 'IPSec VPN', 'Site-to-site VPN', 'encryption', 'network', 3, 'perimeter', TRUE, FALSE, FALSE),
('VPN_SSL', 'SSL VPN', 'Remote access VPN', 'encryption', 'transport', 4, 'perimeter', TRUE, FALSE, TRUE),
('NAC', 'Network Access Control', '802.1X enforcement', 'access', 'datalink', 2, 'internal', FALSE, FALSE, FALSE),
('LOAD_BALANCER', 'Load Balancer', 'Traffic distribution', 'availability', 'transport', 4, 'dmz', TRUE, FALSE, TRUE),
('PROXY_FORWARD', 'Forward Proxy', 'Outbound web proxy', 'proxy', 'application', 7, 'perimeter', TRUE, TRUE, TRUE),
('PROXY_REVERSE', 'Reverse Proxy', 'Inbound web proxy', 'proxy', 'application', 7, 'dmz', TRUE, FALSE, TRUE),
('DNS_SECURITY', 'DNS Security Gateway', 'Malicious domain blocking', 'dns', 'application', 7, 'internal', FALSE, FALSE, FALSE),
('EMAIL_GATEWAY', 'Email Security Gateway', 'Email threat protection', 'messaging', 'application', 7, 'perimeter', TRUE, TRUE, FALSE),
('SANDBOX', 'Network Sandbox', 'Malware detonation', 'malware', 'application', 7, 'internal', FALSE, TRUE, FALSE),
('NDR', 'Network Detection Response', 'AI-based threat detection', 'detection', 'network', 3, 'internal', TRUE, TRUE, TRUE),
('MICROSEGMENTATION', 'Microsegmentation', 'Zero-trust segmentation', 'segmentation', 'network', 3, 'internal', TRUE, FALSE, FALSE),
('SD_WAN', 'SD-WAN Security', 'Software-defined WAN', 'wan', 'network', 3, 'edge', TRUE, TRUE, TRUE),
('SASE', 'SASE Platform', 'Secure access service edge', 'cloud', 'all', 7, 'cloud', TRUE, TRUE, TRUE),
('ZTNA', 'Zero Trust Network Access', 'Application-specific access', 'access', 'application', 7, 'cloud', TRUE, TRUE, TRUE);

-- Table: api_security_type
CREATE TABLE api_security_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    security_method VARCHAR(50) NOT NULL,
    authentication_type VARCHAR(50),
    authorization_model VARCHAR(50),
    token_type VARCHAR(50) DEFAULT NULL,
    token_location VARCHAR(50) DEFAULT 'header',
    token_format VARCHAR(50) DEFAULT NULL,
    signature_required BOOLEAN DEFAULT FALSE,
    signature_algorithm VARCHAR(50) DEFAULT NULL,
    encryption_required BOOLEAN DEFAULT TRUE,
    transport_security VARCHAR(50) DEFAULT 'tls',
    minimum_tls_version VARCHAR(10) DEFAULT '1.2',
    certificate_pinning BOOLEAN DEFAULT FALSE,
    rate_limiting_enabled BOOLEAN DEFAULT TRUE,
    rate_limit_model VARCHAR(50) DEFAULT 'token_bucket',
    throttling_enabled BOOLEAN DEFAULT TRUE,
    quota_enforcement BOOLEAN DEFAULT TRUE,
    ip_whitelist_support BOOLEAN DEFAULT TRUE,
    cors_enabled BOOLEAN DEFAULT TRUE,
    csrf_protection BOOLEAN DEFAULT TRUE,
    request_validation BOOLEAN DEFAULT TRUE,
    response_validation BOOLEAN DEFAULT TRUE,
    schema_validation BOOLEAN DEFAULT TRUE,
    input_sanitization BOOLEAN DEFAULT TRUE,
    output_encoding BOOLEAN DEFAULT TRUE,
    error_masking BOOLEAN DEFAULT TRUE,
    audit_logging BOOLEAN DEFAULT TRUE,
    threat_detection BOOLEAN DEFAULT TRUE,
    replay_protection BOOLEAN DEFAULT TRUE,
    session_management BOOLEAN DEFAULT FALSE,
    oauth_flows_supported VARCHAR(200) DEFAULT NULL,
    compliance_standards VARCHAR(200),
    implementation_complexity VARCHAR(20) DEFAULT 'medium',
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_api_security_type_code (code),
    KEY idx_api_security_type_method (security_method),
    KEY idx_api_security_type_auth (authentication_type),
    KEY idx_api_security_type_token (token_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO api_security_type (code, name, description, security_method, authentication_type, token_type, rate_limiting_enabled, signature_required, implementation_complexity) VALUES
('OAUTH2_BEARER', 'OAuth 2.0 Bearer Token', 'Standard bearer token', 'oauth2', 'bearer', 'bearer', TRUE, FALSE, 'medium'),
('OAUTH2_MAC', 'OAuth 2.0 MAC', 'Message authentication code', 'oauth2', 'mac', 'mac', TRUE, TRUE, 'high'),
('JWT_BEARER', 'JWT Bearer Token', 'JSON Web Token', 'jwt', 'bearer', 'jwt', TRUE, TRUE, 'medium'),
('API_KEY_HEADER', 'API Key in Header', 'Static API key', 'api_key', 'key', 'static', TRUE, FALSE, 'low'),
('API_KEY_QUERY', 'API Key in Query', 'Query parameter key', 'api_key', 'key', 'static', TRUE, FALSE, 'low'),
('BASIC_AUTH', 'HTTP Basic Auth', 'Username password', 'basic', 'credentials', NULL, TRUE, FALSE, 'low'),
('DIGEST_AUTH', 'HTTP Digest Auth', 'Digest authentication', 'digest', 'credentials', NULL, TRUE, TRUE, 'medium'),
('MUTUAL_TLS', 'Mutual TLS', 'Client certificates', 'mtls', 'certificate', NULL, TRUE, FALSE, 'high'),
('HMAC_SIGNATURE', 'HMAC Signature', 'Request signing', 'hmac', 'signature', NULL, TRUE, TRUE, 'high'),
('AWS_SIGNATURE_V4', 'AWS Signature v4', 'AWS request signing', 'aws', 'signature', NULL, TRUE, TRUE, 'high'),
('HAWK_AUTH', 'Hawk Authentication', 'HTTP Hawk protocol', 'hawk', 'mac', 'hawk', TRUE, TRUE, 'high'),
('OPENID_CONNECT', 'OpenID Connect', 'Identity layer', 'oidc', 'bearer', 'id_token', TRUE, TRUE, 'medium'),
('SAML_BEARER', 'SAML Bearer', 'SAML assertions', 'saml', 'assertion', 'saml', TRUE, TRUE, 'high'),
('PASETO', 'PASETO Tokens', 'Platform-agnostic tokens', 'paseto', 'token', 'paseto', TRUE, TRUE, 'medium'),
('MACAROONS', 'Macaroons', 'Decentralized auth', 'macaroons', 'token', 'macaroon', TRUE, TRUE, 'high'),
('NTLM', 'NTLM Authentication', 'Windows authentication', 'ntlm', 'credentials', NULL, TRUE, TRUE, 'medium'),
('KERBEROS', 'Kerberos', 'Ticket-based auth', 'kerberos', 'ticket', 'ticket', TRUE, TRUE, 'high'),
('BLOCKCHAIN_SIGNATURE', 'Blockchain Signature', 'Wallet signature', 'blockchain', 'signature', NULL, TRUE, TRUE, 'high'),
('BIOMETRIC_TOKEN', 'Biometric Token', 'Biometric verified', 'biometric', 'token', 'biometric', TRUE, FALSE, 'high'),
('ZERO_KNOWLEDGE', 'Zero Knowledge Proof', 'ZKP authentication', 'zkp', 'proof', NULL, TRUE, TRUE, 'high');

-- Table: backup_type
CREATE TABLE backup_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    backup_category VARCHAR(50) NOT NULL,
    backup_method VARCHAR(50) NOT NULL,
    backup_scope VARCHAR(50) DEFAULT 'full',
    incremental_capable BOOLEAN DEFAULT FALSE,
    differential_capable BOOLEAN DEFAULT FALSE,
    compression_default BOOLEAN DEFAULT TRUE,
    compression_algorithm VARCHAR(50) DEFAULT 'gzip',
    encryption_default BOOLEAN DEFAULT TRUE,
    encryption_algorithm VARCHAR(50) DEFAULT 'AES-256-GCM',
    deduplication_capable BOOLEAN DEFAULT FALSE,
    snapshot_based BOOLEAN DEFAULT FALSE,
    application_aware BOOLEAN DEFAULT FALSE,
    database_consistent BOOLEAN DEFAULT FALSE,
    vss_capable BOOLEAN DEFAULT FALSE,
    schedule_type VARCHAR(50) DEFAULT 'scheduled',
    default_frequency VARCHAR(50) DEFAULT 'daily',
    retention_days_default INT UNSIGNED DEFAULT 30,
    retention_generations INT UNSIGNED DEFAULT NULL,
    grandfather_father_son BOOLEAN DEFAULT FALSE,
    offsite_copy_required BOOLEAN DEFAULT TRUE,
    offsite_lag_hours INT UNSIGNED DEFAULT 24,
    air_gap_capable BOOLEAN DEFAULT FALSE,
    immutable_capable BOOLEAN DEFAULT FALSE,
    ransomware_protection BOOLEAN DEFAULT FALSE,
    verification_required BOOLEAN DEFAULT TRUE,
    verification_method VARCHAR(50) DEFAULT 'checksum',
    test_restore_frequency_days INT UNSIGNED DEFAULT 90,
    recovery_time_estimate_minutes INT UNSIGNED DEFAULT 60,
    recovery_point_objective_hours INT UNSIGNED DEFAULT 24,
    bandwidth_throttling BOOLEAN DEFAULT TRUE,
    cloud_capable BOOLEAN DEFAULT TRUE,
    tape_capable BOOLEAN DEFAULT FALSE,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_backup_type_code (code),
    KEY idx_backup_type_category (backup_category),
    KEY idx_backup_type_method (backup_method),
    KEY idx_backup_type_scope (backup_scope),
    KEY idx_backup_type_frequency (default_frequency)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO backup_type (code, name, description, backup_category, backup_method, backup_scope, incremental_capable, snapshot_based, retention_days_default, offsite_copy_required) VALUES
('FULL_SYSTEM', 'Full System Backup', 'Complete system image', 'system', 'image', 'full', FALSE, TRUE, 30, TRUE),
('FULL_DATA', 'Full Data Backup', 'All data files', 'data', 'file', 'full', FALSE, FALSE, 30, TRUE),
('INCREMENTAL_DAILY', 'Daily Incremental', 'Changed files only', 'data', 'file', 'incremental', TRUE, FALSE, 7, TRUE),
('DIFFERENTIAL_DAILY', 'Daily Differential', 'Changes since full', 'data', 'file', 'differential', FALSE, FALSE, 7, TRUE),
('DATABASE_FULL', 'Database Full Backup', 'Complete database', 'database', 'dump', 'full', FALSE, FALSE, 30, TRUE),
('DATABASE_LOG', 'Database Log Backup', 'Transaction logs', 'database', 'log', 'incremental', TRUE, FALSE, 7, TRUE),
('DATABASE_SNAPSHOT', 'Database Snapshot', 'Point-in-time snapshot', 'database', 'snapshot', 'full', FALSE, TRUE, 3, FALSE),
('APPLICATION_BACKUP', 'Application Backup', 'App-specific backup', 'application', 'agent', 'full', TRUE, FALSE, 30, TRUE),
('VM_SNAPSHOT', 'VM Snapshot', 'Virtual machine snapshot', 'virtualization', 'snapshot', 'full', FALSE, TRUE, 7, FALSE),
('VM_REPLICATION', 'VM Replication', 'Continuous VM replication', 'virtualization', 'replication', 'continuous', TRUE, FALSE, 1, TRUE),
('CLOUD_NATIVE', 'Cloud Native Backup', 'Cloud service backup', 'cloud', 'api', 'full', TRUE, TRUE, 30, TRUE),
('CONTAINER_BACKUP', 'Container Backup', 'Docker/K8s backup', 'container', 'image', 'full', FALSE, TRUE, 7, TRUE),
('FILE_SYNC', 'File Synchronization', 'Real-time file sync', 'file', 'sync', 'continuous', TRUE, FALSE, 30, TRUE),
('BLOCKCHAIN_BACKUP', 'Blockchain Backup', 'Wallet and key backup', 'blockchain', 'export', 'full', FALSE, FALSE, 365, TRUE),
('METADATA_BACKUP', 'Metadata Backup', 'System metadata only', 'metadata', 'export', 'full', FALSE, FALSE, 90, TRUE),
('CONFIG_BACKUP', 'Configuration Backup', 'System configurations', 'config', 'export', 'full', FALSE, FALSE, 90, TRUE),
('ARCHIVE_BACKUP', 'Long-term Archive', 'Compliance archive', 'archive', 'tape', 'full', FALSE, FALSE, 2555, TRUE),
('CDP', 'Continuous Data Protection', 'Real-time protection', 'continuous', 'journal', 'continuous', TRUE, FALSE, 30, TRUE),
('IMMUTABLE_BACKUP', 'Immutable Backup', 'Ransomware-proof backup', 'security', 'worm', 'full', FALSE, FALSE, 90, TRUE),
('AIR_GAP_BACKUP', 'Air Gap Backup', 'Isolated backup copy', 'security', 'offline', 'full', FALSE, FALSE, 365, FALSE);

-- Table: recovery_point_type
CREATE TABLE recovery_point_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    rpo_category VARCHAR(50) NOT NULL,
    max_data_loss_minutes INT UNSIGNED NOT NULL,
    recovery_method VARCHAR(100),
    recovery_mechanism VARCHAR(100),
    consistency_level VARCHAR(50) DEFAULT 'crash_consistent',
    automation_level VARCHAR(50) DEFAULT 'manual',
    orchestration_capable BOOLEAN DEFAULT FALSE,
    failover_automatic BOOLEAN DEFAULT FALSE,
    failback_supported BOOLEAN DEFAULT TRUE,
    testing_method VARCHAR(50) DEFAULT 'full_test',
    test_frequency_days INT UNSIGNED DEFAULT 90,
    test_duration_hours INT UNSIGNED DEFAULT 4,
    dependencies_tracked BOOLEAN DEFAULT TRUE,
    data_validation_required BOOLEAN DEFAULT TRUE,
    integrity_verification BOOLEAN DEFAULT TRUE,
    point_in_time_capable BOOLEAN DEFAULT FALSE,
    granularity VARCHAR(50) DEFAULT 'system',
    geographic_separation BOOLEAN DEFAULT FALSE,
    distance_requirement_km INT UNSIGNED DEFAULT NULL,
    bandwidth_required_mbps INT UNSIGNED DEFAULT NULL,
    storage_required_percent INT UNSIGNED DEFAULT 150,
    infrastructure_cost VARCHAR(20) DEFAULT 'medium',
    operational_complexity VARCHAR(20) DEFAULT 'medium',
    skill_level_required VARCHAR(20) DEFAULT 'intermediate',
    compliance_certifiable BOOLEAN DEFAULT TRUE,
    sla_achievable DECIMAL(5,2) DEFAULT 99.00,
    mttr_estimate_hours INT UNSIGNED DEFAULT 4,
    business_impact_tolerance VARCHAR(20) DEFAULT 'medium',
    data_criticality VARCHAR(20) DEFAULT 'high',
    regulatory_approved BOOLEAN DEFAULT TRUE,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_recovery_point_type_code (code),
    KEY idx_recovery_point_type_category (rpo_category),
    KEY idx_recovery_point_type_data_loss (max_data_loss_minutes),
    KEY idx_recovery_point_type_consistency (consistency_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO recovery_point_type (code, name, description, rpo_category, max_data_loss_minutes, recovery_method, consistency_level, automation_level, failover_automatic) VALUES
('ZERO_RPO', 'Zero Data Loss', 'Synchronous replication', 'zero', 0, 'synchronous_replication', 'application_consistent', 'automatic', TRUE),
('NEAR_ZERO_RPO', 'Near Zero RPO', 'Async with minimal lag', 'near_zero', 5, 'async_replication', 'application_consistent', 'automatic', TRUE),
('FIVE_MINUTE_RPO', '5 Minute RPO', 'Very frequent snapshots', 'minutes', 5, 'snapshot', 'crash_consistent', 'automatic', FALSE),
('FIFTEEN_MINUTE_RPO', '15 Minute RPO', 'Frequent backups', 'minutes', 15, 'incremental_backup', 'application_consistent', 'automatic', FALSE),
('THIRTY_MINUTE_RPO', '30 Minute RPO', 'Half-hourly protection', 'minutes', 30, 'incremental_backup', 'application_consistent', 'scheduled', FALSE),
('ONE_HOUR_RPO', '1 Hour RPO', 'Hourly protection', 'hourly', 60, 'incremental_backup', 'application_consistent', 'scheduled', FALSE),
('FOUR_HOUR_RPO', '4 Hour RPO', 'Quarter-day protection', 'hours', 240, 'differential_backup', 'application_consistent', 'scheduled', FALSE),
('EIGHT_HOUR_RPO', '8 Hour RPO', 'Shift-based protection', 'hours', 480, 'differential_backup', 'crash_consistent', 'scheduled', FALSE),
('TWELVE_HOUR_RPO', '12 Hour RPO', 'Twice daily protection', 'hours', 720, 'full_backup', 'application_consistent', 'scheduled', FALSE),
('DAILY_RPO', '24 Hour RPO', 'Daily protection', 'daily', 1440, 'full_backup', 'application_consistent', 'scheduled', FALSE),
('WEEKLY_RPO', 'Weekly RPO', 'Weekly protection', 'weekly', 10080, 'full_backup', 'application_consistent', 'scheduled', FALSE),
('CDP', 'Continuous Protection', 'Journal-based CDP', 'continuous', 1, 'continuous_journal', 'application_consistent', 'automatic', TRUE),
('POINT_IN_TIME', 'Point in Time', 'Any point recovery', 'flexible', 1, 'pit_recovery', 'application_consistent', 'manual', FALSE),
('BLOCKCHAIN_RPO', 'Blockchain RPO', 'Distributed ledger', 'blockchain', 0, 'distributed_consensus', 'blockchain_verified', 'automatic', FALSE),
('CLOUD_NATIVE_RPO', 'Cloud Native RPO', 'Cloud service SLA', 'cloud', 60, 'cloud_replication', 'service_consistent', 'automatic', TRUE),
('HYBRID_RPO', 'Hybrid RPO', 'On-prem and cloud', 'hybrid', 30, 'hybrid_replication', 'application_consistent', 'automatic', FALSE),
('METRO_CLUSTER', 'Metro Cluster', 'Metropolitan area', 'geographic', 0, 'synchronous_cluster', 'application_consistent', 'automatic', TRUE),
('GEO_CLUSTER', 'Geo Cluster', 'Geographic distribution', 'geographic', 60, 'async_cluster', 'eventual_consistent', 'automatic', TRUE),
('COMPLIANCE_RPO', 'Compliance RPO', 'Regulatory required', 'compliance', 240, 'compliant_backup', 'application_consistent', 'scheduled', FALSE),
('BEST_EFFORT', 'Best Effort', 'Non-critical systems', 'minimal', 2880, 'manual_backup', 'crash_consistent', 'manual', FALSE);

-- Table: security_metric_type
CREATE TABLE security_metric_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(100) NOT NULL,
    name VARCHAR(200) NOT NULL,
    description TEXT,
    metric_category VARCHAR(50) NOT NULL,
    metric_type VARCHAR(50) DEFAULT 'quantitative',
    measurement_unit VARCHAR(50),
    measurement_scale VARCHAR(50) DEFAULT 'ratio',
    calculation_method TEXT,
    data_source VARCHAR(500),
    collection_method VARCHAR(50) DEFAULT 'automated',
    collection_frequency VARCHAR(50) DEFAULT 'daily',
    aggregation_method VARCHAR(50) DEFAULT 'average',
    trending_enabled BOOLEAN DEFAULT TRUE,
    trending_period_days INT UNSIGNED DEFAULT 90,
    baseline_required BOOLEAN DEFAULT TRUE,
    threshold_type VARCHAR(50) DEFAULT 'static',
    threshold_green DECIMAL(10,2) DEFAULT NULL,
    threshold_yellow DECIMAL(10,2) DEFAULT NULL,
    threshold_red DECIMAL(10,2) DEFAULT NULL,
    threshold_critical DECIMAL(10,2) DEFAULT NULL,
    direction_preference VARCHAR(20) DEFAULT 'lower_better',
    benchmark_available BOOLEAN DEFAULT FALSE,
    industry_benchmark DECIMAL(10,2) DEFAULT NULL,
    target_value DECIMAL(10,2) DEFAULT NULL,
    tolerance_percent DECIMAL(5,2) DEFAULT 10.00,
    dashboard_display BOOLEAN DEFAULT TRUE,
    executive_reporting BOOLEAN DEFAULT TRUE,
    operational_reporting BOOLEAN DEFAULT TRUE,
    compliance_reporting BOOLEAN DEFAULT FALSE,
    alert_enabled BOOLEAN DEFAULT TRUE,
    alert_channels VARCHAR(200) DEFAULT 'email',
    automation_actions VARCHAR(500),
    business_context TEXT,
    improvement_actions TEXT,
    owner_role VARCHAR(100) DEFAULT 'security_admin',
    review_frequency_days INT UNSIGNED DEFAULT 30,
    retention_days INT UNSIGNED DEFAULT 365,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_security_metric_type_code (code),
    KEY idx_security_metric_type_category (metric_category),
    KEY idx_security_metric_type_frequency (collection_frequency),
    KEY idx_security_metric_type_dashboard (dashboard_display),
    KEY idx_security_metric_type_executive (executive_reporting)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO security_metric_type (code, name, description, metric_category, measurement_unit, calculation_method, collection_frequency, threshold_green, threshold_yellow, threshold_red, direction_preference) VALUES
('MTTR', 'Mean Time to Respond', 'Average incident response time', 'incident', 'minutes', 'average(response_time)', 'realtime', 15.00, 30.00, 60.00, 'lower_better'),
('MTTD', 'Mean Time to Detect', 'Average threat detection time', 'detection', 'minutes', 'average(detection_time)', 'realtime', 5.00, 15.00, 30.00, 'lower_better'),
('MTTI', 'Mean Time to Investigate', 'Average investigation time', 'incident', 'minutes', 'average(investigation_time)', 'realtime', 30.00, 60.00, 120.00, 'lower_better'),
('MTTC', 'Mean Time to Contain', 'Average containment time', 'incident', 'minutes', 'average(containment_time)', 'realtime', 60.00, 120.00, 240.00, 'lower_better'),
('MTTR_FULL', 'Mean Time to Recovery', 'Average recovery time', 'recovery', 'hours', 'average(recovery_time)', 'daily', 4.00, 8.00, 24.00, 'lower_better'),
('PATCH_COMPLIANCE_RATE', 'Patch Compliance Rate', 'Systems patched on time', 'vulnerability', 'percentage', 'patched_systems/total_systems*100', 'daily', 95.00, 90.00, 85.00, 'higher_better'),
('VULNERABILITY_DENSITY', 'Vulnerability Density', 'Vulnerabilities per asset', 'vulnerability', 'ratio', 'total_vulnerabilities/total_assets', 'weekly', 2.00, 5.00, 10.00, 'lower_better'),
('CRITICAL_VULN_OPEN', 'Critical Vulnerabilities Open', 'Unpatched critical vulns', 'vulnerability', 'count', 'count(critical_unpatched)', 'daily', 0.00, 5.00, 10.00, 'lower_better'),
('SECURITY_INCIDENT_RATE', 'Security Incident Rate', 'Incidents per month', 'incident', 'count', 'count(incidents)', 'monthly', 5.00, 10.00, 20.00, 'lower_better'),
('FALSE_POSITIVE_RATE', 'False Positive Rate', 'Incorrect alerts percentage', 'detection', 'percentage', 'false_positives/total_alerts*100', 'weekly', 5.00, 10.00, 20.00, 'lower_better'),
('PHISHING_CLICK_RATE', 'Phishing Click Rate', 'Users clicking phishing', 'awareness', 'percentage', 'clicked_users/total_tested*100', 'monthly', 2.00, 5.00, 10.00, 'lower_better'),
('TRAINING_COMPLETION_RATE', 'Training Completion Rate', 'Security training completed', 'training', 'percentage', 'completed/enrolled*100', 'monthly', 95.00, 90.00, 80.00, 'higher_better'),
('ACCESS_REVIEW_COMPLETION', 'Access Review Completion', 'Access reviews done on time', 'access', 'percentage', 'reviewed/total_required*100', 'quarterly', 100.00, 95.00, 90.00, 'higher_better'),
('PRIVILEGED_ACCOUNT_RATIO', 'Privileged Account Ratio', 'Admin to user ratio', 'access', 'percentage', 'privileged_accounts/total_accounts*100', 'monthly', 5.00, 10.00, 15.00, 'lower_better'),
('MFA_ADOPTION_RATE', 'MFA Adoption Rate', 'Users with MFA enabled', 'authentication', 'percentage', 'mfa_enabled/total_users*100', 'weekly', 95.00, 90.00, 80.00, 'higher_better'),
('FAILED_LOGIN_RATE', 'Failed Login Rate', 'Authentication failure rate', 'authentication', 'percentage', 'failed_logins/total_logins*100', 'hourly', 2.00, 5.00, 10.00, 'lower_better'),
('ENCRYPTION_COVERAGE', 'Encryption Coverage', 'Data encrypted at rest', 'encryption', 'percentage', 'encrypted_data/total_data*100', 'weekly', 100.00, 95.00, 90.00, 'higher_better'),
('BACKUP_SUCCESS_RATE', 'Backup Success Rate', 'Successful backup jobs', 'backup', 'percentage', 'successful_backups/total_backups*100', 'daily', 99.00, 95.00, 90.00, 'higher_better'),
('SECURITY_BUDGET_VARIANCE', 'Security Budget Variance', 'Budget vs actual spending', 'financial', 'percentage', '(actual-budget)/budget*100', 'monthly', 5.00, 10.00, 20.00, 'lower_better'),
('COMPLIANCE_SCORE', 'Compliance Score', 'Overall compliance level', 'compliance', 'percentage', 'weighted_compliance_score', 'quarterly', 95.00, 90.00, 85.00, 'higher_better');

-- Table: risk_level
CREATE TABLE risk_level (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    risk_score INT UNSIGNED NOT NULL,
    risk_rating VARCHAR(20) NOT NULL,
    probability VARCHAR(20) NOT NULL,
    impact VARCHAR(20) NOT NULL,
    risk_category VARCHAR(50) DEFAULT 'operational',
    inherent_risk INT UNSIGNED DEFAULT NULL,
    residual_risk INT UNSIGNED DEFAULT NULL,
    risk_appetite VARCHAR(50) DEFAULT 'moderate',
    risk_tolerance INT UNSIGNED DEFAULT 50,
    treatment_strategy VARCHAR(50) DEFAULT 'mitigate',
    treatment_priority INT UNSIGNED DEFAULT 3,
    response_timeframe_days INT UNSIGNED DEFAULT 30,
    review_frequency_days INT UNSIGNED DEFAULT 90,
    escalation_threshold INT UNSIGNED DEFAULT 75,
    notification_threshold INT UNSIGNED DEFAULT 50,
    executive_visibility_threshold INT UNSIGNED DEFAULT 80,
    board_reporting_required BOOLEAN DEFAULT FALSE,
    regulatory_reporting_required BOOLEAN DEFAULT FALSE,
    insurance_coverage_required BOOLEAN DEFAULT FALSE,
    business_continuity_impact BOOLEAN DEFAULT FALSE,
    reputation_impact VARCHAR(20) DEFAULT 'medium',
    financial_impact_min DECIMAL(15,2) DEFAULT NULL,
    financial_impact_max DECIMAL(15,2) DEFAULT NULL,
    operational_impact VARCHAR(20) DEFAULT 'medium',
    compliance_impact VARCHAR(20) DEFAULT 'low',
    strategic_impact VARCHAR(20) DEFAULT 'low',
    mitigation_cost_estimate DECIMAL(15,2) DEFAULT NULL,
    color_code VARCHAR(7) DEFAULT '#000000',
    icon_name VARCHAR(50) DEFAULT NULL,
    dashboard_display BOOLEAN DEFAULT TRUE,
    heat_map_position VARCHAR(20) DEFAULT NULL,
    status VARCHAR(20) DEFAULT 'active',
    created_by VARCHAR(100) DEFAULT 'system',
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_by VARCHAR(100) DEFAULT NULL,
    updated_date TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_risk_level_code (code),
    UNIQUE KEY uk_risk_level_score (risk_score),
    KEY idx_risk_level_rating (risk_rating),
    KEY idx_risk_level_priority (treatment_priority),
    KEY idx_risk_level_threshold (escalation_threshold)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO risk_level (code, name, description, risk_score, risk_rating, probability, impact, treatment_priority, color_code, executive_visibility_threshold, board_reporting_required) VALUES
('CRITICAL', 'Critical Risk', 'Immediate action required', 100, 'critical', 'almost_certain', 'catastrophic', 1, '#8B0000', 90, TRUE),
('VERY_HIGH', 'Very High Risk', 'Urgent mitigation needed', 80, 'very_high', 'likely', 'major', 1, '#FF0000', 80, TRUE),
('HIGH', 'High Risk', 'Priority mitigation required', 60, 'high', 'possible', 'major', 2, '#FF6600', 70, FALSE),
('MEDIUM_HIGH', 'Medium-High Risk', 'Planned mitigation needed', 50, 'medium_high', 'possible', 'moderate', 2, '#FFA500', 60, FALSE),
('MEDIUM', 'Medium Risk', 'Standard controls required', 40, 'medium', 'unlikely', 'moderate', 3, '#FFFF00', 50, FALSE),
('MEDIUM_LOW', 'Medium-Low Risk', 'Monitor and review', 30, 'medium_low', 'unlikely', 'minor', 3, '#90EE90', 40, FALSE),
('LOW', 'Low Risk', 'Accept with monitoring', 20, 'low', 'rare', 'minor', 4, '#00FF00', 30, FALSE),
('VERY_LOW', 'Very Low Risk', 'Accept risk', 10, 'very_low', 'rare', 'insignificant', 5, '#006400', 20, FALSE),
('MINIMAL', 'Minimal Risk', 'Negligible impact', 5, 'minimal', 'very_rare', 'insignificant', 5, '#0000FF', 10, FALSE);

-- Create composite indexes for common query patterns
CREATE INDEX idx_user_role_permission ON user_role_type(code, permission_level, status);
CREATE INDEX idx_permission_category_risk ON permission_type(category, risk_level, status);
CREATE INDEX idx_auth_method_security ON authentication_method(method_type, security_level, supports_mfa);
CREATE INDEX idx_encryption_quantum ON encryption_algorithm(is_quantum_resistant, security_rating, status);
CREATE INDEX idx_session_platform_lifetime ON session_type(platform, lifetime_seconds, concurrent_allowed);
CREATE INDEX idx_mfa_security_phishing ON mfa_type(security_level, phishing_resistant, factor_type);
CREATE INDEX idx_threat_severity_likelihood ON threat_type(severity, likelihood, risk_score);
CREATE INDEX idx_vuln_severity_patch ON vulnerability_type(severity, patch_available, cvss_base_score);
CREATE INDEX idx_compliance_geo_cert ON security_compliance_type(geographic_scope, certification_required, audit_frequency_days);
CREATE INDEX idx_zone_trust_classification ON security_zone(trust_level, classification_level, encryption_required);
CREATE INDEX idx_audit_sensitive_financial ON audit_action_type(is_sensitive, is_financial, retention_days);
CREATE INDEX idx_training_role_frequency ON security_training_type(role_specific, frequency_required, passing_score_percent);
CREATE INDEX idx_backup_method_retention ON backup_type(backup_method, retention_days_default, offsite_copy_required);
CREATE INDEX idx_metric_reporting_threshold ON security_metric_type(executive_reporting, threshold_type, collection_frequency);

-- Additional indexes for performance optimization
CREATE INDEX idx_event_investigation ON security_event_type(requires_investigation, risk_score, severity);
CREATE INDEX idx_ip_restriction_action ON ip_restriction_type(action, evaluation_order, automated_response);
CREATE INDEX idx_token_lifetime_category ON token_type(token_category, lifetime_seconds, renewable);
CREATE INDEX idx_password_policy_age ON password_policy(max_age_days, complexity_score_min);
CREATE INDEX idx_data_class_encryption ON data_classification(encryption_required, retention_period_days);
CREATE INDEX idx_breach_notification ON breach_type(notification_timeline_hours, severity);
CREATE INDEX idx_tool_deployment_cloud ON security_tool_type(deployment_model, cloud_native);
CREATE INDEX idx_device_trust_mdm ON device_trust_level(trust_score, mdm_required);
CREATE INDEX idx_network_sec_osi ON network_security_type(osi_layer, deployment_location);
CREATE INDEX idx_api_sec_rate_limit ON api_security_type(rate_limiting_enabled, security_method);
CREATE INDEX idx_recovery_point_loss ON recovery_point_type(max_data_loss_minutes, automation_level);
CREATE INDEX idx_risk_treatment ON risk_level(treatment_strategy, treatment_priority);

-- Grant permissions (example - adjust based on your user structure)
-- GRANT SELECT ON reference_db.* TO 'app_read'@'%';
-- GRANT SELECT, INSERT, UPDATE ON reference_db.* TO 'app_write'@'%';
-- GRANT ALL PRIVILEGES ON reference_db.* TO 'admin'@'%';

-- =====================================================
-- SECTION 23: LOCALIZATION
-- =====================================================

CREATE TABLE date_format (
    date_format_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    format_code VARCHAR(50) NOT NULL,
    format_pattern VARCHAR(100) NOT NULL,
    format_example VARCHAR(100) NOT NULL,
    format_description VARCHAR(255) NOT NULL,
    locale_code VARCHAR(10) NULL,
    country_code CHAR(2) NULL,
    is_default TINYINT(1) NOT NULL DEFAULT 0,
    display_order INT NOT NULL DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL DEFAULT 1,
    updated_at TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    is_active TINYINT(1) NOT NULL DEFAULT 1,
    PRIMARY KEY (date_format_id),
    UNIQUE KEY uk_date_format_code (format_code),
    KEY idx_date_format_locale (locale_code),
    KEY idx_date_format_country (country_code),
    KEY idx_date_format_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Date format patterns for different locales';

INSERT INTO date_format (format_code, format_pattern, format_example, format_description, locale_code, country_code, is_default, display_order) VALUES
('ISO_8601', 'YYYY-MM-DD', '2025-12-31', 'ISO 8601 International Standard', NULL, NULL, 1, 1),
('US_MDY', 'MM/DD/YYYY', '12/31/2025', 'US Format (Month/Day/Year)', 'en-US', 'US', 0, 2),
('UK_DMY', 'DD/MM/YYYY', '31/12/2025', 'UK Format (Day/Month/Year)', 'en-GB', 'GB', 0, 3),
('EU_DMY_DOT', 'DD.MM.YYYY', '31.12.2025', 'European Format with dots', 'de-DE', 'DE', 0, 4),
('JP_YMD', 'YYYY年MM月DD日', '2025年12月31日', 'Japanese Format', 'ja-JP', 'JP', 0, 5),
('CN_YMD', 'YYYY年MM月DD日', '2025年12月31日', 'Chinese Format', 'zh-CN', 'CN', 0, 6),
('KR_YMD', 'YYYY년 MM월 DD일', '2025년 12월 31일', 'Korean Format', 'ko-KR', 'KR', 0, 7),
('FR_DMY', 'DD/MM/YYYY', '31/12/2025', 'French Format', 'fr-FR', 'FR', 0, 8),
('ES_DMY', 'DD/MM/YYYY', '31/12/2025', 'Spanish Format', 'es-ES', 'ES', 0, 9),
('BR_DMY', 'DD/MM/YYYY', '31/12/2025', 'Brazilian Format', 'pt-BR', 'BR', 0, 10),
('RU_DMY_DOT', 'DD.MM.YYYY', '31.12.2025', 'Russian Format', 'ru-RU', 'RU', 0, 11),
('AR_DMY', 'DD/MM/YYYY', '٣١/١٢/٢٠٢٥', 'Arabic Format', 'ar-SA', 'SA', 0, 12),
('IN_DMY_DASH', 'DD-MM-YYYY', '31-12-2025', 'Indian Format', 'hi-IN', 'IN', 0, 13),
('AU_DMY', 'DD/MM/YYYY', '31/12/2025', 'Australian Format', 'en-AU', 'AU', 0, 14),
('CA_YMD_DASH', 'YYYY-MM-DD', '2025-12-31', 'Canadian Format', 'en-CA', 'CA', 0, 15),
('MX_DMY', 'DD/MM/YYYY', '31/12/2025', 'Mexican Format', 'es-MX', 'MX', 0, 16),
('IT_DMY', 'DD/MM/YYYY', '31/12/2025', 'Italian Format', 'it-IT', 'IT', 0, 17),
('NL_DMY_DASH', 'DD-MM-YYYY', '31-12-2025', 'Dutch Format', 'nl-NL', 'NL', 0, 18),
('SE_YMD_DASH', 'YYYY-MM-DD', '2025-12-31', 'Swedish Format', 'sv-SE', 'SE', 0, 19),
('NO_DMY_DOT', 'DD.MM.YYYY', '31.12.2025', 'Norwegian Format', 'no-NO', 'NO', 0, 20),
('DK_DMY_DOT', 'DD.MM.YYYY', '31.12.2025', 'Danish Format', 'da-DK', 'DK', 0, 21),
('FI_DMY_DOT', 'DD.MM.YYYY', '31.12.2025', 'Finnish Format', 'fi-FI', 'FI', 0, 22),
('PL_DMY_DOT', 'DD.MM.YYYY', '31.12.2025', 'Polish Format', 'pl-PL', 'PL', 0, 23),
('TR_DMY_DOT', 'DD.MM.YYYY', '31.12.2025', 'Turkish Format', 'tr-TR', 'TR', 0, 24),
('ID_DMY_SLASH', 'DD/MM/YYYY', '31/12/2025', 'Indonesian Format', 'id-ID', 'ID', 0, 25),
('TH_DMY_SLASH', 'DD/MM/YYYY', '31/12/2568', 'Thai Format (Buddhist Era)', 'th-TH', 'TH', 0, 26),
('VN_DMY_SLASH', 'DD/MM/YYYY', '31/12/2025', 'Vietnamese Format', 'vi-VN', 'VN', 0, 27),
('PH_MDY_SLASH', 'MM/DD/YYYY', '12/31/2025', 'Philippine Format', 'en-PH', 'PH', 0, 28),
('SG_DMY_SLASH', 'DD/MM/YYYY', '31/12/2025', 'Singapore Format', 'en-SG', 'SG', 0, 29),
('MY_DMY_SLASH', 'DD/MM/YYYY', '31/12/2025', 'Malaysian Format', 'ms-MY', 'MY', 0, 30);

CREATE TABLE number_format (
    number_format_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    format_code VARCHAR(50) NOT NULL,
    decimal_separator CHAR(1) NOT NULL,
    thousand_separator VARCHAR(2) NOT NULL,
    decimal_places TINYINT NOT NULL DEFAULT 2,
    negative_pattern VARCHAR(20) NOT NULL,
    currency_symbol_position VARCHAR(10) NOT NULL DEFAULT 'before',
    percent_symbol_position VARCHAR(10) NOT NULL DEFAULT 'after',
    locale_code VARCHAR(10) NULL,
    country_code CHAR(2) NULL,
    is_default TINYINT(1) NOT NULL DEFAULT 0,
    display_order INT NOT NULL DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL DEFAULT 1,
    updated_at TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    is_active TINYINT(1) NOT NULL DEFAULT 1,
    PRIMARY KEY (number_format_id),
    UNIQUE KEY uk_number_format_code (format_code),
    KEY idx_number_format_locale (locale_code),
    KEY idx_number_format_country (country_code),
    KEY idx_number_format_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Number format patterns for different locales';

INSERT INTO number_format (format_code, decimal_separator, thousand_separator, decimal_places, negative_pattern, currency_symbol_position, locale_code, country_code, is_default, display_order) VALUES
('INTL_STANDARD', '.', ',', 2, '-#', 'before', NULL, NULL, 1, 1),
('US_FORMAT', '.', ',', 2, '-#', 'before', 'en-US', 'US', 0, 2),
('UK_FORMAT', '.', ',', 2, '-#', 'before', 'en-GB', 'GB', 0, 3),
('EU_FORMAT', ',', '.', 2, '-#', 'after', 'de-DE', 'DE', 0, 4),
('FR_FORMAT', ',', ' ', 2, '-#', 'after', 'fr-FR', 'FR', 0, 5),
('JP_FORMAT', '.', ',', 0, '-#', 'before', 'ja-JP', 'JP', 0, 6),
('CN_FORMAT', '.', ',', 2, '-#', 'before', 'zh-CN', 'CN', 0, 7),
('KR_FORMAT', '.', ',', 0, '-#', 'before', 'ko-KR', 'KR', 0, 8),
('ES_FORMAT', ',', '.', 2, '-#', 'after', 'es-ES', 'ES', 0, 9),
('BR_FORMAT', ',', '.', 2, '-#', 'before', 'pt-BR', 'BR', 0, 10),
('RU_FORMAT', ',', ' ', 2, '-#', 'after', 'ru-RU', 'RU', 0, 11),
('AR_FORMAT', '٫', '٬', 2, '#-', 'after', 'ar-SA', 'SA', 0, 12),
('IN_FORMAT', '.', ',', 2, '-#', 'before', 'hi-IN', 'IN', 0, 13),
('AU_FORMAT', '.', ',', 2, '-#', 'before', 'en-AU', 'AU', 0, 14),
('CA_FORMAT', '.', ',', 2, '-#', 'before', 'en-CA', 'CA', 0, 15),
('MX_FORMAT', '.', ',', 2, '-#', 'before', 'es-MX', 'MX', 0, 16),
('IT_FORMAT', ',', '.', 2, '-#', 'after', 'it-IT', 'IT', 0, 17),
('NL_FORMAT', ',', '.', 2, '-#', 'before', 'nl-NL', 'NL', 0, 18),
('SE_FORMAT', ',', ' ', 2, '-#', 'after', 'sv-SE', 'SE', 0, 19),
('NO_FORMAT', ',', ' ', 2, '-#', 'after', 'no-NO', 'NO', 0, 20),
('DK_FORMAT', ',', '.', 2, '-#', 'after', 'da-DK', 'DK', 0, 21),
('FI_FORMAT', ',', ' ', 2, '-#', 'after', 'fi-FI', 'FI', 0, 22),
('PL_FORMAT', ',', ' ', 2, '-#', 'after', 'pl-PL', 'PL', 0, 23),
('TR_FORMAT', ',', '.', 2, '-#', 'before', 'tr-TR', 'TR', 0, 24),
('ID_FORMAT', ',', '.', 2, '-#', 'before', 'id-ID', 'ID', 0, 25),
('TH_FORMAT', '.', ',', 2, '-#', 'before', 'th-TH', 'TH', 0, 26),
('VN_FORMAT', ',', '.', 2, '-#', 'after', 'vi-VN', 'VN', 0, 27),
('PH_FORMAT', '.', ',', 2, '-#', 'before', 'en-PH', 'PH', 0, 28),
('CH_FORMAT', '.', ''', 2, '-#', 'before', 'de-CH', 'CH', 0, 29),
('ZA_FORMAT', '.', ' ', 2, '-#', 'before', 'en-ZA', 'ZA', 0, 30);

CREATE TABLE address_format (
    address_format_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    format_code VARCHAR(50) NOT NULL,
    format_pattern TEXT NOT NULL,
    field_order VARCHAR(255) NOT NULL,
    required_fields VARCHAR(255) NOT NULL,
    postal_code_position VARCHAR(20) NOT NULL DEFAULT 'after_city',
    country_code CHAR(2) NULL,
    format_example TEXT NOT NULL,
    display_order INT NOT NULL DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL DEFAULT 1,
    updated_at TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    is_active TINYINT(1) NOT NULL DEFAULT 1,
    PRIMARY KEY (address_format_id),
    UNIQUE KEY uk_address_format_code (format_code),
    KEY idx_address_format_country (country_code),
    KEY idx_address_format_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Address format patterns by country';

INSERT INTO address_format (format_code, format_pattern, field_order, required_fields, postal_code_position, country_code, format_example, display_order) VALUES
('US_FORMAT', '{name}\n{company}\n{street_address}\n{street_address_2}\n{city}, {state} {postal_code}\n{country}', 'name,company,street_address,street_address_2,city,state,postal_code,country', 'name,street_address,city,state,postal_code', 'after_state', 'US', 'John Doe\nASTRO Music\n123 Main Street\nSuite 100\nLos Angeles, CA 90001\nUnited States', 1),
('UK_FORMAT', '{name}\n{company}\n{street_address}\n{street_address_2}\n{city}\n{state}\n{postal_code}\n{country}', 'name,company,street_address,street_address_2,city,state,postal_code,country', 'name,street_address,city,postal_code', 'after_state', 'GB', 'John Smith\nASTRO Ltd\n10 Downing Street\nFlat 2B\nLondon\nEngland\nSW1A 2AA\nUnited Kingdom', 2),
('DE_FORMAT', '{company}\n{name}\n{street_address} {street_number}\n{postal_code} {city}\n{country}', 'company,name,street_address,street_number,postal_code,city,country', 'name,street_address,street_number,postal_code,city', 'before_city', 'DE', 'ASTRO GmbH\nHerr Hans Mueller\nBerliner Strasse 123\n10115 Berlin\nGermany', 3),
('JP_FORMAT', '〒{postal_code}\n{state}{city}{district}\n{street_address}\n{company}\n{name} 様', 'postal_code,state,city,district,street_address,company,name', 'postal_code,state,city,street_address,name', 'first', 'JP', '〒100-0001\n東京都千代田区千代田\n1-1 皇居\nASTRO株式会社\n山田太郎 様', 4),
('CN_FORMAT', '{country}\n{postal_code}\n{state}{city}{district}\n{street_address}\n{company}\n{name} 收', 'country,postal_code,state,city,district,street_address,company,name', 'state,city,street_address,name', 'after_country', 'CN', '中国\n100000\n北京市朝阳区\n建国门外大街1号\nASTRO音乐\n张伟 收', 5),
('FR_FORMAT', '{name}\n{company}\n{street_number} {street_address}\n{postal_code} {city}\n{country}', 'name,company,street_number,street_address,postal_code,city,country', 'name,street_address,postal_code,city', 'before_city', 'FR', 'Jean Dupont\nASTRO SARL\n10 Rue de la Paix\n75001 Paris\nFrance', 6),
('ES_FORMAT', '{name}\n{company}\n{street_address}, {street_number}\n{postal_code} {city}\n{state}\n{country}', 'name,company,street_address,street_number,postal_code,city,state,country', 'name,street_address,street_number,postal_code,city', 'before_city', 'ES', 'Carlos García\nASTRO España\nCalle Mayor, 25\n28013 Madrid\nMadrid\nSpain', 7),
('BR_FORMAT', '{name}\n{company}\n{street_address}, {street_number}\n{district}\n{city} - {state}\n{postal_code}\n{country}', 'name,company,street_address,street_number,district,city,state,postal_code,country', 'name,street_address,street_number,city,state,postal_code', 'after_state', 'BR', 'João Silva\nASTRO Brasil\nAvenida Paulista, 1000\nBela Vista\nSão Paulo - SP\n01310-100\nBrazil', 8),
('AU_FORMAT', '{name}\n{company}\n{street_number} {street_address}\n{city} {state} {postal_code}\n{country}', 'name,company,street_number,street_address,city,state,postal_code,country', 'name,street_address,city,state,postal_code', 'after_state', 'AU', 'Bruce Jones\nASTRO Australia\n100 George Street\nSydney NSW 2000\nAustralia', 9),
('CA_FORMAT', '{name}\n{company}\n{street_number} {street_address}\n{city} {state} {postal_code}\n{country}', 'name,company,street_number,street_address,city,state,postal_code,country', 'name,street_address,city,state,postal_code', 'after_state', 'CA', 'Robert Brown\nASTRO Canada\n123 Queen Street\nToronto ON M5V 3A8\nCanada', 10),
('IT_FORMAT', '{name}\n{company}\n{street_address} {street_number}\n{postal_code} {city} {state}\n{country}', 'name,company,street_address,street_number,postal_code,city,state,country', 'name,street_address,street_number,postal_code,city', 'before_city', 'IT', 'Mario Rossi\nASTRO Italia\nVia Roma 10\n00100 Roma RM\nItaly', 11),
('RU_FORMAT', '{country}\n{postal_code}\n{state}\n{city}\n{street_address}, {street_number}\n{company}\n{name}', 'country,postal_code,state,city,street_address,street_number,company,name', 'postal_code,city,street_address,name', 'after_country', 'RU', 'Россия\n119019\nМосква\nг. Москва\nул. Арбат, 1\nASTRO Россия\nИванов Иван', 12),
('KR_FORMAT', '{country}\n{state} {city} {district}\n{street_address}\n{company}\n{name}\n{postal_code}', 'country,state,city,district,street_address,company,name,postal_code', 'state,city,street_address,name,postal_code', 'last', 'KR', '대한민국\n서울특별시 강남구 테헤란로\n123번지\nASTRO 코리아\n김철수\n06236', 13),
('IN_FORMAT', '{name}\n{company}\n{street_address}\n{area}\n{city} - {postal_code}\n{state}\n{country}', 'name,company,street_address,area,city,postal_code,state,country', 'name,street_address,city,postal_code,state', 'after_city', 'IN', 'Raj Patel\nASTRO India\n123, MG Road\nBandra West\nMumbai - 400050\nMaharashtra\nIndia', 14),
('MX_FORMAT', '{name}\n{company}\n{street_address} {street_number}\n{district}\n{postal_code} {city}, {state}\n{country}', 'name,company,street_address,street_number,district,postal_code,city,state,country', 'name,street_address,street_number,postal_code,city,state', 'before_city', 'MX', 'Juan Hernández\nASTRO México\nAvenida Reforma 250\nColonia Juárez\n06600 Ciudad de México, CDMX\nMéxico', 15),
('NL_FORMAT', '{name}\n{company}\n{street_address} {street_number}\n{postal_code} {city}\n{country}', 'name,company,street_address,street_number,postal_code,city,country', 'name,street_address,street_number,postal_code,city', 'before_city', 'NL', 'Jan van der Berg\nASTRO Nederland\nKeizersgracht 100\n1015 CN Amsterdam\nNetherlands', 16),
('SE_FORMAT', '{name}\n{company}\n{street_address} {street_number}\n{postal_code} {city}\n{country}', 'name,company,street_address,street_number,postal_code,city,country', 'name,street_address,street_number,postal_code,city', 'before_city', 'SE', 'Erik Andersson\nASTRO Sverige\nDrottninggatan 50\n111 21 Stockholm\nSweden', 17),
('AR_FORMAT', '{name}\n{company}\n{street_address} {street_number}\n{postal_code} {city}\n{state}\n{country}', 'name,company,street_address,street_number,postal_code,city,state,country', 'name,street_address,street_number,postal_code,city', 'before_city', 'AR', 'María González\nASTRO Argentina\nAvenida Corrientes 1234\nC1043AAZ Buenos Aires\nBuenos Aires\nArgentina', 18),
('ZA_FORMAT', '{name}\n{company}\n{street_number} {street_address}\n{suburb}\n{city}\n{postal_code}\n{country}', 'name,company,street_number,street_address,suburb,city,postal_code,country', 'name,street_address,city,postal_code', 'after_city', 'ZA', 'Thabo Mbeki\nASTRO South Africa\n123 Nelson Mandela Avenue\nSandton\nJohannesburg\n2196\nSouth Africa', 19),
('TH_FORMAT', '{name}\n{company}\n{street_number} {street_address}\n{district}, {city}\n{state} {postal_code}\n{country}', 'name,company,street_number,street_address,district,city,state,postal_code,country', 'name,street_address,city,postal_code', 'after_state', 'TH', 'สมชาย ใจดี\nASTRO ประเทศไทย\n999 ถนนพหลโยธิน\nจตุจักร, กรุงเทพมหานคร\nกรุงเทพมหานคร 10900\nประเทศไทย', 20),
('ID_FORMAT', '{name}\n{company}\n{street_address} No. {street_number}\n{district}\n{city} {postal_code}\n{state}\n{country}', 'name,company,street_address,street_number,district,city,postal_code,state,country', 'name,street_address,city,postal_code', 'after_city', 'ID', 'Budi Santoso\nASTRO Indonesia\nJalan Sudirman No. 100\nKebayoran Baru\nJakarta 12190\nDKI Jakarta\nIndonesia', 21),
('TR_FORMAT', '{name}\n{company}\n{street_address} No:{street_number}\n{district}\n{postal_code} {city}/{state}\n{country}', 'name,company,street_address,street_number,district,postal_code,city,state,country', 'name,street_address,street_number,postal_code,city', 'before_city', 'TR', 'Ahmet Yılmaz\nASTRO Türkiye\nİstiklal Caddesi No:100\nBeyoğlu\n34430 İstanbul/İstanbul\nTürkiye', 22),
('PL_FORMAT', '{name}\n{company}\n{street_address} {street_number}\n{postal_code} {city}\n{country}', 'name,company,street_address,street_number,postal_code,city,country', 'name,street_address,street_number,postal_code,city', 'before_city', 'PL', 'Jan Kowalski\nASTRO Polska\nul. Marszałkowska 100\n00-001 Warszawa\nPoland', 23),
('VN_FORMAT', '{name}\n{company}\n{street_number} {street_address}\n{ward}, {district}\n{city}\n{country}', 'name,company,street_number,street_address,ward,district,city,country', 'name,street_address,district,city', 'none', 'VN', 'Nguyễn Văn A\nASTRO Việt Nam\n123 Đường Nguyễn Huệ\nPhường Bến Nghé, Quận 1\nThành phố Hồ Chí Minh\nViệt Nam', 24),
('SG_FORMAT', '{name}\n{company}\n{street_address}\n{unit_number}\nSingapore {postal_code}', 'name,company,street_address,unit_number,postal_code', 'name,street_address,postal_code', 'after_country_name', 'SG', 'Lee Wei Ming\nASTRO Singapore\n1 Raffles Place\n#50-01\nSingapore 048616', 25),
('PH_FORMAT', '{name}\n{company}\n{unit_number} {street_address}\n{barangay}, {city}\n{postal_code} {state}\n{country}', 'name,company,unit_number,street_address,barangay,city,postal_code,state,country', 'name,street_address,city,state', 'before_state', 'PH', 'Juan dela Cruz\nASTRO Philippines\nUnit 2501 Ayala Avenue\nBel-Air, Makati City\n1209 Metro Manila\nPhilippines', 26),
('MY_FORMAT', '{name}\n{company}\n{street_number}, {street_address}\n{postal_code} {city}\n{state}\n{country}', 'name,company,street_number,street_address,postal_code,city,state,country', 'name,street_address,postal_code,city,state', 'before_city', 'MY', 'Ahmad bin Ibrahim\nASTRO Malaysia\n100, Jalan Sultan Ismail\n50250 Kuala Lumpur\nWilayah Persekutuan\nMalaysia', 27),
('EG_FORMAT', '{name}\n{company}\n{street_number} {street_address}\n{district}\n{city}\n{postal_code}\n{country}', 'name,company,street_number,street_address,district,city,postal_code,country', 'name,street_address,city', 'after_city', 'EG', 'أحمد محمد\nASTRO مصر\n10 شارع التحرير\nالدقي\nالقاهرة\n12611\nمصر', 28),
('NG_FORMAT', '{name}\n{company}\n{street_number} {street_address}\n{area}\n{city}, {state}\n{postal_code}\n{country}', 'name,company,street_number,street_address,area,city,state,postal_code,country', 'name,street_address,city,state', 'after_state', 'NG', 'Adewale Okonkwo\nASTRO Nigeria\n25 Marina Road\nVictoria Island\nLagos, Lagos State\n101233\nNigeria', 29),
('CL_FORMAT', '{name}\n{company}\n{street_address} {street_number}\n{postal_code} {city}\n{state}\n{country}', 'name,company,street_address,street_number,postal_code,city,state,country', 'name,street_address,street_number,city', 'before_city', 'CL', 'Pedro Fernández\nASTRO Chile\nAvenida Providencia 1234\n7500000 Santiago\nRegión Metropolitana\nChile', 30);

CREATE TABLE name_format (
    name_format_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    format_code VARCHAR(50) NOT NULL,
    format_pattern VARCHAR(100) NOT NULL,
    format_description VARCHAR(255) NOT NULL,
    name_order VARCHAR(50) NOT NULL,
    title_position VARCHAR(20) NOT NULL DEFAULT 'before',
    suffix_position VARCHAR(20) NOT NULL DEFAULT 'after',
    middle_name_format VARCHAR(20) NOT NULL DEFAULT 'full',
    locale_code VARCHAR(10) NULL,
    country_code CHAR(2) NULL,
    is_default TINYINT(1) NOT NULL DEFAULT 0,
    display_order INT NOT NULL DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL DEFAULT 1,
    updated_at TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    is_active TINYINT(1) NOT NULL DEFAULT 1,
    PRIMARY KEY (name_format_id),
    UNIQUE KEY uk_name_format_code (format_code),
    KEY idx_name_format_locale (locale_code),
    KEY idx_name_format_country (country_code),
    KEY idx_name_format_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Name display formats by culture';

INSERT INTO name_format (format_code, format_pattern, format_description, name_order, title_position, suffix_position, middle_name_format, locale_code, country_code, is_default, display_order) VALUES
('WESTERN_FORMAL', '{title} {first_name} {middle_name} {last_name} {suffix}', 'Western formal (Mr. John Michael Smith Jr.)', 'first_last', 'before', 'after', 'full', 'en-US', 'US', 1, 1),
('WESTERN_INFORMAL', '{first_name} {last_name}', 'Western informal (John Smith)', 'first_last', 'none', 'none', 'none', 'en-US', 'US', 0, 2),
('WESTERN_INITIAL', '{first_name} {middle_initial}. {last_name}', 'Western with middle initial (John M. Smith)', 'first_last', 'none', 'after', 'initial', 'en-US', 'US', 0, 3),
('EASTERN_FORMAL', '{last_name} {first_name} {title}', 'Eastern formal (Smith John Mr.)', 'last_first', 'after', 'none', 'none', 'ja-JP', 'JP', 0, 4),
('JAPANESE_FORMAL', '{last_name} {first_name} {honorific}', 'Japanese formal (山田太郎様)', 'last_first', 'none', 'after', 'none', 'ja-JP', 'JP', 0, 5),
('CHINESE_FORMAL', '{last_name}{first_name} {title}', 'Chinese formal (张伟 先生)', 'last_first', 'after', 'none', 'none', 'zh-CN', 'CN', 0, 6),
('KOREAN_FORMAL', '{last_name} {first_name} {honorific}', 'Korean formal (김철수 님)', 'last_first', 'none', 'after', 'none', 'ko-KR', 'KR', 0, 7),
('SPANISH_FORMAL', '{title} {first_name} {paternal_surname} {maternal_surname}', 'Spanish formal (Sr. Juan García López)', 'first_last', 'before', 'none', 'none', 'es-ES', 'ES', 0, 8),
('PORTUGUESE_FORMAL', '{title} {first_name} {middle_name} {last_name}', 'Portuguese formal (Sr. João Carlos Silva)', 'first_last', 'before', 'none', 'full', 'pt-BR', 'BR', 0, 9),
('GERMAN_FORMAL', '{title} {first_name} {last_name}', 'German formal (Herr Hans Mueller)', 'first_last', 'before', 'none', 'none', 'de-DE', 'DE', 0, 10),
('FRENCH_FORMAL', '{title} {first_name} {last_name}', 'French formal (M. Jean Dupont)', 'first_last', 'before', 'none', 'none', 'fr-FR', 'FR', 0, 11),
('ITALIAN_FORMAL', '{title} {first_name} {last_name}', 'Italian formal (Sig. Mario Rossi)', 'first_last', 'before', 'none', 'none', 'it-IT', 'IT', 0, 12),
('RUSSIAN_FORMAL', '{last_name} {first_name} {patronymic}', 'Russian formal (Иванов Иван Иванович)', 'last_first', 'none', 'none', 'patronymic', 'ru-RU', 'RU', 0, 13),
('ARABIC_FORMAL', '{title} {first_name} {father_name} {family_name}', 'Arabic formal (السيد أحمد بن محمد آل سعود)', 'first_last', 'before', 'none', 'patronymic', 'ar-SA', 'SA', 0, 14),
('INDIAN_FORMAL', '{title} {first_name} {middle_name} {last_name}', 'Indian formal (Shri Rajesh Kumar Sharma)', 'first_last', 'before', 'none', 'full', 'hi-IN', 'IN', 0, 15),
('DUTCH_FORMAL', '{title} {first_name} {prefix} {last_name}', 'Dutch formal (Dhr. Jan van der Berg)', 'first_last', 'before', 'none', 'prefix', 'nl-NL', 'NL', 0, 16),
('SWEDISH_FORMAL', '{first_name} {last_name}', 'Swedish formal (Erik Andersson)', 'first_last', 'none', 'none', 'none', 'sv-SE', 'SE', 0, 17),
('TURKISH_FORMAL', '{first_name} {last_name} {title}', 'Turkish formal (Ahmet Yılmaz Bey)', 'first_last', 'after', 'none', 'none', 'tr-TR', 'TR', 0, 18),
('POLISH_FORMAL', '{title} {first_name} {last_name}', 'Polish formal (Pan Jan Kowalski)', 'first_last', 'before', 'none', 'none', 'pl-PL', 'PL', 0, 19),
('THAI_FORMAL', '{title} {first_name} {last_name}', 'Thai formal (คุณสมชาย ใจดี)', 'first_last', 'before', 'none', 'none', 'th-TH', 'TH', 0, 20),
('VIETNAMESE_FORMAL', '{last_name} {middle_name} {first_name}', 'Vietnamese formal (Nguyễn Văn An)', 'last_first', 'none', 'none', 'full', 'vi-VN', 'VN', 0, 21),
('INDONESIAN_FORMAL', '{title} {first_name} {last_name}', 'Indonesian formal (Bapak Budi Santoso)', 'first_last', 'before', 'none', 'none', 'id-ID', 'ID', 0, 22),
('FILIPINO_FORMAL', '{title} {first_name} {middle_initial}. {last_name} {suffix}', 'Filipino formal (Mr. Juan C. dela Cruz Jr.)', 'first_last', 'before', 'after', 'initial', 'fil-PH', 'PH', 0, 23),
('MALAY_FORMAL', '{title} {first_name} bin/binti {father_name}', 'Malay formal (Encik Ahmad bin Ibrahim)', 'first_last', 'before', 'none', 'patronymic', 'ms-MY', 'MY', 0, 24),
('HEBREW_FORMAL', '{first_name} {last_name}', 'Hebrew formal (דוד כהן)', 'first_last', 'none', 'none', 'none', 'he-IL', 'IL', 0, 25),
('GREEK_FORMAL', '{title} {first_name} {last_name}', 'Greek formal (Κύριος Γιώργος Παπαδόπουλος)', 'first_last', 'before', 'none', 'none', 'el-GR', 'GR', 0, 26),
('FINNISH_FORMAL', '{first_name} {last_name}', 'Finnish formal (Matti Virtanen)', 'first_last', 'none', 'none', 'none', 'fi-FI', 'FI', 0, 27),
('DANISH_FORMAL', '{first_name} {last_name}', 'Danish formal (Lars Jensen)', 'first_last', 'none', 'none', 'none', 'da-DK', 'DK', 0, 28),
('NORWEGIAN_FORMAL', '{first_name} {last_name}', 'Norwegian formal (Ole Hansen)', 'first_last', 'none', 'none', 'none', 'no-NO', 'NO', 0, 29),
('ICELANDIC_FORMAL', '{first_name} {patronymic}', 'Icelandic formal (Jón Einarsson)', 'first_last', 'none', 'none', 'patronymic', 'is-IS', 'IS', 0, 30);

CREATE TABLE phone_format (
    phone_format_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    format_code VARCHAR(50) NOT NULL,
    country_code CHAR(2) NOT NULL,
    country_calling_code VARCHAR(5) NOT NULL,
    national_format VARCHAR(50) NOT NULL,
    international_format VARCHAR(50) NOT NULL,
    mobile_prefix VARCHAR(50) NULL,
    trunk_prefix VARCHAR(5) NULL,
    format_example_national VARCHAR(50) NOT NULL,
    format_example_international VARCHAR(50) NOT NULL,
    display_order INT NOT NULL DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL DEFAULT 1,
    updated_at TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    is_active TINYINT(1) NOT NULL DEFAULT 1,
    PRIMARY KEY (phone_format_id),
    UNIQUE KEY uk_phone_format_code (format_code),
    KEY idx_phone_format_country (country_code),
    KEY idx_phone_format_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Phone number formats by country';

INSERT INTO phone_format (format_code, country_code, country_calling_code, national_format, international_format, mobile_prefix, trunk_prefix, format_example_national, format_example_international, display_order) VALUES
('US_FORMAT', 'US', '+1', '(###) ###-####', '+1 ###-###-####', NULL, '1', '(212) 555-1234', '+1 212-555-1234', 1),
('UK_FORMAT', 'GB', '+44', '#### ### ####', '+44 #### ### ####', '7', '0', '0207 123 4567', '+44 207 123 4567', 2),
('DE_FORMAT', 'DE', '+49', '#### #######', '+49 #### #######', '15,16,17', '0', '0301 1234567', '+49 301 1234567', 3),
('JP_FORMAT', 'JP', '+81', '##-####-####', '+81 ##-####-####', '70,80,90', '0', '03-1234-5678', '+81 3-1234-5678', 4),
('CN_FORMAT', 'CN', '+86', '### #### ####', '+86 ### #### ####', '13,14,15,17,18,19', '0', '010 1234 5678', '+86 10 1234 5678', 5),
('FR_FORMAT', 'FR', '+33', '## ## ## ## ##', '+33 # ## ## ## ##', '6,7', '0', '01 23 45 67 89', '+33 1 23 45 67 89', 6),
('ES_FORMAT', 'ES', '+34', '### ## ## ##', '+34 ### ## ## ##', '6,7', NULL, '912 34 56 78', '+34 912 34 56 78', 7),
('BR_FORMAT', 'BR', '+55', '(##) ####-####', '+55 ## ####-####', '9', '0', '(11) 1234-5678', '+55 11 1234-5678', 8),
('AU_FORMAT', 'AU', '+61', '#### ### ###', '+61 # #### ####', '4', '0', '0412 345 678', '+61 4 1234 5678', 9),
('CA_FORMAT', 'CA', '+1', '(###) ###-####', '+1 ###-###-####', NULL, '1', '(416) 555-1234', '+1 416-555-1234', 10),
('IT_FORMAT', 'IT', '+39', '### ### ####', '+39 ### ### ####', '3', NULL, '345 678 9012', '+39 345 678 9012', 11),
('RU_FORMAT', 'RU', '+7', '(###) ###-##-##', '+7 ### ###-##-##', '9', '8', '8(495) 123-45-67', '+7 495 123-45-67', 12),
('KR_FORMAT', 'KR', '+82', '##-####-####', '+82 ##-####-####', '10', '0', '02-1234-5678', '+82 2-1234-5678', 13),
('IN_FORMAT', 'IN', '+91', '##### #####', '+91 ##### #####', '7,8,9', '0', '98765 43210', '+91 98765 43210', 14),
('MX_FORMAT', 'MX', '+52', '## #### ####', '+52 ## #### ####', NULL, '01,02,03', '55 1234 5678', '+52 55 1234 5678', 15),
('NL_FORMAT', 'NL', '+31', '## ### ## ##', '+31 ## ### ## ##', '6', '0', '06 123 45 678', '+31 6 123 45 678', 16),
('SE_FORMAT', 'SE', '+46', '##-### ## ##', '+46 ##-### ## ##', '7', '0', '08-123 45 67', '+46 8-123 45 67', 17),
('AR_FORMAT', 'AR', '+54', '## ####-####', '+54 ## ####-####', NULL, '0', '11 1234-5678', '+54 11 1234-5678', 18),
('ZA_FORMAT', 'ZA', '+27', '## ### ####', '+27 ## ### ####', '7,8', '0', '021 123 4567', '+27 21 123 4567', 19),
('TH_FORMAT', 'TH', '+66', '## ### ####', '+66 ## ### ####', '8,9', '0', '02 123 4567', '+66 2 123 4567', 20),
('ID_FORMAT', 'ID', '+62', '###-###-####', '+62 ###-###-####', '8', '0', '0812-345-6789', '+62 812-345-6789', 21),
('TR_FORMAT', 'TR', '+90', '### ### ## ##', '+90 ### ### ## ##', '5', '0', '0532 123 45 67', '+90 532 123 45 67', 22),
('PL_FORMAT', 'PL', '+48', '## ### ## ##', '+48 ## ### ## ##', '5,6,7,8', NULL, '22 123 45 67', '+48 22 123 45 67', 23),
('VN_FORMAT', 'VN', '+84', '## ### ####', '+84 ## ### ####', '9', '0', '024 1234 5678', '+84 24 1234 5678', 24),
('SG_FORMAT', 'SG', '+65', '#### ####', '+65 #### ####', '8,9', NULL, '6123 4567', '+65 6123 4567', 25),
('PH_FORMAT', 'PH', '+63', '### ### ####', '+63 ### ### ####', '9', '0', '0917 123 4567', '+63 917 123 4567', 26),
('MY_FORMAT', 'MY', '+60', '##-### ####', '+60 ##-### ####', '1', '0', '012-345 6789', '+60 12-345 6789', 27),
('EG_FORMAT', 'EG', '+20', '## ### ####', '+20 ## ### ####', '10,11,12', '0', '010 123 4567', '+20 10 123 4567', 28),
('NG_FORMAT', 'NG', '+234', '### ### ####', '+234 ### ### ####', '70,80,81,90', '0', '0802 123 4567', '+234 802 123 4567', 29),
('CL_FORMAT', 'CL', '+56', '# #### ####', '+56 # #### ####', '9', NULL, '9 1234 5678', '+56 9 1234 5678', 30);

CREATE TABLE time_format (
    time_format_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    format_code VARCHAR(50) NOT NULL,
    format_pattern VARCHAR(50) NOT NULL,
    format_24h TINYINT(1) NOT NULL DEFAULT 0,
    format_example VARCHAR(50) NOT NULL,
    format_description VARCHAR(255) NOT NULL,
    locale_code VARCHAR(10) NULL,
    country_code CHAR(2) NULL,
    is_default TINYINT(1) NOT NULL DEFAULT 0,
    display_order INT NOT NULL DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL DEFAULT 1,
    updated_at TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    is_active TINYINT(1) NOT NULL DEFAULT 1,
    PRIMARY KEY (time_format_id),
    UNIQUE KEY uk_time_format_code (format_code),
    KEY idx_time_format_locale (locale_code),
    KEY idx_time_format_country (country_code),
    KEY idx_time_format_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Time display formats';

INSERT INTO time_format (format_code, format_pattern, format_24h, format_example, format_description, locale_code, country_code, is_default, display_order) VALUES
('TIME_24H', 'HH:mm:ss', 1, '23:59:59', '24-hour format with seconds', NULL, NULL, 1, 1),
('TIME_24H_SHORT', 'HH:mm', 1, '23:59', '24-hour format without seconds', NULL, NULL, 0, 2),
('TIME_12H_AM_PM', 'hh:mm:ss A', 0, '11:59:59 PM', '12-hour format with AM/PM', 'en-US', 'US', 0, 3),
('TIME_12H_SHORT', 'hh:mm A', 0, '11:59 PM', '12-hour format without seconds', 'en-US', 'US', 0, 4),
('TIME_24H_DOT', 'HH.mm.ss', 1, '23.59.59', '24-hour with dots', 'fi-FI', 'FI', 0, 5),
('TIME_24H_H', 'HH:mm:ss h', 1, '23:59:59 h', '24-hour with h suffix', 'es-ES', 'ES', 0, 6),
('TIME_12H_LOWERCASE', 'hh:mm:ss a', 0, '11:59:59 pm', '12-hour with lowercase am/pm', 'en-GB', 'GB', 0, 7),
('TIME_24H_UHR', 'HH:mm Uhr', 1, '23:59 Uhr', '24-hour German format', 'de-DE', 'DE', 0, 8),
('TIME_JP_12H', 'ahh時mm分ss秒', 0, '午後11時59分59秒', 'Japanese 12-hour format', 'ja-JP', 'JP', 0, 9),
('TIME_CN_24H', 'HH时mm分ss秒', 1, '23时59分59秒', 'Chinese 24-hour format', 'zh-CN', 'CN', 0, 10),
('TIME_KR_12H', 'a hh시 mm분 ss초', 0, '오후 11시 59분 59초', 'Korean 12-hour format', 'ko-KR', 'KR', 0, 11),
('TIME_AR_12H', 'hh:mm:ss ص/م', 0, '11:59:59 م', 'Arabic 12-hour format', 'ar-SA', 'SA', 0, 12),
('TIME_IN_12H', 'hh:mm:ss A', 0, '11:59:59 PM', 'Indian 12-hour format', 'hi-IN', 'IN', 0, 13),
('TIME_FR_24H', 'HH h mm min ss s', 1, '23 h 59 min 59 s', 'French 24-hour format', 'fr-FR', 'FR', 0, 14),
('TIME_IT_24H', 'HH:mm:ss', 1, '23:59:59', 'Italian 24-hour format', 'it-IT', 'IT', 0, 15),
('TIME_RU_24H', 'HH:mm:ss', 1, '23:59:59', 'Russian 24-hour format', 'ru-RU', 'RU', 0, 16),
('TIME_BR_24H', 'HH:mm:ss', 1, '23:59:59', 'Brazilian 24-hour format', 'pt-BR', 'BR', 0, 17),
('TIME_AU_12H', 'hh:mm:ss A', 0, '11:59:59 PM', 'Australian 12-hour format', 'en-AU', 'AU', 0, 18),
('TIME_CA_12H', 'hh:mm:ss A', 0, '11:59:59 PM', 'Canadian 12-hour format', 'en-CA', 'CA', 0, 19),
('TIME_MX_12H', 'hh:mm:ss a', 0, '11:59:59 pm', 'Mexican 12-hour format', 'es-MX', 'MX', 0, 20),
('TIME_NL_24H', 'HH:mm:ss', 1, '23:59:59', 'Dutch 24-hour format', 'nl-NL', 'NL', 0, 21),
('TIME_SE_24H', 'HH:mm:ss', 1, '23:59:59', 'Swedish 24-hour format', 'sv-SE', 'SE', 0, 22),
('TIME_NO_24H', 'HH:mm:ss', 1, '23:59:59', 'Norwegian 24-hour format', 'no-NO', 'NO', 0, 23),
('TIME_DK_24H', 'HH.mm.ss', 1, '23.59.59', 'Danish 24-hour format', 'da-DK', 'DK', 0, 24),
('TIME_PL_24H', 'HH:mm:ss', 1, '23:59:59', 'Polish 24-hour format', 'pl-PL', 'PL', 0, 25),
('TIME_TR_24H', 'HH:mm:ss', 1, '23:59:59', 'Turkish 24-hour format', 'tr-TR', 'TR', 0, 26),
('TIME_ID_24H', 'HH.mm.ss', 1, '23.59.59', 'Indonesian 24-hour format', 'id-ID', 'ID', 0, 27),
('TIME_TH_24H', 'HH:mm:ss น.', 1, '23:59:59 น.', 'Thai 24-hour format', 'th-TH', 'TH', 0, 28),
('TIME_VN_24H', 'HH:mm:ss', 1, '23:59:59', 'Vietnamese 24-hour format', 'vi-VN', 'VN', 0, 29),
('TIME_PH_12H', 'hh:mm:ss A', 0, '11:59:59 PM', 'Philippine 12-hour format', 'en-PH', 'PH', 0, 30);

CREATE TABLE currency_format (
    currency_format_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    format_code VARCHAR(50) NOT NULL,
    currency_code CHAR(3) NOT NULL,
    symbol_position VARCHAR(10) NOT NULL DEFAULT 'before',
    symbol_spacing TINYINT(1) NOT NULL DEFAULT 0,
    decimal_digits TINYINT NOT NULL DEFAULT 2,
    positive_pattern VARCHAR(20) NOT NULL,
    negative_pattern VARCHAR(20) NOT NULL,
    format_example_positive VARCHAR(50) NOT NULL,
    format_example_negative VARCHAR(50) NOT NULL,
    locale_code VARCHAR(10) NULL,
    country_code CHAR(2) NULL,
    display_order INT NOT NULL DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL DEFAULT 1,
    updated_at TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    is_active TINYINT(1) NOT NULL DEFAULT 1,
    PRIMARY KEY (currency_format_id),
    UNIQUE KEY uk_currency_format_code (format_code),
    KEY idx_currency_format_currency (currency_code),
    KEY idx_currency_format_locale (locale_code),
    KEY idx_currency_format_country (country_code),
    KEY idx_currency_format_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Currency display formats';

INSERT INTO currency_format (format_code, currency_code, symbol_position, symbol_spacing, decimal_digits, positive_pattern, negative_pattern, format_example_positive, format_example_negative, locale_code, country_code, display_order) VALUES
('USD_STANDARD', 'USD', 'before', 0, 2, '$#', '-$#', '$1,234.56', '-$1,234.56', 'en-US', 'US', 1),
('EUR_STANDARD', 'EUR', 'before', 0, 2, '€#', '-€#', '€1,234.56', '-€1,234.56', NULL, NULL, 2),
('GBP_STANDARD', 'GBP', 'before', 0, 2, '£#', '-£#', '£1,234.56', '-£1,234.56', 'en-GB', 'GB', 3),
('EUR_DE', 'EUR', 'after', 1, 2, '# €', '-# €', '1.234,56 €', '-1.234,56 €', 'de-DE', 'DE', 4),
('JPY_STANDARD', 'JPY', 'before', 0, 0, '¥#', '-¥#', '¥1,234', '-¥1,234', 'ja-JP', 'JP', 5),
('CNY_STANDARD', 'CNY', 'before', 0, 2, '¥#', '-¥#', '¥1,234.56', '-¥1,234.56', 'zh-CN', 'CN', 6),
('KRW_STANDARD', 'KRW', 'before', 0, 0, '₩#', '-₩#', '₩1,234', '-₩1,234', 'ko-KR', 'KR', 7),
('EUR_FR', 'EUR', 'after', 1, 2, '# €', '-# €', '1 234,56 €', '-1 234,56 €', 'fr-FR', 'FR', 8),
('EUR_ES', 'EUR', 'after', 1, 2, '# €', '-# €', '1.234,56 €', '-1.234,56 €', 'es-ES', 'ES', 9),
('BRL_STANDARD', 'BRL', 'before', 1, 2, 'R$ #', '-R$ #', 'R$ 1.234,56', '-R$ 1.234,56', 'pt-BR', 'BR', 10),
('RUB_STANDARD', 'RUB', 'after', 1, 2, '# ₽', '-# ₽', '1 234,56 ₽', '-1 234,56 ₽', 'ru-RU', 'RU', 11),
('SAR_STANDARD', 'SAR', 'after', 1, 2, '# ر.س', '# ر.س-', '١٬٢٣٤٫٥٦ ر.س', '١٬٢٣٤٫٥٦ ر.س-', 'ar-SA', 'SA', 12),
('INR_STANDARD', 'INR', 'before', 0, 2, '₹#', '-₹#', '₹1,234.56', '-₹1,234.56', 'hi-IN', 'IN', 13),
('AUD_STANDARD', 'AUD', 'before', 0, 2, '$#', '-$#', '$1,234.56', '-$1,234.56', 'en-AU', 'AU', 14),
('CAD_STANDARD', 'CAD', 'before', 0, 2, '$#', '-$#', '$1,234.56', '-$1,234.56', 'en-CA', 'CA', 15),
('MXN_STANDARD', 'MXN', 'before', 0, 2, '$#', '-$#', '$1,234.56', '-$1,234.56', 'es-MX', 'MX', 16),
('EUR_IT', 'EUR', 'after', 1, 2, '# €', '-# €', '1.234,56 €', '-1.234,56 €', 'it-IT', 'IT', 17),
('EUR_NL', 'EUR', 'before', 1, 2, '€ #', '-€ #', '€ 1.234,56', '-€ 1.234,56', 'nl-NL', 'NL', 18),
('SEK_STANDARD', 'SEK', 'after', 1, 2, '# kr', '-# kr', '1 234,56 kr', '-1 234,56 kr', 'sv-SE', 'SE', 19),
('NOK_STANDARD', 'NOK', 'after', 1, 2, '# kr', '-# kr', '1 234,56 kr', '-1 234,56 kr', 'no-NO', 'NO', 20),
('DKK_STANDARD', 'DKK', 'after', 1, 2, '# kr', '-# kr', '1.234,56 kr', '-1.234,56 kr', 'da-DK', 'DK', 21),
('PLN_STANDARD', 'PLN', 'after', 1, 2, '# zł', '-# zł', '1 234,56 zł', '-1 234,56 zł', 'pl-PL', 'PL', 22),
('TRY_STANDARD', 'TRY', 'before', 0, 2, '₺#', '-₺#', '₺1.234,56', '-₺1.234,56', 'tr-TR', 'TR', 23),
('IDR_STANDARD', 'IDR', 'before', 1, 0, 'Rp #', '-Rp #', 'Rp 1.234', '-Rp 1.234', 'id-ID', 'ID', 24),
('THB_STANDARD', 'THB', 'before', 0, 2, '฿#', '-฿#', '฿1,234.56', '-฿1,234.56', 'th-TH', 'TH', 25),
('VND_STANDARD', 'VND', 'after', 1, 0, '# ₫', '-# ₫', '1.234 ₫', '-1.234 ₫', 'vi-VN', 'VN', 26),
('PHP_STANDARD', 'PHP', 'before', 0, 2, '₱#', '-₱#', '₱1,234.56', '-₱1,234.56', 'en-PH', 'PH', 27),
('SGD_STANDARD', 'SGD', 'before', 0, 2, '$#', '-$#', '$1,234.56', '-$1,234.56', 'en-SG', 'SG', 28),
('MYR_STANDARD', 'MYR', 'before', 0, 2, 'RM#', '-RM#', 'RM1,234.56', '-RM1,234.56', 'ms-MY', 'MY', 29),
('ZAR_STANDARD', 'ZAR', 'before', 1, 2, 'R #', '-R #', 'R 1,234.56', '-R 1,234.56', 'en-ZA', 'ZA', 30);

CREATE TABLE text_direction (
    text_direction_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    direction_code VARCHAR(10) NOT NULL,
    direction_name VARCHAR(50) NOT NULL,
    css_direction VARCHAR(10) NOT NULL,
    locale_code VARCHAR(10) NULL,
    language_code VARCHAR(10) NULL,
    is_default TINYINT(1) NOT NULL DEFAULT 0,
    display_order INT NOT NULL DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL DEFAULT 1,
    updated_at TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    is_active TINYINT(1) NOT NULL DEFAULT 1,
    PRIMARY KEY (text_direction_id),
    UNIQUE KEY uk_text_direction_code (direction_code),
    KEY idx_text_direction_locale (locale_code),
    KEY idx_text_direction_language (language_code),
    KEY idx_text_direction_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Text direction settings for languages';

INSERT INTO text_direction (direction_code, direction_name, css_direction, locale_code, language_code, is_default, display_order) VALUES
('LTR', 'Left to Right', 'ltr', NULL, NULL, 1, 1),
('RTL_AR', 'Right to Left - Arabic', 'rtl', 'ar-SA', 'ar', 0, 2),
('RTL_HE', 'Right to Left - Hebrew', 'rtl', 'he-IL', 'he', 0, 3),
('RTL_FA', 'Right to Left - Persian', 'rtl', 'fa-IR', 'fa', 0, 4),
('RTL_UR', 'Right to Left - Urdu', 'rtl', 'ur-PK', 'ur', 0, 5),
('RTL_PS', 'Right to Left - Pashto', 'rtl', 'ps-AF', 'ps', 0, 6),
('RTL_SD', 'Right to Left - Sindhi', 'rtl', 'sd-PK', 'sd', 0, 7),
('RTL_KU', 'Right to Left - Kurdish', 'rtl', 'ku-IQ', 'ku', 0, 8),
('RTL_DV', 'Right to Left - Divehi', 'rtl', 'dv-MV', 'dv', 0, 9),
('RTL_YI', 'Right to Left - Yiddish', 'rtl', 'yi-IL', 'yi', 0, 10),
('TTB_MN', 'Top to Bottom - Mongolian', 'ttb', 'mn-MN', 'mn', 0, 11),
('TTB_JA', 'Top to Bottom - Japanese', 'ttb', 'ja-JP', 'ja', 0, 12),
('TTB_ZH', 'Top to Bottom - Chinese', 'ttb', 'zh-TW', 'zh', 0, 13),
('BIDI_MIX', 'Bidirectional Mixed', 'auto', NULL, NULL, 0, 14),
('LTR_EN', 'Left to Right - English', 'ltr', 'en-US', 'en', 0, 15);

CREATE TABLE week_start_day (
    week_start_day_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    day_code VARCHAR(10) NOT NULL,
    day_number TINYINT NOT NULL,
    day_name VARCHAR(20) NOT NULL,
    country_codes TEXT NULL,
    is_default TINYINT(1) NOT NULL DEFAULT 0,
    display_order INT NOT NULL DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL DEFAULT 1,
    updated_at TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    is_active TINYINT(1) NOT NULL DEFAULT 1,
    PRIMARY KEY (week_start_day_id),
    UNIQUE KEY uk_week_start_day_code (day_code),
    KEY idx_week_start_day_number (day_number),
    KEY idx_week_start_day_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Week starting day by region';

INSERT INTO week_start_day (day_code, day_number, day_name, country_codes, is_default, display_order) VALUES
('SUNDAY', 0, 'Sunday', 'US,CA,JP,KR,TH,TW,HK,MO,PH,IN,IL,MX,HN,NI,PA,PE,ZA,KE,GH', 1, 1),
('MONDAY', 1, 'Monday', 'GB,FR,DE,IT,ES,NL,BE,LU,AT,CH,DK,FI,NO,SE,IS,PL,CZ,SK,HU,RO,BG,GR,PT,IE,EE,LV,LT,SI,HR,RS,BA,ME,MK,AL,UA,BY,MD,RU,AU,NZ,CN,VN,ID,MY,SG', 0, 2),
('SATURDAY', 6, 'Saturday', 'AE,AF,BH,DJ,DZ,EG,IQ,IR,JO,KW,LY,OM,QA,SA,SD,SY,YE', 0, 3),
('FRIDAY', 5, 'Friday', 'MV', 0, 4);

CREATE TABLE calendar_system (
    calendar_system_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    calendar_code VARCHAR(50) NOT NULL,
    calendar_name VARCHAR(100) NOT NULL,
    calendar_type VARCHAR(50) NOT NULL,
    epoch_offset INT NULL,
    months_per_year TINYINT NOT NULL DEFAULT 12,
    locale_codes TEXT NULL,
    country_codes TEXT NULL,
    is_default TINYINT(1) NOT NULL DEFAULT 0,
    display_order INT NOT NULL DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL DEFAULT 1,
    updated_at TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    is_active TINYINT(1) NOT NULL DEFAULT 1,
    PRIMARY KEY (calendar_system_id),
    UNIQUE KEY uk_calendar_system_code (calendar_code),
    KEY idx_calendar_system_type (calendar_type),
    KEY idx_calendar_system_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Calendar systems by culture';

INSERT INTO calendar_system (calendar_code, calendar_name, calendar_type, epoch_offset, months_per_year, locale_codes, country_codes, is_default, display_order) VALUES
('GREGORIAN', 'Gregorian Calendar', 'solar', 0, 12, NULL, NULL, 1, 1),
('ISLAMIC_HIJRI', 'Islamic Calendar (Hijri)', 'lunar', -622, 12, 'ar-SA,ar-AE,ar-QA,ar-KW,ar-BH,ar-OM', 'SA,AE,QA,KW,BH,OM', 0, 2),
('JAPANESE_IMPERIAL', 'Japanese Imperial Calendar', 'solar', 0, 12, 'ja-JP', 'JP', 0, 3),
('CHINESE_LUNAR', 'Chinese Lunar Calendar', 'lunisolar', 0, 12, 'zh-CN,zh-TW,zh-HK', 'CN,TW,HK', 0, 4),
('HEBREW', 'Hebrew Calendar', 'lunisolar', -3760, 12, 'he-IL', 'IL', 0, 5),
('BUDDHIST', 'Buddhist Calendar', 'solar', 543, 12, 'th-TH', 'TH', 0, 6),
('ETHIOPIAN', 'Ethiopian Calendar', 'solar', 8, 13, 'am-ET', 'ET', 0, 7),
('COPTIC', 'Coptic Calendar', 'solar', 284, 13, 'cop-EG', 'EG', 0, 8),
('PERSIAN', 'Persian Calendar', 'solar', -621, 12, 'fa-IR', 'IR', 0, 9),
('INDIAN_NATIONAL', 'Indian National Calendar', 'solar', 78, 12, 'hi-IN', 'IN', 0, 10),
('KOREAN', 'Korean Calendar', 'lunisolar', 0, 12, 'ko-KR', 'KR', 0, 11),
('MINGUO', 'Minguo Calendar (ROC)', 'solar', -1911, 12, 'zh-TW', 'TW', 0, 12),
('JUCHE', 'Juche Calendar', 'solar', -1911, 12, 'ko-KP', 'KP', 0, 13),
('JULIAN', 'Julian Calendar', 'solar', 0, 12, NULL, NULL, 0, 14),
('BAHAI', 'Bahá\'í Calendar', 'solar', -1844, 19, NULL, NULL, 0, 15);

CREATE TABLE postal_code_format (
    postal_code_format_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    country_code CHAR(2) NOT NULL,
    format_pattern VARCHAR(50) NOT NULL,
    format_regex VARCHAR(100) NOT NULL,
    format_example VARCHAR(20) NOT NULL,
    format_description VARCHAR(255) NOT NULL,
    validation_api VARCHAR(255) NULL,
    display_order INT NOT NULL DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL DEFAULT 1,
    updated_at TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    is_active TINYINT(1) NOT NULL DEFAULT 1,
    PRIMARY KEY (postal_code_format_id),
    UNIQUE KEY uk_postal_code_country (country_code),
    KEY idx_postal_code_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Postal code formats by country';

INSERT INTO postal_code_format (country_code, format_pattern, format_regex, format_example, format_description, display_order) VALUES
('US', '#####-####', '^\\d{5}(-\\d{4})?$', '90210-1234', 'ZIP+4 format', 1),
('GB', 'AA#A #AA', '^[A-Z]{1,2}\\d[A-Z\\d]? ?\\d[A-Z]{2}$', 'SW1A 2AA', 'UK postcode format', 2),
('CA', 'A#A #A#', '^[A-Z]\\d[A-Z] ?\\d[A-Z]\\d$', 'M5V 3A8', 'Canadian postal code', 3),
('DE', '#####', '^\\d{5}$', '10115', 'German PLZ', 4),
('FR', '#####', '^\\d{5}$', '75001', 'French postal code', 5),
('JP', '###-####', '^\\d{3}-\\d{4}$', '100-0001', 'Japanese postal code', 6),
('AU', '####', '^\\d{4}$', '2000', 'Australian postcode', 7),
('CN', '######', '^\\d{6}$', '100000', 'Chinese postal code', 8),
('BR', '#####-###', '^\\d{5}-\\d{3}$', '01310-100', 'Brazilian CEP', 9),
('IN', '######', '^\\d{6}$', '400001', 'Indian PIN code', 10),
('RU', '######', '^\\d{6}$', '119019', 'Russian postal code', 11),
('IT', '#####', '^\\d{5}$', '00100', 'Italian CAP', 12),
('ES', '#####', '^\\d{5}$', '28001', 'Spanish postal code', 13),
('MX', '#####', '^\\d{5}$', '06600', 'Mexican postal code', 14),
('NL', '#### AA', '^\\d{4} ?[A-Z]{2}$', '1015 CN', 'Dutch postcode', 15),
('SE', '### ##', '^\\d{3} ?\\d{2}$', '111 21', 'Swedish postal code', 16),
('KR', '#####', '^\\d{5}$', '06236', 'Korean postal code', 17),
('AR', 'A####AAA', '^[A-Z]\\d{4}[A-Z]{3}$', 'C1043AAZ', 'Argentine postal code', 18),
('ZA', '####', '^\\d{4}$', '2196', 'South African postal code', 19),
('TH', '#####', '^\\d{5}$', '10900', 'Thai postal code', 20),
('ID', '#####', '^\\d{5}$', '12190', 'Indonesian postal code', 21),
('TR', '#####', '^\\d{5}$', '34430', 'Turkish postal code', 22),
('PL', '##-###', '^\\d{2}-\\d{3}$', '00-001', 'Polish postal code', 23),
('VN', '######', '^\\d{6}$', '700000', 'Vietnamese postal code', 24),
('SG', '######', '^\\d{6}$', '048616', 'Singapore postal code', 25),
('PH', '####', '^\\d{4}$', '1209', 'Philippine postal code', 26),
('MY', '#####', '^\\d{5}$', '50250', 'Malaysian postcode', 27),
('EG', '#####', '^\\d{5}$', '12611', 'Egyptian postal code', 28),
('NG', '######', '^\\d{6}$', '101233', 'Nigerian postal code', 29),
('CL', '#######', '^\\d{7}$', '7500000', 'Chilean postal code', 30);

CREATE TABLE locale_setting (
    locale_setting_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    locale_code VARCHAR(10) NOT NULL,
    locale_name VARCHAR(100) NOT NULL,
    language_code VARCHAR(10) NOT NULL,
    country_code CHAR(2) NULL,
    date_format_id INT UNSIGNED NOT NULL,
    time_format_id INT UNSIGNED NOT NULL,
    number_format_id INT UNSIGNED NOT NULL,
    currency_format_id INT UNSIGNED NOT NULL,
    name_format_id INT UNSIGNED NOT NULL,
    address_format_id INT UNSIGNED NOT NULL,
    phone_format_id INT UNSIGNED NOT NULL,
    week_start_day_id INT UNSIGNED NOT NULL,
    calendar_system_id INT UNSIGNED NOT NULL,
    text_direction_id INT UNSIGNED NOT NULL,
    is_default TINYINT(1) NOT NULL DEFAULT 0,
    display_order INT NOT NULL DEFAULT 0,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED NOT NULL DEFAULT 1,
    updated_at TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    is_active TINYINT(1) NOT NULL DEFAULT 1,
    PRIMARY KEY (locale_setting_id),
    UNIQUE KEY uk_locale_code (locale_code),
    KEY idx_locale_language (language_code),
    KEY idx_locale_country (country_code),
    KEY idx_locale_active (is_active),
    KEY fk_locale_date_format (date_format_id),
    KEY fk_locale_time_format (time_format_id),
    KEY fk_locale_number_format (number_format_id),
    KEY fk_locale_currency_format (currency_format_id),
    KEY fk_locale_name_format (name_format_id),
    KEY fk_locale_address_format (address_format_id),
    KEY fk_locale_phone_format (phone_format_id),
    KEY fk_locale_week_start (week_start_day_id),
    KEY fk_locale_calendar (calendar_system_id),
    KEY fk_locale_text_direction (text_direction_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Complete locale configurations';

INSERT INTO locale_setting (locale_code, locale_name, language_code, country_code, date_format_id, time_format_id, number_format_id, currency_format_id, name_format_id, address_format_id, phone_format_id, week_start_day_id, calendar_system_id, text_direction_id, is_default, display_order) VALUES
('en-US', 'English (United States)', 'en', 'US', 2, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1),
('en-GB', 'English (United Kingdom)', 'en', 'GB', 3, 7, 3, 3, 1, 2, 2, 2, 1, 1, 0, 2),
('de-DE', 'German (Germany)', 'de', 'DE', 4, 8, 4, 4, 10, 3, 3, 2, 1, 1, 0, 3),
('ja-JP', 'Japanese (Japan)', 'ja', 'JP', 5, 9, 6, 5, 5, 4, 4, 1, 3, 12, 0, 4),
('zh-CN', 'Chinese (China)', 'zh', 'CN', 6, 10, 7, 6, 6, 5, 5, 2, 4, 13, 0, 5),
('fr-FR', 'French (France)', 'fr', 'FR', 8, 14, 5, 8, 11, 6, 6, 2, 1, 1, 0, 6),
('es-ES', 'Spanish (Spain)', 'es', 'ES', 9, 6, 9, 9, 8, 7, 7, 2, 1, 1, 0, 7),
('pt-BR', 'Portuguese (Brazil)', 'pt', 'BR', 10, 17, 10, 10, 9, 8, 8, 1, 1, 1, 0, 8),
('ru-RU', 'Russian (Russia)', 'ru', 'RU', 11, 16, 11, 11, 13, 12, 12, 2, 1, 1, 0, 9),
('ar-SA', 'Arabic (Saudi Arabia)', 'ar', 'SA', 12, 12, 12, 12, 14, 10, 10, 3, 2, 2, 0, 10),
('hi-IN', 'Hindi (India)', 'hi', 'IN', 13, 13, 13, 13, 15, 14, 14, 1, 10, 1, 0, 11),
('ko-KR', 'Korean (South Korea)', 'ko', 'KR', 7, 11, 8, 7, 7, 13, 13, 1, 11, 1, 0, 12),
('it-IT', 'Italian (Italy)', 'it', 'IT', 17, 15, 17, 17, 12, 11, 11, 2, 1, 1, 0, 13),
('nl-NL', 'Dutch (Netherlands)', 'nl', 'NL', 18, 21, 18, 18, 16, 16, 16, 2, 1, 1, 0, 14),
('sv-SE', 'Swedish (Sweden)', 'sv', 'SE', 19, 22, 19, 19, 17, 17, 17, 2, 1, 1, 0, 15),
('pl-PL', 'Polish (Poland)', 'pl', 'PL', 23, 25, 23, 22, 19, 23, 23, 2, 1, 1, 0, 16),
('tr-TR', 'Turkish (Turkey)', 'tr', 'TR', 24, 26, 24, 23, 18, 22, 22, 2, 1, 1, 0, 17),
('th-TH', 'Thai (Thailand)', 'th', 'TH', 26, 28, 26, 25, 20, 20, 20, 1, 6, 1, 0, 18),
('vi-VN', 'Vietnamese (Vietnam)', 'vi', 'VN', 27, 29, 27, 26, 21, 24, 24, 2, 1, 1, 0, 19),
('id-ID', 'Indonesian (Indonesia)', 'id', 'ID', 25, 27, 25, 24, 22, 21, 21, 2, 1, 1, 0, 20),
('en-AU', 'English (Australia)', 'en', 'AU', 14, 18, 14, 14, 1, 9, 9, 2, 1, 1, 0, 21),
('en-CA', 'English (Canada)', 'en', 'CA', 15, 19, 15, 15, 1, 10, 10, 1, 1, 1, 0, 22),
('es-MX', 'Spanish (Mexico)', 'es', 'MX', 16, 20, 16, 16, 8, 15, 15, 1, 1, 1, 0, 23),
('en-ZA', 'English (South Africa)', 'en', 'ZA', 30, 30, 30, 30, 1, 19, 19, 1, 1, 1, 0, 24),
('en-SG', 'English (Singapore)', 'en', 'SG', 29, 28, 28, 28, 1, 25, 25, 2, 1, 1, 0, 25),
('en-PH', 'English (Philippines)', 'en', 'PH', 28, 30, 28, 27, 23, 26, 26, 1, 1, 1, 0, 26),
('ms-MY', 'Malay (Malaysia)', 'ms', 'MY', 30, 27, 29, 29, 24, 27, 27, 2, 1, 1, 0, 27),
('he-IL', 'Hebrew (Israel)', 'he', 'IL', 1, 1, 1, 1, 25, 1, 1, 1, 5, 3, 0, 28),
('fa-IR', 'Persian (Iran)', 'fa', 'IR', 1, 1, 1, 1, 1, 1, 1, 3, 9, 4, 0, 29),
('ur-PK', 'Urdu (Pakistan)', 'ur', 'PK', 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 0, 30);

-- =====================================================
-- SECTION 24: BUSINESS RULES
-- =====================================================

CREATE TABLE rule_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    category VARCHAR(50) NOT NULL,
    is_system BOOLEAN NOT NULL DEFAULT 0,
    allow_custom BOOLEAN NOT NULL DEFAULT 1,
    requires_approval BOOLEAN NOT NULL DEFAULT 0,
    display_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT 1,
    created_by INT UNSIGNED NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    updated_at TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
    deleted_by INT UNSIGNED NULL,
    deleted_at TIMESTAMP NULL,
    PRIMARY KEY (id),
    UNIQUE KEY uk_rule_type_code (code),
    KEY idx_rule_type_category (category),
    KEY idx_rule_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO rule_type (code, name, description, category, is_system, display_order) VALUES
('ROYALTY_CALC', 'Royalty Calculation', 'Rules for calculating royalties', 'FINANCIAL', 1, 100),
('REVENUE_SPLIT', 'Revenue Split', 'Rules for splitting revenue between parties', 'FINANCIAL', 1, 200),
('TERRITORY_RESTRICT', 'Territory Restriction', 'Rules for territory-based restrictions', 'TERRITORIAL', 1, 300),
('RECOUPMENT', 'Recoupment', 'Rules for recouping advances and costs', 'FINANCIAL', 1, 400),
('MINIMUM_GUARANTEE', 'Minimum Guarantee', 'Rules for minimum payment guarantees', 'FINANCIAL', 1, 500),
('ESCALATION', 'Escalation', 'Rules for rate escalations over time', 'FINANCIAL', 1, 600),
('CROSS_COLLATERAL', 'Cross-Collateralization', 'Rules for cross-collateralizing income', 'FINANCIAL', 1, 700),
('MFN_CLAUSE', 'Most Favored Nation', 'Rules for MFN clause enforcement', 'CONTRACTUAL', 1, 800),
('CONTROLLED_COMP', 'Controlled Composition', 'Rules for controlled composition clauses', 'CONTRACTUAL', 1, 900),
('PRODUCER_POINTS', 'Producer Points', 'Rules for producer royalty points', 'FINANCIAL', 1, 1000),
('SYNC_FEE', 'Sync Licensing Fee', 'Rules for synchronization fee calculations', 'LICENSING', 1, 1100),
('PERFORMANCE_ROYALTY', 'Performance Royalty', 'Rules for performance royalty calculations', 'FINANCIAL', 1, 1200),
('MECHANICAL_ROYALTY', 'Mechanical Royalty', 'Rules for mechanical royalty calculations', 'FINANCIAL', 1, 1300),
('STREAMING_CALC', 'Streaming Calculation', 'Rules for streaming royalty calculations', 'FINANCIAL', 1, 1400),
('ADVANCE_PAYMENT', 'Advance Payment', 'Rules for advance payment handling', 'FINANCIAL', 1, 1500),
('BREAKAGE', 'Breakage', 'Rules for handling breakage and reserves', 'FINANCIAL', 1, 1600),
('CURRENCY_CONVERSION', 'Currency Conversion', 'Rules for multi-currency conversions', 'FINANCIAL', 1, 1700),
('TAX_WITHHOLDING', 'Tax Withholding', 'Rules for tax withholding calculations', 'COMPLIANCE', 1, 1800),
('AUDIT_THRESHOLD', 'Audit Threshold', 'Rules for triggering audit requirements', 'COMPLIANCE', 1, 1900),
('DISTRIBUTION_PRIORITY', 'Distribution Priority', 'Rules for payment distribution priority', 'FINANCIAL', 1, 2000),
('NFT_ROYALTY', 'NFT Royalty', 'Rules for NFT-based royalty calculations', 'BLOCKCHAIN', 1, 2100),
('SMART_CONTRACT', 'Smart Contract', 'Rules for smart contract execution', 'BLOCKCHAIN', 1, 2200),
('AI_OPTIMIZATION', 'AI Optimization', 'Rules for AI-driven optimization', 'INTELLIGENCE', 1, 2300),
('METADATA_VALIDATION', 'Metadata Validation', 'Rules for metadata validation', 'QUALITY', 1, 2400),
('CONFLICT_RESOLUTION', 'Conflict Resolution', 'Rules for resolving conflicts', 'OPERATIONAL', 1, 2500),
('APPROVAL_WORKFLOW', 'Approval Workflow', 'Rules for approval workflows', 'OPERATIONAL', 1, 2600),
('NOTIFICATION_TRIGGER', 'Notification Trigger', 'Rules for triggering notifications', 'OPERATIONAL', 1, 2700),
('DATA_RETENTION', 'Data Retention', 'Rules for data retention policies', 'COMPLIANCE', 1, 2800),
('GDPR_COMPLIANCE', 'GDPR Compliance', 'Rules for GDPR compliance', 'COMPLIANCE', 1, 2900),
('CISAC_COMPLIANCE', 'CISAC Compliance', 'Rules for CISAC standard compliance', 'COMPLIANCE', 1, 3000);

CREATE TABLE calculation_method (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    formula_template TEXT NULL,
    category VARCHAR(50) NOT NULL,
    requires_parameters BOOLEAN NOT NULL DEFAULT 0,
    parameter_schema JSON NULL,
    supports_currency BOOLEAN NOT NULL DEFAULT 1,
    supports_territory BOOLEAN NOT NULL DEFAULT 0,
    supports_time_period BOOLEAN NOT NULL DEFAULT 1,
    is_blockchain_compatible BOOLEAN NOT NULL DEFAULT 0,
    display_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT 1,
    created_by INT UNSIGNED NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    updated_at TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_calculation_method_code (code),
    KEY idx_calculation_method_category (category),
    KEY idx_calculation_method_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO calculation_method (code, name, description, formula_template, category, requires_parameters, supports_territory, is_blockchain_compatible, display_order) VALUES
('PERCENTAGE', 'Percentage', 'Simple percentage calculation', '{amount} * {rate} / 100', 'BASIC', 1, 0, 1, 100),
('FIXED_AMOUNT', 'Fixed Amount', 'Fixed amount per unit', '{units} * {rate}', 'BASIC', 1, 0, 1, 200),
('TIERED_PERCENTAGE', 'Tiered Percentage', 'Different rates for different tiers', 'CASE WHEN {amount} <= {tier1} THEN {rate1} ELSE {rate2}', 'ADVANCED', 1, 0, 0, 300),
('PRO_RATA_SHARE', 'Pro Rata Share', 'Proportional share of total', '{amount} * {share} / {total_shares}', 'DISTRIBUTION', 1, 0, 1, 400),
('STREAM_RATE', 'Streaming Rate', 'Per-stream rate calculation', '{streams} * {rate_per_stream}', 'STREAMING', 1, 1, 1, 500),
('NET_RECEIPTS', 'Net Receipts', 'Percentage of net receipts', '({gross} - {deductions}) * {rate} / 100', 'ROYALTY', 1, 0, 0, 600),
('RETAIL_PRICE', 'Retail Price', 'Percentage of retail price', '{retail_price} * {rate} / 100 * {units}', 'ROYALTY', 1, 0, 0, 700),
('PPD_CALC', 'PPD Calculation', 'Published Price to Dealer', '{ppd} * {rate} / 100 * {units}', 'ROYALTY', 1, 0, 0, 800),
('ESCALATING_RATE', 'Escalating Rate', 'Rate that increases over time', 'CASE WHEN {period} <= 1 THEN {rate1} WHEN {period} <= 2 THEN {rate2} ELSE {rate3}', 'ADVANCED', 1, 0, 0, 900),
('RECOUPABLE_ADVANCE', 'Recoupable Advance', 'Advance recoupment calculation', 'GREATEST(0, {earnings} - {unrecouped_balance})', 'RECOUPMENT', 1, 0, 0, 1000),
('CROSS_COLLATERAL_CALC', 'Cross-Collateral', 'Cross-collateralized recoupment', 'SUM({earnings}) - SUM({unrecouped_balances})', 'RECOUPMENT', 1, 0, 0, 1100),
('MIN_MAX_GUARANTEE', 'Min/Max Guarantee', 'Minimum or maximum guarantee', 'GREATEST({minimum}, LEAST({maximum}, {calculated_amount}))', 'GUARANTEE', 1, 0, 0, 1200),
('PRODUCER_POINTS_CALC', 'Producer Points', 'Producer royalty points calculation', '{artist_royalty} * {producer_points} / {artist_points}', 'ROYALTY', 1, 0, 0, 1300),
('SYNC_FEE_CALC', 'Sync Fee', 'Synchronization fee calculation', '{base_fee} * {usage_factor} * {territory_factor} * {term_factor}', 'LICENSING', 1, 1, 0, 1400),
('PERFORMANCE_SHARE', 'Performance Share', 'Performance royalty share', '{performance_income} * {writer_share} / 100', 'PERFORMANCE', 1, 1, 0, 1500),
('MECHANICAL_STATUTORY', 'Mechanical Statutory', 'Statutory mechanical rate', '{statutory_rate} * {units} * {song_count}', 'MECHANICAL', 1, 1, 0, 1600),
('CONTROLLED_COMP_CALC', 'Controlled Composition', 'Controlled composition rate', '{statutory_rate} * 0.75 * {units}', 'MECHANICAL', 1, 1, 0, 1700),
('BREAKAGE_RESERVE', 'Breakage Reserve', 'Reserve for breakage/returns', '{gross_sales} * {reserve_percentage} / 100', 'RESERVES', 1, 0, 0, 1800),
('CURRENCY_CONVERT', 'Currency Conversion', 'Multi-currency conversion', '{amount} * {exchange_rate}', 'CURRENCY', 1, 0, 1, 1900),
('TAX_WITHHOLD_CALC', 'Tax Withholding', 'Tax withholding calculation', '{gross_amount} * {withholding_rate} / 100', 'TAX', 1, 1, 0, 2000),
('NFT_ROYALTY_CALC', 'NFT Royalty', 'NFT-based royalty calculation', '{sale_price} * {royalty_percentage} / 100', 'BLOCKCHAIN', 1, 0, 1, 2100),
('SMART_CONTRACT_SPLIT', 'Smart Contract Split', 'Automated smart contract split', 'SMART_CONTRACT_EXECUTE({amount}, {recipients})', 'BLOCKCHAIN', 1, 0, 1, 2200),
('AI_OPTIMIZED_RATE', 'AI Optimized Rate', 'AI-optimized royalty rate', 'AI_PREDICT({historical_data}, {market_conditions})', 'AI', 1, 1, 0, 2300),
('WEIGHTED_AVERAGE', 'Weighted Average', 'Weighted average calculation', 'SUM({value} * {weight}) / SUM({weight})', 'ADVANCED', 1, 0, 0, 2400),
('COMPOUND_INTEREST', 'Compound Interest', 'Compound interest on advances', '{principal} * POWER(1 + {rate}/100, {periods})', 'FINANCIAL', 1, 0, 0, 2500),
('SLIDING_SCALE', 'Sliding Scale', 'Sliding scale calculation', 'LINEAR_INTERPOLATE({value}, {scale_table})', 'ADVANCED', 1, 0, 0, 2600),
('MARKET_SHARE_CALC', 'Market Share', 'Market share-based calculation', '{total_market} * {market_share_percentage} / 100', 'DISTRIBUTION', 1, 1, 0, 2700),
('BONUS_THRESHOLD', 'Bonus Threshold', 'Bonus based on thresholds', 'CASE WHEN {sales} >= {threshold} THEN {bonus_amount} ELSE 0', 'INCENTIVE', 1, 0, 0, 2800),
('PENALTY_CALC', 'Penalty Calculation', 'Late payment penalty', '{overdue_amount} * {penalty_rate} / 100 * {days_late} / 365', 'COMPLIANCE', 1, 0, 0, 2900),
('AUDIT_ADJUSTMENT', 'Audit Adjustment', 'Post-audit adjustment calculation', '{audited_amount} - {reported_amount}', 'COMPLIANCE', 1, 0, 0, 3000);

CREATE TABLE rounding_method (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    precision_digits INT UNSIGNED NOT NULL DEFAULT 2,
    rounding_rule VARCHAR(20) NOT NULL,
    minimum_unit DECIMAL(10,6) NULL,
    is_currency_specific BOOLEAN NOT NULL DEFAULT 0,
    display_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT 1,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_rounding_method_code (code),
    KEY idx_rounding_method_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO rounding_method (code, name, description, precision_digits, rounding_rule, minimum_unit, is_currency_specific, display_order) VALUES
('ROUND_NEAREST', 'Round to Nearest', 'Standard rounding to nearest', 2, 'HALF_UP', 0.01, 0, 100),
('ROUND_DOWN', 'Round Down', 'Always round down', 2, 'DOWN', 0.01, 0, 200),
('ROUND_UP', 'Round Up', 'Always round up', 2, 'UP', 0.01, 0, 300),
('BANKER_ROUND', 'Banker\'s Rounding', 'Round to nearest even', 2, 'HALF_EVEN', 0.01, 0, 400),
('NO_ROUND', 'No Rounding', 'Keep full precision', 6, 'NONE', 0.000001, 0, 500),
('PENNY_ROUND', 'Penny Rounding', 'Round to nearest penny', 2, 'HALF_UP', 0.01, 1, 600),
('NICKEL_ROUND', 'Nickel Rounding', 'Round to nearest 0.05', 2, 'HALF_UP', 0.05, 1, 700),
('DIME_ROUND', 'Dime Rounding', 'Round to nearest 0.10', 1, 'HALF_UP', 0.10, 1, 800),
('QUARTER_ROUND', 'Quarter Rounding', 'Round to nearest 0.25', 2, 'HALF_UP', 0.25, 1, 900),
('DOLLAR_ROUND', 'Dollar Rounding', 'Round to nearest dollar', 0, 'HALF_UP', 1.00, 1, 1000),
('STREAM_PRECISION', 'Streaming Precision', 'High precision for streaming', 6, 'HALF_UP', 0.000001, 0, 1100),
('PERCENTAGE_ROUND', 'Percentage Rounding', 'Round percentages', 4, 'HALF_UP', 0.0001, 0, 1200),
('TAX_ROUND', 'Tax Rounding', 'Tax calculation rounding', 2, 'HALF_UP', 0.01, 1, 1300),
('CRYPTO_PRECISION', 'Crypto Precision', 'Cryptocurrency precision', 8, 'HALF_UP', 0.00000001, 0, 1400),
('ACCOUNTING_ROUND', 'Accounting Round', 'Standard accounting rounding', 2, 'HALF_UP', 0.01, 1, 1500);

CREATE TABLE allocation_method (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    allocation_basis VARCHAR(50) NOT NULL,
    requires_shares BOOLEAN NOT NULL DEFAULT 1,
    supports_priority BOOLEAN NOT NULL DEFAULT 0,
    supports_minimum BOOLEAN NOT NULL DEFAULT 0,
    supports_maximum BOOLEAN NOT NULL DEFAULT 0,
    handles_remainder BOOLEAN NOT NULL DEFAULT 1,
    display_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT 1,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_allocation_method_code (code),
    KEY idx_allocation_method_basis (allocation_basis),
    KEY idx_allocation_method_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO allocation_method (code, name, description, allocation_basis, requires_shares, supports_priority, supports_minimum, supports_maximum, display_order) VALUES
('PRO_RATA', 'Pro Rata', 'Proportional allocation based on shares', 'PERCENTAGE', 1, 0, 0, 0, 100),
('EQUAL_SPLIT', 'Equal Split', 'Equal allocation to all parties', 'EQUAL', 0, 0, 0, 0, 200),
('PRIORITY_WATERFALL', 'Priority Waterfall', 'Allocation by priority order', 'PRIORITY', 0, 1, 1, 1, 300),
('THRESHOLD_BASED', 'Threshold Based', 'Allocation based on thresholds', 'THRESHOLD', 1, 0, 1, 1, 400),
('RECOUPMENT_FIRST', 'Recoupment First', 'Recoup advances before distribution', 'RECOUPMENT', 1, 1, 0, 0, 500),
('FIXED_THEN_SPLIT', 'Fixed Then Split', 'Fixed amounts then split remainder', 'HYBRID', 1, 1, 1, 0, 600),
('PERFORMANCE_BASED', 'Performance Based', 'Allocation based on performance metrics', 'PERFORMANCE', 1, 0, 1, 1, 700),
('TERRITORY_BASED', 'Territory Based', 'Allocation by territory', 'TERRITORY', 1, 0, 0, 0, 800),
('TIME_BASED', 'Time Based', 'Allocation changes over time', 'TEMPORAL', 1, 0, 0, 0, 900),
('CONTRIBUTION_BASED', 'Contribution Based', 'Based on contribution percentage', 'CONTRIBUTION', 1, 0, 0, 0, 1000),
('CASCADING', 'Cascading', 'Cascading allocation through levels', 'CASCADE', 1, 1, 0, 0, 1100),
('POOL_ALLOCATION', 'Pool Allocation', 'Allocation from pooled resources', 'POOL', 1, 0, 1, 1, 1200),
('WEIGHTED_AVERAGE', 'Weighted Average', 'Weighted average allocation', 'WEIGHTED', 1, 0, 0, 0, 1300),
('ROUND_ROBIN', 'Round Robin', 'Rotating allocation', 'ROTATION', 0, 1, 0, 1, 1400),
('SMART_CONTRACT', 'Smart Contract', 'Blockchain-based allocation', 'BLOCKCHAIN', 1, 0, 0, 0, 1500);

CREATE TABLE proration_method (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    calculation_basis VARCHAR(50) NOT NULL,
    time_unit VARCHAR(20) NOT NULL,
    includes_partial_periods BOOLEAN NOT NULL DEFAULT 1,
    display_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT 1,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_proration_method_code (code),
    KEY idx_proration_method_basis (calculation_basis),
    KEY idx_proration_method_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO proration_method (code, name, description, calculation_basis, time_unit, includes_partial_periods, display_order) VALUES
('DAILY_ACTUAL', 'Daily Actual', 'Actual days in period', 'ACTUAL_DAYS', 'DAY', 1, 100),
('DAILY_365', 'Daily 365', 'Based on 365 day year', 'FIXED_365', 'DAY', 1, 200),
('DAILY_360', 'Daily 360', 'Based on 360 day year', 'FIXED_360', 'DAY', 1, 300),
('MONTHLY_ACTUAL', 'Monthly Actual', 'Actual months', 'ACTUAL_MONTHS', 'MONTH', 1, 400),
('MONTHLY_30', 'Monthly 30', 'Based on 30 day months', 'FIXED_30', 'MONTH', 1, 500),
('QUARTERLY', 'Quarterly', 'By quarter', 'QUARTER', 'QUARTER', 1, 600),
('SEMI_ANNUAL', 'Semi-Annual', 'By half year', 'HALF_YEAR', 'HALF_YEAR', 1, 700),
('ANNUAL', 'Annual', 'By full year', 'YEAR', 'YEAR', 0, 800),
('WEEKLY', 'Weekly', 'By week', 'WEEK', 'WEEK', 1, 900),
('BUSINESS_DAYS', 'Business Days', 'Business days only', 'BUSINESS_DAYS', 'DAY', 1, 1000),
('CALENDAR_DAYS', 'Calendar Days', 'All calendar days', 'CALENDAR_DAYS', 'DAY', 1, 1100),
('STREAMING_PERIOD', 'Streaming Period', 'Streaming service periods', 'CUSTOM', 'VARIES', 1, 1200),
('ACCOUNTING_PERIOD', 'Accounting Period', 'Accounting period based', 'ACCOUNTING', 'VARIES', 1, 1300),
('CONTRACT_PERIOD', 'Contract Period', 'Contract period based', 'CONTRACT', 'VARIES', 1, 1400),
('NO_PRORATION', 'No Proration', 'Full amount regardless', 'NONE', 'NONE', 0, 1500);

CREATE TABLE validation_rule (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    rule_type_id INT UNSIGNED NOT NULL,
    validation_type VARCHAR(50) NOT NULL,
    validation_expression TEXT NOT NULL,
    error_message TEXT NOT NULL,
    severity VARCHAR(20) NOT NULL DEFAULT 'ERROR',
    applies_to_entity VARCHAR(50) NOT NULL,
    field_name VARCHAR(100) NULL,
    is_blocking BOOLEAN NOT NULL DEFAULT 1,
    display_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT 1,
    created_by INT UNSIGNED NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    updated_at TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_validation_rule_code (code),
    KEY idx_validation_rule_type (rule_type_id),
    KEY idx_validation_rule_entity (applies_to_entity),
    KEY idx_validation_rule_active (is_active),
    CONSTRAINT fk_validation_rule_type FOREIGN KEY (rule_type_id) REFERENCES rule_type(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO validation_rule (code, name, description, rule_type_id, validation_type, validation_expression, error_message, severity, applies_to_entity, field_name, is_blocking, display_order) VALUES
('ISRC_FORMAT', 'ISRC Format', 'Validate ISRC format', 24, 'REGEX', '^[A-Z]{2}[A-Z0-9]{3}[0-9]{2}[0-9]{5}$', 'Invalid ISRC format. Must be CC-XXX-YY-NNNNN', 'ERROR', 'RECORDING', 'isrc', 1, 100),
('ISWC_FORMAT', 'ISWC Format', 'Validate ISWC format', 24, 'REGEX', '^T-[0-9]{9}-[0-9]$', 'Invalid ISWC format. Must be T-NNNNNNNNN-C', 'ERROR', 'WORK', 'iswc', 1, 200),
('IPI_FORMAT', 'IPI Format', 'Validate IPI format', 24, 'REGEX', '^[0-9]{11}$', 'Invalid IPI format. Must be 11 digits', 'ERROR', 'PARTY', 'ipi', 1, 300),
('SPLIT_TOTAL', 'Split Total 100%', 'Ensure splits total 100%', 24, 'AGGREGATE', 'SUM(split_percentage) = 100', 'Splits must total exactly 100%', 'ERROR', 'SPLIT', 'percentage', 1, 400),
('DATE_RANGE', 'Valid Date Range', 'End date after start date', 24, 'COMPARISON', 'end_date >= start_date', 'End date must be after start date', 'ERROR', 'AGREEMENT', NULL, 1, 500),
('ROYALTY_RATE', 'Valid Royalty Rate', 'Royalty rate within bounds', 24, 'RANGE', 'rate >= 0 AND rate <= 100', 'Royalty rate must be between 0 and 100', 'ERROR', 'ROYALTY', 'rate', 1, 600),
('TERRITORY_CODE', 'Valid Territory Code', 'ISO territory code validation', 24, 'LOOKUP', 'EXISTS IN territory_code', 'Invalid territory code', 'ERROR', 'TERRITORY', 'code', 1, 700),
('CURRENCY_CODE', 'Valid Currency Code', 'ISO currency code validation', 24, 'LOOKUP', 'EXISTS IN currency', 'Invalid currency code', 'ERROR', 'TRANSACTION', 'currency_code', 1, 800),
('EMAIL_FORMAT', 'Email Format', 'Valid email address', 24, 'REGEX', '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}$', 'Invalid email format', 'WARNING', 'CONTACT', 'email', 0, 900),
('PHONE_FORMAT', 'Phone Format', 'Valid phone number', 24, 'REGEX', '^\\+?[1-9]\\d{1,14}$', 'Invalid phone format (E.164)', 'WARNING', 'CONTACT', 'phone', 0, 1000),
('DUPLICATE_ISRC', 'Duplicate ISRC Check', 'Prevent duplicate ISRCs', 24, 'UNIQUE', 'COUNT(isrc) = 1', 'ISRC already exists', 'ERROR', 'RECORDING', 'isrc', 1, 1100),
('ADVANCE_LIMIT', 'Advance Limit Check', 'Advance within approved limit', 24, 'COMPARISON', 'advance_amount <= approved_limit', 'Advance exceeds approved limit', 'ERROR', 'ADVANCE', 'amount', 1, 1200),
('MIN_DURATION', 'Minimum Duration', 'Track duration validation', 24, 'RANGE', 'duration >= 30', 'Track must be at least 30 seconds', 'WARNING', 'RECORDING', 'duration', 0, 1300),
('LANGUAGE_CODE', 'Valid Language Code', 'ISO language code validation', 24, 'LOOKUP', 'EXISTS IN language', 'Invalid language code', 'ERROR', 'METADATA', 'language_code', 1, 1400),
('RELEASE_DATE', 'Future Release Date', 'Release date validation', 24, 'COMPARISON', 'release_date >= CURRENT_DATE', 'Release date cannot be in the past', 'WARNING', 'RELEASE', 'release_date', 0, 1500);

CREATE TABLE rule_condition (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    validation_rule_id INT UNSIGNED NOT NULL,
    condition_type VARCHAR(50) NOT NULL,
    field_name VARCHAR(100) NOT NULL,
    operator VARCHAR(20) NOT NULL,
    value_type VARCHAR(20) NOT NULL,
    condition_value TEXT NULL,
    logical_operator VARCHAR(10) NULL,
    group_order INT UNSIGNED NOT NULL DEFAULT 1,
    is_active BOOLEAN NOT NULL DEFAULT 1,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    KEY idx_rule_condition_rule (validation_rule_id),
    KEY idx_rule_condition_type (condition_type),
    KEY idx_rule_condition_active (is_active),
    CONSTRAINT fk_rule_condition_rule FOREIGN KEY (validation_rule_id) REFERENCES validation_rule(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO rule_condition (validation_rule_id, condition_type, field_name, operator, value_type, condition_value, logical_operator, group_order) VALUES
(1, 'FIELD', 'recording_type', 'EQUALS', 'STRING', 'MASTER', 'AND', 1),
(1, 'FIELD', 'status', 'IN', 'LIST', 'ACTIVE,PENDING', NULL, 2),
(4, 'AGGREGATE', 'split_percentage', 'SUM', 'NUMERIC', '100', NULL, 1),
(5, 'FIELD', 'agreement_type', 'EQUALS', 'STRING', 'RECORDING', 'AND', 1),
(5, 'FIELD', 'status', 'NOT_EQUALS', 'STRING', 'DRAFT', NULL, 2),
(11, 'FIELD', 'recording_type', 'EQUALS', 'STRING', 'MASTER', 'AND', 1),
(11, 'SYSTEM', 'duplicate_count', 'GREATER_THAN', 'NUMERIC', '0', NULL, 2),
(12, 'FIELD', 'agreement_type', 'IN', 'LIST', 'RECORDING,PUBLISHING', NULL, 1),
(15, 'FIELD', 'release_type', 'EQUALS', 'STRING', 'ALBUM', 'OR', 1),
(15, 'FIELD', 'release_type', 'EQUALS', 'STRING', 'EP', NULL, 2);

CREATE TABLE rule_action (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    action_type VARCHAR(50) NOT NULL,
    action_target VARCHAR(100) NULL,
    action_parameters JSON NULL,
    requires_approval BOOLEAN NOT NULL DEFAULT 0,
    is_reversible BOOLEAN NOT NULL DEFAULT 0,
    audit_level VARCHAR(20) NOT NULL DEFAULT 'NORMAL',
    display_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT 1,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_rule_action_code (code),
    KEY idx_rule_action_type (action_type),
    KEY idx_rule_action_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO rule_action (code, name, description, action_type, action_target, action_parameters, requires_approval, is_reversible, audit_level, display_order) VALUES
('CALCULATE_ROYALTY', 'Calculate Royalty', 'Calculate royalty amount', 'CALCULATION', 'royalty_statement', '{"method": "calculation_method_id"}', 0, 0, 'DETAILED', 100),
('DISTRIBUTE_PAYMENT', 'Distribute Payment', 'Distribute payment to parties', 'DISTRIBUTION', 'payment', '{"allocation": "allocation_method_id"}', 1, 1, 'DETAILED', 200),
('SEND_NOTIFICATION', 'Send Notification', 'Send notification to users', 'NOTIFICATION', 'user', '{"template": "notification_template_id"}', 0, 0, 'NORMAL', 300),
('UPDATE_STATUS', 'Update Status', 'Update entity status', 'UPDATE', 'entity', '{"field": "status", "value": "new_status"}', 0, 1, 'NORMAL', 400),
('CREATE_STATEMENT', 'Create Statement', 'Generate royalty statement', 'GENERATION', 'statement', '{"period": "statement_period"}', 0, 0, 'DETAILED', 500),
('BLOCK_TRANSACTION', 'Block Transaction', 'Block suspicious transaction', 'SECURITY', 'transaction', '{"reason": "security_reason"}', 1, 1, 'HIGH', 600),
('TRIGGER_WORKFLOW', 'Trigger Workflow', 'Start workflow process', 'WORKFLOW', 'workflow', '{"workflow_id": "workflow_template_id"}', 0, 0, 'NORMAL', 700),
('RECOUP_ADVANCE', 'Recoup Advance', 'Recoup from advance balance', 'FINANCIAL', 'advance', '{"amount": "calculated_amount"}', 0, 1, 'DETAILED', 800),
('APPLY_WITHHOLDING', 'Apply Withholding', 'Apply tax withholding', 'TAX', 'payment', '{"rate": "withholding_rate"}', 0, 1, 'DETAILED', 900),
('EXECUTE_SMART_CONTRACT', 'Execute Smart Contract', 'Execute blockchain contract', 'BLOCKCHAIN', 'smart_contract', '{"contract": "contract_address"}', 1, 0, 'HIGH', 1000),
('FLAG_FOR_REVIEW', 'Flag for Review', 'Flag item for manual review', 'REVIEW', 'entity', '{"priority": "review_priority"}', 0, 1, 'NORMAL', 1100),
('GENERATE_REPORT', 'Generate Report', 'Generate analytical report', 'REPORTING', 'report', '{"template": "report_template_id"}', 0, 0, 'NORMAL', 1200),
('UPDATE_METADATA', 'Update Metadata', 'Update metadata fields', 'UPDATE', 'metadata', '{"fields": "field_mappings"}', 0, 1, 'DETAILED', 1300),
('SYNC_EXTERNAL', 'Sync External', 'Sync with external system', 'INTEGRATION', 'external_system', '{"system": "system_id"}', 0, 0, 'NORMAL', 1400),
('ARCHIVE_DATA', 'Archive Data', 'Archive old data', 'MAINTENANCE', 'data', '{"retention": "retention_policy"}', 1, 1, 'NORMAL', 1500);

CREATE TABLE formula_template (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    category VARCHAR(50) NOT NULL,
    formula_expression TEXT NOT NULL,
    input_parameters JSON NOT NULL,
    output_type VARCHAR(20) NOT NULL,
    output_precision INT UNSIGNED NULL,
    validation_rules JSON NULL,
    example_calculation TEXT NULL,
    is_certified BOOLEAN NOT NULL DEFAULT 0,
    display_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT 1,
    created_by INT UNSIGNED NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    updated_at TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_formula_template_code (code),
    KEY idx_formula_template_category (category),
    KEY idx_formula_template_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO formula_template (code, name, description, category, formula_expression, input_parameters, output_type, output_precision, is_certified, display_order) VALUES
('STREAM_ROYALTY', 'Streaming Royalty', 'Calculate streaming royalties', 'STREAMING', '(streams * rate_per_stream * ownership_percentage / 100)', '{"streams": "integer", "rate_per_stream": "decimal", "ownership_percentage": "decimal"}', 'DECIMAL', 6, 1, 100),
('MECHANICAL_STATUTORY', 'Mechanical Statutory Rate', 'US statutory mechanical rate', 'MECHANICAL', 'units_sold * statutory_rate * song_count', '{"units_sold": "integer", "statutory_rate": "decimal", "song_count": "integer"}', 'DECIMAL', 2, 1, 200),
('NET_PUBLISHER_SHARE', 'Net Publisher Share', 'Publisher share after deductions', 'PUBLISHING', '(gross_income - (gross_income * admin_fee / 100)) * publisher_share / 100', '{"gross_income": "decimal", "admin_fee": "decimal", "publisher_share": "decimal"}', 'DECIMAL', 2, 1, 300),
('SYNC_LICENSE_FEE', 'Sync License Fee', 'Calculate sync licensing fee', 'SYNC', 'base_fee * media_factor * territory_factor * term_factor * (1 + options_factor)', '{"base_fee": "decimal", "media_factor": "decimal", "territory_factor": "decimal", "term_factor": "decimal", "options_factor": "decimal"}', 'DECIMAL', 2, 0, 400),
('PRODUCER_ROYALTY', 'Producer Royalty', 'Producer points calculation', 'RECORDING', '(artist_royalty_base * producer_points / artist_points) * (1 - recoupment_factor)', '{"artist_royalty_base": "decimal", "producer_points": "decimal", "artist_points": "decimal", "recoupment_factor": "decimal"}', 'DECIMAL', 2, 1, 500),
('ADVANCE_RECOUPMENT', 'Advance Recoupment', 'Calculate recoupment amount', 'RECOUPMENT', 'MIN(current_earnings, unrecouped_balance) * recoupment_rate / 100', '{"current_earnings": "decimal", "unrecouped_balance": "decimal", "recoupment_rate": "decimal"}', 'DECIMAL', 2, 1, 600),
('CROSS_COLLATERAL', 'Cross-Collateralization', 'Cross-collateral calculation', 'RECOUPMENT', 'MAX(0, total_earnings - total_unrecouped - deductible_costs)', '{"total_earnings": "decimal", "total_unrecouped": "decimal", "deductible_costs": "decimal"}', 'DECIMAL', 2, 0, 700),
('PPD_ROYALTY', 'PPD Royalty', 'Published price to dealer royalty', 'RECORDING', 'units_sold * ppd_price * royalty_rate / 100 * (1 - packaging_deduction / 100)', '{"units_sold": "integer", "ppd_price": "decimal", "royalty_rate": "decimal", "packaging_deduction": "decimal"}', 'DECIMAL', 2, 1, 800),
('BREAKAGE_RESERVE', 'Breakage Reserve', 'Calculate breakage reserve', 'RESERVES', 'gross_sales * reserve_percentage / 100 * time_factor', '{"gross_sales": "decimal", "reserve_percentage": "decimal", "time_factor": "decimal"}', 'DECIMAL', 2, 0, 900),
('PERFORMANCE_ROYALTY', 'Performance Royalty', 'PRO performance royalty', 'PERFORMANCE', 'performance_credits * credit_value * writer_share / 100 * territory_rate', '{"performance_credits": "decimal", "credit_value": "decimal", "writer_share": "decimal", "territory_rate": "decimal"}', 'DECIMAL', 2, 1, 1000),
('NFT_ROYALTY_SPLIT', 'NFT Royalty Split', 'NFT secondary sale royalty', 'BLOCKCHAIN', 'sale_price * royalty_percentage / 100 * creator_share / 100', '{"sale_price": "decimal", "royalty_percentage": "decimal", "creator_share": "decimal"}', 'DECIMAL', 8, 0, 1100),
('TAX_WITHHOLDING', 'Tax Withholding', 'Calculate tax withholding', 'TAX', 'gross_payment * withholding_rate / 100 * (1 - treaty_reduction / 100)', '{"gross_payment": "decimal", "withholding_rate": "decimal", "treaty_reduction": "decimal"}', 'DECIMAL', 2, 1, 1200),
('ESCALATING_ROYALTY', 'Escalating Royalty', 'Time-based escalating rate', 'ADVANCED', 'base_amount * (base_rate + (escalation_rate * periods_elapsed)) / 100', '{"base_amount": "decimal", "base_rate": "decimal", "escalation_rate": "decimal", "periods_elapsed": "integer"}', 'DECIMAL', 2, 0, 1300),
('MINIMUM_GUARANTEE', 'Minimum Guarantee', 'Apply minimum guarantee', 'GUARANTEE', 'MAX(calculated_royalty, minimum_guarantee * proration_factor)', '{"calculated_royalty": "decimal", "minimum_guarantee": "decimal", "proration_factor": "decimal"}', 'DECIMAL', 2, 1, 1400),
('CURRENCY_CONVERSION', 'Currency Conversion', 'Multi-currency conversion', 'CURRENCY', 'source_amount * exchange_rate * (1 - conversion_fee / 100)', '{"source_amount": "decimal", "exchange_rate": "decimal", "conversion_fee": "decimal"}', 'DECIMAL', 2, 0, 1500);

CREATE TABLE business_rule_set (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    category VARCHAR(50) NOT NULL,
    applies_to_entity VARCHAR(50) NOT NULL,
    execution_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_conditional BOOLEAN NOT NULL DEFAULT 0,
    condition_expression TEXT NULL,
    is_active BOOLEAN NOT NULL DEFAULT 1,
    created_by INT UNSIGNED NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    updated_at TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_business_rule_set_code (code),
    KEY idx_business_rule_set_category (category),
    KEY idx_business_rule_set_entity (applies_to_entity),
    KEY idx_business_rule_set_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO business_rule_set (code, name, description, category, applies_to_entity, execution_order, is_conditional, condition_expression) VALUES
('RECORDING_RELEASE', 'Recording Release Rules', 'Rules for releasing recordings', 'RELEASE', 'RECORDING', 100, 0, NULL),
('ROYALTY_CALCULATION', 'Royalty Calculation Rules', 'Complete royalty calculation ruleset', 'FINANCIAL', 'ROYALTY', 200, 0, NULL),
('ADVANCE_RECOUPMENT', 'Advance Recoupment Rules', 'Rules for recouping advances', 'FINANCIAL', 'ADVANCE', 300, 0, NULL),
('METADATA_VALIDATION', 'Metadata Validation Rules', 'Comprehensive metadata validation', 'QUALITY', 'METADATA', 400, 0, NULL),
('PAYMENT_DISTRIBUTION', 'Payment Distribution Rules', 'Rules for distributing payments', 'FINANCIAL', 'PAYMENT', 500, 0, NULL),
('CONTRACT_COMPLIANCE', 'Contract Compliance Rules', 'Ensure contract compliance', 'COMPLIANCE', 'CONTRACT', 600, 0, NULL),
('TERRITORY_RESTRICTION', 'Territory Restriction Rules', 'Territory-based restrictions', 'TERRITORIAL', 'TERRITORY', 700, 0, NULL),
('SYNC_LICENSING', 'Sync Licensing Rules', 'Sync license approval rules', 'LICENSING', 'SYNC', 800, 1, 'license_type = "SYNC"'),
('NFT_MINTING', 'NFT Minting Rules', 'Rules for minting NFTs', 'BLOCKCHAIN', 'NFT', 900, 1, 'blockchain_enabled = TRUE'),
('AUDIT_COMPLIANCE', 'Audit Compliance Rules', 'Audit and compliance rules', 'COMPLIANCE', 'AUDIT', 1000, 0, NULL),
('STREAMING_REPORTING', 'Streaming Reporting Rules', 'Rules for streaming reports', 'REPORTING', 'STREAMING', 1100, 0, NULL),
('TAX_COMPLIANCE', 'Tax Compliance Rules', 'Tax withholding and reporting', 'TAX', 'TAX', 1200, 0, NULL),
('DATA_RETENTION', 'Data Retention Rules', 'Data retention policies', 'COMPLIANCE', 'DATA', 1300, 0, NULL),
('APPROVAL_WORKFLOW', 'Approval Workflow Rules', 'Approval process rules', 'WORKFLOW', 'APPROVAL', 1400, 0, NULL),
('DISPUTE_RESOLUTION', 'Dispute Resolution Rules', 'Rules for handling disputes', 'OPERATIONAL', 'DISPUTE', 1500, 0, NULL);

CREATE TABLE rule_parameter (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    parameter_type VARCHAR(50) NOT NULL,
    data_type VARCHAR(20) NOT NULL,
    default_value TEXT NULL,
    min_value DECIMAL(20,6) NULL,
    max_value DECIMAL(20,6) NULL,
    allowed_values JSON NULL,
    is_required BOOLEAN NOT NULL DEFAULT 1,
    is_user_configurable BOOLEAN NOT NULL DEFAULT 0,
    applies_to_rule_type VARCHAR(50) NULL,
    display_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT 1,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_rule_parameter_code (code),
    KEY idx_rule_parameter_type (parameter_type),
    KEY idx_rule_parameter_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO rule_parameter (code, name, description, parameter_type, data_type, default_value, min_value, max_value, is_required, is_user_configurable, applies_to_rule_type, display_order) VALUES
('STREAMING_RATE', 'Streaming Rate', 'Rate per stream', 'RATE', 'DECIMAL', '0.003', 0.0001, 1.0, 1, 1, 'STREAMING_CALC', 100),
('MECHANICAL_RATE', 'Mechanical Rate', 'Statutory mechanical rate', 'RATE', 'DECIMAL', '0.091', 0.01, 1.0, 1, 0, 'MECHANICAL_ROYALTY', 200),
('PACKAGING_DEDUCTION', 'Packaging Deduction', 'CD packaging deduction', 'PERCENTAGE', 'DECIMAL', '25', 0, 50, 1, 1, 'ROYALTY_CALC', 300),
('RESERVE_PERCENTAGE', 'Reserve Percentage', 'Breakage reserve percentage', 'PERCENTAGE', 'DECIMAL', '20', 0, 50, 1, 1, 'BREAKAGE', 400),
('RECOUPMENT_RATE', 'Recoupment Rate', 'Advance recoupment rate', 'PERCENTAGE', 'DECIMAL', '100', 50, 100, 1, 1, 'RECOUPMENT', 500),
('ADMIN_FEE', 'Administration Fee', 'Publisher admin fee', 'PERCENTAGE', 'DECIMAL', '15', 0, 50, 1, 1, 'REVENUE_SPLIT', 600),
('WITHHOLDING_RATE', 'Withholding Rate', 'Tax withholding rate', 'PERCENTAGE', 'DECIMAL', '30', 0, 50, 1, 1, 'TAX_WITHHOLDING', 700),
('ESCALATION_RATE', 'Escalation Rate', 'Annual rate escalation', 'PERCENTAGE', 'DECIMAL', '2', 0, 10, 1, 1, 'ESCALATION', 800),
('MINIMUM_PAYMENT', 'Minimum Payment', 'Minimum payment threshold', 'AMOUNT', 'DECIMAL', '100', 1, 10000, 1, 1, 'PAYMENT_DISTRIBUTION', 900),
('AUDIT_THRESHOLD', 'Audit Threshold', 'Threshold for audit rights', 'AMOUNT', 'DECIMAL', '10000', 1000, 100000, 1, 1, 'AUDIT_THRESHOLD', 1000),
('SYNC_BASE_FEE', 'Sync Base Fee', 'Base sync license fee', 'AMOUNT', 'DECIMAL', '5000', 100, 1000000, 1, 1, 'SYNC_FEE', 1100),
('NFT_ROYALTY_CAP', 'NFT Royalty Cap', 'Maximum NFT royalty', 'PERCENTAGE', 'DECIMAL', '10', 0, 30, 1, 1, 'NFT_ROYALTY', 1200),
('PRORATION_METHOD', 'Proration Method', 'Method for proration', 'CHOICE', 'STRING', 'DAILY_ACTUAL', NULL, NULL, 1, 1, NULL, 1300),
('ROUNDING_METHOD', 'Rounding Method', 'Method for rounding', 'CHOICE', 'STRING', 'ROUND_NEAREST', NULL, NULL, 1, 1, NULL, 1400),
('CURRENCY_PRECISION', 'Currency Precision', 'Decimal precision for currency', 'INTEGER', 'INTEGER', '2', 0, 8, 1, 1, 'CURRENCY_CONVERSION', 1500);

CREATE TABLE rule_trigger (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    trigger_type VARCHAR(50) NOT NULL,
    trigger_event VARCHAR(100) NOT NULL,
    trigger_condition TEXT NULL,
    target_rule_set_id INT UNSIGNED NOT NULL,
    priority INT UNSIGNED NOT NULL DEFAULT 1000,
    is_async BOOLEAN NOT NULL DEFAULT 0,
    max_retries INT UNSIGNED NOT NULL DEFAULT 3,
    timeout_seconds INT UNSIGNED NULL,
    is_active BOOLEAN NOT NULL DEFAULT 1,
    created_by INT UNSIGNED NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED NULL,
    updated_at TIMESTAMP NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_rule_trigger_code (code),
    KEY idx_rule_trigger_type (trigger_type),
    KEY idx_rule_trigger_event (trigger_event),
    KEY idx_rule_trigger_rule_set (target_rule_set_id),
    KEY idx_rule_trigger_active (is_active),
    CONSTRAINT fk_rule_trigger_rule_set FOREIGN KEY (target_rule_set_id) REFERENCES business_rule_set(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO rule_trigger (code, name, description, trigger_type, trigger_event, trigger_condition, target_rule_set_id, priority, is_async) VALUES
('RECORDING_CREATED', 'Recording Created', 'Triggered when recording created', 'EVENT', 'recording.create', NULL, 4, 100, 0),
('PAYMENT_RECEIVED', 'Payment Received', 'Triggered on payment receipt', 'EVENT', 'payment.received', 'amount > 0', 2, 200, 0),
('ADVANCE_PAID', 'Advance Paid', 'Triggered when advance paid', 'EVENT', 'advance.paid', NULL, 3, 300, 0),
('CONTRACT_SIGNED', 'Contract Signed', 'Triggered on contract signature', 'EVENT', 'contract.signed', NULL, 6, 400, 0),
('PERIOD_END', 'Period End', 'End of accounting period', 'SCHEDULE', 'period.end', NULL, 2, 500, 1),
('STREAM_REPORT', 'Stream Report Received', 'DSP stream report received', 'EVENT', 'stream.report.received', NULL, 11, 600, 1),
('SYNC_REQUEST', 'Sync Request', 'Sync license requested', 'EVENT', 'sync.request', NULL, 8, 700, 0),
('NFT_MINTED', 'NFT Minted', 'NFT minted on blockchain', 'EVENT', 'nft.minted', NULL, 9, 800, 1),
('AUDIT_REQUEST', 'Audit Request', 'Audit requested by party', 'EVENT', 'audit.request', NULL, 10, 900, 0),
('TAX_PERIOD', 'Tax Period End', 'End of tax period', 'SCHEDULE', 'tax.period.end', NULL, 12, 1000, 1),
('THRESHOLD_REACHED', 'Threshold Reached', 'Payment threshold reached', 'CONDITION', 'balance.threshold', 'balance >= threshold', 5, 1100, 0),
('DISPUTE_FILED', 'Dispute Filed', 'Dispute filed by party', 'EVENT', 'dispute.filed', NULL, 15, 1200, 0),
('DATA_RETENTION', 'Data Retention Check', 'Scheduled retention check', 'SCHEDULE', 'retention.check', NULL, 13, 1300, 1),
('APPROVAL_NEEDED', 'Approval Needed', 'Approval required', 'CONDITION', 'approval.required', 'amount > approval_limit', 14, 1400, 0),
('METADATA_UPDATED', 'Metadata Updated', 'Metadata has been updated', 'EVENT', 'metadata.update', NULL, 4, 1500, 0);

-- Indexes for performance
CREATE INDEX idx_calculation_method_blockchain ON calculation_method(is_blockchain_compatible);
CREATE INDEX idx_validation_rule_severity ON validation_rule(severity);
CREATE INDEX idx_rule_action_approval ON rule_action(requires_approval);
CREATE INDEX idx_formula_template_certified ON formula_template(is_certified);
CREATE INDEX idx_business_rule_set_conditional ON business_rule_set(is_conditional);
CREATE INDEX idx_rule_parameter_configurable ON rule_parameter(is_user_configurable);
CREATE INDEX idx_rule_trigger_async ON rule_trigger(is_async);

-- Add foreign key constraints for relationships
ALTER TABLE rule_condition 
ADD CONSTRAINT chk_rule_condition_operator 
CHECK (operator IN ('EQUALS', 'NOT_EQUALS', 'GREATER_THAN', 'LESS_THAN', 'GREATER_EQUAL', 'LESS_EQUAL', 'IN', 'NOT_IN', 'CONTAINS', 'STARTS_WITH', 'ENDS_WITH', 'BETWEEN', 'IS_NULL', 'IS_NOT_NULL', 'SUM', 'COUNT', 'AVG', 'MIN', 'MAX'));

ALTER TABLE rule_condition 
ADD CONSTRAINT chk_rule_condition_logical 
CHECK (logical_operator IN ('AND', 'OR', 'NOT') OR logical_operator IS NULL);

ALTER TABLE validation_rule 
ADD CONSTRAINT chk_validation_rule_severity 
CHECK (severity IN ('ERROR', 'WARNING', 'INFO'));

ALTER TABLE rule_action 
ADD CONSTRAINT chk_rule_action_audit 
CHECK (audit_level IN ('NONE', 'NORMAL', 'DETAILED', 'HIGH'));

ALTER TABLE formula_template 
ADD CONSTRAINT chk_formula_template_output 
CHECK (output_type IN ('INTEGER', 'DECIMAL', 'PERCENTAGE', 'CURRENCY', 'BOOLEAN', 'STRING'));

ALTER TABLE rule_parameter 
ADD CONSTRAINT chk_rule_parameter_data 
CHECK (data_type IN ('INTEGER', 'DECIMAL', 'STRING', 'BOOLEAN', 'DATE', 'DATETIME', 'JSON'));

ALTER TABLE rule_trigger 
ADD CONSTRAINT chk_rule_trigger_type 
CHECK (trigger_type IN ('EVENT', 'SCHEDULE', 'CONDITION', 'MANUAL'));

-- =====================================================
-- SECTION 25: API & INTEGRATION
-- =====================================================

-- Core API Tables

-- API Version Management
CREATE TABLE api_version (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    version_code VARCHAR(20) NOT NULL,
    version_name VARCHAR(100) NOT NULL,
    release_date DATE NOT NULL,
    deprecation_date DATE,
    sunset_date DATE,
    major_version INT UNSIGNED NOT NULL,
    minor_version INT UNSIGNED NOT NULL,
    patch_version INT UNSIGNED NOT NULL,
    is_stable BOOLEAN DEFAULT TRUE,
    is_beta BOOLEAN DEFAULT FALSE,
    is_deprecated BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    changelog_url VARCHAR(500),
    documentation_url VARCHAR(500),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_version_code (version_code),
    INDEX idx_active_stable (is_active, is_stable),
    INDEX idx_dates (release_date, deprecation_date)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO api_version (version_code, version_name, release_date, major_version, minor_version, patch_version) VALUES
('v1.0.0', 'Initial Release', '2025-01-01', 1, 0, 0),
('v1.1.0', 'Enhanced Royalty APIs', '2025-02-01', 1, 1, 0),
('v1.2.0', 'Blockchain Integration', '2025-03-01', 1, 2, 0),
('v2.0.0', 'GraphQL Support', '2025-04-01', 2, 0, 0),
('v2.1.0', 'Webhook System', '2025-05-01', 2, 1, 0);

-- Endpoint Types
CREATE TABLE endpoint_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    type_code VARCHAR(50) NOT NULL UNIQUE,
    type_name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50),
    requires_auth BOOLEAN DEFAULT TRUE,
    is_public BOOLEAN DEFAULT FALSE,
    is_internal BOOLEAN DEFAULT FALSE,
    rate_limit_tier VARCHAR(50),
    cache_ttl_seconds INT UNSIGNED DEFAULT 0,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_type_code (type_code),
    INDEX idx_category (category),
    INDEX idx_auth_public (requires_auth, is_public)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO endpoint_type (type_code, type_name, category, requires_auth, is_public) VALUES
('catalog_search', 'Catalog Search', 'catalog', TRUE, FALSE),
('catalog_create', 'Catalog Create', 'catalog', TRUE, FALSE),
('catalog_update', 'Catalog Update', 'catalog', TRUE, FALSE),
('catalog_delete', 'Catalog Delete', 'catalog', TRUE, FALSE),
('royalty_calculate', 'Royalty Calculation', 'royalty', TRUE, FALSE),
('royalty_report', 'Royalty Report', 'royalty', TRUE, FALSE),
('royalty_distribute', 'Royalty Distribution', 'royalty', TRUE, FALSE),
('agreement_create', 'Agreement Create', 'agreement', TRUE, FALSE),
('agreement_sign', 'Agreement Sign', 'agreement', TRUE, FALSE),
('agreement_verify', 'Agreement Verify', 'agreement', TRUE, FALSE),
('user_auth', 'User Authentication', 'auth', FALSE, TRUE),
('user_register', 'User Registration', 'auth', FALSE, TRUE),
('user_profile', 'User Profile', 'user', TRUE, FALSE),
('metadata_validate', 'Metadata Validation', 'metadata', TRUE, FALSE),
('metadata_enrich', 'Metadata Enrichment', 'metadata', TRUE, FALSE),
('blockchain_mint', 'NFT Minting', 'blockchain', TRUE, FALSE),
('blockchain_transfer', 'Token Transfer', 'blockchain', TRUE, FALSE),
('blockchain_verify', 'Blockchain Verification', 'blockchain', TRUE, FALSE),
('sync_pro', 'PRO Synchronization', 'sync', TRUE, FALSE),
('sync_dsp', 'DSP Synchronization', 'sync', TRUE, FALSE),
('webhook_register', 'Webhook Registration', 'webhook', TRUE, FALSE),
('webhook_test', 'Webhook Test', 'webhook', TRUE, FALSE),
('analytics_dashboard', 'Analytics Dashboard', 'analytics', TRUE, FALSE),
('analytics_export', 'Analytics Export', 'analytics', TRUE, FALSE),
('payment_process', 'Payment Processing', 'payment', TRUE, FALSE),
('payment_history', 'Payment History', 'payment', TRUE, FALSE),
('compliance_audit', 'Compliance Audit', 'compliance', TRUE, FALSE),
('health_check', 'API Health Check', 'system', FALSE, TRUE),
('rate_limit_status', 'Rate Limit Status', 'system', TRUE, FALSE),
('api_documentation', 'API Documentation', 'system', FALSE, TRUE);

-- HTTP Methods
CREATE TABLE http_method (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    method_code VARCHAR(20) NOT NULL UNIQUE,
    method_name VARCHAR(50) NOT NULL,
    description TEXT,
    is_safe BOOLEAN DEFAULT FALSE,
    is_idempotent BOOLEAN DEFAULT FALSE,
    has_request_body BOOLEAN DEFAULT FALSE,
    has_response_body BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_method_code (method_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO http_method (method_code, method_name, is_safe, is_idempotent, has_request_body, has_response_body) VALUES
('GET', 'Get Resource', TRUE, TRUE, FALSE, TRUE),
('POST', 'Create Resource', FALSE, FALSE, TRUE, TRUE),
('PUT', 'Update Resource', FALSE, TRUE, TRUE, TRUE),
('PATCH', 'Partial Update', FALSE, FALSE, TRUE, TRUE),
('DELETE', 'Delete Resource', FALSE, TRUE, FALSE, TRUE),
('HEAD', 'Get Headers', TRUE, TRUE, FALSE, FALSE),
('OPTIONS', 'Get Options', TRUE, TRUE, FALSE, TRUE),
('CONNECT', 'Establish Tunnel', FALSE, FALSE, FALSE, TRUE),
('TRACE', 'Message Loop-back', TRUE, TRUE, FALSE, TRUE);

-- Response Formats
CREATE TABLE response_format (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    format_code VARCHAR(50) NOT NULL UNIQUE,
    format_name VARCHAR(100) NOT NULL,
    mime_type VARCHAR(100) NOT NULL,
    file_extension VARCHAR(10),
    is_default BOOLEAN DEFAULT FALSE,
    is_binary BOOLEAN DEFAULT FALSE,
    compression_supported BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_format_code (format_code),
    INDEX idx_mime_type (mime_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO response_format (format_code, format_name, mime_type, file_extension, is_default) VALUES
('json', 'JSON', 'application/json', 'json', TRUE),
('xml', 'XML', 'application/xml', 'xml', FALSE),
('csv', 'CSV', 'text/csv', 'csv', FALSE),
('pdf', 'PDF', 'application/pdf', 'pdf', FALSE),
('html', 'HTML', 'text/html', 'html', FALSE),
('plain', 'Plain Text', 'text/plain', 'txt', FALSE),
('yaml', 'YAML', 'application/x-yaml', 'yaml', FALSE),
('msgpack', 'MessagePack', 'application/msgpack', 'msgpack', FALSE),
('protobuf', 'Protocol Buffers', 'application/x-protobuf', 'proto', FALSE),
('graphql', 'GraphQL', 'application/graphql', 'graphql', FALSE),
('jsonld', 'JSON-LD', 'application/ld+json', 'jsonld', FALSE),
('xlsx', 'Excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'xlsx', FALSE);

-- Error Codes
CREATE TABLE error_code (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    error_code VARCHAR(50) NOT NULL UNIQUE,
    http_status INT UNSIGNED NOT NULL,
    error_type VARCHAR(50) NOT NULL,
    error_message VARCHAR(500) NOT NULL,
    user_message VARCHAR(500),
    developer_message TEXT,
    documentation_url VARCHAR(500),
    is_retryable BOOLEAN DEFAULT FALSE,
    retry_after_seconds INT UNSIGNED,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_error_code (error_code),
    INDEX idx_http_status (http_status),
    INDEX idx_error_type (error_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO error_code (error_code, http_status, error_type, error_message, user_message, is_retryable) VALUES
('AUTH_001', 401, 'authentication', 'Invalid credentials', 'Authentication failed. Please check your credentials.', FALSE),
('AUTH_002', 401, 'authentication', 'Token expired', 'Your session has expired. Please login again.', FALSE),
('AUTH_003', 403, 'authorization', 'Insufficient permissions', 'You do not have permission to access this resource.', FALSE),
('VAL_001', 400, 'validation', 'Invalid request format', 'The request format is invalid.', FALSE),
('VAL_002', 400, 'validation', 'Missing required field', 'Required fields are missing from your request.', FALSE),
('VAL_003', 400, 'validation', 'Invalid field value', 'One or more field values are invalid.', FALSE),
('RES_001', 404, 'resource', 'Resource not found', 'The requested resource was not found.', FALSE),
('RES_002', 409, 'resource', 'Resource conflict', 'The resource already exists or conflicts with existing data.', FALSE),
('RES_003', 410, 'resource', 'Resource deleted', 'The requested resource has been permanently deleted.', FALSE),
('RATE_001', 429, 'rate_limit', 'Rate limit exceeded', 'Too many requests. Please try again later.', TRUE),
('RATE_002', 429, 'rate_limit', 'Quota exceeded', 'Your API quota has been exceeded.', FALSE),
('SYS_001', 500, 'system', 'Internal server error', 'An unexpected error occurred. Please try again.', TRUE),
('SYS_002', 502, 'system', 'Bad gateway', 'The server received an invalid response from upstream.', TRUE),
('SYS_003', 503, 'system', 'Service unavailable', 'The service is temporarily unavailable.', TRUE),
('SYS_004', 504, 'system', 'Gateway timeout', 'The request timed out. Please try again.', TRUE),
('BUS_001', 422, 'business', 'Invalid business logic', 'The request violates business rules.', FALSE),
('BUS_002', 422, 'business', 'Insufficient balance', 'Insufficient balance to complete this transaction.', FALSE),
('BUS_003', 422, 'business', 'Agreement not signed', 'The agreement must be signed before proceeding.', FALSE),
('INT_001', 502, 'integration', 'External service error', 'An external service returned an error.', TRUE),
('INT_002', 504, 'integration', 'External service timeout', 'The external service did not respond in time.', TRUE),
('BLOCK_001', 422, 'blockchain', 'Transaction failed', 'The blockchain transaction failed.', FALSE),
('BLOCK_002', 422, 'blockchain', 'Gas estimation failed', 'Unable to estimate gas for this transaction.', FALSE),
('DATA_001', 422, 'data', 'Data integrity error', 'Data integrity check failed.', FALSE),
('DATA_002', 413, 'data', 'Payload too large', 'The request payload is too large.', FALSE),
('MEDIA_001', 415, 'media', 'Unsupported media type', 'The media type is not supported.', FALSE),
('SEC_001', 403, 'security', 'Security violation', 'Security policy violation detected.', FALSE),
('SEC_002', 403, 'security', 'IP blocked', 'Your IP address has been blocked.', FALSE),
('MAINT_001', 503, 'maintenance', 'Maintenance mode', 'The system is under maintenance.', TRUE),
('DEP_001', 410, 'deprecation', 'Deprecated endpoint', 'This endpoint has been deprecated.', FALSE);

-- Additional API Tables

-- API Authentication Types
CREATE TABLE api_authentication_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    auth_type_code VARCHAR(50) NOT NULL UNIQUE,
    auth_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    header_name VARCHAR(100),
    parameter_name VARCHAR(100),
    token_prefix VARCHAR(50),
    requires_client_secret BOOLEAN DEFAULT FALSE,
    supports_refresh BOOLEAN DEFAULT FALSE,
    token_lifetime_seconds INT UNSIGNED,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_auth_type_code (auth_type_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO api_authentication_type (auth_type_code, auth_type_name, header_name, token_prefix, requires_client_secret, supports_refresh, token_lifetime_seconds) VALUES
('bearer', 'Bearer Token', 'Authorization', 'Bearer', FALSE, TRUE, 3600),
('api_key', 'API Key', 'X-API-Key', NULL, FALSE, FALSE, NULL),
('oauth2', 'OAuth 2.0', 'Authorization', 'Bearer', TRUE, TRUE, 3600),
('jwt', 'JSON Web Token', 'Authorization', 'Bearer', FALSE, TRUE, 3600),
('basic', 'Basic Authentication', 'Authorization', 'Basic', FALSE, FALSE, NULL),
('hmac', 'HMAC Signature', 'X-HMAC-Signature', NULL, TRUE, FALSE, NULL),
('mtls', 'Mutual TLS', NULL, NULL, FALSE, FALSE, NULL),
('saml', 'SAML', NULL, NULL, FALSE, FALSE, 3600),
('oidc', 'OpenID Connect', 'Authorization', 'Bearer', TRUE, TRUE, 3600),
('digest', 'Digest Authentication', 'Authorization', 'Digest', FALSE, FALSE, NULL);

-- API Rate Limit Tiers
CREATE TABLE api_rate_limit_tier (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    tier_code VARCHAR(50) NOT NULL UNIQUE,
    tier_name VARCHAR(100) NOT NULL,
    requests_per_minute INT UNSIGNED,
    requests_per_hour INT UNSIGNED,
    requests_per_day INT UNSIGNED,
    requests_per_month BIGINT UNSIGNED,
    burst_limit INT UNSIGNED,
    concurrent_limit INT UNSIGNED,
    response_quota_gb DECIMAL(10,2),
    is_default BOOLEAN DEFAULT FALSE,
    priority_level INT UNSIGNED DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_tier_code (tier_code),
    INDEX idx_priority (priority_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO api_rate_limit_tier (tier_code, tier_name, requests_per_minute, requests_per_hour, requests_per_day, requests_per_month, burst_limit, concurrent_limit, response_quota_gb, is_default, priority_level) VALUES
('free', 'Free Tier', 60, 1000, 10000, 100000, 10, 2, 1.00, TRUE, 1),
('basic', 'Basic Tier', 300, 10000, 100000, 1000000, 50, 5, 10.00, FALSE, 2),
('pro', 'Professional Tier', 1000, 50000, 500000, 10000000, 100, 10, 100.00, FALSE, 3),
('enterprise', 'Enterprise Tier', 5000, 200000, 2000000, 50000000, 500, 50, 1000.00, FALSE, 4),
('unlimited', 'Unlimited Tier', NULL, NULL, NULL, NULL, 1000, 100, NULL, FALSE, 5);

-- API Scopes
CREATE TABLE api_scope (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    scope_code VARCHAR(100) NOT NULL UNIQUE,
    scope_name VARCHAR(200) NOT NULL,
    description TEXT,
    resource_type VARCHAR(50),
    permission_level VARCHAR(50),
    parent_scope_id INT UNSIGNED,
    is_system BOOLEAN DEFAULT FALSE,
    requires_approval BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_scope_code (scope_code),
    INDEX idx_resource_type (resource_type),
    INDEX idx_parent (parent_scope_id),
    FOREIGN KEY (parent_scope_id) REFERENCES api_scope(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO api_scope (scope_code, scope_name, resource_type, permission_level, is_system) VALUES
('catalog:read', 'Read Catalog', 'catalog', 'read', FALSE),
('catalog:write', 'Write Catalog', 'catalog', 'write', FALSE),
('catalog:delete', 'Delete Catalog', 'catalog', 'delete', FALSE),
('royalty:read', 'Read Royalties', 'royalty', 'read', FALSE),
('royalty:calculate', 'Calculate Royalties', 'royalty', 'execute', FALSE),
('royalty:distribute', 'Distribute Royalties', 'royalty', 'execute', TRUE),
('agreement:read', 'Read Agreements', 'agreement', 'read', FALSE),
('agreement:create', 'Create Agreements', 'agreement', 'write', FALSE),
('agreement:sign', 'Sign Agreements', 'agreement', 'execute', FALSE),
('user:read', 'Read User Profile', 'user', 'read', FALSE),
('user:write', 'Update User Profile', 'user', 'write', FALSE),
('blockchain:read', 'Read Blockchain Data', 'blockchain', 'read', FALSE),
('blockchain:write', 'Write Blockchain Data', 'blockchain', 'write', TRUE),
('analytics:read', 'Read Analytics', 'analytics', 'read', FALSE),
('analytics:export', 'Export Analytics', 'analytics', 'execute', FALSE),
('payment:read', 'Read Payments', 'payment', 'read', FALSE),
('payment:process', 'Process Payments', 'payment', 'execute', TRUE),
('webhook:manage', 'Manage Webhooks', 'webhook', 'admin', FALSE),
('sync:pro', 'Sync with PROs', 'sync', 'execute', TRUE),
('sync:dsp', 'Sync with DSPs', 'sync', 'execute', TRUE),
('admin:all', 'Full Admin Access', 'all', 'admin', TRUE),
('offline_access', 'Offline Access', 'auth', 'read', FALSE),
('openid', 'OpenID', 'auth', 'read', FALSE),
('profile', 'Profile', 'user', 'read', FALSE),
('email', 'Email', 'user', 'read', FALSE);

-- API Client Types
CREATE TABLE api_client_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    client_type_code VARCHAR(50) NOT NULL UNIQUE,
    client_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    requires_secret BOOLEAN DEFAULT TRUE,
    can_use_refresh_token BOOLEAN DEFAULT TRUE,
    redirect_uri_required BOOLEAN DEFAULT FALSE,
    pkce_required BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_client_type_code (client_type_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO api_client_type (client_type_code, client_type_name, requires_secret, can_use_refresh_token, redirect_uri_required, pkce_required) VALUES
('confidential', 'Confidential Client', TRUE, TRUE, FALSE, FALSE),
('public', 'Public Client', FALSE, TRUE, TRUE, TRUE),
('spa', 'Single Page Application', FALSE, TRUE, TRUE, TRUE),
('native', 'Native Application', FALSE, TRUE, TRUE, TRUE),
('machine', 'Machine to Machine', TRUE, FALSE, FALSE, FALSE),
('cli', 'Command Line Interface', TRUE, TRUE, FALSE, FALSE),
('iot', 'IoT Device', TRUE, FALSE, FALSE, FALSE),
('trusted', 'Trusted Partner', TRUE, TRUE, FALSE, FALSE);

-- Webhook Event Types
CREATE TABLE webhook_event_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    event_code VARCHAR(100) NOT NULL UNIQUE,
    event_name VARCHAR(200) NOT NULL,
    event_category VARCHAR(50),
    payload_schema JSON,
    retry_attempts INT UNSIGNED DEFAULT 3,
    retry_interval_seconds INT UNSIGNED DEFAULT 60,
    timeout_seconds INT UNSIGNED DEFAULT 30,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_event_code (event_code),
    INDEX idx_event_category (event_category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO webhook_event_type (event_code, event_name, event_category, retry_attempts) VALUES
('catalog.created', 'Catalog Item Created', 'catalog', 3),
('catalog.updated', 'Catalog Item Updated', 'catalog', 3),
('catalog.deleted', 'Catalog Item Deleted', 'catalog', 3),
('catalog.published', 'Catalog Item Published', 'catalog', 3),
('royalty.calculated', 'Royalty Calculated', 'royalty', 5),
('royalty.distributed', 'Royalty Distributed', 'royalty', 5),
('royalty.payment.sent', 'Royalty Payment Sent', 'royalty', 5),
('agreement.created', 'Agreement Created', 'agreement', 3),
('agreement.signed', 'Agreement Signed', 'agreement', 5),
('agreement.expired', 'Agreement Expired', 'agreement', 3),
('user.registered', 'User Registered', 'user', 3),
('user.verified', 'User Verified', 'user', 3),
('user.suspended', 'User Suspended', 'user', 3),
('nft.minted', 'NFT Minted', 'blockchain', 5),
('nft.transferred', 'NFT Transferred', 'blockchain', 5),
('sync.completed', 'Sync Completed', 'sync', 3),
('sync.failed', 'Sync Failed', 'sync', 5),
('payment.received', 'Payment Received', 'payment', 5),
('payment.failed', 'Payment Failed', 'payment', 5),
('compliance.alert', 'Compliance Alert', 'compliance', 3),
('system.maintenance', 'System Maintenance', 'system', 1),
('api.quota.warning', 'API Quota Warning', 'api', 3),
('api.quota.exceeded', 'API Quota Exceeded', 'api', 3);

-- Webhook Delivery Status
CREATE TABLE webhook_delivery_status (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    status_code VARCHAR(50) NOT NULL UNIQUE,
    status_name VARCHAR(100) NOT NULL,
    is_success BOOLEAN DEFAULT FALSE,
    is_final BOOLEAN DEFAULT FALSE,
    should_retry BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_status_code (status_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO webhook_delivery_status (status_code, status_name, is_success, is_final, should_retry) VALUES
('pending', 'Pending Delivery', FALSE, FALSE, FALSE),
('sent', 'Sent', FALSE, FALSE, FALSE),
('delivered', 'Delivered', TRUE, TRUE, FALSE),
('failed', 'Failed', FALSE, FALSE, TRUE),
('timeout', 'Timeout', FALSE, FALSE, TRUE),
('invalid_url', 'Invalid URL', FALSE, TRUE, FALSE),
('invalid_response', 'Invalid Response', FALSE, FALSE, TRUE),
('max_retries', 'Max Retries Reached', FALSE, TRUE, FALSE),
('disabled', 'Webhook Disabled', FALSE, TRUE, FALSE),
('queued', 'Queued', FALSE, FALSE, FALSE);

-- Integration Partner Types
CREATE TABLE integration_partner_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    partner_type_code VARCHAR(50) NOT NULL UNIQUE,
    partner_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    industry_category VARCHAR(50),
    integration_complexity VARCHAR(20),
    typical_sync_frequency VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_partner_type_code (partner_type_code),
    INDEX idx_industry_category (industry_category)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO integration_partner_type (partner_type_code, partner_type_name, industry_category, integration_complexity) VALUES
('pro', 'Performance Rights Organization', 'rights', 'high'),
('dsp', 'Digital Service Provider', 'distribution', 'high'),
('label', 'Record Label', 'business', 'medium'),
('publisher', 'Music Publisher', 'business', 'medium'),
('distributor', 'Digital Distributor', 'distribution', 'medium'),
('metadata', 'Metadata Provider', 'data', 'medium'),
('blockchain', 'Blockchain Network', 'technology', 'high'),
('payment', 'Payment Processor', 'financial', 'high'),
('analytics', 'Analytics Platform', 'data', 'low'),
('social', 'Social Media Platform', 'marketing', 'medium'),
('sync', 'Sync Licensing Platform', 'licensing', 'medium'),
('merchandise', 'Merchandise Platform', 'commerce', 'low'),
('ticketing', 'Ticketing Platform', 'live', 'medium'),
('crm', 'CRM System', 'business', 'medium'),
('accounting', 'Accounting Software', 'financial', 'high'),
('legal', 'Legal Services', 'compliance', 'medium'),
('marketing', 'Marketing Platform', 'marketing', 'low'),
('streaming', 'Streaming Analytics', 'data', 'medium');

-- Integration Protocols
CREATE TABLE integration_protocol (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    protocol_code VARCHAR(50) NOT NULL UNIQUE,
    protocol_name VARCHAR(100) NOT NULL,
    protocol_version VARCHAR(20),
    transport_layer VARCHAR(50),
    data_format VARCHAR(50),
    authentication_required BOOLEAN DEFAULT TRUE,
    encryption_required BOOLEAN DEFAULT TRUE,
    async_supported BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_protocol_code (protocol_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO integration_protocol (protocol_code, protocol_name, protocol_version, transport_layer, data_format, async_supported) VALUES
('rest', 'REST API', '1.0', 'HTTPS', 'JSON', FALSE),
('soap', 'SOAP', '1.2', 'HTTPS', 'XML', FALSE),
('graphql', 'GraphQL', '2021', 'HTTPS', 'JSON', FALSE),
('grpc', 'gRPC', '1.0', 'HTTP/2', 'Protobuf', TRUE),
('websocket', 'WebSocket', '13', 'WSS', 'JSON', TRUE),
('webhook', 'Webhook', '1.0', 'HTTPS', 'JSON', TRUE),
('ftp', 'FTP/SFTP', '1.0', 'FTP/SFTP', 'Various', FALSE),
('email', 'Email', '1.0', 'SMTP', 'MIME', TRUE),
('message_queue', 'Message Queue', '1.0', 'AMQP', 'JSON', TRUE),
('blockchain_rpc', 'Blockchain RPC', '2.0', 'HTTPS', 'JSON-RPC', FALSE),
('ddex', 'DDEX', '4.0', 'HTTPS', 'XML', FALSE),
('cwr', 'CISAC CWR', '3.0', 'FTP', 'Fixed-width', FALSE);

-- Data Sync Frequency
CREATE TABLE data_sync_frequency (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    frequency_code VARCHAR(50) NOT NULL UNIQUE,
    frequency_name VARCHAR(100) NOT NULL,
    interval_minutes INT UNSIGNED,
    cron_expression VARCHAR(100),
    is_realtime BOOLEAN DEFAULT FALSE,
    is_batch BOOLEAN DEFAULT TRUE,
    typical_volume VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_frequency_code (frequency_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_sync_frequency (frequency_code, frequency_name, interval_minutes, cron_expression, is_realtime, is_batch) VALUES
('realtime', 'Real-time', 0, NULL, TRUE, FALSE),
('minute', 'Every Minute', 1, '* * * * *', FALSE, FALSE),
('five_minutes', 'Every 5 Minutes', 5, '*/5 * * * *', FALSE, FALSE),
('hourly', 'Hourly', 60, '0 * * * *', FALSE, TRUE),
('daily', 'Daily', 1440, '0 0 * * *', FALSE, TRUE),
('weekly', 'Weekly', 10080, '0 0 * * 0', FALSE, TRUE),
('monthly', 'Monthly', 43200, '0 0 1 * *', FALSE, TRUE),
('quarterly', 'Quarterly', 129600, '0 0 1 */3 *', FALSE, TRUE),
('on_demand', 'On Demand', NULL, NULL, FALSE, TRUE),
('event_driven', 'Event Driven', NULL, NULL, TRUE, FALSE);

-- Field Mapping Types
CREATE TABLE field_mapping_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    mapping_type_code VARCHAR(50) NOT NULL UNIQUE,
    mapping_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    source_format VARCHAR(50),
    target_format VARCHAR(50),
    is_reversible BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_mapping_type_code (mapping_type_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO field_mapping_type (mapping_type_code, mapping_type_name, source_format, target_format, is_reversible) VALUES
('direct', 'Direct Mapping', 'any', 'any', TRUE),
('concatenate', 'Concatenation', 'multiple', 'single', FALSE),
('split', 'Split', 'single', 'multiple', FALSE),
('lookup', 'Lookup Table', 'code', 'value', TRUE),
('transform', 'Transformation', 'any', 'any', FALSE),
('conditional', 'Conditional', 'any', 'any', FALSE),
('constant', 'Constant Value', 'none', 'single', FALSE),
('formula', 'Formula', 'multiple', 'single', FALSE),
('regex', 'Regular Expression', 'string', 'string', FALSE),
('date_format', 'Date Format', 'date', 'date', TRUE);

-- Transformation Rule Types
CREATE TABLE transformation_rule_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    rule_type_code VARCHAR(50) NOT NULL UNIQUE,
    rule_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    input_type VARCHAR(50),
    output_type VARCHAR(50),
    is_chainable BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_rule_type_code (rule_type_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO transformation_rule_type (rule_type_code, rule_type_name, input_type, output_type, is_chainable) VALUES
('uppercase', 'Convert to Uppercase', 'string', 'string', TRUE),
('lowercase', 'Convert to Lowercase', 'string', 'string', TRUE),
('trim', 'Trim Whitespace', 'string', 'string', TRUE),
('pad', 'Pad String', 'string', 'string', TRUE),
('substring', 'Extract Substring', 'string', 'string', TRUE),
('replace', 'Replace Text', 'string', 'string', TRUE),
('number_format', 'Format Number', 'number', 'string', TRUE),
('round', 'Round Number', 'number', 'number', TRUE),
('date_format', 'Format Date', 'date', 'string', TRUE),
('date_parse', 'Parse Date', 'string', 'date', TRUE),
('currency_convert', 'Convert Currency', 'number', 'number', TRUE),
('encode', 'Encode Data', 'any', 'string', TRUE),
('decode', 'Decode Data', 'string', 'any', TRUE),
('hash', 'Generate Hash', 'any', 'string', FALSE),
('encrypt', 'Encrypt Data', 'any', 'string', FALSE),
('validate', 'Validate Data', 'any', 'boolean', FALSE);

-- API Deprecation Schedule
CREATE TABLE api_deprecation_schedule (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    schedule_code VARCHAR(50) NOT NULL UNIQUE,
    schedule_name VARCHAR(100) NOT NULL,
    notice_days INT UNSIGNED NOT NULL,
    sunset_days INT UNSIGNED NOT NULL,
    migration_guide_required BOOLEAN DEFAULT TRUE,
    auto_disable BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_schedule_code (schedule_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO api_deprecation_schedule (schedule_code, schedule_name, notice_days, sunset_days, migration_guide_required, auto_disable) VALUES
('immediate', 'Immediate', 0, 0, FALSE, TRUE),
('emergency', 'Emergency', 7, 14, TRUE, TRUE),
('standard', 'Standard', 90, 180, TRUE, FALSE),
('extended', 'Extended', 180, 365, TRUE, FALSE),
('lts', 'Long Term Support', 365, 730, TRUE, FALSE);

-- API Documentation Types
CREATE TABLE api_documentation_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    doc_type_code VARCHAR(50) NOT NULL UNIQUE,
    doc_type_name VARCHAR(100) NOT NULL,
    format VARCHAR(50),
    is_interactive BOOLEAN DEFAULT FALSE,
    supports_try_it BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_doc_type_code (doc_type_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO api_documentation_type (doc_type_code, doc_type_name, format, is_interactive, supports_try_it) VALUES
('openapi', 'OpenAPI/Swagger', 'JSON/YAML', TRUE, TRUE),
('asyncapi', 'AsyncAPI', 'JSON/YAML', TRUE, FALSE),
('graphql_schema', 'GraphQL Schema', 'GraphQL SDL', TRUE, TRUE),
('postman', 'Postman Collection', 'JSON', TRUE, TRUE),
('insomnia', 'Insomnia Collection', 'JSON', TRUE, TRUE),
('raml', 'RAML', 'YAML', TRUE, FALSE),
('api_blueprint', 'API Blueprint', 'Markdown', TRUE, FALSE),
('wadl', 'WADL', 'XML', FALSE, FALSE),
('html', 'HTML Documentation', 'HTML', FALSE, FALSE),
('pdf', 'PDF Documentation', 'PDF', FALSE, FALSE),
('markdown', 'Markdown', 'Markdown', FALSE, FALSE);

-- SDK Languages
CREATE TABLE sdk_language (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    language_code VARCHAR(50) NOT NULL UNIQUE,
    language_name VARCHAR(100) NOT NULL,
    package_manager VARCHAR(50),
    repository_type VARCHAR(50),
    documentation_url VARCHAR(500),
    is_official BOOLEAN DEFAULT FALSE,
    is_maintained BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_language_code (language_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO sdk_language (language_code, language_name, package_manager, repository_type, is_official) VALUES
('javascript', 'JavaScript/Node.js', 'npm', 'npm', TRUE),
('typescript', 'TypeScript', 'npm', 'npm', TRUE),
('python', 'Python', 'pip', 'pypi', TRUE),
('java', 'Java', 'maven', 'maven', TRUE),
('csharp', 'C#/.NET', 'nuget', 'nuget', TRUE),
('php', 'PHP', 'composer', 'packagist', TRUE),
('ruby', 'Ruby', 'gem', 'rubygems', TRUE),
('go', 'Go', 'go', 'github', TRUE),
('swift', 'Swift', 'spm', 'github', TRUE),
('kotlin', 'Kotlin', 'maven', 'maven', TRUE),
('rust', 'Rust', 'cargo', 'crates', FALSE),
('dart', 'Dart/Flutter', 'pub', 'pub', FALSE);

-- API Testing Types
CREATE TABLE api_testing_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    test_type_code VARCHAR(50) NOT NULL UNIQUE,
    test_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    automation_supported BOOLEAN DEFAULT TRUE,
    typical_duration_minutes INT UNSIGNED,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_test_type_code (test_type_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO api_testing_type (test_type_code, test_type_name, automation_supported, typical_duration_minutes) VALUES
('unit', 'Unit Testing', TRUE, 1),
('integration', 'Integration Testing', TRUE, 5),
('functional', 'Functional Testing', TRUE, 10),
('performance', 'Performance Testing', TRUE, 30),
('load', 'Load Testing', TRUE, 60),
('stress', 'Stress Testing', TRUE, 120),
('security', 'Security Testing', TRUE, 60),
('penetration', 'Penetration Testing', FALSE, 480),
('contract', 'Contract Testing', TRUE, 5),
('smoke', 'Smoke Testing', TRUE, 2),
('regression', 'Regression Testing', TRUE, 30),
('acceptance', 'Acceptance Testing', FALSE, 60);

-- Mock Response Types
CREATE TABLE mock_response_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    mock_type_code VARCHAR(50) NOT NULL UNIQUE,
    mock_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    is_dynamic BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_mock_type_code (mock_type_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO mock_response_type (mock_type_code, mock_type_name, is_dynamic) VALUES
('static', 'Static Response', FALSE),
('template', 'Template Response', TRUE),
('proxy', 'Proxy Response', TRUE),
('conditional', 'Conditional Response', TRUE),
('sequence', 'Sequential Response', TRUE),
('random', 'Random Response', TRUE),
('error', 'Error Response', FALSE),
('delay', 'Delayed Response', TRUE),
('partial', 'Partial Response', TRUE),
('recorded', 'Recorded Response', FALSE);

-- API Monitoring Metrics
CREATE TABLE api_monitoring_metric (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    metric_code VARCHAR(50) NOT NULL UNIQUE,
    metric_name VARCHAR(100) NOT NULL,
    metric_unit VARCHAR(50),
    metric_type VARCHAR(50),
    aggregation_method VARCHAR(50),
    retention_days INT UNSIGNED DEFAULT 30,
    alert_threshold DECIMAL(10,2),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_metric_code (metric_code),
    INDEX idx_metric_type (metric_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO api_monitoring_metric (metric_code, metric_name, metric_unit, metric_type, aggregation_method, alert_threshold) VALUES
('response_time', 'Response Time', 'ms', 'performance', 'average', 1000),
('requests_per_second', 'Requests Per Second', 'req/s', 'throughput', 'average', NULL),
('error_rate', 'Error Rate', '%', 'reliability', 'percentage', 5),
('availability', 'Availability', '%', 'reliability', 'percentage', 99.9),
('cpu_usage', 'CPU Usage', '%', 'resource', 'average', 80),
('memory_usage', 'Memory Usage', '%', 'resource', 'average', 85),
('bandwidth_usage', 'Bandwidth Usage', 'GB', 'resource', 'sum', NULL),
('cache_hit_rate', 'Cache Hit Rate', '%', 'performance', 'percentage', NULL),
('queue_depth', 'Queue Depth', 'count', 'throughput', 'average', 1000),
('concurrent_connections', 'Concurrent Connections', 'count', 'throughput', 'max', 10000),
('request_size', 'Request Size', 'KB', 'usage', 'average', NULL),
('response_size', 'Response Size', 'KB', 'usage', 'average', NULL);

-- API Log Types
CREATE TABLE api_log_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    log_type_code VARCHAR(50) NOT NULL UNIQUE,
    log_type_name VARCHAR(100) NOT NULL,
    log_level VARCHAR(20),
    retention_days INT UNSIGNED DEFAULT 30,
    is_pii_sensitive BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_log_type_code (log_type_code),
    INDEX idx_log_level (log_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO api_log_type (log_type_code, log_type_name, log_level, retention_days, is_pii_sensitive) VALUES
('access', 'Access Log', 'INFO', 30, TRUE),
('error', 'Error Log', 'ERROR', 90, FALSE),
('audit', 'Audit Log', 'INFO', 2555, TRUE),
('security', 'Security Log', 'WARNING', 365, TRUE),
('performance', 'Performance Log', 'INFO', 7, FALSE),
('debug', 'Debug Log', 'DEBUG', 1, TRUE),
('transaction', 'Transaction Log', 'INFO', 90, TRUE),
('integration', 'Integration Log', 'INFO', 30, FALSE),
('webhook', 'Webhook Log', 'INFO', 30, FALSE),
('rate_limit', 'Rate Limit Log', 'WARNING', 7, FALSE);

-- Retry Policies
CREATE TABLE retry_policy (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    policy_code VARCHAR(50) NOT NULL UNIQUE,
    policy_name VARCHAR(100) NOT NULL,
    max_attempts INT UNSIGNED DEFAULT 3,
    initial_delay_ms INT UNSIGNED DEFAULT 1000,
    max_delay_ms INT UNSIGNED DEFAULT 60000,
    backoff_multiplier DECIMAL(3,1) DEFAULT 2.0,
    jitter_enabled BOOLEAN DEFAULT TRUE,
    retry_on_timeout BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_policy_code (policy_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO retry_policy (policy_code, policy_name, max_attempts, initial_delay_ms, max_delay_ms, backoff_multiplier) VALUES
('none', 'No Retry', 0, 0, 0, 1.0),
('simple', 'Simple Retry', 3, 1000, 1000, 1.0),
('exponential', 'Exponential Backoff', 5, 1000, 30000, 2.0),
('linear', 'Linear Backoff', 5, 1000, 5000, 1.0),
('aggressive', 'Aggressive Retry', 10, 500, 60000, 1.5),
('conservative', 'Conservative Retry', 3, 5000, 30000, 3.0);

-- Circuit Breaker States
CREATE TABLE circuit_breaker_state (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    state_code VARCHAR(50) NOT NULL UNIQUE,
    state_name VARCHAR(100) NOT NULL,
    allows_requests BOOLEAN DEFAULT TRUE,
    test_request_allowed BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_state_code (state_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO circuit_breaker_state (state_code, state_name, allows_requests, test_request_allowed) VALUES
('closed', 'Closed', TRUE, FALSE),
('open', 'Open', FALSE, FALSE),
('half_open', 'Half Open', FALSE, TRUE),
('forced_open', 'Forced Open', FALSE, FALSE),
('forced_closed', 'Forced Closed', TRUE, FALSE);

-- API Gateway Features
CREATE TABLE api_gateway_feature (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    feature_code VARCHAR(50) NOT NULL UNIQUE,
    feature_name VARCHAR(100) NOT NULL,
    description TEXT,
    is_premium BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_feature_code (feature_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO api_gateway_feature (feature_code, feature_name, is_premium) VALUES
('rate_limiting', 'Rate Limiting', FALSE),
('authentication', 'Authentication', FALSE),
('authorization', 'Authorization', FALSE),
('caching', 'Response Caching', FALSE),
('compression', 'Response Compression', FALSE),
('load_balancing', 'Load Balancing', TRUE),
('circuit_breaker', 'Circuit Breaker', TRUE),
('request_routing', 'Request Routing', FALSE),
('response_transformation', 'Response Transformation', TRUE),
('protocol_translation', 'Protocol Translation', TRUE),
('api_versioning', 'API Versioning', FALSE),
('cors', 'CORS Support', FALSE),
('ssl_termination', 'SSL Termination', FALSE),
('ip_filtering', 'IP Filtering', TRUE),
('geo_blocking', 'Geographic Blocking', TRUE),
('ddos_protection', 'DDoS Protection', TRUE),
('bot_detection', 'Bot Detection', TRUE),
('analytics', 'API Analytics', TRUE),
('custom_plugins', 'Custom Plugins', TRUE),
('graphql_federation', 'GraphQL Federation', TRUE);

-- GraphQL Schema Types
CREATE TABLE graphql_schema_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    schema_type_code VARCHAR(50) NOT NULL UNIQUE,
    schema_type_name VARCHAR(100) NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_schema_type_code (schema_type_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO graphql_schema_type (schema_type_code, schema_type_name) VALUES
('query', 'Query'),
('mutation', 'Mutation'),
('subscription', 'Subscription'),
('object', 'Object Type'),
('interface', 'Interface'),
('union', 'Union Type'),
('enum', 'Enumeration'),
('input', 'Input Object'),
('scalar', 'Scalar Type'),
('directive', 'Directive');

-- REST Resource Types
CREATE TABLE rest_resource_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    resource_type_code VARCHAR(50) NOT NULL UNIQUE,
    resource_type_name VARCHAR(100) NOT NULL,
    plural_name VARCHAR(100),
    is_collection BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_resource_type_code (resource_type_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO rest_resource_type (resource_type_code, resource_type_name, plural_name, is_collection) VALUES
('song', 'Song', 'songs', FALSE),
('album', 'Album', 'albums', FALSE),
('artist', 'Artist', 'artists', FALSE),
('royalty', 'Royalty', 'royalties', FALSE),
('agreement', 'Agreement', 'agreements', FALSE),
('user', 'User', 'users', FALSE),
('payment', 'Payment', 'payments', FALSE),
('webhook', 'Webhook', 'webhooks', FALSE),
('report', 'Report', 'reports', FALSE),
('audit', 'Audit', 'audits', FALSE);

-- Batch Operation Types
CREATE TABLE batch_operation_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    operation_code VARCHAR(50) NOT NULL UNIQUE,
    operation_name VARCHAR(100) NOT NULL,
    max_batch_size INT UNSIGNED DEFAULT 100,
    supports_transaction BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_operation_code (operation_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO batch_operation_type (operation_code, operation_name, max_batch_size, supports_transaction) VALUES
('create', 'Batch Create', 1000, TRUE),
('update', 'Batch Update', 1000, TRUE),
('delete', 'Batch Delete', 1000, TRUE),
('upsert', 'Batch Upsert', 1000, TRUE),
('validate', 'Batch Validate', 5000, FALSE),
('import', 'Batch Import', 10000, TRUE),
('export', 'Batch Export', 50000, FALSE),
('process', 'Batch Process', 1000, TRUE);

-- Streaming Protocols
CREATE TABLE streaming_protocol (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    protocol_code VARCHAR(50) NOT NULL UNIQUE,
    protocol_name VARCHAR(100) NOT NULL,
    transport VARCHAR(50),
    bidirectional BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_protocol_code (protocol_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO streaming_protocol (protocol_code, protocol_name, transport, bidirectional) VALUES
('sse', 'Server-Sent Events', 'HTTP', FALSE),
('websocket', 'WebSocket', 'WS/WSS', TRUE),
('grpc_stream', 'gRPC Streaming', 'HTTP/2', TRUE),
('mqtt', 'MQTT', 'TCP', TRUE),
('amqp', 'AMQP', 'TCP', TRUE),
('kafka', 'Apache Kafka', 'TCP', FALSE),
('redis_stream', 'Redis Streams', 'TCP', FALSE);

-- Message Queue Types
CREATE TABLE message_queue_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    queue_type_code VARCHAR(50) NOT NULL UNIQUE,
    queue_type_name VARCHAR(100) NOT NULL,
    delivery_guarantee VARCHAR(50),
    ordering_guarantee VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_queue_type_code (queue_type_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO message_queue_type (queue_type_code, queue_type_name, delivery_guarantee, ordering_guarantee) VALUES
('sqs', 'Amazon SQS', 'at_least_once', 'best_effort'),
('rabbitmq', 'RabbitMQ', 'at_least_once', 'fifo'),
('kafka', 'Apache Kafka', 'at_least_once', 'partition'),
('redis_pubsub', 'Redis Pub/Sub', 'at_most_once', 'none'),
('google_pubsub', 'Google Pub/Sub', 'at_least_once', 'best_effort'),
('azure_service_bus', 'Azure Service Bus', 'at_least_once', 'fifo');

-- Event Bus Types
CREATE TABLE event_bus_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    bus_type_code VARCHAR(50) NOT NULL UNIQUE,
    bus_type_name VARCHAR(100) NOT NULL,
    event_schema_format VARCHAR(50),
    supports_replay BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_bus_type_code (bus_type_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO event_bus_type (bus_type_code, bus_type_name, event_schema_format, supports_replay) VALUES
('internal', 'Internal Event Bus', 'JSON', TRUE),
('aws_eventbridge', 'AWS EventBridge', 'JSON', FALSE),
('azure_event_grid', 'Azure Event Grid', 'JSON', FALSE),
('google_eventarc', 'Google Eventarc', 'JSON', FALSE),
('kafka_events', 'Kafka Events', 'Avro', TRUE),
('redis_events', 'Redis Events', 'JSON', FALSE);

-- API Compliance Standards
CREATE TABLE api_compliance_standard (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    standard_code VARCHAR(50) NOT NULL UNIQUE,
    standard_name VARCHAR(100) NOT NULL,
    version VARCHAR(20),
    organization VARCHAR(100),
    industry VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_standard_code (standard_code),
    INDEX idx_industry (industry)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO api_compliance_standard (standard_code, standard_name, version, organization, industry) VALUES
('openapi', 'OpenAPI Specification', '3.1.0', 'OpenAPI Initiative', 'technology'),
('asyncapi', 'AsyncAPI Specification', '2.6.0', 'AsyncAPI Initiative', 'technology'),
('json_api', 'JSON:API', '1.1', 'JSON:API', 'technology'),
('hal', 'HAL', '1.0', 'Mike Kelly', 'technology'),
('graphql_spec', 'GraphQL Specification', '2021', 'GraphQL Foundation', 'technology'),
('oauth2', 'OAuth 2.0', 'RFC 6749', 'IETF', 'security'),
('oidc', 'OpenID Connect', '1.0', 'OpenID Foundation', 'security'),
('ddex', 'DDEX', '4.0', 'DDEX', 'music'),
('cisac_cwr', 'CISAC CWR', '3.0', 'CISAC', 'music'),
('mead', 'MEAD', '1.0', 'Music Metadata', 'music'),
('pci_dss', 'PCI DSS', '4.0', 'PCI SSC', 'payment'),
('iso_20022', 'ISO 20022', '2022', 'ISO', 'payment'),
('fhir', 'FHIR', 'R4', 'HL7', 'healthcare'),
('wcag', 'WCAG', '2.1', 'W3C', 'accessibility');

-- External API Providers (Music Industry Specific)
CREATE TABLE external_api_provider (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    provider_code VARCHAR(50) NOT NULL UNIQUE,
    provider_name VARCHAR(100) NOT NULL,
    provider_type VARCHAR(50),
    base_url VARCHAR(500),
    documentation_url VARCHAR(500),
    requires_approval BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_provider_code (provider_code),
    INDEX idx_provider_type (provider_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO external_api_provider (provider_code, provider_name, provider_type, base_url, requires_approval) VALUES
-- PROs
('ascap', 'ASCAP', 'pro', 'https://api.ascap.com', TRUE),
('bmi', 'BMI', 'pro', 'https://api.bmi.com', TRUE),
('sesac', 'SESAC', 'pro', 'https://api.sesac.com', TRUE),
('socan', 'SOCAN', 'pro', 'https://api.socan.ca', TRUE),
('prs', 'PRS for Music', 'pro', 'https://api.prsformusic.com', TRUE),
('sacem', 'SACEM', 'pro', 'https://api.sacem.fr', TRUE),
('gema', 'GEMA', 'pro', 'https://api.gema.de', TRUE),
('jasrac', 'JASRAC', 'pro', 'https://api.jasrac.or.jp', TRUE),
-- DSPs
('spotify', 'Spotify', 'dsp', 'https://api.spotify.com', FALSE),
('apple_music', 'Apple Music', 'dsp', 'https://api.music.apple.com', TRUE),
('youtube', 'YouTube', 'dsp', 'https://www.googleapis.com/youtube/v3', FALSE),
('amazon_music', 'Amazon Music', 'dsp', 'https://api.music.amazon.com', TRUE),
('tidal', 'Tidal', 'dsp', 'https://api.tidal.com', TRUE),
('deezer', 'Deezer', 'dsp', 'https://api.deezer.com', FALSE),
('soundcloud', 'SoundCloud', 'dsp', 'https://api.soundcloud.com', FALSE),
-- Metadata
('musicbrainz', 'MusicBrainz', 'metadata', 'https://musicbrainz.org/ws/2', FALSE),
('gracenote', 'Gracenote', 'metadata', 'https://api.gracenote.com', TRUE),
('acoustid', 'AcoustID', 'metadata', 'https://api.acoustid.org', FALSE),
('shazam', 'Shazam', 'metadata', 'https://api.shazam.com', TRUE),
-- Blockchain
('ethereum', 'Ethereum', 'blockchain', 'https://mainnet.infura.io/v3', FALSE),
('solana', 'Solana', 'blockchain', 'https://api.mainnet-beta.solana.com', FALSE),
('polygon', 'Polygon', 'blockchain', 'https://polygon-rpc.com', FALSE),
-- Payment
('stripe', 'Stripe', 'payment', 'https://api.stripe.com', FALSE),
('paypal', 'PayPal', 'payment', 'https://api.paypal.com', FALSE),
('coinbase', 'Coinbase Commerce', 'payment', 'https://api.commerce.coinbase.com', FALSE);

-- API Marketplace Categories
CREATE TABLE api_marketplace_category (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    category_code VARCHAR(50) NOT NULL UNIQUE,
    category_name VARCHAR(100) NOT NULL,
    parent_category_id INT UNSIGNED,
    description TEXT,
    icon_url VARCHAR(500),
    sort_order INT UNSIGNED DEFAULT 0,
    is_featured BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_category_code (category_code),
    INDEX idx_parent (parent_category_id),
    INDEX idx_sort_featured (sort_order, is_featured),
    FOREIGN KEY (parent_category_id) REFERENCES api_marketplace_category(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO api_marketplace_category (category_code, category_name, description, sort_order, is_featured) VALUES
('music_rights', 'Music Rights', 'APIs for music rights management and royalty processing', 1, TRUE),
('catalog_management', 'Catalog Management', 'APIs for managing music catalogs and metadata', 2, TRUE),
('distribution', 'Distribution', 'APIs for digital distribution and content delivery', 3, TRUE),
('analytics', 'Analytics', 'APIs for music analytics and reporting', 4, FALSE),
('licensing', 'Licensing', 'APIs for sync licensing and rights clearance', 5, FALSE),
('blockchain', 'Blockchain', 'APIs for NFTs and smart contracts', 6, TRUE),
('payments', 'Payments', 'APIs for payment processing and royalty distribution', 7, FALSE),
('metadata', 'Metadata', 'APIs for metadata enrichment and validation', 8, FALSE),
('identification', 'Identification', 'APIs for audio fingerprinting and recognition', 9, FALSE),
('compliance', 'Compliance', 'APIs for regulatory compliance and reporting', 10, FALSE),
('social', 'Social Media', 'APIs for social media integration', 11, FALSE),
('ai_ml', 'AI/ML', 'APIs for artificial intelligence and machine learning', 12, TRUE);

-- Create indexes for performance
CREATE INDEX idx_api_version_dates ON api_version(release_date, deprecation_date, sunset_date);
CREATE INDEX idx_endpoint_auth_category ON endpoint_type(requires_auth, category);
CREATE INDEX idx_error_retryable ON error_code(is_retryable, http_status);
CREATE INDEX idx_rate_limit_default ON api_rate_limit_tier(is_default, priority_level);
CREATE INDEX idx_webhook_category_active ON webhook_event_type(event_category, is_active);
CREATE INDEX idx_external_provider_active ON external_api_provider(provider_type, is_active);

-- Add comments for documentation
ALTER TABLE api_version COMMENT = 'Manages API versioning and deprecation lifecycle';
ALTER TABLE endpoint_type COMMENT = 'Defines all available API endpoints and their characteristics';
ALTER TABLE http_method COMMENT = 'HTTP methods supported by the API';
ALTER TABLE response_format COMMENT = 'Supported response formats for API endpoints';
ALTER TABLE error_code COMMENT = 'Standardized error codes and messages';
ALTER TABLE api_authentication_type COMMENT = 'Authentication methods supported by the API';
ALTER TABLE api_rate_limit_tier COMMENT = 'Rate limiting tiers for different subscription levels';
ALTER TABLE api_scope COMMENT = 'OAuth scopes for fine-grained permissions';
ALTER TABLE webhook_event_type COMMENT = 'Events that can trigger webhooks';
ALTER TABLE integration_partner_type COMMENT = 'Types of external integration partners';
ALTER TABLE external_api_provider COMMENT = 'External API providers for music industry integrations';

-- =====================================================
-- SECTION 26: QUALITY CONTROL
-- =====================================================

CREATE TABLE qc_check_type (
    qc_check_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    category VARCHAR(100) NOT NULL,
    automation_level VARCHAR(50) NOT NULL COMMENT 'manual, semi-automated, fully-automated',
    check_scope VARCHAR(50) NOT NULL COMMENT 'audio, metadata, rights, technical, content',
    execution_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_mandatory BOOLEAN NOT NULL DEFAULT TRUE,
    requires_human_review BOOLEAN NOT NULL DEFAULT FALSE,
    blockchain_verification BOOLEAN NOT NULL DEFAULT FALSE,
    ai_enabled BOOLEAN NOT NULL DEFAULT FALSE,
    estimated_duration_seconds INT UNSIGNED,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (qc_check_type_id),
    UNIQUE KEY idx_qc_check_type_code (code),
    KEY idx_qc_check_type_category (category),
    KEY idx_qc_check_type_scope (check_scope),
    KEY idx_qc_check_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO qc_check_type (code, name, description, category, automation_level, check_scope, execution_order, is_mandatory, requires_human_review, blockchain_verification, ai_enabled) VALUES
('AUDIO_BITRATE', 'Audio Bitrate Validation', 'Verify audio bitrate meets minimum standards', 'technical', 'fully-automated', 'audio', 100, TRUE, FALSE, FALSE, FALSE),
('AUDIO_SAMPLE_RATE', 'Sample Rate Check', 'Validate audio sample rate compliance', 'technical', 'fully-automated', 'audio', 110, TRUE, FALSE, FALSE, FALSE),
('AUDIO_CHANNELS', 'Channel Configuration', 'Check stereo/mono channel configuration', 'technical', 'fully-automated', 'audio', 120, TRUE, FALSE, FALSE, FALSE),
('AUDIO_LOUDNESS', 'Loudness Standards', 'LUFS/RMS loudness compliance check', 'technical', 'fully-automated', 'audio', 130, TRUE, FALSE, FALSE, TRUE),
('AUDIO_CLIPPING', 'Clipping Detection', 'Detect audio clipping and distortion', 'technical', 'fully-automated', 'audio', 140, TRUE, FALSE, FALSE, TRUE),
('AUDIO_SILENCE', 'Silence Detection', 'Detect unwanted silence at start/end', 'technical', 'fully-automated', 'audio', 150, TRUE, FALSE, FALSE, FALSE),
('AUDIO_FORMAT', 'File Format Validation', 'Verify audio format compliance', 'technical', 'fully-automated', 'audio', 160, TRUE, FALSE, FALSE, FALSE),
('METADATA_ISRC', 'ISRC Validation', 'Validate ISRC format and uniqueness', 'metadata', 'fully-automated', 'metadata', 200, TRUE, FALSE, TRUE, FALSE),
('METADATA_ISWC', 'ISWC Validation', 'Validate ISWC format and registration', 'metadata', 'fully-automated', 'metadata', 210, FALSE, FALSE, TRUE, FALSE),
('METADATA_ARTIST', 'Artist Name Validation', 'Verify artist names and spellings', 'metadata', 'semi-automated', 'metadata', 220, TRUE, TRUE, FALSE, TRUE),
('METADATA_TITLE', 'Title Validation', 'Check title formatting and duplicates', 'metadata', 'semi-automated', 'metadata', 230, TRUE, FALSE, FALSE, TRUE),
('METADATA_GENRE', 'Genre Classification', 'Validate genre tags and consistency', 'metadata', 'semi-automated', 'metadata', 240, TRUE, FALSE, FALSE, TRUE),
('METADATA_LANGUAGE', 'Language Detection', 'Detect and validate language metadata', 'metadata', 'fully-automated', 'metadata', 250, TRUE, FALSE, FALSE, TRUE),
('METADATA_CREDITS', 'Credits Validation', 'Verify contributor credits completeness', 'metadata', 'semi-automated', 'metadata', 260, TRUE, TRUE, TRUE, FALSE),
('METADATA_COPYRIGHT', 'Copyright Line Check', 'Validate copyright (P) and (C) lines', 'metadata', 'semi-automated', 'metadata', 270, TRUE, TRUE, TRUE, FALSE),
('RIGHTS_OWNERSHIP', 'Ownership Verification', 'Verify ownership chain and percentages', 'rights', 'manual', 'rights', 300, TRUE, TRUE, TRUE, FALSE),
('RIGHTS_TERRITORY', 'Territory Clearance', 'Check territory rights and restrictions', 'rights', 'semi-automated', 'rights', 310, TRUE, TRUE, TRUE, FALSE),
('RIGHTS_SAMPLE', 'Sample Clearance', 'Verify sample usage rights', 'rights', 'manual', 'rights', 320, FALSE, TRUE, TRUE, FALSE),
('RIGHTS_COVER', 'Cover Song Clearance', 'Verify mechanical rights for covers', 'rights', 'semi-automated', 'rights', 330, FALSE, TRUE, TRUE, FALSE),
('RIGHTS_SYNC', 'Sync Rights Verification', 'Check synchronization rights status', 'rights', 'manual', 'rights', 340, FALSE, TRUE, TRUE, FALSE),
('CONTENT_EXPLICIT', 'Explicit Content Detection', 'Detect and flag explicit content', 'content', 'semi-automated', 'content', 400, TRUE, TRUE, FALSE, TRUE),
('CONTENT_RATING', 'Age Rating Classification', 'Apply appropriate age ratings', 'content', 'semi-automated', 'content', 410, TRUE, TRUE, FALSE, TRUE),
('CONTENT_TRADEMARK', 'Trademark Violation', 'Check for trademark infringements', 'content', 'semi-automated', 'content', 420, TRUE, TRUE, FALSE, TRUE),
('CONTENT_DEFAMATION', 'Defamation Check', 'Screen for defamatory content', 'content', 'manual', 'content', 430, FALSE, TRUE, FALSE, TRUE),
('TECH_DURATION', 'Duration Validation', 'Verify track duration limits', 'technical', 'fully-automated', 'technical', 500, TRUE, FALSE, FALSE, FALSE),
('TECH_ENCODING', 'Encoding Standards', 'Check encoding specifications', 'technical', 'fully-automated', 'technical', 510, TRUE, FALSE, FALSE, FALSE),
('TECH_FINGERPRINT', 'Audio Fingerprinting', 'Generate and verify audio fingerprint', 'technical', 'fully-automated', 'technical', 520, TRUE, FALSE, TRUE, TRUE),
('TECH_CHECKSUM', 'File Checksum', 'Verify file integrity via checksum', 'technical', 'fully-automated', 'technical', 530, TRUE, FALSE, TRUE, FALSE),
('DSP_SPOTIFY', 'Spotify Compliance', 'Check Spotify-specific requirements', 'distribution', 'fully-automated', 'technical', 600, FALSE, FALSE, FALSE, FALSE),
('DSP_APPLE', 'Apple Music Compliance', 'Check Apple Music requirements', 'distribution', 'fully-automated', 'technical', 610, FALSE, FALSE, FALSE, FALSE);

CREATE TABLE issue_type (
    issue_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    category VARCHAR(100) NOT NULL,
    default_severity_id INT UNSIGNED,
    auto_resolvable BOOLEAN NOT NULL DEFAULT FALSE,
    requires_resubmission BOOLEAN NOT NULL DEFAULT FALSE,
    blocks_distribution BOOLEAN NOT NULL DEFAULT TRUE,
    notification_required BOOLEAN NOT NULL DEFAULT TRUE,
    escalation_hours INT UNSIGNED DEFAULT 72,
    sla_hours INT UNSIGNED DEFAULT 48,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (issue_type_id),
    UNIQUE KEY idx_issue_type_code (code),
    KEY idx_issue_type_category (category),
    KEY idx_issue_type_severity (default_severity_id),
    KEY idx_issue_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO issue_type (code, name, description, category, auto_resolvable, requires_resubmission, blocks_distribution, notification_required) VALUES
('LOW_BITRATE', 'Low Bitrate', 'Audio bitrate below minimum threshold', 'audio_quality', FALSE, TRUE, TRUE, TRUE),
('CLIPPING_DETECTED', 'Audio Clipping', 'Digital clipping detected in audio', 'audio_quality', FALSE, TRUE, TRUE, TRUE),
('EXCESSIVE_LOUDNESS', 'Loudness Violation', 'Audio exceeds loudness standards', 'audio_quality', TRUE, TRUE, FALSE, TRUE),
('SILENCE_START', 'Leading Silence', 'Excessive silence at track start', 'audio_quality', TRUE, FALSE, FALSE, FALSE),
('SILENCE_END', 'Trailing Silence', 'Excessive silence at track end', 'audio_quality', TRUE, FALSE, FALSE, FALSE),
('INVALID_FORMAT', 'Invalid File Format', 'Unsupported audio file format', 'technical', FALSE, TRUE, TRUE, TRUE),
('CORRUPT_FILE', 'Corrupted File', 'Audio file is corrupted or unreadable', 'technical', FALSE, TRUE, TRUE, TRUE),
('MISSING_ISRC', 'Missing ISRC', 'ISRC code is required but missing', 'metadata', FALSE, FALSE, TRUE, TRUE),
('INVALID_ISRC', 'Invalid ISRC Format', 'ISRC format does not meet standards', 'metadata', FALSE, FALSE, TRUE, TRUE),
('DUPLICATE_ISRC', 'Duplicate ISRC', 'ISRC already exists in system', 'metadata', FALSE, FALSE, TRUE, TRUE),
('MISSING_ARTIST', 'Missing Artist Name', 'Primary artist name is missing', 'metadata', FALSE, FALSE, TRUE, TRUE),
('MISSING_TITLE', 'Missing Track Title', 'Track title is missing', 'metadata', FALSE, FALSE, TRUE, TRUE),
('INVALID_CHARACTERS', 'Invalid Characters', 'Metadata contains invalid characters', 'metadata', TRUE, FALSE, FALSE, TRUE),
('MISSING_COPYRIGHT', 'Missing Copyright Line', 'Copyright information is missing', 'metadata', FALSE, FALSE, TRUE, TRUE),
('INVALID_COPYRIGHT', 'Invalid Copyright Format', 'Copyright line format is incorrect', 'metadata', FALSE, FALSE, FALSE, TRUE),
('MISSING_CREDITS', 'Incomplete Credits', 'Required contributor credits missing', 'metadata', FALSE, FALSE, FALSE, TRUE),
('OWNERSHIP_DISPUTE', 'Ownership Conflict', 'Conflicting ownership claims detected', 'rights', FALSE, FALSE, TRUE, TRUE),
('EXCEEDED_SPLITS', 'Split Percentage Error', 'Ownership splits exceed 100%', 'rights', FALSE, FALSE, TRUE, TRUE),
('TERRITORY_CONFLICT', 'Territory Rights Conflict', 'Conflicting territory assignments', 'rights', FALSE, FALSE, TRUE, TRUE),
('SAMPLE_UNCLEARED', 'Uncleared Sample', 'Sample used without clearance', 'rights', FALSE, FALSE, TRUE, TRUE),
('COVER_UNCLEARED', 'Uncleared Cover', 'Cover version without mechanical license', 'rights', FALSE, FALSE, TRUE, TRUE),
('EXPLICIT_UNMARKED', 'Unmarked Explicit Content', 'Explicit content not properly tagged', 'content', TRUE, FALSE, FALSE, TRUE),
('TRADEMARK_VIOLATION', 'Trademark Infringement', 'Potential trademark violation detected', 'content', FALSE, FALSE, TRUE, TRUE),
('COPYRIGHT_CLAIM', 'Copyright Infringement Claim', 'Third-party copyright claim received', 'content', FALSE, FALSE, TRUE, TRUE),
('DUPLICATE_RELEASE', 'Duplicate Release', 'Release already exists in catalog', 'catalog', FALSE, FALSE, TRUE, TRUE),
('ENCODING_ERROR', 'Encoding Error', 'Audio encoding does not meet specs', 'technical', FALSE, TRUE, TRUE, TRUE),
('CHECKSUM_MISMATCH', 'Checksum Mismatch', 'File checksum verification failed', 'technical', FALSE, TRUE, TRUE, TRUE),
('DURATION_LIMIT', 'Duration Exceeded', 'Track duration exceeds platform limits', 'technical', FALSE, FALSE, FALSE, TRUE),
('DSP_REJECTION', 'DSP Rejection', 'Rejected by distribution platform', 'distribution', FALSE, TRUE, TRUE, TRUE),
('METADATA_MISMATCH', 'Metadata Inconsistency', 'Metadata conflicts between sources', 'metadata', FALSE, FALSE, FALSE, TRUE);

CREATE TABLE severity_level (
    severity_level_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    priority_order INT UNSIGNED NOT NULL,
    color_hex VARCHAR(7) NOT NULL,
    icon_class VARCHAR(100),
    blocks_release BOOLEAN NOT NULL DEFAULT FALSE,
    requires_immediate_action BOOLEAN NOT NULL DEFAULT FALSE,
    escalation_threshold_hours INT UNSIGNED,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (severity_level_id),
    UNIQUE KEY idx_severity_level_code (code),
    KEY idx_severity_level_order (priority_order),
    KEY idx_severity_level_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO severity_level (code, name, description, priority_order, color_hex, icon_class, blocks_release, requires_immediate_action, escalation_threshold_hours) VALUES
('CRITICAL', 'Critical', 'Blocks all distribution and requires immediate resolution', 1, '#DC3545', 'fas fa-exclamation-circle', TRUE, TRUE, 4),
('HIGH', 'High', 'Major issue affecting distribution or compliance', 2, '#FD7E14', 'fas fa-exclamation-triangle', TRUE, TRUE, 24),
('MEDIUM', 'Medium', 'Significant issue requiring prompt attention', 3, '#FFC107', 'fas fa-exclamation', FALSE, FALSE, 48),
('LOW', 'Low', 'Minor issue that should be addressed', 4, '#0DCAF0', 'fas fa-info-circle', FALSE, FALSE, 72),
('INFO', 'Informational', 'Informational notice, no action required', 5, '#6C757D', 'fas fa-info', FALSE, FALSE, NULL);

CREATE TABLE resolution_type (
    resolution_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    category VARCHAR(100) NOT NULL,
    requires_file_update BOOLEAN NOT NULL DEFAULT FALSE,
    requires_metadata_update BOOLEAN NOT NULL DEFAULT FALSE,
    requires_approval BOOLEAN NOT NULL DEFAULT FALSE,
    automated_resolution BOOLEAN NOT NULL DEFAULT FALSE,
    estimated_time_minutes INT UNSIGNED,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (resolution_type_id),
    UNIQUE KEY idx_resolution_type_code (code),
    KEY idx_resolution_type_category (category),
    KEY idx_resolution_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO resolution_type (code, name, description, category, requires_file_update, requires_metadata_update, requires_approval, automated_resolution, estimated_time_minutes) VALUES
('FILE_REPLACED', 'File Replaced', 'Audio file has been replaced with corrected version', 'file_update', TRUE, FALSE, FALSE, FALSE, 30),
('METADATA_CORRECTED', 'Metadata Corrected', 'Metadata has been updated and corrected', 'metadata_update', FALSE, TRUE, FALSE, FALSE, 15),
('AUTO_NORMALIZED', 'Auto-Normalized', 'Audio automatically normalized to standards', 'automated', TRUE, FALSE, FALSE, TRUE, 5),
('SILENCE_TRIMMED', 'Silence Trimmed', 'Leading/trailing silence automatically removed', 'automated', TRUE, FALSE, FALSE, TRUE, 2),
('CREDITS_ADDED', 'Credits Added', 'Missing credits have been added', 'metadata_update', FALSE, TRUE, TRUE, FALSE, 20),
('RIGHTS_CLEARED', 'Rights Cleared', 'Rights have been verified and cleared', 'rights_update', FALSE, TRUE, TRUE, FALSE, 120),
('SAMPLE_CLEARED', 'Sample Cleared', 'Sample clearance obtained and documented', 'rights_update', FALSE, TRUE, TRUE, FALSE, 240),
('COVER_LICENSED', 'Cover Licensed', 'Mechanical license obtained for cover', 'rights_update', FALSE, TRUE, TRUE, FALSE, 180),
('EXPLICIT_TAGGED', 'Explicit Content Tagged', 'Content properly marked as explicit', 'metadata_update', FALSE, TRUE, FALSE, TRUE, 5),
('OWNERSHIP_RESOLVED', 'Ownership Resolved', 'Ownership dispute has been resolved', 'rights_update', FALSE, TRUE, TRUE, FALSE, 480),
('EXEMPTION_GRANTED', 'Exemption Granted', 'QC exemption approved by authorized user', 'exemption', FALSE, FALSE, TRUE, FALSE, 30),
('FALSE_POSITIVE', 'False Positive', 'Issue marked as false positive', 'exemption', FALSE, FALSE, TRUE, FALSE, 10),
('MANUAL_OVERRIDE', 'Manual Override', 'Issue manually overridden by admin', 'exemption', FALSE, FALSE, TRUE, FALSE, 15),
('RESUBMITTED', 'Resubmitted', 'Content resubmitted after corrections', 'resubmission', TRUE, TRUE, FALSE, FALSE, 60),
('DSP_ACCEPTED', 'DSP Accepted', 'Previously rejected content now accepted', 'distribution', FALSE, FALSE, FALSE, FALSE, 30);

CREATE TABLE priority_level (
    priority_level_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    priority_order INT UNSIGNED NOT NULL,
    response_time_hours INT UNSIGNED NOT NULL,
    resolution_time_hours INT UNSIGNED NOT NULL,
    color_hex VARCHAR(7) NOT NULL,
    icon_class VARCHAR(100),
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (priority_level_id),
    UNIQUE KEY idx_priority_level_code (code),
    KEY idx_priority_level_order (priority_order),
    KEY idx_priority_level_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO priority_level (code, name, description, priority_order, response_time_hours, resolution_time_hours, color_hex, icon_class) VALUES
('URGENT', 'Urgent', 'Requires immediate attention', 1, 1, 4, '#DC3545', 'fas fa-fire'),
('HIGH', 'High', 'High priority issue', 2, 4, 24, '#FD7E14', 'fas fa-angle-double-up'),
('NORMAL', 'Normal', 'Standard priority', 3, 24, 72, '#28A745', 'fas fa-minus'),
('LOW', 'Low', 'Low priority issue', 4, 72, 168, '#6C757D', 'fas fa-angle-double-down');

CREATE TABLE rating_system (
    rating_system_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    organization VARCHAR(255) NOT NULL,
    country_code VARCHAR(2),
    region VARCHAR(100),
    rating_type VARCHAR(50) NOT NULL COMMENT 'content, age, explicit',
    applies_to VARCHAR(50) NOT NULL COMMENT 'music, video, game, all',
    is_mandatory BOOLEAN NOT NULL DEFAULT FALSE,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (rating_system_id),
    UNIQUE KEY idx_rating_system_code (code),
    KEY idx_rating_system_country (country_code),
    KEY idx_rating_system_type (rating_type),
    KEY idx_rating_system_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO rating_system (code, name, organization, country_code, region, rating_type, applies_to, is_mandatory, sort_order) VALUES
('RIAA_PAL', 'Parental Advisory Label', 'Recording Industry Association of America', 'US', 'North America', 'explicit', 'music', TRUE, 100),
('BBFC', 'British Board of Film Classification', 'BBFC', 'GB', 'Europe', 'age', 'all', FALSE, 200),
('PEGI', 'Pan European Game Information', 'PEGI', NULL, 'Europe', 'age', 'all', FALSE, 300),
('ESRB', 'Entertainment Software Rating Board', 'ESRB', 'US', 'North America', 'age', 'all', FALSE, 400),
('USK', 'Unterhaltungssoftware Selbstkontrolle', 'USK', 'DE', 'Europe', 'age', 'all', FALSE, 500),
('CERO', 'Computer Entertainment Rating Organization', 'CERO', 'JP', 'Asia', 'age', 'all', FALSE, 600),
('OFLC', 'Office of Film and Literature Classification', 'OFLC', 'AU', 'Oceania', 'age', 'all', FALSE, 700),
('CBFC', 'Central Board of Film Certification', 'CBFC', 'IN', 'Asia', 'age', 'all', FALSE, 800),
('KMRB', 'Korea Media Rating Board', 'KMRB', 'KR', 'Asia', 'age', 'all', FALSE, 900),
('DJCTQ', 'Department of Justice Rating', 'Ministry of Justice', 'BR', 'South America', 'age', 'all', FALSE, 1000);

CREATE TABLE qc_workflow (
    qc_workflow_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    workflow_type VARCHAR(50) NOT NULL COMMENT 'release, track, catalog, distribution',
    trigger_event VARCHAR(100) NOT NULL,
    execution_mode VARCHAR(50) NOT NULL COMMENT 'sequential, parallel, conditional',
    retry_attempts INT UNSIGNED NOT NULL DEFAULT 3,
    timeout_minutes INT UNSIGNED NOT NULL DEFAULT 60,
    requires_approval BOOLEAN NOT NULL DEFAULT FALSE,
    blockchain_record BOOLEAN NOT NULL DEFAULT FALSE,
    is_default BOOLEAN NOT NULL DEFAULT FALSE,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (qc_workflow_id),
    UNIQUE KEY idx_qc_workflow_code (code),
    KEY idx_qc_workflow_type (workflow_type),
    KEY idx_qc_workflow_trigger (trigger_event),
    KEY idx_qc_workflow_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO qc_workflow (code, name, description, workflow_type, trigger_event, execution_mode, retry_attempts, timeout_minutes, requires_approval, blockchain_record, is_default) VALUES
('NEW_RELEASE_QC', 'New Release QC', 'Standard QC workflow for new releases', 'release', 'release_submitted', 'sequential', 3, 120, FALSE, TRUE, TRUE),
('PRE_DISTRIBUTION_QC', 'Pre-Distribution QC', 'Final QC before distribution', 'distribution', 'distribution_requested', 'parallel', 1, 60, TRUE, TRUE, TRUE),
('CATALOG_AUDIT_QC', 'Catalog Audit QC', 'Periodic catalog quality audit', 'catalog', 'audit_scheduled', 'parallel', 2, 480, FALSE, FALSE, FALSE),
('RESUBMISSION_QC', 'Resubmission QC', 'QC for resubmitted content', 'track', 'content_resubmitted', 'sequential', 2, 90, FALSE, TRUE, FALSE),
('RIGHTS_VERIFICATION_QC', 'Rights Verification QC', 'Specialized rights verification workflow', 'release', 'rights_check_requested', 'sequential', 1, 240, TRUE, TRUE, FALSE);

CREATE TABLE qc_checklist (
    qc_checklist_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    workflow_id INT UNSIGNED NOT NULL,
    check_type_id INT UNSIGNED NOT NULL,
    step_order INT UNSIGNED NOT NULL,
    is_conditional BOOLEAN NOT NULL DEFAULT FALSE,
    condition_expression TEXT,
    skip_on_previous_pass BOOLEAN NOT NULL DEFAULT FALSE,
    failure_action VARCHAR(50) NOT NULL COMMENT 'stop, continue, warn',
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (qc_checklist_id),
    UNIQUE KEY idx_qc_checklist_workflow_step (workflow_id, step_order),
    KEY idx_qc_checklist_check_type (check_type_id),
    KEY idx_qc_checklist_active (is_active),
    CONSTRAINT fk_qc_checklist_workflow FOREIGN KEY (workflow_id) REFERENCES qc_workflow(qc_workflow_id),
    CONSTRAINT fk_qc_checklist_check_type FOREIGN KEY (check_type_id) REFERENCES qc_check_type(qc_check_type_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE qc_automated_rule (
    qc_automated_rule_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    check_type_id INT UNSIGNED NOT NULL,
    rule_name VARCHAR(255) NOT NULL,
    rule_expression TEXT NOT NULL,
    parameter_json JSON,
    error_message TEXT,
    auto_fix_available BOOLEAN NOT NULL DEFAULT FALSE,
    auto_fix_expression TEXT,
    priority INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (qc_automated_rule_id),
    KEY idx_qc_automated_rule_check_type (check_type_id),
    KEY idx_qc_automated_rule_priority (priority),
    KEY idx_qc_automated_rule_active (is_active),
    CONSTRAINT fk_qc_automated_rule_check_type FOREIGN KEY (check_type_id) REFERENCES qc_check_type(qc_check_type_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE qc_exemption (
    qc_exemption_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    exemption_code VARCHAR(50) NOT NULL,
    issue_type_id INT UNSIGNED,
    check_type_id INT UNSIGNED,
    entity_type VARCHAR(50) NOT NULL COMMENT 'track, release, artist, label',
    entity_id INT UNSIGNED NOT NULL,
    reason TEXT NOT NULL,
    approved_by INT UNSIGNED NOT NULL,
    approval_date TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    expiry_date DATE,
    is_permanent BOOLEAN NOT NULL DEFAULT FALSE,
    conditions TEXT,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (qc_exemption_id),
    UNIQUE KEY idx_qc_exemption_code (exemption_code),
    KEY idx_qc_exemption_entity (entity_type, entity_id),
    KEY idx_qc_exemption_issue_type (issue_type_id),
    KEY idx_qc_exemption_check_type (check_type_id),
    KEY idx_qc_exemption_expiry (expiry_date),
    KEY idx_qc_exemption_active (is_active),
    CONSTRAINT fk_qc_exemption_issue_type FOREIGN KEY (issue_type_id) REFERENCES issue_type(issue_type_id),
    CONSTRAINT fk_qc_exemption_check_type FOREIGN KEY (check_type_id) REFERENCES qc_check_type(qc_check_type_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE qc_report_template (
    qc_report_template_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    report_type VARCHAR(50) NOT NULL COMMENT 'summary, detailed, audit, compliance',
    output_format VARCHAR(20) NOT NULL COMMENT 'pdf, xlsx, json, xml',
    template_content TEXT,
    includes_charts BOOLEAN NOT NULL DEFAULT TRUE,
    includes_recommendations BOOLEAN NOT NULL DEFAULT TRUE,
    language_code VARCHAR(5) NOT NULL DEFAULT 'en',
    is_default BOOLEAN NOT NULL DEFAULT FALSE,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (qc_report_template_id),
    UNIQUE KEY idx_qc_report_template_code (code),
    KEY idx_qc_report_template_type (report_type),
    KEY idx_qc_report_template_format (output_format),
    KEY idx_qc_report_template_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO qc_report_template (code, name, description, report_type, output_format, includes_charts, includes_recommendations, is_default) VALUES
('QC_SUMMARY_PDF', 'QC Summary Report', 'Executive summary of QC results', 'summary', 'pdf', TRUE, TRUE, TRUE),
('QC_DETAILED_XLSX', 'Detailed QC Report', 'Comprehensive QC analysis spreadsheet', 'detailed', 'xlsx', FALSE, TRUE, FALSE),
('COMPLIANCE_AUDIT_PDF', 'Compliance Audit Report', 'Industry compliance audit report', 'compliance', 'pdf', TRUE, TRUE, FALSE),
('DSP_READINESS_JSON', 'DSP Readiness Report', 'Distribution platform readiness check', 'detailed', 'json', FALSE, FALSE, FALSE);

CREATE TABLE qc_metric (
    qc_metric_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    metric_type VARCHAR(50) NOT NULL COMMENT 'count, percentage, average, duration',
    calculation_expression TEXT NOT NULL,
    unit_of_measure VARCHAR(50),
    target_value DECIMAL(10,2),
    threshold_warning DECIMAL(10,2),
    threshold_critical DECIMAL(10,2),
    aggregation_period VARCHAR(20) COMMENT 'daily, weekly, monthly, quarterly',
    is_kpi BOOLEAN NOT NULL DEFAULT FALSE,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (qc_metric_id),
    UNIQUE KEY idx_qc_metric_code (code),
    KEY idx_qc_metric_type (metric_type),
    KEY idx_qc_metric_kpi (is_kpi),
    KEY idx_qc_metric_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO qc_metric (code, name, description, metric_type, calculation_expression, unit_of_measure, target_value, threshold_warning, threshold_critical, aggregation_period, is_kpi) VALUES
('FIRST_PASS_RATE', 'First Pass Rate', 'Percentage of releases passing QC on first submission', 'percentage', 'passed_first_time / total_submissions * 100', 'percent', 95.00, 90.00, 85.00, 'monthly', TRUE),
('AVG_QC_TIME', 'Average QC Time', 'Average time to complete QC process', 'average', 'sum(qc_duration) / count(qc_sessions)', 'minutes', 30.00, 45.00, 60.00, 'weekly', TRUE),
('CRITICAL_ISSUES', 'Critical Issues Count', 'Number of critical severity issues found', 'count', 'count(severity = "CRITICAL")', 'issues', 0.00, 5.00, 10.00, 'daily', TRUE),
('AUTO_RESOLUTION_RATE', 'Auto Resolution Rate', 'Percentage of issues resolved automatically', 'percentage', 'auto_resolved / total_issues * 100', 'percent', 80.00, 70.00, 60.00, 'monthly', FALSE);

CREATE TABLE qc_standard (
    qc_standard_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    organization VARCHAR(255) NOT NULL,
    version VARCHAR(20),
    standard_type VARCHAR(50) NOT NULL COMMENT 'technical, metadata, rights, distribution',
    specification_url VARCHAR(500),
    effective_date DATE NOT NULL,
    sunset_date DATE,
    compliance_level VARCHAR(20) NOT NULL COMMENT 'mandatory, recommended, optional',
    region VARCHAR(100),
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (qc_standard_id),
    UNIQUE KEY idx_qc_standard_code_version (code, version),
    KEY idx_qc_standard_org (organization),
    KEY idx_qc_standard_type (standard_type),
    KEY idx_qc_standard_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO qc_standard (code, name, organization, version, standard_type, effective_date, compliance_level, region) VALUES
('IFPI_ISRC', 'ISRC Standard', 'IFPI', '2021', 'metadata', '2021-01-01', 'mandatory', 'Global'),
('RIAA_METADATA', 'RIAA Metadata Standards', 'RIAA', '2023', 'metadata', '2023-01-01', 'mandatory', 'North America'),
('BPI_DELIVERY', 'BPI Digital Delivery Standard', 'BPI', '2022', 'technical', '2022-07-01', 'recommended', 'Europe'),
('DDEX_ERN', 'Electronic Release Notification', 'DDEX', '4.2', 'metadata', '2022-01-01', 'mandatory', 'Global'),
('APPLE_SPECS', 'Apple Music Delivery Specs', 'Apple', '2024', 'technical', '2024-01-01', 'mandatory', 'Global'),
('SPOTIFY_REQS', 'Spotify Content Requirements', 'Spotify', '2024', 'distribution', '2024-01-01', 'mandatory', 'Global'),
('EBU_R128', 'Loudness Recommendation', 'EBU', 'R128', 'technical', '2020-01-01', 'recommended', 'Europe'),
('AES_STANDARDS', 'AES Digital Audio Standards', 'AES', '2023', 'technical', '2023-01-01', 'recommended', 'Global');

CREATE TABLE review_status (
    review_status_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    status_group VARCHAR(50) NOT NULL COMMENT 'pending, in_progress, completed, failed',
    is_terminal BOOLEAN NOT NULL DEFAULT FALSE,
    allows_retry BOOLEAN NOT NULL DEFAULT TRUE,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (review_status_id),
    UNIQUE KEY idx_review_status_code (code),
    KEY idx_review_status_group (status_group),
    KEY idx_review_status_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO review_status (code, name, description, status_group, is_terminal, allows_retry, sort_order) VALUES
('PENDING', 'Pending Review', 'Awaiting QC review', 'pending', FALSE, TRUE, 100),
('QUEUED', 'Queued', 'In QC queue for processing', 'pending', FALSE, TRUE, 200),
('IN_PROGRESS', 'In Progress', 'QC review in progress', 'in_progress', FALSE, FALSE, 300),
('ANALYZING', 'Analyzing', 'Automated analysis running', 'in_progress', FALSE, FALSE, 310),
('MANUAL_REVIEW', 'Manual Review', 'Requires human review', 'in_progress', FALSE, FALSE, 320),
('PASSED', 'Passed', 'Passed all QC checks', 'completed', TRUE, FALSE, 400),
('PASSED_WITH_WARNINGS', 'Passed with Warnings', 'Passed with non-blocking issues', 'completed', TRUE, FALSE, 410),
('FAILED', 'Failed', 'Failed QC checks', 'failed', TRUE, TRUE, 500),
('REJECTED', 'Rejected', 'Rejected by reviewer', 'failed', TRUE, TRUE, 510),
('EXEMPTED', 'Exempted', 'Exempted from QC requirements', 'completed', TRUE, FALSE, 600);

CREATE TABLE qc_category (
    qc_category_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    parent_category_id INT UNSIGNED,
    icon_class VARCHAR(100),
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (qc_category_id),
    UNIQUE KEY idx_qc_category_code (code),
    KEY idx_qc_category_parent (parent_category_id),
    KEY idx_qc_category_active (is_active),
    CONSTRAINT fk_qc_category_parent FOREIGN KEY (parent_category_id) REFERENCES qc_category(qc_category_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO qc_category (code, name, description, parent_category_id, icon_class, sort_order) VALUES
('AUDIO', 'Audio Quality', 'Audio file quality checks', NULL, 'fas fa-headphones', 100),
('METADATA', 'Metadata', 'Metadata completeness and accuracy', NULL, 'fas fa-tags', 200),
('RIGHTS', 'Rights & Legal', 'Rights clearance and legal compliance', NULL, 'fas fa-gavel', 300),
('TECHNICAL', 'Technical', 'Technical specifications and standards', NULL, 'fas fa-cogs', 400),
('CONTENT', 'Content', 'Content appropriateness and compliance', NULL, 'fas fa-shield-alt', 500),
('DISTRIBUTION', 'Distribution', 'Platform-specific requirements', NULL, 'fas fa-share-alt', 600);

CREATE TABLE defect_type (
    defect_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    category_id INT UNSIGNED NOT NULL,
    detection_method VARCHAR(50) NOT NULL COMMENT 'automated, manual, ai_assisted',
    typical_resolution VARCHAR(255),
    avg_resolution_time_minutes INT UNSIGNED,
    occurrence_rate DECIMAL(5,2) COMMENT 'Percentage of releases with this defect',
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (defect_type_id),
    UNIQUE KEY idx_defect_type_code (code),
    KEY idx_defect_type_category (category_id),
    KEY idx_defect_type_detection (detection_method),
    KEY idx_defect_type_active (is_active),
    CONSTRAINT fk_defect_type_category FOREIGN KEY (category_id) REFERENCES qc_category(qc_category_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE qc_threshold (
    qc_threshold_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    check_type_id INT UNSIGNED NOT NULL,
    parameter_name VARCHAR(100) NOT NULL,
    threshold_type VARCHAR(50) NOT NULL COMMENT 'min, max, equal, range, list',
    threshold_value VARCHAR(255) NOT NULL,
    threshold_unit VARCHAR(50),
    applies_to VARCHAR(50) COMMENT 'all, genre_specific, format_specific',
    condition_json JSON,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (qc_threshold_id),
    KEY idx_qc_threshold_check_type (check_type_id),
    KEY idx_qc_threshold_parameter (parameter_name),
    KEY idx_qc_threshold_active (is_active),
    CONSTRAINT fk_qc_threshold_check_type FOREIGN KEY (check_type_id) REFERENCES qc_check_type(qc_check_type_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO qc_threshold (check_type_id, parameter_name, threshold_type, threshold_value, threshold_unit, applies_to) VALUES
(1, 'minimum_bitrate', 'min', '128', 'kbps', 'all'),
(1, 'recommended_bitrate', 'min', '320', 'kbps', 'all'),
(2, 'sample_rate', 'min', '44100', 'Hz', 'all'),
(4, 'integrated_loudness', 'max', '-14', 'LUFS', 'all'),
(4, 'true_peak', 'max', '-1', 'dBTP', 'all'),
(5, 'clipping_threshold', 'max', '0', 'dBFS', 'all'),
(6, 'silence_threshold', 'max', '2', 'seconds', 'all');

CREATE TABLE certification_type (
    certification_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    certifying_body VARCHAR(255) NOT NULL,
    description TEXT,
    requirements TEXT,
    validity_period_days INT UNSIGNED,
    renewal_required BOOLEAN NOT NULL DEFAULT TRUE,
    certification_level VARCHAR(50) COMMENT 'basic, standard, premium, master',
    industry_recognition VARCHAR(50) COMMENT 'local, regional, global',
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (certification_type_id),
    UNIQUE KEY idx_certification_type_code (code),
    KEY idx_certification_type_body (certifying_body),
    KEY idx_certification_type_level (certification_level),
    KEY idx_certification_type_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO certification_type (code, name, certifying_body, description, validity_period_days, certification_level, industry_recognition) VALUES
('MFiT', 'Mastered for iTunes', 'Apple', 'Apple high-quality audio certification', 365, 'premium', 'global'),
('TIDAL_MASTERS', 'Tidal Masters', 'Tidal', 'MQA authenticated master quality', NULL, 'master', 'global'),
('HD_TRACKS', 'HD Tracks Certified', 'HD Tracks', 'High-definition audio certification', 730, 'premium', 'regional'),
('SONY_360RA', 'Sony 360 Reality Audio', 'Sony', 'Spatial audio certification', 365, 'premium', 'global'),
('DOLBY_ATMOS', 'Dolby Atmos Music', 'Dolby', 'Dolby Atmos spatial audio certification', 365, 'premium', 'global');

CREATE TABLE qc_tool (
    qc_tool_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    vendor VARCHAR(255),
    tool_type VARCHAR(50) NOT NULL COMMENT 'analyzer, validator, converter, reporter',
    supported_formats JSON,
    integration_type VARCHAR(50) NOT NULL COMMENT 'api, cli, sdk, web_service',
    api_endpoint VARCHAR(500),
    license_type VARCHAR(50) COMMENT 'proprietary, open_source, subscription',
    cost_per_use DECIMAL(10,2),
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (qc_tool_id),
    UNIQUE KEY idx_qc_tool_code (code),
    KEY idx_qc_tool_type (tool_type),
    KEY idx_qc_tool_vendor (vendor),
    KEY idx_qc_tool_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO qc_tool (code, name, vendor, tool_type, supported_formats, integration_type, license_type) VALUES
('GRACENOTE_VALIDATOR', 'Gracenote Metadata Validator', 'Gracenote', 'validator', '["metadata", "isrc", "credits"]', 'api', 'subscription'),
('ACOUSTID', 'AcoustID Fingerprinting', 'AcoustID', 'analyzer', '["mp3", "flac", "wav", "m4a"]', 'api', 'open_source'),
('MUSICBRAINZ_PICARD', 'MusicBrainz Picard', 'MetaBrainz', 'validator', '["metadata", "acoustid"]', 'sdk', 'open_source'),
('SONARWORKS', 'SoundID Reference', 'Sonarworks', 'analyzer', '["audio", "frequency", "loudness"]', 'cli', 'proprietary'),
('IZOTOPE_RX', 'iZotope RX', 'iZotope', 'analyzer', '["audio", "restoration", "mastering"]', 'sdk', 'proprietary');

CREATE TABLE quality_score (
    quality_score_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    score_type VARCHAR(50) NOT NULL COMMENT 'numeric, letter_grade, percentage, stars',
    min_value DECIMAL(10,2) NOT NULL,
    max_value DECIMAL(10,2) NOT NULL,
    calculation_method TEXT,
    weight_distribution JSON,
    grade_thresholds JSON,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (quality_score_id),
    UNIQUE KEY idx_quality_score_code (code),
    KEY idx_quality_score_type (score_type),
    KEY idx_quality_score_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO quality_score (code, name, description, score_type, min_value, max_value, calculation_method, weight_distribution, grade_thresholds) VALUES
('ASTRO_QS', 'ASTRO Quality Score', 'Comprehensive quality score for releases', 'percentage', 0.00, 100.00, 'weighted_average', '{"audio": 30, "metadata": 25, "rights": 20, "technical": 15, "content": 10}', '{"A": 90, "B": 80, "C": 70, "D": 60, "F": 0}'),
('AUDIO_QS', 'Audio Quality Score', 'Technical audio quality assessment', 'numeric', 0.00, 10.00, 'technical_analysis', '{"bitrate": 20, "dynamics": 30, "frequency": 25, "noise": 25}', NULL),
('METADATA_QS', 'Metadata Quality Score', 'Metadata completeness and accuracy', 'stars', 0.00, 5.00, 'completeness_check', '{"required": 50, "recommended": 30, "enhanced": 20}', NULL);

-- =====================================================
-- SECTION 27: CHARACTER MAPPING
-- =====================================================

-- Character Encoding Type Table
CREATE TABLE character_encoding_type (
    encoding_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    encoding_code VARCHAR(50) NOT NULL,
    encoding_name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    iana_name VARCHAR(100),
    aliases VARCHAR(500),
    byte_order_mark VARCHAR(20),
    max_bytes_per_char TINYINT UNSIGNED,
    is_variable_length TINYINT(1) DEFAULT 1,
    is_unicode_compatible TINYINT(1) DEFAULT 0,
    is_legacy TINYINT(1) DEFAULT 0,
    usage_context VARCHAR(200),
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (encoding_type_id),
    UNIQUE KEY uk_encoding_code (encoding_code),
    KEY idx_unicode_compatible (is_unicode_compatible),
    KEY idx_legacy (is_legacy)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO character_encoding_type (encoding_code, encoding_name, description, iana_name, max_bytes_per_char, is_variable_length, is_unicode_compatible, is_legacy) VALUES
('UTF-8', 'UTF-8', '8-bit Unicode Transformation Format', 'UTF-8', 4, 1, 1, 0),
('UTF-16', 'UTF-16', '16-bit Unicode Transformation Format', 'UTF-16', 4, 1, 1, 0),
('UTF-16BE', 'UTF-16 Big Endian', 'UTF-16 Big Endian byte order', 'UTF-16BE', 4, 1, 1, 0),
('UTF-16LE', 'UTF-16 Little Endian', 'UTF-16 Little Endian byte order', 'UTF-16LE', 4, 1, 1, 0),
('UTF-32', 'UTF-32', '32-bit Unicode Transformation Format', 'UTF-32', 4, 0, 1, 0),
('ASCII', 'ASCII', 'American Standard Code for Information Interchange', 'US-ASCII', 1, 0, 0, 1),
('ISO-8859-1', 'Latin-1', 'Western European languages', 'ISO-8859-1', 1, 0, 0, 1),
('ISO-8859-2', 'Latin-2', 'Central European languages', 'ISO-8859-2', 1, 0, 0, 1),
('ISO-8859-5', 'Latin/Cyrillic', 'Cyrillic alphabet', 'ISO-8859-5', 1, 0, 0, 1),
('ISO-8859-6', 'Latin/Arabic', 'Arabic language', 'ISO-8859-6', 1, 0, 0, 1),
('ISO-8859-7', 'Latin/Greek', 'Greek language', 'ISO-8859-7', 1, 0, 0, 1),
('ISO-8859-8', 'Latin/Hebrew', 'Hebrew language', 'ISO-8859-8', 1, 0, 0, 1),
('ISO-8859-9', 'Latin-5', 'Turkish language', 'ISO-8859-9', 1, 0, 0, 1),
('ISO-8859-15', 'Latin-9', 'Western European with Euro', 'ISO-8859-15', 1, 0, 0, 1),
('WINDOWS-1252', 'Windows Latin-1', 'Windows Western European', 'windows-1252', 1, 0, 0, 1),
('WINDOWS-1250', 'Windows Central European', 'Windows Central European', 'windows-1250', 1, 0, 0, 1),
('WINDOWS-1251', 'Windows Cyrillic', 'Windows Cyrillic', 'windows-1251', 1, 0, 0, 1),
('WINDOWS-1256', 'Windows Arabic', 'Windows Arabic', 'windows-1256', 1, 0, 0, 1),
('SHIFT_JIS', 'Shift JIS', 'Japanese character encoding', 'Shift_JIS', 2, 1, 0, 1),
('EUC-JP', 'EUC-JP', 'Extended Unix Code for Japanese', 'EUC-JP', 3, 1, 0, 1),
('ISO-2022-JP', 'ISO-2022-JP', 'Japanese email encoding', 'ISO-2022-JP', 3, 1, 0, 1),
('GB2312', 'GB2312', 'Simplified Chinese', 'GB2312', 2, 1, 0, 1),
('GBK', 'GBK', 'Extended GB2312 for Chinese', 'GBK', 2, 1, 0, 1),
('GB18030', 'GB18030', 'Chinese national standard', 'GB18030', 4, 1, 1, 0),
('BIG5', 'Big5', 'Traditional Chinese', 'Big5', 2, 1, 0, 1),
('EUC-KR', 'EUC-KR', 'Extended Unix Code for Korean', 'EUC-KR', 2, 1, 0, 1),
('KOI8-R', 'KOI8-R', 'Russian Cyrillic', 'KOI8-R', 1, 0, 0, 1),
('KOI8-U', 'KOI8-U', 'Ukrainian Cyrillic', 'KOI8-U', 1, 0, 0, 1),
('TIS-620', 'TIS-620', 'Thai Industrial Standard', 'TIS-620', 1, 0, 0, 1),
('VISCII', 'VISCII', 'Vietnamese', 'VISCII', 1, 0, 0, 1);

-- Language Script Table
CREATE TABLE language_script (
    script_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    script_code VARCHAR(10) NOT NULL,
    script_name VARCHAR(100) NOT NULL,
    iso_15924_code VARCHAR(4),
    direction VARCHAR(10) DEFAULT 'LTR',
    unicode_range_start VARCHAR(10),
    unicode_range_end VARCHAR(10),
    typical_languages VARCHAR(500),
    requires_complex_layout TINYINT(1) DEFAULT 0,
    requires_contextual_shaping TINYINT(1) DEFAULT 0,
    has_case_distinction TINYINT(1) DEFAULT 0,
    combining_marks_used TINYINT(1) DEFAULT 0,
    is_ideographic TINYINT(1) DEFAULT 0,
    sample_text VARCHAR(200),
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (script_id),
    UNIQUE KEY uk_script_code (script_code),
    UNIQUE KEY uk_iso_15924_code (iso_15924_code),
    KEY idx_direction (direction)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO language_script (script_code, script_name, iso_15924_code, direction, unicode_range_start, unicode_range_end, typical_languages, requires_complex_layout, requires_contextual_shaping, has_case_distinction, combining_marks_used, is_ideographic) VALUES
('LATIN', 'Latin', 'Latn', 'LTR', 'U+0000', 'U+024F', 'English, Spanish, French, German, Portuguese', 0, 0, 1, 1, 0),
('CYRILLIC', 'Cyrillic', 'Cyrl', 'LTR', 'U+0400', 'U+04FF', 'Russian, Ukrainian, Bulgarian, Serbian', 0, 0, 1, 1, 0),
('ARABIC', 'Arabic', 'Arab', 'RTL', 'U+0600', 'U+06FF', 'Arabic, Persian, Urdu', 1, 1, 0, 1, 0),
('HEBREW', 'Hebrew', 'Hebr', 'RTL', 'U+0590', 'U+05FF', 'Hebrew, Yiddish', 0, 0, 0, 1, 0),
('DEVANAGARI', 'Devanagari', 'Deva', 'LTR', 'U+0900', 'U+097F', 'Hindi, Marathi, Nepali', 1, 0, 0, 1, 0),
('HIRAGANA', 'Hiragana', 'Hira', 'LTR', 'U+3040', 'U+309F', 'Japanese', 0, 0, 0, 0, 0),
('KATAKANA', 'Katakana', 'Kana', 'LTR', 'U+30A0', 'U+30FF', 'Japanese', 0, 0, 0, 0, 0),
('HANGUL', 'Hangul', 'Hang', 'LTR', 'U+AC00', 'U+D7AF', 'Korean', 0, 0, 0, 0, 0),
('HAN', 'Han (CJK Ideographs)', 'Hani', 'LTR', 'U+4E00', 'U+9FFF', 'Chinese, Japanese, Korean', 0, 0, 0, 0, 1),
('GREEK', 'Greek', 'Grek', 'LTR', 'U+0370', 'U+03FF', 'Greek', 0, 0, 1, 1, 0),
('THAI', 'Thai', 'Thai', 'LTR', 'U+0E00', 'U+0E7F', 'Thai', 1, 0, 0, 1, 0),
('BENGALI', 'Bengali', 'Beng', 'LTR', 'U+0980', 'U+09FF', 'Bengali, Assamese', 1, 0, 0, 1, 0),
('TAMIL', 'Tamil', 'Taml', 'LTR', 'U+0B80', 'U+0BFF', 'Tamil', 1, 0, 0, 1, 0),
('TELUGU', 'Telugu', 'Telu', 'LTR', 'U+0C00', 'U+0C7F', 'Telugu', 1, 0, 0, 1, 0),
('GUJARATI', 'Gujarati', 'Gujr', 'LTR', 'U+0A80', 'U+0AFF', 'Gujarati', 1, 0, 0, 1, 0),
('ARMENIAN', 'Armenian', 'Armn', 'LTR', 'U+0530', 'U+058F', 'Armenian', 0, 0, 1, 0, 0),
('GEORGIAN', 'Georgian', 'Geor', 'LTR', 'U+10A0', 'U+10FF', 'Georgian', 0, 0, 0, 0, 0),
('ETHIOPIC', 'Ethiopic', 'Ethi', 'LTR', 'U+1200', 'U+137F', 'Amharic, Tigrinya', 0, 0, 0, 0, 0),
('SINHALA', 'Sinhala', 'Sinh', 'LTR', 'U+0D80', 'U+0DFF', 'Sinhala', 1, 0, 0, 1, 0),
('MYANMAR', 'Myanmar', 'Mymr', 'LTR', 'U+1000', 'U+109F', 'Burmese', 1, 0, 0, 1, 0),
('KHMER', 'Khmer', 'Khmr', 'LTR', 'U+1780', 'U+17FF', 'Khmer', 1, 0, 0, 1, 0),
('LAO', 'Lao', 'Laoo', 'LTR', 'U+0E80', 'U+0EFF', 'Lao', 1, 0, 0, 1, 0),
('TIBETAN', 'Tibetan', 'Tibt', 'LTR', 'U+0F00', 'U+0FFF', 'Tibetan', 1, 0, 0, 1, 0),
('MONGOLIAN', 'Mongolian', 'Mong', 'LTR', 'U+1800', 'U+18AF', 'Mongolian', 1, 1, 0, 0, 0),
('CANADIAN_ABORIGINAL', 'Canadian Aboriginal', 'Cans', 'LTR', 'U+1400', 'U+167F', 'Inuktitut, Cree', 0, 0, 0, 0, 0),
('CHEROKEE', 'Cherokee', 'Cher', 'LTR', 'U+13A0', 'U+13FF', 'Cherokee', 0, 0, 1, 0, 0),
('YI', 'Yi', 'Yiii', 'LTR', 'U+A000', 'U+A48F', 'Yi languages', 0, 0, 0, 0, 0),
('OGHAM', 'Ogham', 'Ogam', 'LTR', 'U+1680', 'U+169F', 'Old Irish', 0, 0, 0, 0, 0),
('RUNIC', 'Runic', 'Runr', 'LTR', 'U+16A0', 'U+16FF', 'Old Norse', 0, 0, 0, 0, 0),
('TAGALOG', 'Tagalog', 'Tglg', 'LTR', 'U+1700', 'U+171F', 'Tagalog', 1, 0, 0, 1, 0);

-- Unicode Block Table
CREATE TABLE unicode_block (
    block_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    block_name VARCHAR(100) NOT NULL,
    start_codepoint VARCHAR(10) NOT NULL,
    end_codepoint VARCHAR(10) NOT NULL,
    character_count INT UNSIGNED,
    script_id INT UNSIGNED,
    version_introduced VARCHAR(10),
    description VARCHAR(500),
    is_music_notation TINYINT(1) DEFAULT 0,
    is_symbol_block TINYINT(1) DEFAULT 0,
    is_combining_block TINYINT(1) DEFAULT 0,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (block_id),
    UNIQUE KEY uk_block_name (block_name),
    KEY idx_codepoint_range (start_codepoint, end_codepoint),
    KEY idx_script_id (script_id),
    CONSTRAINT fk_unicode_block_script FOREIGN KEY (script_id) REFERENCES language_script(script_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO unicode_block (block_name, start_codepoint, end_codepoint, character_count, script_id, version_introduced, description, is_music_notation, is_symbol_block) VALUES
('Basic Latin', 'U+0000', 'U+007F', 128, 1, '1.0', 'ASCII characters', 0, 0),
('Latin-1 Supplement', 'U+0080', 'U+00FF', 128, 1, '1.0', 'Western European characters', 0, 0),
('Latin Extended-A', 'U+0100', 'U+017F', 128, 1, '1.0', 'European Latin characters', 0, 0),
('Latin Extended-B', 'U+0180', 'U+024F', 208, 1, '1.0', 'Additional Latin characters', 0, 0),
('Cyrillic', 'U+0400', 'U+04FF', 256, 2, '1.0', 'Cyrillic alphabet', 0, 0),
('Arabic', 'U+0600', 'U+06FF', 256, 3, '1.0', 'Arabic script', 0, 0),
('Hebrew', 'U+0590', 'U+05FF', 112, 4, '1.0', 'Hebrew script', 0, 0),
('Devanagari', 'U+0900', 'U+097F', 128, 5, '1.0', 'Devanagari script', 0, 0),
('Greek and Coptic', 'U+0370', 'U+03FF', 144, 10, '1.0', 'Greek alphabet', 0, 0),
('Hiragana', 'U+3040', 'U+309F', 96, 6, '1.0', 'Japanese Hiragana', 0, 0),
('Katakana', 'U+30A0', 'U+30FF', 96, 7, '1.0', 'Japanese Katakana', 0, 0),
('Hangul Syllables', 'U+AC00', 'U+D7AF', 11184, 8, '2.0', 'Korean Hangul syllables', 0, 0),
('CJK Unified Ideographs', 'U+4E00', 'U+9FFF', 20992, 9, '1.0', 'Chinese/Japanese/Korean ideographs', 0, 0),
('Musical Symbols', 'U+1D100', 'U+1D1FF', 256, NULL, '3.1', 'Musical notation symbols', 1, 1),
('General Punctuation', 'U+2000', 'U+206F', 112, NULL, '1.0', 'Punctuation marks', 0, 1),
('Currency Symbols', 'U+20A0', 'U+20CF', 48, NULL, '1.0', 'Currency symbols', 0, 1),
('Mathematical Operators', 'U+2200', 'U+22FF', 256, NULL, '1.0', 'Mathematical symbols', 0, 1),
('Box Drawing', 'U+2500', 'U+257F', 128, NULL, '1.0', 'Box drawing characters', 0, 1),
('Arrows', 'U+2190', 'U+21FF', 112, NULL, '1.0', 'Arrow symbols', 0, 1),
('Dingbats', 'U+2700', 'U+27BF', 192, NULL, '1.0', 'Dingbat symbols', 0, 1),
('Emoticons', 'U+1F600', 'U+1F64F', 80, NULL, '6.0', 'Emoticon faces', 0, 1),
('Thai', 'U+0E00', 'U+0E7F', 128, 11, '1.0', 'Thai script', 0, 0),
('Bengali', 'U+0980', 'U+09FF', 128, 12, '1.0', 'Bengali script', 0, 0),
('Tamil', 'U+0B80', 'U+0BFF', 128, 13, '1.0', 'Tamil script', 0, 0),
('Telugu', 'U+0C00', 'U+0C7F', 128, 14, '1.0', 'Telugu script', 0, 0),
('Gujarati', 'U+0A80', 'U+0AFF', 128, 15, '1.0', 'Gujarati script', 0, 0),
('Armenian', 'U+0530', 'U+058F', 96, 16, '1.0', 'Armenian script', 0, 0),
('Georgian', 'U+10A0', 'U+10FF', 96, 17, '1.0', 'Georgian script', 0, 0),
('Ethiopic', 'U+1200', 'U+137F', 384, 18, '3.0', 'Ethiopic script', 0, 0),
('Combining Diacritical Marks', 'U+0300', 'U+036F', 112, NULL, '1.0', 'Combining diacritical marks', 0, 0);

-- Normalization Form Table
CREATE TABLE normalization_form (
    form_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    form_code VARCHAR(10) NOT NULL,
    form_name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    is_canonical TINYINT(1) DEFAULT 0,
    is_compatible TINYINT(1) DEFAULT 0,
    preserves_semantic_meaning TINYINT(1) DEFAULT 1,
    recommended_for_storage TINYINT(1) DEFAULT 0,
    recommended_for_search TINYINT(1) DEFAULT 0,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (form_id),
    UNIQUE KEY uk_form_code (form_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO normalization_form (form_code, form_name, description, is_canonical, is_compatible, preserves_semantic_meaning, recommended_for_storage, recommended_for_search) VALUES
('NFC', 'Canonical Decomposition, followed by Canonical Composition', 'Standard normalization for most uses', 1, 0, 1, 1, 0),
('NFD', 'Canonical Decomposition', 'Separates base characters from combining marks', 1, 0, 1, 0, 0),
('NFKC', 'Compatibility Decomposition, followed by Canonical Composition', 'Aggressive normalization for searching', 0, 1, 0, 0, 1),
('NFKD', 'Compatibility Decomposition', 'Maximum decomposition for analysis', 0, 1, 0, 0, 0),
('NONE', 'No Normalization', 'Preserves original form exactly', 0, 0, 1, 0, 0);

-- Character Category Table
CREATE TABLE character_category (
    category_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    category_code VARCHAR(10) NOT NULL,
    category_name VARCHAR(100) NOT NULL,
    general_category VARCHAR(2),
    description VARCHAR(500),
    is_letter TINYINT(1) DEFAULT 0,
    is_mark TINYINT(1) DEFAULT 0,
    is_number TINYINT(1) DEFAULT 0,
    is_punctuation TINYINT(1) DEFAULT 0,
    is_symbol TINYINT(1) DEFAULT 0,
    is_separator TINYINT(1) DEFAULT 0,
    is_control TINYINT(1) DEFAULT 0,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (category_id),
    UNIQUE KEY uk_category_code (category_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO character_category (category_code, category_name, general_category, description, is_letter, is_mark, is_number, is_punctuation, is_symbol, is_separator, is_control) VALUES
('Lu', 'Letter, Uppercase', 'Lu', 'Uppercase letters', 1, 0, 0, 0, 0, 0, 0),
('Ll', 'Letter, Lowercase', 'Ll', 'Lowercase letters', 1, 0, 0, 0, 0, 0, 0),
('Lt', 'Letter, Titlecase', 'Lt', 'Titlecase letters', 1, 0, 0, 0, 0, 0, 0),
('Lm', 'Letter, Modifier', 'Lm', 'Modifier letters', 1, 0, 0, 0, 0, 0, 0),
('Lo', 'Letter, Other', 'Lo', 'Other letters', 1, 0, 0, 0, 0, 0, 0),
('Mn', 'Mark, Nonspacing', 'Mn', 'Nonspacing combining marks', 0, 1, 0, 0, 0, 0, 0),
('Mc', 'Mark, Spacing Combining', 'Mc', 'Spacing combining marks', 0, 1, 0, 0, 0, 0, 0),
('Me', 'Mark, Enclosing', 'Me', 'Enclosing marks', 0, 1, 0, 0, 0, 0, 0),
('Nd', 'Number, Decimal Digit', 'Nd', 'Decimal digits', 0, 0, 1, 0, 0, 0, 0),
('Nl', 'Number, Letter', 'Nl', 'Letterlike numeric characters', 0, 0, 1, 0, 0, 0, 0),
('No', 'Number, Other', 'No', 'Other numeric characters', 0, 0, 1, 0, 0, 0, 0),
('Pc', 'Punctuation, Connector', 'Pc', 'Connector punctuation', 0, 0, 0, 1, 0, 0, 0),
('Pd', 'Punctuation, Dash', 'Pd', 'Dash punctuation', 0, 0, 0, 1, 0, 0, 0),
('Ps', 'Punctuation, Open', 'Ps', 'Opening punctuation', 0, 0, 0, 1, 0, 0, 0),
('Pe', 'Punctuation, Close', 'Pe', 'Closing punctuation', 0, 0, 0, 1, 0, 0, 0),
('Pi', 'Punctuation, Initial quote', 'Pi', 'Initial quotation marks', 0, 0, 0, 1, 0, 0, 0),
('Pf', 'Punctuation, Final quote', 'Pf', 'Final quotation marks', 0, 0, 0, 1, 0, 0, 0),
('Po', 'Punctuation, Other', 'Po', 'Other punctuation', 0, 0, 0, 1, 0, 0, 0),
('Sm', 'Symbol, Math', 'Sm', 'Mathematical symbols', 0, 0, 0, 0, 1, 0, 0),
('Sc', 'Symbol, Currency', 'Sc', 'Currency symbols', 0, 0, 0, 0, 1, 0, 0),
('Sk', 'Symbol, Modifier', 'Sk', 'Modifier symbols', 0, 0, 0, 0, 1, 0, 0),
('So', 'Symbol, Other', 'So', 'Other symbols', 0, 0, 0, 0, 1, 0, 0),
('Zs', 'Separator, Space', 'Zs', 'Space separators', 0, 0, 0, 0, 0, 1, 0),
('Zl', 'Separator, Line', 'Zl', 'Line separators', 0, 0, 0, 0, 0, 1, 0),
('Zp', 'Separator, Paragraph', 'Zp', 'Paragraph separators', 0, 0, 0, 0, 0, 1, 0),
('Cc', 'Other, Control', 'Cc', 'Control characters', 0, 0, 0, 0, 0, 0, 1),
('Cf', 'Other, Format', 'Cf', 'Format characters', 0, 0, 0, 0, 0, 0, 1),
('Co', 'Other, Private Use', 'Co', 'Private use characters', 0, 0, 0, 0, 0, 0, 0),
('Cn', 'Other, Not Assigned', 'Cn', 'Unassigned characters', 0, 0, 0, 0, 0, 0, 0);

-- Text Direction Table
CREATE TABLE text_direction (
    direction_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    direction_code VARCHAR(10) NOT NULL,
    direction_name VARCHAR(50) NOT NULL,
    description VARCHAR(200),
    unicode_bidi_class VARCHAR(10),
    requires_bidi_algorithm TINYINT(1) DEFAULT 0,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (direction_id),
    UNIQUE KEY uk_direction_code (direction_code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO text_direction (direction_code, direction_name, description, unicode_bidi_class, requires_bidi_algorithm) VALUES
('LTR', 'Left to Right', 'Default text direction', 'L', 0),
('RTL', 'Right to Left', 'Arabic, Hebrew text direction', 'R', 1),
('TTB', 'Top to Bottom', 'Traditional vertical text', 'N', 0),
('BIDI', 'Bidirectional', 'Mixed LTR and RTL text', 'N', 1),
('NEUTRAL', 'Neutral', 'Direction depends on context', 'N', 0);

-- Transliteration System Table
CREATE TABLE transliteration_system (
    system_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    system_code VARCHAR(50) NOT NULL,
    system_name VARCHAR(200) NOT NULL,
    source_script_id INT UNSIGNED,
    target_script_id INT UNSIGNED,
    standard_reference VARCHAR(200),
    description VARCHAR(500),
    is_reversible TINYINT(1) DEFAULT 0,
    is_phonetic TINYINT(1) DEFAULT 0,
    is_official_standard TINYINT(1) DEFAULT 0,
    usage_context VARCHAR(200),
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (system_id),
    UNIQUE KEY uk_system_code (system_code),
    KEY idx_source_script (source_script_id),
    KEY idx_target_script (target_script_id),
    CONSTRAINT fk_transliteration_source_script FOREIGN KEY (source_script_id) REFERENCES language_script(script_id),
    CONSTRAINT fk_transliteration_target_script FOREIGN KEY (target_script_id) REFERENCES language_script(script_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO transliteration_system (system_code, system_name, source_script_id, target_script_id, standard_reference, description, is_reversible, is_phonetic, is_official_standard) VALUES
('PINYIN', 'Hanyu Pinyin', 9, 1, 'ISO 7098', 'Official romanization of Standard Chinese', 0, 1, 1),
('WADE_GILES', 'Wade-Giles', 9, 1, 'Wade-Giles system', 'Traditional Chinese romanization', 0, 1, 0),
('ROMAJI_HEPBURN', 'Hepburn Romanization', 6, 1, 'Hepburn system', 'Most common Japanese romanization', 0, 1, 0),
('ROMAJI_KUNREI', 'Kunrei-shiki', 6, 1, 'ISO 3602', 'Official Japanese romanization', 1, 0, 1),
('HANGUL_ROMANIZATION', 'Revised Romanization of Korean', 8, 1, 'Korean Ministry of Culture', 'Official Korean romanization', 0, 1, 1),
('MCCUNE_REISCHAUER', 'McCune-Reischauer', 8, 1, 'McCune-Reischauer system', 'Academic Korean romanization', 0, 1, 0),
('ISO_9_CYRILLIC', 'ISO 9 Cyrillic', 2, 1, 'ISO 9', 'Scientific transliteration of Cyrillic', 1, 0, 1),
('BGN_PCGN_RUSSIAN', 'BGN/PCGN Russian', 2, 1, 'BGN/PCGN', 'US/UK official Russian romanization', 0, 1, 1),
('DEVANAGARI_IAST', 'IAST', 5, 1, 'ISO 15919', 'International Alphabet of Sanskrit Transliteration', 1, 0, 1),
('DEVANAGARI_ITRANS', 'ITRANS', 5, 1, 'ITRANS', 'ASCII transliteration for Devanagari', 0, 0, 0),
('ARABIC_ROMANIZATION', 'Arabic Chat Alphabet', 3, 1, 'Informal', 'Arabic internet transliteration', 0, 1, 0),
('DIN_31635_ARABIC', 'DIN 31635', 3, 1, 'DIN 31635', 'German standard for Arabic transliteration', 1, 0, 1),
('ISO_233_ARABIC', 'ISO 233', 3, 1, 'ISO 233', 'International standard for Arabic', 1, 0, 1),
('HEBREW_ROMANIZATION', 'Hebrew Academy', 4, 1, 'Hebrew Academy', 'Official Hebrew romanization', 0, 1, 1),
('THAI_RTGS', 'Royal Thai General System', 11, 1, 'RTGS', 'Official Thai romanization', 0, 1, 1),
('GREEK_ISO', 'ISO 843', 10, 1, 'ISO 843', 'Greek transliteration standard', 1, 0, 1),
('ARMENIAN_ISO', 'ISO 9985', 16, 1, 'ISO 9985', 'Armenian transliteration', 1, 0, 1),
('GEORGIAN_NATIONAL', 'Georgian National System', 17, 1, 'Georgian National Academy', 'Official Georgian romanization', 0, 1, 1),
('BENGALI_ISO', 'ISO 15919 Bengali', 12, 1, 'ISO 15919', 'Bengali transliteration', 1, 0, 1),
('ETHIOPIC_SERA', 'SERA', 18, 1, 'SERA', 'System for Ethiopic Representation in ASCII', 0, 0, 0);

-- Character Mapping Table
CREATE TABLE character_mapping (
    mapping_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    source_character VARCHAR(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
    target_character VARCHAR(10) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL,
    mapping_type VARCHAR(50) NOT NULL,
    system_id INT UNSIGNED,
    context_before VARCHAR(20),
    context_after VARCHAR(20),
    is_case_sensitive TINYINT(1) DEFAULT 1,
    priority_order INT DEFAULT 0,
    usage_notes VARCHAR(500),
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (mapping_id),
    KEY idx_source_character (source_character),
    KEY idx_mapping_type (mapping_type),
    KEY idx_system_id (system_id),
    KEY idx_priority (priority_order),
    CONSTRAINT fk_character_mapping_system FOREIGN KEY (system_id) REFERENCES transliteration_system(system_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Insert sample character mappings (first 30)
INSERT INTO character_mapping (source_character, target_character, mapping_type, system_id, priority_order, usage_notes) VALUES
('あ', 'a', 'TRANSLITERATION', 3, 1, 'Hiragana A to Romaji'),
('い', 'i', 'TRANSLITERATION', 3, 1, 'Hiragana I to Romaji'),
('う', 'u', 'TRANSLITERATION', 3, 1, 'Hiragana U to Romaji'),
('え', 'e', 'TRANSLITERATION', 3, 1, 'Hiragana E to Romaji'),
('お', 'o', 'TRANSLITERATION', 3, 1, 'Hiragana O to Romaji'),
('А', 'A', 'TRANSLITERATION', 7, 1, 'Cyrillic A to Latin'),
('Б', 'B', 'TRANSLITERATION', 7, 1, 'Cyrillic Be to Latin'),
('В', 'V', 'TRANSLITERATION', 7, 1, 'Cyrillic Ve to Latin'),
('Г', 'G', 'TRANSLITERATION', 7, 1, 'Cyrillic Ge to Latin'),
('Д', 'D', 'TRANSLITERATION', 7, 1, 'Cyrillic De to Latin'),
('α', 'a', 'TRANSLITERATION', 16, 1, 'Greek alpha to Latin'),
('β', 'b', 'TRANSLITERATION', 16, 1, 'Greek beta to Latin'),
('γ', 'g', 'TRANSLITERATION', 16, 1, 'Greek gamma to Latin'),
('δ', 'd', 'TRANSLITERATION', 16, 1, 'Greek delta to Latin'),
('ε', 'e', 'TRANSLITERATION', 16, 1, 'Greek epsilon to Latin'),
('中', 'zhong', 'TRANSLITERATION', 1, 1, 'Chinese Middle/Center'),
('国', 'guo', 'TRANSLITERATION', 1, 1, 'Chinese Country'),
('日', 'ri', 'TRANSLITERATION', 1, 1, 'Chinese/Japanese Day/Sun'),
('本', 'ben', 'TRANSLITERATION', 1, 1, 'Chinese/Japanese Root/Origin'),
('人', 'ren', 'TRANSLITERATION', 1, 1, 'Chinese Person'),
('가', 'ga', 'TRANSLITERATION', 5, 1, 'Korean GA'),
('나', 'na', 'TRANSLITERATION', 5, 1, 'Korean NA'),
('다', 'da', 'TRANSLITERATION', 5, 1, 'Korean DA'),
('라', 'ra', 'TRANSLITERATION', 5, 1, 'Korean RA'),
('마', 'ma', 'TRANSLITERATION', 5, 1, 'Korean MA'),
('א', "'", 'TRANSLITERATION', 14, 1, 'Hebrew Alef'),
('ב', 'b', 'TRANSLITERATION', 14, 1, 'Hebrew Bet'),
('ג', 'g', 'TRANSLITERATION', 14, 1, 'Hebrew Gimel'),
('ד', 'd', 'TRANSLITERATION', 14, 1, 'Hebrew Dalet'),
('ה', 'h', 'TRANSLITERATION', 14, 1, 'Hebrew He');

-- Character Case Rule Table
CREATE TABLE character_case_rule (
    rule_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    script_id INT UNSIGNED,
    language_code VARCHAR(10),
    uppercase_offset INT,
    lowercase_offset INT,
    titlecase_behavior VARCHAR(50),
    special_rules TEXT,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (rule_id),
    KEY idx_script_id (script_id),
    KEY idx_language_code (language_code),
    CONSTRAINT fk_case_rule_script FOREIGN KEY (script_id) REFERENCES language_script(script_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO character_case_rule (script_id, language_code, uppercase_offset, lowercase_offset, titlecase_behavior, special_rules) VALUES
(1, 'en', -32, 32, 'FIRST_LETTER_ONLY', 'Standard ASCII case conversion'),
(1, 'de', -32, 32, 'FIRST_LETTER_ONLY', 'ß remains lowercase, SS for uppercase'),
(1, 'tr', -32, 32, 'FIRST_LETTER_ONLY', 'Special rules for dotted/dotless i'),
(10, 'el', -32, 32, 'FIRST_LETTER_ONLY', 'Final sigma has special lowercase form'),
(2, 'ru', -32, 32, 'FIRST_LETTER_ONLY', 'Standard Cyrillic case conversion'),
(16, 'hy', -48, 48, 'FIRST_LETTER_ONLY', 'Armenian case conversion'),
(17, 'ka', 0, 0, 'NO_CASE', 'Georgian has no case distinction');

-- Diacritic Handling Table
CREATE TABLE diacritic_handling (
    diacritic_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    base_character VARCHAR(10) NOT NULL,
    diacritic_mark VARCHAR(10) NOT NULL,
    combined_character VARCHAR(10),
    decomposed_form VARCHAR(20),
    strip_for_search TINYINT(1) DEFAULT 1,
    preserve_for_display TINYINT(1) DEFAULT 1,
    unicode_name VARCHAR(200),
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (diacritic_id),
    KEY idx_base_character (base_character),
    KEY idx_combined_character (combined_character)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO diacritic_handling (base_character, diacritic_mark, combined_character, decomposed_form, unicode_name) VALUES
('a', '́', 'á', 'a\u0301', 'LATIN SMALL LETTER A WITH ACUTE'),
('e', '́', 'é', 'e\u0301', 'LATIN SMALL LETTER E WITH ACUTE'),
('i', '́', 'í', 'i\u0301', 'LATIN SMALL LETTER I WITH ACUTE'),
('o', '́', 'ó', 'o\u0301', 'LATIN SMALL LETTER O WITH ACUTE'),
('u', '́', 'ú', 'u\u0301', 'LATIN SMALL LETTER U WITH ACUTE'),
('a', '̀', 'à', 'a\u0300', 'LATIN SMALL LETTER A WITH GRAVE'),
('e', '̀', 'è', 'e\u0300', 'LATIN SMALL LETTER E WITH GRAVE'),
('a', '̂', 'â', 'a\u0302', 'LATIN SMALL LETTER A WITH CIRCUMFLEX'),
('e', '̂', 'ê', 'e\u0302', 'LATIN SMALL LETTER E WITH CIRCUMFLEX'),
('a', '̈', 'ä', 'a\u0308', 'LATIN SMALL LETTER A WITH DIAERESIS'),
('o', '̈', 'ö', 'o\u0308', 'LATIN SMALL LETTER O WITH DIAERESIS'),
('u', '̈', 'ü', 'u\u0308', 'LATIN SMALL LETTER U WITH DIAERESIS'),
('n', '̃', 'ñ', 'n\u0303', 'LATIN SMALL LETTER N WITH TILDE'),
('a', '̃', 'ã', 'a\u0303', 'LATIN SMALL LETTER A WITH TILDE'),
('o', '̃', 'õ', 'o\u0303', 'LATIN SMALL LETTER O WITH TILDE'),
('c', '̧', 'ç', 'c\u0327', 'LATIN SMALL LETTER C WITH CEDILLA'),
('a', '̊', 'å', 'a\u030A', 'LATIN SMALL LETTER A WITH RING ABOVE'),
('o', '/', 'ø', NULL, 'LATIN SMALL LETTER O WITH STROKE'),
('l', '/', 'ł', NULL, 'LATIN SMALL LETTER L WITH STROKE'),
('a', '̌', 'ǎ', 'a\u030C', 'LATIN SMALL LETTER A WITH CARON');

-- Character Substitution Table
CREATE TABLE character_substitution (
    substitution_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    original_character VARCHAR(10) NOT NULL,
    substitute_character VARCHAR(10) NOT NULL,
    substitution_type VARCHAR(50) NOT NULL,
    context VARCHAR(100),
    reason VARCHAR(200),
    is_reversible TINYINT(1) DEFAULT 0,
    priority INT DEFAULT 0,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (substitution_id),
    KEY idx_original_character (original_character),
    KEY idx_substitution_type (substitution_type),
    KEY idx_priority (priority)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO character_substitution (original_character, substitute_character, substitution_type, context, reason, is_reversible, priority) VALUES
('"', '"', 'SMART_QUOTE', 'DISPLAY', 'Left double quotation mark', 0, 1),
('"', '"', 'SMART_QUOTE', 'DISPLAY', 'Right double quotation mark', 0, 1),
("'", ''', 'SMART_QUOTE', 'DISPLAY', 'Left single quotation mark', 0, 1),
("'", ''', 'SMART_QUOTE', 'DISPLAY', 'Right single quotation mark', 0, 1),
('--', '—', 'PUNCTUATION', 'DISPLAY', 'Em dash substitution', 0, 1),
('-', '–', 'PUNCTUATION', 'DISPLAY', 'En dash substitution', 0, 2),
('...', '…', 'PUNCTUATION', 'DISPLAY', 'Ellipsis substitution', 0, 1),
('(C)', '©', 'SYMBOL', 'ALL', 'Copyright symbol', 0, 1),
('(R)', '®', 'SYMBOL', 'ALL', 'Registered trademark', 0, 1),
('(TM)', '™', 'SYMBOL', 'ALL', 'Trademark symbol', 0, 1),
('1/2', '½', 'FRACTION', 'DISPLAY', 'Vulgar fraction one half', 0, 1),
('1/4', '¼', 'FRACTION', 'DISPLAY', 'Vulgar fraction one quarter', 0, 1),
('3/4', '¾', 'FRACTION', 'DISPLAY', 'Vulgar fraction three quarters', 0, 1),
('&', 'and', 'SEARCH_NORMALIZATION', 'SEARCH', 'Ampersand to and', 0, 1),
('@', 'at', 'SEARCH_NORMALIZATION', 'SEARCH', 'At symbol to at', 0, 1),
('€', 'EUR', 'CURRENCY', 'SEARCH', 'Euro symbol to code', 0, 1),
('$', 'USD', 'CURRENCY', 'SEARCH', 'Dollar symbol to code', 0, 2),
('£', 'GBP', 'CURRENCY', 'SEARCH', 'Pound symbol to code', 0, 1),
('¥', 'JPY', 'CURRENCY', 'SEARCH', 'Yen symbol to code', 0, 1),
('№', 'No.', 'SYMBOL', 'ALL', 'Numero sign substitution', 0, 1);

-- Combining Character Table
CREATE TABLE combining_character (
    combining_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    unicode_codepoint VARCHAR(10) NOT NULL,
    character_name VARCHAR(200) NOT NULL,
    combining_class INT UNSIGNED,
    category VARCHAR(50),
    typical_base_characters VARCHAR(200),
    description VARCHAR(500),
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (combining_id),
    UNIQUE KEY uk_unicode_codepoint (unicode_codepoint),
    KEY idx_combining_class (combining_class)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO combining_character (unicode_codepoint, character_name, combining_class, category, typical_base_characters) VALUES
('U+0300', 'COMBINING GRAVE ACCENT', 230, 'ABOVE', 'a,e,i,o,u'),
('U+0301', 'COMBINING ACUTE ACCENT', 230, 'ABOVE', 'a,e,i,o,u,y'),
('U+0302', 'COMBINING CIRCUMFLEX ACCENT', 230, 'ABOVE', 'a,e,i,o,u'),
('U+0303', 'COMBINING TILDE', 230, 'ABOVE', 'a,n,o'),
('U+0304', 'COMBINING MACRON', 230, 'ABOVE', 'a,e,i,o,u'),
('U+0306', 'COMBINING BREVE', 230, 'ABOVE', 'a,e,i,o,u'),
('U+0307', 'COMBINING DOT ABOVE', 230, 'ABOVE', 'c,e,g,i,z'),
('U+0308', 'COMBINING DIAERESIS', 230, 'ABOVE', 'a,e,i,o,u,y'),
('U+030A', 'COMBINING RING ABOVE', 230, 'ABOVE', 'a,u'),
('U+030B', 'COMBINING DOUBLE ACUTE ACCENT', 230, 'ABOVE', 'o,u'),
('U+030C', 'COMBINING CARON', 230, 'ABOVE', 'c,s,z,r'),
('U+0327', 'COMBINING CEDILLA', 202, 'BELOW', 'c,s,t'),
('U+0328', 'COMBINING OGONEK', 202, 'BELOW', 'a,e,i,u'),
('U+0323', 'COMBINING DOT BELOW', 220, 'BELOW', 'various'),
('U+0331', 'COMBINING MACRON BELOW', 220, 'BELOW', 'various');

-- Normalization Exception Table
CREATE TABLE normalization_exception (
    exception_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    character_sequence VARCHAR(50) NOT NULL,
    script_id INT UNSIGNED,
    language_code VARCHAR(10),
    standard_form VARCHAR(50),
    exception_form VARCHAR(50),
    exception_type VARCHAR(50),
    reason VARCHAR(500),
    applies_to_search TINYINT(1) DEFAULT 1,
    applies_to_display TINYINT(1) DEFAULT 1,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (exception_id),
    KEY idx_character_sequence (character_sequence),
    KEY idx_script_id (script_id),
    KEY idx_language_code (language_code),
    CONSTRAINT fk_norm_exception_script FOREIGN KEY (script_id) REFERENCES language_script(script_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO normalization_exception (character_sequence, script_id, language_code, standard_form, exception_form, exception_type, reason) VALUES
('ß', 1, 'de', 'ss', 'ß', 'CASE_FOLDING', 'German eszett should remain for display but fold to ss for search'),
('İ', 1, 'tr', 'I', 'İ', 'CASE_SPECIAL', 'Turkish capital I with dot above'),
('ı', 1, 'tr', 'i', 'ı', 'CASE_SPECIAL', 'Turkish lowercase i without dot'),
('ŉ', 1, 'af', 'n', 'ʼn', 'COMPATIBILITY', 'Afrikaans n preceded by apostrophe'),
('Œ', 1, 'fr', 'OE', 'Œ', 'LIGATURE', 'French OE ligature'),
('œ', 1, 'fr', 'oe', 'œ', 'LIGATURE', 'French oe ligature'),
('Æ', 1, NULL, 'AE', 'Æ', 'LIGATURE', 'AE ligature'),
('æ', 1, NULL, 'ae', 'æ', 'LIGATURE', 'ae ligature'),
('ĳ', 1, 'nl', 'ij', 'ĳ', 'LIGATURE', 'Dutch IJ ligature'),
('א', 4, 'he', 'ALEF', 'א', 'TRANSLITERATION', 'Hebrew Alef special handling');

-- Character Alias Table
CREATE TABLE character_alias (
    alias_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    primary_character VARCHAR(10) NOT NULL,
    alias_character VARCHAR(10) NOT NULL,
    alias_type VARCHAR(50) NOT NULL,
    context VARCHAR(100),
    usage_frequency VARCHAR(20),
    notes VARCHAR(500),
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (alias_id),
    KEY idx_primary_character (primary_character),
    KEY idx_alias_character (alias_character),
    KEY idx_alias_type (alias_type)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO character_alias (primary_character, alias_character, alias_type, context, usage_frequency, notes) VALUES
('&', 'and', 'WORD_EQUIVALENT', 'MUSIC_TITLES', 'HIGH', 'Common in band names and song titles'),
('+', 'and', 'WORD_EQUIVALENT', 'MUSIC_TITLES', 'MEDIUM', 'Alternative to ampersand'),
('2', 'to', 'PHONETIC', 'MUSIC_TITLES', 'MEDIUM', 'Common in song titles'),
('4', 'for', 'PHONETIC', 'MUSIC_TITLES', 'MEDIUM', 'Common in song titles'),
('U', 'you', 'PHONETIC', 'MUSIC_TITLES', 'MEDIUM', 'Common in song titles'),
('R', 'are', 'PHONETIC', 'MUSIC_TITLES', 'LOW', 'Less common abbreviation'),
('@', 'at', 'SYMBOL_NAME', 'ALL', 'HIGH', 'At symbol'),
('#', 'number', 'SYMBOL_NAME', 'ALL', 'MEDIUM', 'Number/hash symbol'),
('$', 'dollar', 'CURRENCY_NAME', 'ALL', 'HIGH', 'Dollar sign'),
('€', 'euro', 'CURRENCY_NAME', 'ALL', 'HIGH', 'Euro sign'),
('£', 'pound', 'CURRENCY_NAME', 'ALL', 'HIGH', 'Pound sterling sign'),
('¥', 'yen', 'CURRENCY_NAME', 'ALL', 'HIGH', 'Yen/Yuan sign'),
('∞', 'infinity', 'SYMBOL_NAME', 'ALL', 'MEDIUM', 'Infinity symbol'),
('♪', 'note', 'MUSIC_SYMBOL', 'MUSIC', 'HIGH', 'Musical note'),
('♫', 'notes', 'MUSIC_SYMBOL', 'MUSIC', 'HIGH', 'Musical notes');

-- Legacy Encoding Map Table
CREATE TABLE legacy_encoding_map (
    map_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    source_encoding_id INT UNSIGNED NOT NULL,
    target_encoding_id INT UNSIGNED NOT NULL,
    source_bytes VARCHAR(20) NOT NULL,
    target_character VARCHAR(10) NOT NULL,
    conversion_notes VARCHAR(500),
    is_lossy TINYINT(1) DEFAULT 0,
    fallback_character VARCHAR(10),
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (map_id),
    KEY idx_source_encoding (source_encoding_id),
    KEY idx_source_bytes (source_bytes),
    CONSTRAINT fk_legacy_map_source FOREIGN KEY (source_encoding_id) REFERENCES character_encoding_type(encoding_type_id),
    CONSTRAINT fk_legacy_map_target FOREIGN KEY (target_encoding_id) REFERENCES character_encoding_type(encoding_type_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Sample legacy encoding mappings
INSERT INTO legacy_encoding_map (source_encoding_id, target_encoding_id, source_bytes, target_character, conversion_notes, is_lossy, fallback_character) VALUES
(7, 1, '0xE9', 'é', 'Latin-1 e acute to UTF-8', 0, NULL),
(7, 1, '0xF1', 'ñ', 'Latin-1 n tilde to UTF-8', 0, NULL),
(7, 1, '0xFC', 'ü', 'Latin-1 u umlaut to UTF-8', 0, NULL),
(15, 1, '0x80', '€', 'Windows-1252 Euro to UTF-8', 0, NULL),
(15, 1, '0x85', '…', 'Windows-1252 ellipsis to UTF-8', 0, NULL),
(15, 1, '0x91', ''', 'Windows-1252 left single quote to UTF-8', 0, NULL),
(15, 1, '0x92', ''', 'Windows-1252 right single quote to UTF-8', 0, NULL),
(15, 1, '0x93', '"', 'Windows-1252 left double quote to UTF-8', 0, NULL),
(15, 1, '0x94', '"', 'Windows-1252 right double quote to UTF-8', 0, NULL),
(15, 1, '0x96', '–', 'Windows-1252 en dash to UTF-8', 0, NULL);

-- Character Validation Rule Table
CREATE TABLE character_validation_rule (
    rule_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    rule_name VARCHAR(100) NOT NULL,
    rule_type VARCHAR(50) NOT NULL,
    script_id INT UNSIGNED,
    pattern VARCHAR(500),
    allowed_characters TEXT,
    forbidden_characters TEXT,
    min_length INT UNSIGNED,
    max_length INT UNSIGNED,
    validation_context VARCHAR(100),
    error_message VARCHAR(500),
    is_active TINYINT(1) DEFAULT 1,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (rule_id),
    KEY idx_rule_type (rule_type),
    KEY idx_script_id (script_id),
    KEY idx_validation_context (validation_context),
    CONSTRAINT fk_validation_rule_script FOREIGN KEY (script_id) REFERENCES language_script(script_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO character_validation_rule (rule_name, rule_type, script_id, pattern, validation_context, error_message) VALUES
('Artist Name Basic', 'ARTIST_NAME', NULL, '^[\\p{L}\\p{N}\\s\\-\\.\'&]+$', 'ARTIST_NAME', 'Artist name contains invalid characters'),
('Song Title Basic', 'SONG_TITLE', NULL, '^[\\p{L}\\p{N}\\p{P}\\s]+$', 'SONG_TITLE', 'Song title contains invalid characters'),
('ISRC Format', 'IDENTIFIER', NULL, '^[A-Z]{2}[A-Z0-9]{3}[0-9]{7}$', 'ISRC', 'Invalid ISRC format'),
('ISWC Format', 'IDENTIFIER', NULL, '^T-[0-9]{9}-[0-9]$', 'ISWC', 'Invalid ISWC format'),
('Email Format', 'CONTACT', NULL, '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$', 'EMAIL', 'Invalid email format'),
('URL Format', 'CONTACT', NULL, '^https?://[\\w\\-._~:/?#[\\]@!$&\'()*+,;=]+$', 'URL', 'Invalid URL format'),
('No Control Characters', 'GENERAL', NULL, '^[^\\p{C}]+$', 'ALL', 'Control characters not allowed'),
('Latin Only', 'SCRIPT_SPECIFIC', 1, '^[\\p{IsLatin}\\p{N}\\p{P}\\s]+$', 'LATIN_ONLY', 'Only Latin characters allowed'),
('Cyrillic Only', 'SCRIPT_SPECIFIC', 2, '^[\\p{IsCyrillic}\\p{N}\\p{P}\\s]+$', 'CYRILLIC_ONLY', 'Only Cyrillic characters allowed'),
('No Emoji', 'RESTRICTION', NULL, '^[^\\p{So}]+$', 'NO_EMOJI', 'Emoji characters not allowed');

-- Script Conversion Table
CREATE TABLE script_conversion (
    conversion_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    source_script_id INT UNSIGNED NOT NULL,
    target_script_id INT UNSIGNED NOT NULL,
    conversion_system VARCHAR(100),
    conversion_rules TEXT,
    quality_score DECIMAL(3,2),
    is_phonetic TINYINT(1) DEFAULT 0,
    is_semantic TINYINT(1) DEFAULT 0,
    usage_notes VARCHAR(500),
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (conversion_id),
    KEY idx_source_target (source_script_id, target_script_id),
    CONSTRAINT fk_script_conv_source FOREIGN KEY (source_script_id) REFERENCES language_script(script_id),
    CONSTRAINT fk_script_conv_target FOREIGN KEY (target_script_id) REFERENCES language_script(script_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO script_conversion (source_script_id, target_script_id, conversion_system, quality_score, is_phonetic, is_semantic, usage_notes) VALUES
(9, 1, 'Pinyin', 0.90, 1, 0, 'Standard Chinese romanization'),
(9, 6, 'Kanji to Hiragana', 0.85, 0, 1, 'Japanese reading conversion'),
(9, 7, 'Kanji to Katakana', 0.85, 0, 1, 'Japanese reading conversion'),
(6, 1, 'Hepburn', 0.95, 1, 0, 'Japanese romanization'),
(7, 1, 'Hepburn', 0.95, 1, 0, 'Japanese romanization'),
(8, 1, 'Revised Romanization', 0.90, 1, 0, 'Korean official system'),
(2, 1, 'ISO 9', 0.98, 0, 0, 'Scientific transliteration'),
(3, 1, 'DIN 31635', 0.85, 1, 0, 'German standard for Arabic'),
(5, 1, 'IAST', 0.95, 0, 0, 'Sanskrit transliteration'),
(10, 1, 'ISO 843', 0.95, 0, 0, 'Greek transliteration');

-- Character Frequency Table
CREATE TABLE character_frequency (
    frequency_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    character_value VARCHAR(10) NOT NULL,
    script_id INT UNSIGNED,
    language_code VARCHAR(10),
    frequency_rank INT UNSIGNED,
    occurrence_percentage DECIMAL(5,2),
    sample_size BIGINT UNSIGNED,
    context VARCHAR(50),
    last_updated DATE,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (frequency_id),
    UNIQUE KEY uk_char_script_lang_context (character_value, script_id, language_code, context),
    KEY idx_frequency_rank (frequency_rank),
    KEY idx_script_language (script_id, language_code),
    CONSTRAINT fk_char_frequency_script FOREIGN KEY (script_id) REFERENCES language_script(script_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

-- Sample character frequency data
INSERT INTO character_frequency (character_value, script_id, language_code, frequency_rank, occurrence_percentage, sample_size, context) VALUES
('e', 1, 'en', 1, 12.70, 1000000, 'GENERAL'),
('t', 1, 'en', 2, 9.06, 1000000, 'GENERAL'),
('a', 1, 'en', 3, 8.17, 1000000, 'GENERAL'),
('o', 1, 'en', 4, 7.51, 1000000, 'GENERAL'),
('i', 1, 'en', 5, 6.97, 1000000, 'GENERAL'),
('n', 1, 'en', 6, 6.75, 1000000, 'GENERAL'),
('s', 1, 'en', 7, 6.33, 1000000, 'GENERAL'),
('h', 1, 'en', 8, 6.09, 1000000, 'GENERAL'),
('r', 1, 'en', 9, 5.99, 1000000, 'GENERAL'),
('e', 1, 'es', 1, 13.68, 1000000, 'GENERAL'),
('a', 1, 'es', 2, 12.53, 1000000, 'GENERAL'),
('o', 1, 'es', 3, 8.68, 1000000, 'GENERAL'),
('の', 6, 'ja', 1, 7.23, 1000000, 'GENERAL'),
('に', 6, 'ja', 2, 4.89, 1000000, 'GENERAL'),
('は', 6, 'ja', 3, 4.21, 1000000, 'GENERAL');

-- Problematic Character Table
CREATE TABLE problematic_character (
    problem_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    character_value VARCHAR(10) NOT NULL,
    problem_type VARCHAR(50) NOT NULL,
    description VARCHAR(500),
    affected_systems VARCHAR(500),
    recommended_action VARCHAR(100),
    substitute_character VARCHAR(10),
    severity_level VARCHAR(20),
    is_security_risk TINYINT(1) DEFAULT 0,
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (problem_id),
    KEY idx_character_value (character_value),
    KEY idx_problem_type (problem_type),
    KEY idx_severity (severity_level)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO problematic_character (character_value, problem_type, description, affected_systems, recommended_action, substitute_character, severity_level, is_security_risk) VALUES
('\\u0000', 'NULL_CHARACTER', 'Null character can cause string termination', 'C-based systems', 'REMOVE', '', 'HIGH', 1),
('\\u202E', 'BIDI_OVERRIDE', 'Right-to-left override can cause display issues', 'All text rendering', 'REMOVE', '', 'HIGH', 1),
('\\u200B', 'ZERO_WIDTH', 'Zero-width space can cause hidden text', 'Search systems', 'REMOVE', '', 'MEDIUM', 0),
('\\uFEFF', 'BOM', 'Byte order mark can cause parsing issues', 'Text processors', 'REMOVE_EXCEPT_START', '', 'MEDIUM', 0),
('/', 'PATH_SEPARATOR', 'Can cause path traversal issues', 'File systems', 'ENCODE', '%2F', 'MEDIUM', 1),
('\\\\', 'ESCAPE_CHARACTER', 'Can cause escape sequence issues', 'Various systems', 'ENCODE', '%5C', 'MEDIUM', 1),
('<', 'HTML_TAG', 'Can cause XSS vulnerabilities', 'Web systems', 'ENCODE', '&lt;', 'HIGH', 1),
('>', 'HTML_TAG', 'Can cause XSS vulnerabilities', 'Web systems', 'ENCODE', '&gt;', 'HIGH', 1),
('\'', 'SQL_QUOTE', 'Can cause SQL injection', 'Database systems', 'ESCAPE', '\\\'', 'HIGH', 1),
('"', 'QUOTE', 'Can cause parsing issues', 'Various systems', 'ESCAPE', '\\"', 'MEDIUM', 1),
('`', 'BACKTICK', 'Can cause command injection', 'Shell systems', 'REMOVE', '', 'HIGH', 1),
('$', 'VARIABLE_PREFIX', 'Can cause variable expansion', 'Shell systems', 'ESCAPE', '\\$', 'MEDIUM', 1),
('\\u0009', 'TAB', 'Can cause alignment issues', 'Display systems', 'REPLACE', ' ', 'LOW', 0),
('\\u000A', 'LINE_FEED', 'Can cause log injection', 'Logging systems', 'REPLACE', ' ', 'MEDIUM', 1),
('\\u000D', 'CARRIAGE_RETURN', 'Can cause log injection', 'Logging systems', 'REPLACE', ' ', 'MEDIUM', 1);

-- Corrupted Character Fix Table
CREATE TABLE corrupted_character_fix (
    fix_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    corrupted_sequence VARCHAR(50) NOT NULL,
    correct_character VARCHAR(10) NOT NULL,
    corruption_type VARCHAR(50),
    encoding_context VARCHAR(100),
    detection_pattern VARCHAR(200),
    fix_confidence DECIMAL(3,2),
    occurrence_frequency VARCHAR(20),
    notes VARCHAR(500),
    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by VARCHAR(100) DEFAULT 'SYSTEM',
    PRIMARY KEY (fix_id),
    KEY idx_corrupted_sequence (corrupted_sequence),
    KEY idx_corruption_type (corruption_type),
    KEY idx_fix_confidence (fix_confidence)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO corrupted_character_fix (corrupted_sequence, correct_character, corruption_type, encoding_context, fix_confidence, occurrence_frequency, notes) VALUES
('Ã¡', 'á', 'MOJIBAKE', 'UTF-8 as Latin-1', 0.95, 'HIGH', 'Common UTF-8 to Latin-1 corruption'),
('Ã©', 'é', 'MOJIBAKE', 'UTF-8 as Latin-1', 0.95, 'HIGH', 'Common UTF-8 to Latin-1 corruption'),
('Ã±', 'ñ', 'MOJIBAKE', 'UTF-8 as Latin-1', 0.95, 'HIGH', 'Spanish n with tilde'),
('â€™', "'", 'MOJIBAKE', 'UTF-8 as Windows-1252', 0.90, 'HIGH', 'Smart quote corruption'),
('â€œ', '"', 'MOJIBAKE', 'UTF-8 as Windows-1252', 0.90, 'HIGH', 'Left double quote'),
('â€', '"', 'MOJIBAKE', 'UTF-8 as Windows-1252', 0.90, 'HIGH', 'Right double quote'),
('â€"', '—', 'MOJIBAKE', 'UTF-8 as Windows-1252', 0.90, 'MEDIUM', 'Em dash corruption'),
('â€"', '–', 'MOJIBAKE', 'UTF-8 as Windows-1252', 0.90, 'MEDIUM', 'En dash corruption'),
('â€¦', '…', 'MOJIBAKE', 'UTF-8 as Windows-1252', 0.90, 'MEDIUM', 'Ellipsis corruption'),
('Ã¼', 'ü', 'MOJIBAKE', 'UTF-8 as Latin-1', 0.95, 'HIGH', 'German u with umlaut'),
('Ã¶', 'ö', 'MOJIBAKE', 'UTF-8 as Latin-1', 0.95, 'HIGH', 'German o with umlaut'),
('Ã¤', 'ä', 'MOJIBAKE', 'UTF-8 as Latin-1', 0.95, 'HIGH', 'German a with umlaut'),
('Ã§', 'ç', 'MOJIBAKE', 'UTF-8 as Latin-1', 0.95, 'HIGH', 'C with cedilla'),
('ï¿½', '?', 'REPLACEMENT', 'Invalid UTF-8', 0.80, 'HIGH', 'Unicode replacement character'),
('âˆš', '√', 'MOJIBAKE', 'UTF-8 as Windows-1252', 0.85, 'LOW', 'Square root symbol'),
('Ã', 'À', 'MOJIBAKE', 'UTF-8 as Latin-1', 0.95, 'MEDIUM', 'A with grave'),
('Ã‰', 'É', 'MOJIBAKE', 'UTF-8 as Latin-1', 0.95, 'MEDIUM', 'E with acute capital'),
('Ãˆ', 'È', 'MOJIBAKE', 'UTF-8 as Latin-1', 0.95, 'MEDIUM', 'E with grave capital'),
('â‚¬', '€', 'MOJIBAKE', 'UTF-8 as Windows-1252', 0.90, 'MEDIUM', 'Euro symbol corruption'),
('Â°', '°', 'MOJIBAKE', 'UTF-8 as Latin-1', 0.90, 'LOW', 'Degree symbol corruption');

-- Create indexes for performance
CREATE INDEX idx_char_mapping_source_target ON character_mapping(source_character, target_character);
CREATE INDEX idx_unicode_block_range ON unicode_block(start_codepoint, end_codepoint);
CREATE INDEX idx_corrupted_fix_pattern ON corrupted_character_fix(corrupted_sequence, correct_character);
CREATE INDEX idx_validation_active ON character_validation_rule(is_active, validation_context);
CREATE INDEX idx_substitution_context ON character_substitution(substitution_type, context);

-- =====================================================
-- SECTION 28: TIME & SCHEDULING
-- =====================================================

CREATE TABLE time_period_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    duration_days INT UNSIGNED,
    duration_months INT UNSIGNED,
    duration_years INT UNSIGNED,
    is_calendar_based BOOLEAN NOT NULL DEFAULT TRUE,
    is_business_days BOOLEAN NOT NULL DEFAULT FALSE,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_time_period_type_code (code),
    INDEX idx_time_period_type_active (is_active),
    INDEX idx_time_period_type_sort (sort_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO time_period_type (code, name, description, duration_days, duration_months, duration_years, is_calendar_based, is_business_days, sort_order) VALUES
('DAILY', 'Daily', 'Daily period', 1, NULL, NULL, TRUE, FALSE, 10),
('WEEKLY', 'Weekly', 'Weekly period (7 days)', 7, NULL, NULL, TRUE, FALSE, 20),
('BIWEEKLY', 'Bi-Weekly', 'Bi-weekly period (14 days)', 14, NULL, NULL, TRUE, FALSE, 30),
('SEMIMONTHLY', 'Semi-Monthly', 'Twice per month (1st and 15th)', NULL, NULL, NULL, TRUE, FALSE, 40),
('MONTHLY', 'Monthly', 'Monthly period', NULL, 1, NULL, TRUE, FALSE, 50),
('BIMONTHLY', 'Bi-Monthly', 'Every two months', NULL, 2, NULL, TRUE, FALSE, 60),
('QUARTERLY', 'Quarterly', 'Quarterly period (3 months)', NULL, 3, NULL, TRUE, FALSE, 70),
('SEMIANNUAL', 'Semi-Annual', 'Semi-annual period (6 months)', NULL, 6, NULL, TRUE, FALSE, 80),
('ANNUAL', 'Annual', 'Annual period (12 months)', NULL, 12, NULL, TRUE, FALSE, 90),
('BIENNIAL', 'Biennial', 'Every two years', NULL, NULL, 2, TRUE, FALSE, 100),
('ROLLING_30', 'Rolling 30 Days', '30-day rolling period', 30, NULL, NULL, FALSE, FALSE, 110),
('ROLLING_60', 'Rolling 60 Days', '60-day rolling period', 60, NULL, NULL, FALSE, FALSE, 120),
('ROLLING_90', 'Rolling 90 Days', '90-day rolling period', 90, NULL, NULL, FALSE, FALSE, 130),
('ROLLING_180', 'Rolling 180 Days', '180-day rolling period', 180, NULL, NULL, FALSE, FALSE, 140),
('ROLLING_365', 'Rolling 365 Days', '365-day rolling period', 365, NULL, NULL, FALSE, FALSE, 150),
('BUSINESS_5', '5 Business Days', '5 business days', 5, NULL, NULL, FALSE, TRUE, 160),
('BUSINESS_10', '10 Business Days', '10 business days', 10, NULL, NULL, FALSE, TRUE, 170),
('BUSINESS_20', '20 Business Days', '20 business days', 20, NULL, NULL, FALSE, TRUE, 180),
('BUSINESS_30', '30 Business Days', '30 business days', 30, NULL, NULL, FALSE, TRUE, 190),
('CUSTOM', 'Custom Period', 'Custom defined period', NULL, NULL, NULL, FALSE, FALSE, 1000);

CREATE TABLE fiscal_period_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    period_count INT UNSIGNED NOT NULL,
    months_per_period INT UNSIGNED NOT NULL,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_fiscal_period_type_code (code),
    INDEX idx_fiscal_period_type_active (is_active),
    INDEX idx_fiscal_period_type_sort (sort_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO fiscal_period_type (code, name, description, period_count, months_per_period, sort_order) VALUES
('CALENDAR_YEAR', 'Calendar Year', 'January 1 to December 31', 1, 12, 10),
('FISCAL_12', '12-Period Fiscal', '12 periods of 1 month each', 12, 1, 20),
('FISCAL_13', '13-Period Fiscal', '13 periods of 4 weeks each', 13, 1, 30),
('FISCAL_4_4_5', '4-4-5 Calendar', '4 weeks, 4 weeks, 5 weeks pattern', 12, 1, 40),
('FISCAL_5_4_4', '5-4-4 Calendar', '5 weeks, 4 weeks, 4 weeks pattern', 12, 1, 50),
('FISCAL_QUARTERLY', 'Quarterly Fiscal', '4 quarters of 3 months each', 4, 3, 60),
('FISCAL_SEMIANNUAL', 'Semi-Annual Fiscal', '2 periods of 6 months each', 2, 6, 70),
('FISCAL_445_LEAP', '4-4-5 with Leap Week', '4-4-5 with 53rd week adjustment', 12, 1, 80),
('BROADCAST_CALENDAR', 'Broadcast Calendar', 'Monday-based broadcast calendar', 12, 1, 90),
('RETAIL_CALENDAR', 'Retail Calendar', 'NRF 4-5-4 retail calendar', 12, 1, 100);

CREATE TABLE holiday_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL,
    affects_business_days BOOLEAN NOT NULL DEFAULT TRUE,
    affects_releases BOOLEAN NOT NULL DEFAULT FALSE,
    is_global BOOLEAN NOT NULL DEFAULT FALSE,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_holiday_type_code (code),
    INDEX idx_holiday_type_category (category),
    INDEX idx_holiday_type_active (is_active),
    INDEX idx_holiday_type_sort (sort_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO holiday_type (code, name, description, category, affects_business_days, affects_releases, is_global, sort_order) VALUES
('NEW_YEAR', 'New Year''s Day', 'January 1st', 'PUBLIC', TRUE, TRUE, TRUE, 10),
('GOOD_FRIDAY', 'Good Friday', 'Friday before Easter Sunday', 'RELIGIOUS', TRUE, TRUE, FALSE, 20),
('EASTER_MONDAY', 'Easter Monday', 'Monday after Easter Sunday', 'RELIGIOUS', TRUE, FALSE, FALSE, 30),
('CHRISTMAS', 'Christmas Day', 'December 25th', 'PUBLIC', TRUE, TRUE, TRUE, 40),
('BOXING_DAY', 'Boxing Day', 'December 26th', 'PUBLIC', TRUE, TRUE, FALSE, 50),
('THANKSGIVING_US', 'Thanksgiving (US)', 'Fourth Thursday in November', 'NATIONAL', TRUE, TRUE, FALSE, 60),
('BLACK_FRIDAY', 'Black Friday', 'Friday after US Thanksgiving', 'COMMERCIAL', FALSE, TRUE, FALSE, 70),
('INDEPENDENCE_DAY_US', 'Independence Day (US)', 'July 4th', 'NATIONAL', TRUE, TRUE, FALSE, 80),
('MEMORIAL_DAY_US', 'Memorial Day (US)', 'Last Monday in May', 'NATIONAL', TRUE, FALSE, FALSE, 90),
('LABOR_DAY_US', 'Labor Day (US)', 'First Monday in September', 'NATIONAL', TRUE, FALSE, FALSE, 100),
('GOLDEN_WEEK_JP', 'Golden Week (Japan)', 'Late April to early May', 'NATIONAL', TRUE, TRUE, FALSE, 110),
('CHINESE_NEW_YEAR', 'Chinese New Year', 'Lunar New Year', 'CULTURAL', TRUE, TRUE, FALSE, 120),
('DIWALI', 'Diwali', 'Festival of Lights', 'RELIGIOUS', TRUE, TRUE, FALSE, 130),
('EID_AL_FITR', 'Eid al-Fitr', 'End of Ramadan', 'RELIGIOUS', TRUE, TRUE, FALSE, 140),
('BANK_HOLIDAY_UK', 'Bank Holiday (UK)', 'UK Bank Holidays', 'NATIONAL', TRUE, FALSE, FALSE, 150),
('CANADA_DAY', 'Canada Day', 'July 1st', 'NATIONAL', TRUE, FALSE, FALSE, 160),
('AUSTRALIA_DAY', 'Australia Day', 'January 26th', 'NATIONAL', TRUE, FALSE, FALSE, 170),
('CARNIVAL_BR', 'Carnival (Brazil)', 'Brazilian Carnival', 'CULTURAL', TRUE, TRUE, FALSE, 180),
('MUSIC_INDUSTRY_BLACKOUT', 'Industry Blackout', 'Music industry release blackout', 'INDUSTRY', FALSE, TRUE, TRUE, 190),
('GRAMMY_WEEK', 'Grammy Week', 'Grammy Awards week', 'INDUSTRY', FALSE, TRUE, FALSE, 200);

CREATE TABLE business_day_rule (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    adjustment_type VARCHAR(50) NOT NULL,
    include_weekends BOOLEAN NOT NULL DEFAULT FALSE,
    include_holidays BOOLEAN NOT NULL DEFAULT FALSE,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_business_day_rule_code (code),
    INDEX idx_business_day_rule_active (is_active),
    INDEX idx_business_day_rule_sort (sort_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO business_day_rule (code, name, description, adjustment_type, include_weekends, include_holidays, sort_order) VALUES
('NO_ADJUSTMENT', 'No Adjustment', 'Use actual date without adjustment', 'NONE', TRUE, TRUE, 10),
('FOLLOWING', 'Following', 'Next business day', 'FORWARD', FALSE, FALSE, 20),
('MODIFIED_FOLLOWING', 'Modified Following', 'Next business day unless different month, then previous', 'MODIFIED_FORWARD', FALSE, FALSE, 30),
('PRECEDING', 'Preceding', 'Previous business day', 'BACKWARD', FALSE, FALSE, 40),
('MODIFIED_PRECEDING', 'Modified Preceding', 'Previous business day unless different month, then next', 'MODIFIED_BACKWARD', FALSE, FALSE, 50),
('NEAREST', 'Nearest', 'Nearest business day', 'NEAREST', FALSE, FALSE, 60),
('END_OF_MONTH', 'End of Month', 'Last business day of month', 'END_OF_MONTH', FALSE, FALSE, 70),
('BEGINNING_OF_MONTH', 'Beginning of Month', 'First business day of month', 'BEGINNING_OF_MONTH', FALSE, FALSE, 80),
('FRIDAY_RELEASE', 'Friday Release', 'Adjust to Friday for music releases', 'SPECIFIC_DAY', TRUE, FALSE, 90),
('MONDAY_REPORTING', 'Monday Reporting', 'Adjust to Monday for reporting', 'SPECIFIC_DAY', TRUE, FALSE, 100);

CREATE TABLE recurrence_pattern (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    pattern_type VARCHAR(50) NOT NULL,
    interval_value INT UNSIGNED,
    day_of_week VARCHAR(20),
    day_of_month INT,
    week_of_month INT,
    month_of_year INT,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_recurrence_pattern_code (code),
    INDEX idx_recurrence_pattern_type (pattern_type),
    INDEX idx_recurrence_pattern_active (is_active),
    INDEX idx_recurrence_pattern_sort (sort_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO recurrence_pattern (code, name, description, pattern_type, interval_value, day_of_week, day_of_month, week_of_month, month_of_year, sort_order) VALUES
('DAILY', 'Daily', 'Every day', 'DAILY', 1, NULL, NULL, NULL, NULL, 10),
('WEEKDAYS', 'Weekdays', 'Monday through Friday', 'DAILY_WEEKDAYS', 1, NULL, NULL, NULL, NULL, 20),
('WEEKLY', 'Weekly', 'Every week', 'WEEKLY', 1, NULL, NULL, NULL, NULL, 30),
('BIWEEKLY', 'Bi-Weekly', 'Every two weeks', 'WEEKLY', 2, NULL, NULL, NULL, NULL, 40),
('MONTHLY_DATE', 'Monthly on Date', 'Same date each month', 'MONTHLY_DATE', 1, NULL, NULL, NULL, NULL, 50),
('MONTHLY_WEEKDAY', 'Monthly on Weekday', 'Same weekday each month', 'MONTHLY_WEEKDAY', 1, NULL, NULL, NULL, NULL, 60),
('QUARTERLY_DATE', 'Quarterly on Date', 'Same date each quarter', 'QUARTERLY', 3, NULL, NULL, NULL, NULL, 70),
('QUARTERLY_WEEKDAY', 'Quarterly on Weekday', 'Same weekday each quarter', 'QUARTERLY_WEEKDAY', 3, NULL, NULL, NULL, NULL, 80),
('SEMIANNUAL', 'Semi-Annual', 'Twice per year', 'MONTHLY', 6, NULL, NULL, NULL, NULL, 90),
('ANNUAL', 'Annual', 'Once per year', 'YEARLY', 1, NULL, NULL, NULL, NULL, 100),
('FRIDAY_WEEKLY', 'Every Friday', 'Weekly on Friday', 'WEEKLY', 1, 'FRIDAY', NULL, NULL, NULL, 110),
('FIRST_MONDAY', 'First Monday', 'First Monday of month', 'MONTHLY_WEEKDAY', 1, 'MONDAY', NULL, 1, NULL, 120),
('LAST_FRIDAY', 'Last Friday', 'Last Friday of month', 'MONTHLY_WEEKDAY', 1, 'FRIDAY', NULL, -1, NULL, 130),
('QUARTER_END', 'Quarter End', 'Last day of quarter', 'QUARTERLY_END', 3, NULL, NULL, NULL, NULL, 140),
('FISCAL_YEAR_END', 'Fiscal Year End', 'End of fiscal year', 'YEARLY_END', 1, NULL, NULL, NULL, NULL, 150);

CREATE TABLE timezone (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    utc_offset_hours DECIMAL(4,2) NOT NULL,
    utc_offset_dst_hours DECIMAL(4,2),
    iana_timezone VARCHAR(100) NOT NULL,
    country_code VARCHAR(2),
    is_dst_observed BOOLEAN NOT NULL DEFAULT FALSE,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_timezone_code (code),
    UNIQUE KEY uk_timezone_iana (iana_timezone),
    INDEX idx_timezone_country (country_code),
    INDEX idx_timezone_active (is_active),
    INDEX idx_timezone_sort (sort_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO timezone (code, name, description, utc_offset_hours, utc_offset_dst_hours, iana_timezone, country_code, is_dst_observed, sort_order) VALUES
('UTC', 'UTC', 'Coordinated Universal Time', 0.00, 0.00, 'UTC', NULL, FALSE, 10),
('EST', 'Eastern Standard Time', 'US Eastern Time', -5.00, -4.00, 'America/New_York', 'US', TRUE, 20),
('CST', 'Central Standard Time', 'US Central Time', -6.00, -5.00, 'America/Chicago', 'US', TRUE, 30),
('MST', 'Mountain Standard Time', 'US Mountain Time', -7.00, -6.00, 'America/Denver', 'US', TRUE, 40),
('PST', 'Pacific Standard Time', 'US Pacific Time', -8.00, -7.00, 'America/Los_Angeles', 'US', TRUE, 50),
('GMT', 'Greenwich Mean Time', 'UK Time', 0.00, 1.00, 'Europe/London', 'GB', TRUE, 60),
('CET', 'Central European Time', 'Central Europe Time', 1.00, 2.00, 'Europe/Paris', 'FR', TRUE, 70),
('JST', 'Japan Standard Time', 'Japan Time', 9.00, 9.00, 'Asia/Tokyo', 'JP', FALSE, 80),
('KST', 'Korea Standard Time', 'South Korea Time', 9.00, 9.00, 'Asia/Seoul', 'KR', FALSE, 90),
('CST_CHINA', 'China Standard Time', 'China Time', 8.00, 8.00, 'Asia/Shanghai', 'CN', FALSE, 100),
('IST', 'India Standard Time', 'India Time', 5.50, 5.50, 'Asia/Kolkata', 'IN', FALSE, 110),
('BRT', 'Brasília Time', 'Brazil Time', -3.00, -3.00, 'America/Sao_Paulo', 'BR', FALSE, 120),
('AEST', 'Australian Eastern Time', 'Australia Eastern Time', 10.00, 11.00, 'Australia/Sydney', 'AU', TRUE, 130),
('NZST', 'New Zealand Standard Time', 'New Zealand Time', 12.00, 13.00, 'Pacific/Auckland', 'NZ', TRUE, 140),
('MSK', 'Moscow Standard Time', 'Russia Moscow Time', 3.00, 3.00, 'Europe/Moscow', 'RU', FALSE, 150),
('SGT', 'Singapore Time', 'Singapore Time', 8.00, 8.00, 'Asia/Singapore', 'SG', FALSE, 160),
('HKT', 'Hong Kong Time', 'Hong Kong Time', 8.00, 8.00, 'Asia/Hong_Kong', 'HK', FALSE, 170),
('SAST', 'South Africa Standard Time', 'South Africa Time', 2.00, 2.00, 'Africa/Johannesburg', 'ZA', FALSE, 180),
('AST', 'Arabia Standard Time', 'Middle East Time', 3.00, 3.00, 'Asia/Riyadh', 'SA', FALSE, 190),
('ART', 'Argentina Time', 'Argentina Time', -3.00, -3.00, 'America/Buenos_Aires', 'AR', FALSE, 200),
('COT', 'Colombia Time', 'Colombia Time', -5.00, -5.00, 'America/Bogota', 'CO', FALSE, 210),
('PET', 'Peru Time', 'Peru Time', -5.00, -5.00, 'America/Lima', 'PE', FALSE, 220),
('WEST', 'Western European Summer Time', 'Western Europe Summer', 0.00, 1.00, 'Europe/Lisbon', 'PT', TRUE, 230),
('EET', 'Eastern European Time', 'Eastern Europe Time', 2.00, 3.00, 'Europe/Athens', 'GR', TRUE, 240),
('TRT', 'Turkey Time', 'Turkey Time', 3.00, 3.00, 'Europe/Istanbul', 'TR', FALSE, 250),
('CEST', 'Central European Summer Time', 'Central Europe Summer', 1.00, 2.00, 'Europe/Berlin', 'DE', TRUE, 260),
('BST', 'British Summer Time', 'UK Summer Time', 0.00, 1.00, 'Europe/London', 'GB', TRUE, 270),
('PDT', 'Pacific Daylight Time', 'US Pacific Summer', -8.00, -7.00, 'America/Los_Angeles', 'US', TRUE, 280),
('EDT', 'Eastern Daylight Time', 'US Eastern Summer', -5.00, -4.00, 'America/New_York', 'US', TRUE, 290),
('CDT', 'Central Daylight Time', 'US Central Summer', -6.00, -5.00, 'America/Chicago', 'US', TRUE, 300);

CREATE TABLE calendar_system (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    year_type VARCHAR(50) NOT NULL,
    week_start_day VARCHAR(20) NOT NULL DEFAULT 'MONDAY',
    first_month INT UNSIGNED NOT NULL DEFAULT 1,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_calendar_system_code (code),
    INDEX idx_calendar_system_active (is_active),
    INDEX idx_calendar_system_sort (sort_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO calendar_system (code, name, description, year_type, week_start_day, first_month, sort_order) VALUES
('GREGORIAN', 'Gregorian Calendar', 'Standard international calendar', 'SOLAR', 'MONDAY', 1, 10),
('ISO_8601', 'ISO 8601', 'ISO week date system', 'SOLAR', 'MONDAY', 1, 20),
('BROADCAST', 'Broadcast Calendar', 'US broadcast industry calendar', 'SOLAR', 'MONDAY', 1, 30),
('RETAIL_454', 'Retail 4-5-4', 'NRF retail calendar', 'FISCAL', 'SUNDAY', 2, 40),
('FISCAL_US', 'US Fiscal Year', 'US government fiscal year (Oct-Sep)', 'FISCAL', 'MONDAY', 10, 50),
('FISCAL_UK', 'UK Fiscal Year', 'UK fiscal year (Apr-Mar)', 'FISCAL', 'MONDAY', 4, 60),
('FISCAL_JP', 'Japan Fiscal Year', 'Japan fiscal year (Apr-Mar)', 'FISCAL', 'MONDAY', 4, 70),
('FISCAL_AU', 'Australia Fiscal Year', 'Australia fiscal year (Jul-Jun)', 'FISCAL', 'MONDAY', 7, 80),
('FISCAL_IN', 'India Fiscal Year', 'India fiscal year (Apr-Mar)', 'FISCAL', 'MONDAY', 4, 90),
('MUSIC_INDUSTRY', 'Music Industry Calendar', 'Music industry standard (Friday releases)', 'SOLAR', 'FRIDAY', 1, 100);

CREATE TABLE working_hours (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    timezone_id INT UNSIGNED NOT NULL,
    monday_start TIME,
    monday_end TIME,
    tuesday_start TIME,
    tuesday_end TIME,
    wednesday_start TIME,
    wednesday_end TIME,
    thursday_start TIME,
    thursday_end TIME,
    friday_start TIME,
    friday_end TIME,
    saturday_start TIME,
    saturday_end TIME,
    sunday_start TIME,
    sunday_end TIME,
    lunch_break_minutes INT UNSIGNED DEFAULT 0,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_working_hours_code (code),
    INDEX idx_working_hours_timezone (timezone_id),
    INDEX idx_working_hours_active (is_active),
    INDEX idx_working_hours_sort (sort_order),
    CONSTRAINT fk_working_hours_timezone FOREIGN KEY (timezone_id) REFERENCES timezone(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO working_hours (code, name, description, timezone_id, monday_start, monday_end, tuesday_start, tuesday_end, wednesday_start, wednesday_end, thursday_start, thursday_end, friday_start, friday_end, saturday_start, saturday_end, sunday_start, sunday_end, lunch_break_minutes, sort_order) VALUES
(1, 'US_STANDARD', 'US Standard Business Hours', 2, '09:00:00', '17:00:00', '09:00:00', '17:00:00', '09:00:00', '17:00:00', '09:00:00', '17:00:00', '09:00:00', '17:00:00', NULL, NULL, NULL, NULL, 60, 10),
(2, 'US_EXTENDED', 'US Extended Business Hours', 2, '08:00:00', '18:00:00', '08:00:00', '18:00:00', '08:00:00', '18:00:00', '08:00:00', '18:00:00', '08:00:00', '18:00:00', NULL, NULL, NULL, NULL, 60, 20),
(3, 'UK_STANDARD', 'UK Standard Business Hours', 6, '09:00:00', '17:30:00', '09:00:00', '17:30:00', '09:00:00', '17:30:00', '09:00:00', '17:30:00', '09:00:00', '17:30:00', NULL, NULL, NULL, NULL, 60, 30),
(4, 'EU_STANDARD', 'EU Standard Business Hours', 7, '09:00:00', '18:00:00', '09:00:00', '18:00:00', '09:00:00', '18:00:00', '09:00:00', '18:00:00', '09:00:00', '17:00:00', NULL, NULL, NULL, NULL, 60, 40),
(5, 'JP_STANDARD', 'Japan Standard Business Hours', 8, '09:00:00', '18:00:00', '09:00:00', '18:00:00', '09:00:00', '18:00:00', '09:00:00', '18:00:00', '09:00:00', '18:00:00', NULL, NULL, NULL, NULL, 60, 50),
(6, 'AU_STANDARD', 'Australia Standard Business Hours', 13, '09:00:00', '17:00:00', '09:00:00', '17:00:00', '09:00:00', '17:00:00', '09:00:00', '17:00:00', '09:00:00', '17:00:00', NULL, NULL, NULL, NULL, 30, 60),
(7, 'BR_STANDARD', 'Brazil Standard Business Hours', 12, '08:00:00', '18:00:00', '08:00:00', '18:00:00', '08:00:00', '18:00:00', '08:00:00', '18:00:00', '08:00:00', '17:00:00', NULL, NULL, NULL, NULL, 60, 70),
(8, 'IN_STANDARD', 'India Standard Business Hours', 11, '09:30:00', '18:30:00', '09:30:00', '18:30:00', '09:30:00', '18:30:00', '09:30:00', '18:30:00', '09:30:00', '18:30:00', '09:30:00', '13:30:00', NULL, NULL, 30, 80),
(9, '24_7', '24/7 Operations', 1, '00:00:00', '23:59:59', '00:00:00', '23:59:59', '00:00:00', '23:59:59', '00:00:00', '23:59:59', '00:00:00', '23:59:59', '00:00:00', '23:59:59', '00:00:00', '23:59:59', 0, 90),
(10, 'MUSIC_LABEL', 'Music Label Hours', 2, '10:00:00', '19:00:00', '10:00:00', '19:00:00', '10:00:00', '19:00:00', '10:00:00', '19:00:00', '10:00:00', '20:00:00', NULL, NULL, NULL, NULL, 60, 100);

CREATE TABLE schedule_frequency (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    frequency_type VARCHAR(50) NOT NULL,
    occurrences_per_year DECIMAL(10,2),
    typical_duration_days INT UNSIGNED,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_schedule_frequency_code (code),
    INDEX idx_schedule_frequency_type (frequency_type),
    INDEX idx_schedule_frequency_active (is_active),
    INDEX idx_schedule_frequency_sort (sort_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO schedule_frequency (code, name, description, frequency_type, occurrences_per_year, typical_duration_days, sort_order) VALUES
('ONCE', 'One Time', 'Single occurrence', 'ONE_TIME', 0.00, 1, 10),
('DAILY', 'Daily', 'Every day', 'RECURRING', 365.25, 1, 20),
('WEEKLY', 'Weekly', 'Once per week', 'RECURRING', 52.18, 1, 30),
('BIWEEKLY', 'Bi-Weekly', 'Every two weeks', 'RECURRING', 26.09, 1, 40),
('SEMIMONTHLY', 'Semi-Monthly', 'Twice per month', 'RECURRING', 24.00, 1, 50),
('MONTHLY', 'Monthly', 'Once per month', 'RECURRING', 12.00, 1, 60),
('BIMONTHLY', 'Bi-Monthly', 'Every two months', 'RECURRING', 6.00, 1, 70),
('QUARTERLY', 'Quarterly', 'Four times per year', 'RECURRING', 4.00, 1, 80),
('SEMIANNUAL', 'Semi-Annual', 'Twice per year', 'RECURRING', 2.00, 1, 90),
('ANNUAL', 'Annual', 'Once per year', 'RECURRING', 1.00, 1, 100),
('CONTINUOUS', 'Continuous', 'Ongoing without breaks', 'CONTINUOUS', NULL, NULL, 110),
('AS_NEEDED', 'As Needed', 'On demand basis', 'IRREGULAR', NULL, NULL, 120),
('SEASONAL', 'Seasonal', 'During specific seasons', 'SEASONAL', 4.00, 90, 130),
('PROJECT_BASED', 'Project Based', 'Duration of project', 'PROJECT', NULL, NULL, 140),
('EVENT_DRIVEN', 'Event Driven', 'Triggered by events', 'EVENT', NULL, NULL, 150);

CREATE TABLE time_unit (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    plural_name VARCHAR(100) NOT NULL,
    abbreviation VARCHAR(10) NOT NULL,
    seconds_value BIGINT UNSIGNED NOT NULL,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_time_unit_code (code),
    UNIQUE KEY uk_time_unit_abbr (abbreviation),
    INDEX idx_time_unit_active (is_active),
    INDEX idx_time_unit_sort (sort_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO time_unit (code, name, plural_name, abbreviation, seconds_value, sort_order) VALUES
('SECOND', 'Second', 'Seconds', 's', 1, 10),
('MINUTE', 'Minute', 'Minutes', 'min', 60, 20),
('HOUR', 'Hour', 'Hours', 'h', 3600, 30),
('DAY', 'Day', 'Days', 'd', 86400, 40),
('WEEK', 'Week', 'Weeks', 'w', 604800, 50),
('MONTH', 'Month', 'Months', 'mo', 2592000, 60),
('QUARTER', 'Quarter', 'Quarters', 'q', 7776000, 70),
('YEAR', 'Year', 'Years', 'y', 31536000, 80),
('BUSINESS_DAY', 'Business Day', 'Business Days', 'bd', 86400, 90),
('BUSINESS_HOUR', 'Business Hour', 'Business Hours', 'bh', 3600, 100);

CREATE TABLE duration_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    min_duration_seconds BIGINT UNSIGNED,
    max_duration_seconds BIGINT UNSIGNED,
    typical_duration_seconds BIGINT UNSIGNED,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_duration_type_code (code),
    INDEX idx_duration_type_active (is_active),
    INDEX idx_duration_type_sort (sort_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO duration_type (code, name, description, min_duration_seconds, max_duration_seconds, typical_duration_seconds, sort_order) VALUES
('INSTANT', 'Instant', 'Immediate/no duration', 0, 60, 0, 10),
('SHORT', 'Short', 'Brief duration', 60, 3600, 900, 20),
('MEDIUM', 'Medium', 'Moderate duration', 3600, 86400, 14400, 30),
('LONG', 'Long', 'Extended duration', 86400, 604800, 259200, 40),
('EXTENDED', 'Extended', 'Very long duration', 604800, 2592000, 1209600, 50),
('PERPETUAL', 'Perpetual', 'Ongoing/permanent', 31536000, NULL, NULL, 60),
('SINGLE_TRACK', 'Single Track', 'Duration of one song', 30, 600, 210, 70),
('EP_LENGTH', 'EP Length', 'Extended play duration', 600, 1800, 1200, 80),
('ALBUM_LENGTH', 'Album Length', 'Full album duration', 1800, 5400, 2700, 90),
('CONCERT_LENGTH', 'Concert Length', 'Live performance duration', 3600, 14400, 7200, 100),
('TERM_LENGTH', 'Term Length', 'Contract term duration', 31536000, 315360000, 94608000, 110),
('COPYRIGHT_LIFE', 'Copyright Life', 'Copyright duration', 2208988800, 3786912000, 3155760000, 120);

CREATE TABLE deadline_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL,
    is_hard_deadline BOOLEAN NOT NULL DEFAULT FALSE,
    grace_period_days INT UNSIGNED DEFAULT 0,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_deadline_type_code (code),
    INDEX idx_deadline_type_category (category),
    INDEX idx_deadline_type_active (is_active),
    INDEX idx_deadline_type_sort (sort_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO deadline_type (code, name, description, category, is_hard_deadline, grace_period_days, sort_order) VALUES
('RELEASE_DATE', 'Release Date', 'Music release date', 'RELEASE', TRUE, 0, 10),
('SUBMISSION_DEADLINE', 'Submission Deadline', 'Content submission deadline', 'SUBMISSION', TRUE, 0, 20),
('REGISTRATION_DEADLINE', 'Registration Deadline', 'Work registration deadline', 'REGISTRATION', TRUE, 7, 30),
('PAYMENT_DUE', 'Payment Due', 'Payment due date', 'FINANCIAL', TRUE, 3, 40),
('ROYALTY_DISTRIBUTION', 'Royalty Distribution', 'Royalty payment date', 'FINANCIAL', FALSE, 14, 50),
('REPORTING_DEADLINE', 'Reporting Deadline', 'Report submission deadline', 'REPORTING', TRUE, 1, 60),
('CONTRACT_EXPIRY', 'Contract Expiry', 'Contract expiration date', 'LEGAL', TRUE, 30, 70),
('OPTION_EXERCISE', 'Option Exercise', 'Option exercise deadline', 'LEGAL', TRUE, 0, 80),
('AUDIT_DEADLINE', 'Audit Deadline', 'Audit completion deadline', 'COMPLIANCE', FALSE, 7, 90),
('MILESTONE_TARGET', 'Milestone Target', 'Project milestone date', 'PROJECT', FALSE, 14, 100),
('FESTIVAL_SUBMISSION', 'Festival Submission', 'Festival entry deadline', 'EVENT', TRUE, 0, 110),
('AWARD_SUBMISSION', 'Award Submission', 'Award entry deadline', 'EVENT', TRUE, 0, 120),
('METADATA_DELIVERY', 'Metadata Delivery', 'Metadata delivery deadline', 'TECHNICAL', TRUE, 1, 130),
('MASTER_DELIVERY', 'Master Delivery', 'Master recording delivery', 'TECHNICAL', TRUE, 0, 140),
('MARKETING_LAUNCH', 'Marketing Launch', 'Marketing campaign start', 'MARKETING', FALSE, 3, 150);

CREATE TABLE schedule_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    status_type VARCHAR(50) NOT NULL,
    is_final BOOLEAN NOT NULL DEFAULT FALSE,
    allows_modification BOOLEAN NOT NULL DEFAULT TRUE,
    sort_order INT UNSIGNED NOT NULL DEFAULT 1000,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_schedule_status_code (code),
    INDEX idx_schedule_status_type (status_type),
    INDEX idx_schedule_status_active (is_active),
    INDEX idx_schedule_status_sort (sort_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO schedule_status (code, name, description, status_type, is_final, allows_modification, sort_order) VALUES
('DRAFT', 'Draft', 'Schedule in draft status', 'PLANNING', FALSE, TRUE, 10),
('TENTATIVE', 'Tentative', 'Tentatively scheduled', 'PLANNING', FALSE, TRUE, 20),
('CONFIRMED', 'Confirmed', 'Schedule confirmed', 'ACTIVE', FALSE, TRUE, 30),
('LOCKED', 'Locked', 'Schedule locked', 'ACTIVE', FALSE, FALSE, 40),
('IN_PROGRESS', 'In Progress', 'Currently executing', 'ACTIVE', FALSE, FALSE, 50),
('COMPLETED', 'Completed', 'Schedule completed', 'FINAL', TRUE, FALSE, 60),
('CANCELLED', 'Cancelled', 'Schedule cancelled', 'FINAL', TRUE, FALSE, 70),
('POSTPONED', 'Postponed', 'Schedule postponed', 'HOLD', FALSE, TRUE, 80),
('RESCHEDULED', 'Rescheduled', 'Schedule changed', 'MODIFIED', FALSE, TRUE, 90),
('MISSED', 'Missed', 'Schedule deadline missed', 'FINAL', TRUE, FALSE, 100),
('PARTIAL', 'Partial', 'Partially completed', 'ACTIVE', FALSE, TRUE, 110),
('PENDING_APPROVAL', 'Pending Approval', 'Awaiting approval', 'REVIEW', FALSE, TRUE, 120),
('APPROVED', 'Approved', 'Schedule approved', 'ACTIVE', FALSE, TRUE, 130),
('REJECTED', 'Rejected', 'Schedule rejected', 'FINAL', TRUE, FALSE, 140),
('ARCHIVED', 'Archived', 'Schedule archived', 'FINAL', TRUE, FALSE, 150);

-- =====================================================
-- SECTION 29: COMPLIANCE
-- =====================================================

-- Table: compliance_framework
CREATE TABLE compliance_framework (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    full_name VARCHAR(500),
    jurisdiction_scope VARCHAR(100), -- 'global', 'regional', 'national'
    framework_type VARCHAR(100), -- 'data_protection', 'copyright', 'accessibility', 'industry_specific'
    effective_date DATE,
    enforcement_date DATE,
    description TEXT,
    key_principles TEXT,
    regulatory_body VARCHAR(500),
    penalties_info TEXT,
    official_url VARCHAR(500),
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_framework_type (framework_type),
    INDEX idx_active_scope (is_active, jurisdiction_scope),
    INDEX idx_code (code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO compliance_framework (code, name, full_name, jurisdiction_scope, framework_type, effective_date, enforcement_date, description, regulatory_body, official_url, display_order) VALUES
('GDPR', 'GDPR', 'General Data Protection Regulation', 'regional', 'data_protection', '2016-04-27', '2018-05-25', 'EU data protection and privacy regulation', 'European Data Protection Board (EDPB)', 'https://gdpr.eu', 1),
('CCPA', 'CCPA', 'California Consumer Privacy Act', 'national', 'data_protection', '2018-06-28', '2020-01-01', 'California state privacy law', 'California Privacy Protection Agency', 'https://oag.ca.gov/privacy/ccpa', 2),
('LGPD', 'LGPD', 'Lei Geral de Proteção de Dados', 'national', 'data_protection', '2018-08-14', '2020-09-18', 'Brazilian General Data Protection Law', 'ANPD - Brazilian Data Protection Authority', 'https://www.gov.br/anpd', 3),
('PIPEDA', 'PIPEDA', 'Personal Information Protection and Electronic Documents Act', 'national', 'data_protection', '2000-04-13', '2001-01-01', 'Canadian federal privacy law', 'Office of the Privacy Commissioner of Canada', 'https://www.priv.gc.ca', 4),
('APPI', 'APPI', 'Act on the Protection of Personal Information', 'national', 'data_protection', '2003-05-30', '2005-04-01', 'Japanese personal information protection act', 'Personal Information Protection Commission', 'https://www.ppc.go.jp', 5),
('POPIA', 'POPIA', 'Protection of Personal Information Act', 'national', 'data_protection', '2013-11-26', '2021-07-01', 'South African data protection act', 'Information Regulator', 'https://www.justice.gov.za/inforeg', 6),
('PDPA_SG', 'PDPA Singapore', 'Personal Data Protection Act', 'national', 'data_protection', '2012-10-15', '2014-07-02', 'Singapore personal data protection act', 'PDPC - Personal Data Protection Commission', 'https://www.pdpc.gov.sg', 7),
('DMCA', 'DMCA', 'Digital Millennium Copyright Act', 'national', 'copyright', '1998-10-28', '1998-10-28', 'US copyright law for digital media', 'US Copyright Office', 'https://www.copyright.gov/dmca', 8),
('EUCD', 'EU Copyright Directive', 'Directive on Copyright in the Digital Single Market', 'regional', 'copyright', '2019-04-17', '2021-06-07', 'EU copyright framework for digital market', 'European Commission', 'https://eur-lex.europa.eu', 9),
('WCAG21', 'WCAG 2.1', 'Web Content Accessibility Guidelines 2.1', 'global', 'accessibility', '2018-06-05', '2018-06-05', 'W3C accessibility standards', 'W3C', 'https://www.w3.org/WAI/WCAG21', 10),
('ADA', 'ADA', 'Americans with Disabilities Act', 'national', 'accessibility', '1990-07-26', '1992-01-26', 'US disability rights law', 'US Department of Justice', 'https://www.ada.gov', 11),
('COPPA', 'COPPA', 'Children\'s Online Privacy Protection Act', 'national', 'data_protection', '1998-10-21', '2000-04-21', 'US children privacy protection', 'Federal Trade Commission', 'https://www.ftc.gov/coppa', 12),
('CAN_SPAM', 'CAN-SPAM', 'Controlling the Assault of Non-Solicited Pornography And Marketing Act', 'national', 'data_protection', '2003-12-16', '2004-01-01', 'US anti-spam law', 'Federal Trade Commission', 'https://www.ftc.gov', 13),
('CPRA', 'CPRA', 'California Privacy Rights Act', 'national', 'data_protection', '2020-11-03', '2023-01-01', 'Enhanced California privacy law', 'California Privacy Protection Agency', 'https://cppa.ca.gov', 14),
('VCDPA', 'VCDPA', 'Virginia Consumer Data Protection Act', 'national', 'data_protection', '2021-03-02', '2023-01-01', 'Virginia state privacy law', 'Virginia Attorney General', 'https://www.oag.state.va.us', 15);

-- Table: legal_jurisdiction
CREATE TABLE legal_jurisdiction (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    jurisdiction_type VARCHAR(50), -- 'country', 'state', 'province', 'region'
    parent_jurisdiction_id INT UNSIGNED,
    country_code CHAR(2),
    region_code VARCHAR(10),
    legal_system VARCHAR(100), -- 'common_law', 'civil_law', 'mixed'
    copyright_convention VARCHAR(200), -- 'berne', 'ucc', 'trips', 'wct'
    data_protection_framework_id INT UNSIGNED,
    copyright_term_rule_id INT UNSIGNED,
    moral_rights_recognized BOOLEAN DEFAULT TRUE,
    fair_use_doctrine VARCHAR(50), -- 'fair_use', 'fair_dealing', 'none'
    privacy_shield_adequate BOOLEAN DEFAULT FALSE,
    gdpr_adequate BOOLEAN DEFAULT FALSE,
    time_zone VARCHAR(50),
    official_languages JSON,
    currency_code CHAR(3),
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (parent_jurisdiction_id) REFERENCES legal_jurisdiction(id),
    FOREIGN KEY (data_protection_framework_id) REFERENCES compliance_framework(id),
    INDEX idx_country_code (country_code),
    INDEX idx_jurisdiction_type (jurisdiction_type),
    INDEX idx_parent (parent_jurisdiction_id),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO legal_jurisdiction (code, name, jurisdiction_type, country_code, legal_system, copyright_convention, moral_rights_recognized, fair_use_doctrine, privacy_shield_adequate, gdpr_adequate, time_zone, official_languages, currency_code) VALUES
('US', 'United States', 'country', 'US', 'common_law', 'berne,ucc,trips,wct', FALSE, 'fair_use', FALSE, FALSE, 'America/New_York', '["en"]', 'USD'),
('EU', 'European Union', 'region', NULL, 'mixed', 'berne,trips,wct', TRUE, 'fair_dealing', TRUE, TRUE, 'Europe/Brussels', '["en","fr","de","es","it","nl","pl"]', 'EUR'),
('UK', 'United Kingdom', 'country', 'GB', 'common_law', 'berne,trips,wct', TRUE, 'fair_dealing', TRUE, TRUE, 'Europe/London', '["en"]', 'GBP'),
('CA', 'Canada', 'country', 'CA', 'mixed', 'berne,ucc,trips,wct', TRUE, 'fair_dealing', FALSE, TRUE, 'America/Toronto', '["en","fr"]', 'CAD'),
('AU', 'Australia', 'country', 'AU', 'common_law', 'berne,trips,wct', TRUE, 'fair_dealing', FALSE, FALSE, 'Australia/Sydney', '["en"]', 'AUD'),
('JP', 'Japan', 'country', 'JP', 'civil_law', 'berne,ucc,trips,wct', TRUE, 'none', FALSE, TRUE, 'Asia/Tokyo', '["ja"]', 'JPY'),
('BR', 'Brazil', 'country', 'BR', 'civil_law', 'berne,trips,wct', TRUE, 'none', FALSE, FALSE, 'America/Sao_Paulo', '["pt"]', 'BRL'),
('DE', 'Germany', 'country', 'DE', 'civil_law', 'berne,trips,wct', TRUE, 'fair_dealing', TRUE, TRUE, 'Europe/Berlin', '["de"]', 'EUR'),
('FR', 'France', 'country', 'FR', 'civil_law', 'berne,trips,wct', TRUE, 'fair_dealing', TRUE, TRUE, 'Europe/Paris', '["fr"]', 'EUR'),
('IN', 'India', 'country', 'IN', 'common_law', 'berne,trips,wct', TRUE, 'fair_dealing', FALSE, FALSE, 'Asia/Kolkata', '["hi","en"]', 'INR'),
('CN', 'China', 'country', 'CN', 'civil_law', 'berne,trips,wct', TRUE, 'none', FALSE, FALSE, 'Asia/Shanghai', '["zh"]', 'CNY'),
('KR', 'South Korea', 'country', 'KR', 'civil_law', 'berne,trips,wct', TRUE, 'none', FALSE, TRUE, 'Asia/Seoul', '["ko"]', 'KRW'),
('MX', 'Mexico', 'country', 'MX', 'civil_law', 'berne,trips,wct', TRUE, 'none', FALSE, FALSE, 'America/Mexico_City', '["es"]', 'MXN'),
('SG', 'Singapore', 'country', 'SG', 'common_law', 'berne,trips,wct', TRUE, 'fair_dealing', FALSE, FALSE, 'Asia/Singapore', '["en","zh","ms","ta"]', 'SGD'),
('ZA', 'South Africa', 'country', 'ZA', 'mixed', 'berne,trips,wct', TRUE, 'fair_dealing', FALSE, FALSE, 'Africa/Johannesburg', '["en","af","zu","xh"]', 'ZAR');

-- Table: copyright_term_rule
CREATE TABLE copyright_term_rule (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    work_type VARCHAR(100), -- 'musical_work', 'sound_recording', 'literary_work', 'audiovisual'
    term_calculation VARCHAR(100), -- 'life_plus', 'fixed_term', 'publication_plus'
    base_term_years INT,
    life_plus_years INT,
    corporate_work_years INT,
    anonymous_work_years INT,
    sound_recording_years INT,
    performance_years INT,
    broadcast_years INT,
    publication_required BOOLEAN DEFAULT FALSE,
    registration_required BOOLEAN DEFAULT FALSE,
    renewal_required BOOLEAN DEFAULT FALSE,
    special_conditions TEXT,
    effective_date DATE,
    notes TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_work_type (work_type),
    INDEX idx_term_calc (term_calculation),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO copyright_term_rule (code, name, work_type, term_calculation, life_plus_years, corporate_work_years, anonymous_work_years, sound_recording_years, performance_years, broadcast_years, publication_required, registration_required, notes) VALUES
('US_GENERAL', 'US General Copyright Term', 'musical_work', 'life_plus', 70, 95, 95, 95, 0, 0, FALSE, FALSE, 'Life + 70 years, or 95 years from publication for works made for hire'),
('EU_GENERAL', 'EU General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 70, 50, 50, FALSE, FALSE, 'Life + 70 years harmonized across EU'),
('UK_GENERAL', 'UK General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 70, 50, 50, FALSE, FALSE, 'Life + 70 years, 50 years for sound recordings'),
('CA_GENERAL', 'Canada General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 75, 50, 50, FALSE, FALSE, 'Life + 70 years as of 2022'),
('AU_GENERAL', 'Australia General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 70, 50, 50, FALSE, FALSE, 'Life + 70 years'),
('JP_GENERAL', 'Japan General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 70, 70, 50, FALSE, FALSE, 'Life + 70 years as of 2018'),
('BR_GENERAL', 'Brazil General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 70, 70, 70, FALSE, FALSE, 'Life + 70 years'),
('IN_GENERAL', 'India General Copyright Term', 'musical_work', 'life_plus', 60, 60, 60, 60, 50, 25, FALSE, FALSE, 'Life + 60 years'),
('CN_GENERAL', 'China General Copyright Term', 'musical_work', 'life_plus', 50, 50, 50, 50, 50, 50, FALSE, FALSE, 'Life + 50 years'),
('MX_GENERAL', 'Mexico General Copyright Term', 'musical_work', 'life_plus', 100, 100, 100, 75, 75, 50, FALSE, FALSE, 'Life + 100 years, longest in world');

-- Table: fair_use_category
CREATE TABLE fair_use_category (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    jurisdiction_id INT UNSIGNED,
    category_type VARCHAR(100), -- 'criticism', 'comment', 'news', 'teaching', 'research', 'parody'
    description TEXT,
    factors_considered TEXT,
    examples TEXT,
    limitations TEXT,
    case_law_references TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_category_type (category_type),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO fair_use_category (code, name, jurisdiction_id, category_type, description, factors_considered) VALUES
('US_CRITICISM', 'Criticism and Comment', 1, 'criticism', 'Use for criticism, comment, or review', 'Purpose and character of use, nature of work, amount used, effect on market'),
('US_NEWS', 'News Reporting', 1, 'news', 'Use in news reporting', 'Transformative nature, public interest, commercial vs non-commercial'),
('US_TEACHING', 'Teaching', 1, 'teaching', 'Use for teaching in nonprofit educational institutions', 'Educational purpose, nonprofit nature, classroom use'),
('US_RESEARCH', 'Scholarship and Research', 1, 'research', 'Use for scholarship or research', 'Academic purpose, transformative use, attribution'),
('US_PARODY', 'Parody', 1, 'parody', 'Use for parody or satire', 'Transformative nature, commentary on original, commercial impact'),
('UK_CRITICISM', 'Criticism and Review', 3, 'criticism', 'Fair dealing for criticism or review', 'Sufficient acknowledgement, work made available to public'),
('UK_NEWS', 'News Reporting', 3, 'news', 'Fair dealing for reporting current events', 'Sufficient acknowledgement except for photographs'),
('UK_RESEARCH', 'Research and Private Study', 3, 'research', 'Fair dealing for non-commercial research', 'Non-commercial purpose, sufficient acknowledgement'),
('CA_RESEARCH', 'Research and Private Study', 4, 'research', 'Fair dealing for research or private study', 'Purpose, character, amount, alternatives, nature, effect'),
('CA_CRITICISM', 'Criticism and Review', 4, 'criticism', 'Fair dealing for criticism or review', 'Mention of source and author required');

-- Table: data_category
CREATE TABLE data_category (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    category_type VARCHAR(100), -- 'personal', 'sensitive', 'financial', 'behavioral', 'technical'
    gdpr_category VARCHAR(100), -- 'personal_data', 'special_category', 'criminal_data'
    ccpa_category VARCHAR(100),
    description TEXT,
    examples TEXT,
    requires_explicit_consent BOOLEAN DEFAULT FALSE,
    enhanced_protection BOOLEAN DEFAULT FALSE,
    encryption_required BOOLEAN DEFAULT FALSE,
    retention_limitation_days INT,
    purpose_limitation TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category_type (category_type),
    INDEX idx_gdpr_category (gdpr_category),
    INDEX idx_protection_level (enhanced_protection, encryption_required),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_category (code, name, category_type, gdpr_category, ccpa_category, description, examples, requires_explicit_consent, enhanced_protection, encryption_required) VALUES
('PERSONAL_ID', 'Personal Identifiers', 'personal', 'personal_data', 'identifiers', 'Data that directly identifies an individual', 'Name, email, phone, address, ID numbers', FALSE, FALSE, TRUE),
('FINANCIAL', 'Financial Information', 'financial', 'personal_data', 'financial', 'Financial account and payment data', 'Bank accounts, credit cards, payment history', TRUE, TRUE, TRUE),
('SENSITIVE', 'Sensitive Personal Data', 'sensitive', 'special_category', 'sensitive', 'Special category data requiring extra protection', 'Race, religion, health, sexual orientation', TRUE, TRUE, TRUE),
('BIOMETRIC', 'Biometric Data', 'sensitive', 'special_category', 'biometric', 'Biological characteristics data', 'Fingerprints, facial recognition, voice patterns', TRUE, TRUE, TRUE),
('LOCATION', 'Location Data', 'behavioral', 'personal_data', 'geolocation', 'Geographic location information', 'GPS coordinates, IP location, physical address', TRUE, FALSE, TRUE),
('BEHAVIORAL', 'Behavioral Data', 'behavioral', 'personal_data', 'inferences', 'Data about user behavior and preferences', 'Browsing history, purchase patterns, preferences', FALSE, FALSE, FALSE),
('PROFESSIONAL', 'Professional Information', 'personal', 'personal_data', 'professional', 'Employment and professional data', 'Job title, employer, work history, skills', FALSE, FALSE, TRUE),
('COMMUNICATION', 'Communication Data', 'personal', 'personal_data', 'electronic_network', 'Electronic communications content', 'Emails, messages, call logs', TRUE, TRUE, TRUE),
('TECHNICAL', 'Technical Data', 'technical', 'personal_data', 'internet_activity', 'Device and browser information', 'IP address, cookies, device IDs, user agent', FALSE, FALSE, FALSE),
('MINORS', 'Minor\'s Data', 'sensitive', 'special_category', 'minor', 'Data relating to children under 16/18', 'Any personal data of minors', TRUE, TRUE, TRUE);

-- Table: data_retention_policy
CREATE TABLE data_retention_policy (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(200) NOT NULL,
    jurisdiction_id INT UNSIGNED,
    data_category_id INT UNSIGNED,
    retention_period_days INT,
    retention_period_description VARCHAR(500),
    legal_basis VARCHAR(200),
    deletion_method VARCHAR(100), -- 'hard_delete', 'anonymization', 'pseudonymization'
    review_period_days INT,
    exceptions TEXT,
    automated_deletion BOOLEAN DEFAULT FALSE,
    requires_approval BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    FOREIGN KEY (data_category_id) REFERENCES data_category(id),
    INDEX idx_jurisdiction_category (jurisdiction_id, data_category_id),
    INDEX idx_retention_period (retention_period_days),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_jurisdiction_category (jurisdiction_id, data_category_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_retention_policy (code, name, jurisdiction_id, data_category_id, retention_period_days, retention_period_description, legal_basis, deletion_method, review_period_days, automated_deletion) VALUES
('EU_PERSONAL_ID', 'EU Personal Identifiers Retention', 2, 1, 2190, '6 years after last activity', 'Legitimate interest, legal obligation', 'anonymization', 365, TRUE),
('EU_FINANCIAL', 'EU Financial Data Retention', 2, 2, 3650, '10 years for tax compliance', 'Legal obligation', 'hard_delete', 365, FALSE),
('EU_SENSITIVE', 'EU Sensitive Data Retention', 2, 3, 1095, '3 years maximum unless consent renewed', 'Explicit consent', 'hard_delete', 180, TRUE),
('US_PERSONAL_ID', 'US Personal Identifiers Retention', 1, 1, 2555, '7 years standard retention', 'Business records', 'anonymization', 365, FALSE),
('US_FINANCIAL', 'US Financial Data Retention', 1, 2, 2555, '7 years for IRS requirements', 'Legal obligation', 'hard_delete', 365, FALSE),
('CA_PERSONAL_ID', 'Canada Personal Identifiers Retention', 4, 1, 2190, '6 years after relationship ends', 'PIPEDA requirements', 'hard_delete', 365, TRUE),
('UK_BIOMETRIC', 'UK Biometric Data Retention', 3, 4, 90, '3 months maximum', 'Explicit consent required', 'hard_delete', 30, TRUE),
('BR_PERSONAL_ID', 'Brazil Personal Identifiers Retention', 7, 1, 1825, '5 years after processing ends', 'LGPD compliance', 'anonymization', 180, TRUE),
('JP_PERSONAL_ID', 'Japan Personal Identifiers Retention', 6, 1, 1825, '5 years standard retention', 'APPI compliance', 'hard_delete', 365, FALSE),
('EU_MINORS', 'EU Minor Data Retention', 2, 10, 365, '1 year maximum, parental consent review', 'Parental consent', 'hard_delete', 90, TRUE);

-- Table: privacy_consent_type
CREATE TABLE privacy_consent_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    consent_category VARCHAR(100), -- 'processing', 'marketing', 'cookies', 'third_party', 'international_transfer'
    description TEXT,
    requirements TEXT,
    withdrawal_method VARCHAR(200),
    granular_options JSON,
    requires_explicit_action BOOLEAN DEFAULT TRUE,
    requires_double_optin BOOLEAN DEFAULT FALSE,
    age_verification_required BOOLEAN DEFAULT FALSE,
    renewal_period_days INT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_consent_category (consent_category),
    INDEX idx_requirements (requires_explicit_action, requires_double_optin),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO privacy_consent_type (code, name, consent_category, description, requirements, withdrawal_method, requires_explicit_action, requires_double_optin) VALUES
('ESSENTIAL_PROCESSING', 'Essential Data Processing', 'processing', 'Consent for essential service operation', 'Clear purpose, specific use, freely given', 'Account settings, email request', TRUE, FALSE),
('MARKETING_EMAIL', 'Email Marketing', 'marketing', 'Consent for promotional emails', 'Separate opt-in, clear description', 'Unsubscribe link, preference center', TRUE, TRUE),
('MARKETING_SMS', 'SMS Marketing', 'marketing', 'Consent for promotional SMS', 'Explicit opt-in, frequency disclosure', 'Text STOP, preference center', TRUE, TRUE),
('ANALYTICS_COOKIES', 'Analytics Cookies', 'cookies', 'Consent for analytics tracking', 'Cookie banner, granular control', 'Cookie settings, browser controls', TRUE, FALSE),
('THIRD_PARTY_SHARING', 'Third Party Data Sharing', 'third_party', 'Consent to share with partners', 'Named parties, specific purposes', 'Account settings, written request', TRUE, FALSE),
('INTERNATIONAL_TRANSFER', 'International Data Transfer', 'international_transfer', 'Consent for cross-border transfer', 'Country disclosure, risk information', 'Written request, account deletion', TRUE, FALSE),
('BEHAVIORAL_ADVERTISING', 'Behavioral Advertising', 'marketing', 'Consent for targeted advertising', 'Clear explanation, opt-out option', 'Ad preferences, industry opt-out', TRUE, FALSE),
('SENSITIVE_DATA', 'Sensitive Data Processing', 'processing', 'Explicit consent for special categories', 'Written or clear affirmative action', 'Written withdrawal, immediate effect', TRUE, FALSE),
('MINOR_CONSENT', 'Minor Data Processing', 'processing', 'Parental consent for minors', 'Age verification, parental approval', 'Parent request, immediate deletion', TRUE, TRUE),
('BIOMETRIC_PROCESSING', 'Biometric Data Processing', 'processing', 'Consent for biometric data use', 'Explicit written consent, specific use', 'Written request, complete deletion', TRUE, TRUE);

-- Table: data_processing_purpose
CREATE TABLE data_processing_purpose (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    purpose_category VARCHAR(100), -- 'service_delivery', 'legal_compliance', 'legitimate_interest', 'consent', 'vital_interest'
    legal_basis VARCHAR(100), -- GDPR Article 6 basis
    description TEXT,
    examples TEXT,
    requires_consent BOOLEAN DEFAULT FALSE,
    requires_lia BOOLEAN DEFAULT FALSE, -- Legitimate Interest Assessment
    retention_period_days INT,
    data_minimization_notes TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_purpose_category (purpose_category),
    INDEX idx_legal_basis (legal_basis),
    INDEX idx_requirements (requires_consent, requires_lia),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_processing_purpose (code, name, purpose_category, legal_basis, description, requires_consent, requires_lia) VALUES
('SERVICE_PROVISION', 'Service Provision', 'service_delivery', 'contract', 'Processing necessary for service delivery', FALSE, FALSE),
('ACCOUNT_MANAGEMENT', 'Account Management', 'service_delivery', 'contract', 'User account creation and management', FALSE, FALSE),
('PAYMENT_PROCESSING', 'Payment Processing', 'service_delivery', 'contract', 'Processing payments and billing', FALSE, FALSE),
('LEGAL_COMPLIANCE', 'Legal Compliance', 'legal_compliance', 'legal_obligation', 'Compliance with laws and regulations', FALSE, FALSE),
('TAX_REPORTING', 'Tax Reporting', 'legal_compliance', 'legal_obligation', 'Tax calculation and reporting', FALSE, FALSE),
('FRAUD_PREVENTION', 'Fraud Prevention', 'legitimate_interest', 'legitimate_interests', 'Preventing fraudulent activities', FALSE, TRUE),
('SECURITY', 'Security and Safety', 'legitimate_interest', 'legitimate_interests', 'Platform security and user safety', FALSE, TRUE),
('ANALYTICS', 'Analytics and Improvement', 'legitimate_interest', 'legitimate_interests', 'Service analytics and improvements', FALSE, TRUE),
('MARKETING_DIRECT', 'Direct Marketing', 'consent', 'consent', 'Direct marketing communications', TRUE, FALSE),
('PROFILING', 'User Profiling', 'consent', 'consent', 'Creating user profiles for personalization', TRUE, FALSE);

-- Table: data_subject_right
CREATE TABLE data_subject_right (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    framework_id INT UNSIGNED,
    right_category VARCHAR(100), -- 'access', 'rectification', 'erasure', 'portability', 'objection'
    description TEXT,
    response_deadline_days INT DEFAULT 30,
    can_extend_deadline BOOLEAN DEFAULT TRUE,
    extension_days INT DEFAULT 30,
    exceptions TEXT,
    verification_required BOOLEAN DEFAULT TRUE,
    fee_allowed BOOLEAN DEFAULT FALSE,
    automated_fulfillment BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_framework (framework_id),
    INDEX idx_right_category (right_category),
    INDEX idx_automated (automated_fulfillment),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_subject_right (code, name, framework_id, right_category, description, response_deadline_days, can_extend_deadline, verification_required) VALUES
('GDPR_ACCESS', 'Right of Access', 1, 'access', 'Right to obtain copy of personal data', 30, TRUE, TRUE),
('GDPR_RECTIFICATION', 'Right to Rectification', 1, 'rectification', 'Right to correct inaccurate data', 30, TRUE, TRUE),
('GDPR_ERASURE', 'Right to Erasure', 1, 'erasure', 'Right to be forgotten', 30, TRUE, TRUE),
('GDPR_PORTABILITY', 'Right to Data Portability', 1, 'portability', 'Right to receive data in portable format', 30, TRUE, TRUE),
('GDPR_OBJECTION', 'Right to Object', 1, 'objection', 'Right to object to processing', 30, FALSE, TRUE),
('GDPR_RESTRICTION', 'Right to Restrict Processing', 1, 'restriction', 'Right to limit processing', 30, TRUE, TRUE),
('CCPA_ACCESS', 'Right to Know', 2, 'access', 'Right to know what data is collected', 45, TRUE, TRUE),
('CCPA_DELETE', 'Right to Delete', 2, 'erasure', 'Right to request deletion', 45, TRUE, TRUE),
('CCPA_OPTOUT', 'Right to Opt-Out', 2, 'objection', 'Right to opt-out of sale', 15, FALSE, FALSE),
('CCPA_NONDISCRIM', 'Right to Non-Discrimination', 2, 'nondiscrimination', 'Right to equal service', 0, FALSE, FALSE);

-- Table: breach_notification_requirement
CREATE TABLE breach_notification_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    framework_id INT UNSIGNED,
    jurisdiction_id INT UNSIGNED,
    name VARCHAR(200) NOT NULL,
    breach_threshold VARCHAR(200), -- 'any_breach', 'risk_based', 'harm_based'
    authority_notification_hours INT,
    individual_notification_hours INT,
    public_notification_required BOOLEAN DEFAULT FALSE,
    public_notification_threshold TEXT,
    notification_contents TEXT,
    documentation_requirements TEXT,
    penalty_structure TEXT,
    exceptions TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_framework (framework_id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_notification_time (authority_notification_hours),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_framework_jurisdiction (framework_id, jurisdiction_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO breach_notification_requirement (code, framework_id, jurisdiction_id, name, breach_threshold, authority_notification_hours, individual_notification_hours, public_notification_required, notification_contents) VALUES
('GDPR_BREACH', 1, 2, 'GDPR Breach Notification', 'risk_based', 72, 72, FALSE, 'Nature of breach, categories of data, number affected, consequences, measures taken'),
('CCPA_BREACH', 2, 1, 'CCPA Breach Notification', 'harm_based', NULL, NULL, TRUE, 'Nature of breach, type of information, general description of incident'),
('LGPD_BREACH', 3, 7, 'LGPD Breach Notification', 'risk_based', NULL, 72, FALSE, 'Description of nature, data subjects affected, security measures, risk assessment'),
('PIPEDA_BREACH', 4, 4, 'PIPEDA Breach Notification', 'harm_based', NULL, NULL, TRUE, 'Circumstances, data involved, harm assessment, mitigation steps'),
('APPI_BREACH', 5, 6, 'APPI Breach Notification', 'any_breach', NULL, NULL, TRUE, 'Facts of breach, data categories, number affected, response measures'),
('HIPAA_BREACH', NULL, 1, 'HIPAA Breach Notification', 'harm_based', 1440, 1440, TRUE, 'Healthcare specific requirements'),
('PCI_DSS_BREACH', NULL, NULL, 'PCI DSS Breach Notification', 'any_breach', 24, NULL, FALSE, 'Payment card data breach requirements'),
('GLBA_BREACH', NULL, 1, 'GLBA Breach Notification', 'risk_based', NULL, NULL, FALSE, 'Financial data breach requirements'),
('STATE_BREACH_CA', NULL, 1, 'California Breach Notification', 'any_breach', NULL, NULL, TRUE, 'California state specific requirements'),
('STATE_BREACH_NY', NULL, 1, 'New York Breach Notification', 'harm_based', NULL, NULL, TRUE, 'New York state specific requirements');

-- Table: cross_border_transfer_mechanism
CREATE TABLE cross_border_transfer_mechanism (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    mechanism_type VARCHAR(100), -- 'adequacy', 'scc', 'bcr', 'consent', 'derogation'
    framework_id INT UNSIGNED,
    description TEXT,
    requirements TEXT,
    documentation_needed TEXT,
    approval_required BOOLEAN DEFAULT FALSE,
    approval_authority VARCHAR(500),
    validity_period_days INT,
    review_required BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_mechanism_type (mechanism_type),
    INDEX idx_framework (framework_id),
    INDEX idx_approval (approval_required),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO cross_border_transfer_mechanism (code, name, mechanism_type, framework_id, description, requirements, approval_required) VALUES
('EU_ADEQUACY', 'EU Adequacy Decision', 'adequacy', 1, 'European Commission adequacy decision', 'Country provides adequate protection', FALSE),
('EU_SCC', 'EU Standard Contractual Clauses', 'scc', 1, 'EU approved contract clauses', 'Signed SCCs, transfer impact assessment', FALSE),
('EU_BCR', 'Binding Corporate Rules', 'bcr', 1, 'Intra-group transfer rules', 'DPA approval, comprehensive policies', TRUE),
('GDPR_CONSENT', 'Explicit Consent', 'consent', 1, 'Individual explicit consent for transfer', 'Informed consent, specific countries', FALSE),
('GDPR_CONTRACT', 'Contract Performance', 'derogation', 1, 'Necessary for contract', 'Transfer necessary for contract with individual', FALSE),
('APEC_CBPR', 'APEC Cross-Border Privacy Rules', 'cbpr', NULL, 'Asia-Pacific privacy framework', 'CBPR certification', TRUE),
('PRIVACY_SHIELD', 'EU-US Privacy Shield (Invalidated)', 'adequacy', 1, 'Former EU-US transfer mechanism', 'No longer valid after Schrems II', FALSE),
('UK_ADEQUACY', 'UK Adequacy Decision', 'adequacy', NULL, 'UK specific adequacy decisions', 'Country provides adequate protection', FALSE),
('LGPD_CLAUSES', 'LGPD Standard Clauses', 'scc', 3, 'Brazil standard contractual clauses', 'ANPD approved clauses', FALSE),
('CONSENT_TRANSFER', 'Consent-Based Transfer', 'consent', NULL, 'Generic consent mechanism', 'Clear, specific, informed consent', FALSE);

-- Table: industry_regulation
CREATE TABLE industry_regulation (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    industry_sector VARCHAR(100), -- 'music', 'entertainment', 'digital_media', 'broadcasting'
    regulation_type VARCHAR(100), -- 'licensing', 'royalty', 'content', 'distribution'
    jurisdiction_id INT UNSIGNED,
    description TEXT,
    key_requirements TEXT,
    licensing_body VARCHAR(500),
    compliance_deadline DATE,
    penalties TEXT,
    related_frameworks JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_industry_sector (industry_sector),
    INDEX idx_regulation_type (regulation_type),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO industry_regulation (code, name, industry_sector, regulation_type, jurisdiction_id, description, key_requirements, licensing_body) VALUES
('MMA', 'Music Modernization Act', 'music', 'licensing', 1, 'US music licensing reform', 'Mechanical licensing, pre-1972 recordings', 'US Copyright Office, MLC'),
('CRB', 'Copyright Royalty Board', 'music', 'royalty', 1, 'US royalty rate setting', 'Statutory royalty rates for digital services', 'Copyright Royalty Board'),
('EUCD_ARTICLE17', 'EU Copyright Directive Article 17', 'digital_media', 'content', 2, 'Platform liability for user content', 'Content filtering, licensing obligations', 'EU Member State Authorities'),
('ONLINE_HARMS', 'UK Online Safety Act', 'digital_media', 'content', 3, 'Online platform safety requirements', 'Content moderation, age verification', 'Ofcom'),
('CRTC_ONLINE', 'Canada Online Streaming Act', 'broadcasting', 'content', 4, 'Regulation of online streamers', 'Canadian content requirements', 'CRTC'),
('NMPA_LICENSING', 'NMPA Model Licensing', 'music', 'licensing', 1, 'Publisher mechanical licensing', 'Model license agreements', 'NMPA'),
('IFPI_STANDARDS', 'IFPI Digital Music Standards', 'music', 'distribution', NULL, 'International recording standards', 'Metadata, distribution standards', 'IFPI'),
('CISAC_RULES', 'CISAC Professional Rules', 'music', 'licensing', NULL, 'Collective management standards', 'Transparency, governance, distribution', 'CISAC'),
('WIPO_TREATIES', 'WIPO Copyright Treaties', 'music', 'licensing', NULL, 'International copyright standards', 'Digital rights, protection measures', 'WIPO'),
('DSP_AGREEMENTS', 'DSP Standard Agreements', 'music', 'distribution', NULL, 'Digital service provider terms', 'Content delivery, reporting, payment', 'Various DSPs');

-- Table: accessibility_standard
CREATE TABLE accessibility_standard (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    standard_version VARCHAR(50),
    standard_type VARCHAR(100), -- 'web_content', 'mobile_app', 'document', 'multimedia'
    level VARCHAR(20), -- 'A', 'AA', 'AAA'
    jurisdiction_id INT UNSIGNED,
    description TEXT,
    key_requirements TEXT,
    testing_criteria TEXT,
    compliance_deadline DATE,
    enforcement_body VARCHAR(500),
    penalties TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_standard_type (standard_type),
    INDEX idx_level (level),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO accessibility_standard (code, name, standard_version, standard_type, level, jurisdiction_id, description, key_requirements, enforcement_body) VALUES
('WCAG21_A', 'WCAG 2.1 Level A', '2.1', 'web_content', 'A', NULL, 'Basic web accessibility', 'Perceivable, Operable, Understandable, Robust', 'W3C'),
('WCAG21_AA', 'WCAG 2.1 Level AA', '2.1', 'web_content', 'AA', NULL, 'Standard web accessibility', 'Level A plus additional criteria', 'W3C'),
('WCAG21_AAA', 'WCAG 2.1 Level AAA', '2.1', 'web_content', 'AAA', NULL, 'Enhanced web accessibility', 'Highest level of accessibility', 'W3C'),
('ADA_TITLE_III', 'ADA Title III', NULL, 'web_content', 'AA', 1, 'US public accommodation', 'Equal access to goods and services', 'US DOJ'),
('SECTION_508', 'Section 508', '2018', 'web_content', 'AA', 1, 'US federal accessibility', 'Federal agency compliance', 'US Access Board'),
('EN301549', 'EN 301 549', '3.2.1', 'web_content', 'AA', 2, 'EU accessibility standard', 'ICT procurement requirements', 'EU Standards Bodies'),
('AODA', 'AODA', NULL, 'web_content', 'AA', 4, 'Ontario accessibility', 'Phased compliance requirements', 'Ontario Government'),
('JIS_X_8341', 'JIS X 8341', NULL, 'web_content', 'AA', 6, 'Japanese accessibility', 'Web content accessibility', 'JISC'),
('PDF_UA', 'PDF/UA', 'ISO 14289-1', 'document', 'AA', NULL, 'PDF accessibility', 'Tagged PDF requirements', 'ISO'),
('EPUB_ACCESSIBILITY', 'EPUB Accessibility', '1.1', 'document', 'AA', NULL, 'EPUB accessibility', 'Digital publication access', 'W3C');

-- Table: age_verification_requirement
CREATE TABLE age_verification_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    jurisdiction_id INT UNSIGNED,
    minimum_age INT NOT NULL,
    verification_type VARCHAR(100), -- 'self_declaration', 'soft_verification', 'hard_verification'
    verification_methods JSON,
    parental_consent_age INT,
    parental_consent_method VARCHAR(200),
    data_retention_days INT,
    special_categories JSON, -- Different ages for different content
    penalties TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_minimum_age (minimum_age),
    INDEX idx_verification_type (verification_type),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_jurisdiction_code (jurisdiction_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO age_verification_requirement (code, jurisdiction_id, minimum_age, verification_type, verification_methods, parental_consent_age, parental_consent_method, data_retention_days) VALUES
('US_COPPA', 1, 13, 'hard_verification', '["credit_card", "government_id", "knowledge_test"]', 13, 'Verifiable parental consent', 365),
('EU_GDPR', 2, 16, 'soft_verification', '["birthdate", "checkbox", "account_verification"]', 16, 'Parental responsibility holder consent', 730),
('UK_AADC', 3, 13, 'soft_verification', '["birthdate", "self_declaration"]', 13, 'Parental consent required', 365),
('CA_PIPEDA', 4, 13, 'soft_verification', '["birthdate", "terms_acceptance"]', 13, 'Meaningful consent from parent', 730),
('AU_PRIVACY', 5, 15, 'self_declaration', '["checkbox", "birthdate"]', 15, 'Parent or guardian consent', 365),
('JP_APPI', 6, 15, 'soft_verification', '["birthdate", "parent_email"]', 15, 'Legal representative consent', 1095),
('BR_LGPD', 7, 12, 'hard_verification', '["parent_id", "notarized_consent"]', 12, 'Specific parental consent', 365),
('KR_PIPA', 12, 14, 'hard_verification', '["i_pin", "mobile_verification"]', 14, 'Legal representative consent', 1095),
('FR_SPECIFIC', 9, 15, 'soft_verification', '["birthdate", "parental_control"]', 15, 'Parental authority consent', 730),
('DE_SPECIFIC', 8, 16, 'soft_verification', '["birthdate", "account_verification"]', 16, 'Parental consent until 16', 730);

-- Table: sanctions_list
CREATE TABLE sanctions_list (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    issuing_authority VARCHAR(200),
    list_type VARCHAR(100), -- 'comprehensive', 'targeted', 'sectoral'
    jurisdiction_id INT UNSIGNED,
    target_type VARCHAR(100), -- 'country', 'entity', 'individual', 'sector'
    description TEXT,
    restrictions JSON,
    last_updated DATE,
    review_frequency_days INT,
    penalties TEXT,
    api_endpoint VARCHAR(500),
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_list_type (list_type),
    INDEX idx_target_type (target_type),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_last_updated (last_updated),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO sanctions_list (code, name, issuing_authority, list_type, jurisdiction_id, target_type, description, last_updated, review_frequency_days) VALUES
('OFAC_SDN', 'OFAC SDN List', 'US Treasury OFAC', 'targeted', 1, 'entity', 'Specially Designated Nationals', CURDATE(), 1),
('EU_CONSOLIDATED', 'EU Consolidated List', 'European Commission', 'targeted', 2, 'entity', 'EU sanctions list', CURDATE(), 7),
('UK_CONSOLIDATED', 'UK Consolidated List', 'HM Treasury', 'targeted', 3, 'entity', 'UK sanctions list', CURDATE(), 7),
('UN_CONSOLIDATED', 'UN Security Council List', 'United Nations', 'targeted', NULL, 'entity', 'UN sanctions list', CURDATE(), 30),
('OFAC_COUNTRIES', 'OFAC Country Sanctions', 'US Treasury OFAC', 'comprehensive', 1, 'country', 'Comprehensively sanctioned countries', CURDATE(), 30),
('EU_ARMS_EMBARGO', 'EU Arms Embargo', 'European Commission', 'sectoral', 2, 'sector', 'Arms trade restrictions', CURDATE(), 90),
('AUSTRAC', 'AUSTRAC Sanctions', 'Australian Government', 'targeted', 5, 'entity', 'Australian sanctions', CURDATE(), 30),
('CANADA_SEMA', 'Canada SEMA List', 'Global Affairs Canada', 'targeted', 4, 'entity', 'Canadian sanctions', CURDATE(), 30),
('JAPAN_METI', 'Japan METI List', 'METI', 'targeted', 6, 'entity', 'Japanese sanctions', CURDATE(), 30),
('SWITZERLAND_SECO', 'Switzerland SECO List', 'SECO', 'targeted', NULL, 'entity', 'Swiss sanctions', CURDATE(), 30);

-- Table: cookie_category
CREATE TABLE cookie_category (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    category_type VARCHAR(50), -- 'necessary', 'functional', 'analytics', 'advertising'
    description TEXT,
    examples TEXT,
    requires_consent BOOLEAN DEFAULT TRUE,
    can_reject BOOLEAN DEFAULT TRUE,
    default_enabled BOOLEAN DEFAULT FALSE,
    retention_period VARCHAR(200),
    third_party BOOLEAN DEFAULT FALSE,
    purpose TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category_type (category_type),
    INDEX idx_consent (requires_consent, can_reject),
    INDEX idx_third_party (third_party),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO cookie_category (code, name, category_type, description, examples, requires_consent, can_reject, default_enabled, retention_period, third_party) VALUES
('NECESSARY', 'Strictly Necessary', 'necessary', 'Essential for website operation', 'Session, authentication, security', FALSE, FALSE, TRUE, 'Session or up to 1 year', FALSE),
('FUNCTIONAL', 'Functional', 'functional', 'Enhanced functionality and personalization', 'Language, region, preferences', TRUE, TRUE, FALSE, '1 year typical', FALSE),
('ANALYTICS', 'Analytics', 'analytics', 'Usage statistics and performance', 'Google Analytics, Matomo', TRUE, TRUE, FALSE, '2 years typical', TRUE),
('ADVERTISING', 'Advertising', 'advertising', 'Targeted advertising and remarketing', 'Google Ads, Facebook Pixel', TRUE, TRUE, FALSE, '90 days typical', TRUE),
('SOCIAL_MEDIA', 'Social Media', 'advertising', 'Social media integration', 'Facebook, Twitter, LinkedIn widgets', TRUE, TRUE, FALSE, '2 years typical', TRUE),
('PERFORMANCE', 'Performance', 'analytics', 'Site performance monitoring', 'CDN cookies, load balancing', TRUE, TRUE, FALSE, '1 year typical', FALSE);

-- Table: audit_requirement
CREATE TABLE audit_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    framework_id INT UNSIGNED,
    name VARCHAR(200) NOT NULL,
    audit_type VARCHAR(100), -- 'internal', 'external', 'certification', 'regulatory'
    frequency_months INT,
    scope TEXT,
    auditor_requirements TEXT,
    documentation_required JSON,
    reporting_requirements TEXT,
    remediation_timeline_days INT,
    retention_period_years INT DEFAULT 7,
    is_mandatory BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_framework (framework_id),
    INDEX idx_audit_type (audit_type),
    INDEX idx_frequency (frequency_months),
    INDEX idx_mandatory (is_mandatory),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_framework_code (framework_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO audit_requirement (code, framework_id, name, audit_type, frequency_months, scope, auditor_requirements, remediation_timeline_days, is_mandatory) VALUES
('GDPR_DPO_AUDIT', 1, 'GDPR DPO Annual Audit', 'internal', 12, 'Data processing activities, consent, rights', 'DPO or qualified privacy professional', 90, TRUE),
('GDPR_SECURITY_AUDIT', 1, 'GDPR Security Audit', 'external', 24, 'Technical and organizational measures', 'ISO 27001 certified auditor', 60, TRUE),
('CCPA_PRIVACY_AUDIT', 2, 'CCPA Privacy Audit', 'internal', 12, 'Consumer rights, data inventory, opt-out', 'Privacy professional', 60, FALSE),
('SOC2_TYPE2', NULL, 'SOC 2 Type II', 'certification', 12, 'Security, availability, confidentiality', 'Licensed CPA firm', 90, FALSE),
('ISO27001_CERT', NULL, 'ISO 27001 Certification', 'certification', 36, 'Information security management', 'Accredited certification body', 90, FALSE),
('PCI_DSS_AUDIT', NULL, 'PCI DSS Audit', 'external', 12, 'Payment card data security', 'QSA certified auditor', 30, TRUE),
('LGPD_IMPACT', 3, 'LGPD Impact Assessment', 'internal', 24, 'High-risk processing activities', 'DPO or privacy expert', 60, TRUE),
('PIPEDA_REVIEW', 4, 'PIPEDA Compliance Review', 'internal', 24, 'Privacy policies and practices', 'Privacy officer', 90, FALSE),
('DMCA_COMPLIANCE', 8, 'DMCA Compliance Audit', 'internal', 12, 'Notice and takedown procedures', 'Legal or compliance team', 30, TRUE),
('ACCESSIBILITY_AUDIT', 10, 'WCAG 2.1 Audit', 'external', 24, 'Web accessibility compliance', 'Certified accessibility specialist', 180, FALSE);

-- Table: data_protection_impact_assessment
CREATE TABLE data_protection_impact_assessment (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    trigger_criteria VARCHAR(500),
    risk_level VARCHAR(50), -- 'low', 'medium', 'high', 'very_high'
    processing_type VARCHAR(200),
    assessment_required BOOLEAN DEFAULT TRUE,
    regulatory_consultation_required BOOLEAN DEFAULT FALSE,
    key_considerations JSON,
    mitigation_measures JSON,
    documentation_template TEXT,
    review_period_months INT DEFAULT 12,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_risk_level (risk_level),
    INDEX idx_processing_type (processing_type),
    INDEX idx_required (assessment_required, regulatory_consultation_required),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_protection_impact_assessment (code, name, trigger_criteria, risk_level, processing_type, assessment_required, regulatory_consultation_required) VALUES
('BIOMETRIC_PROCESSING', 'Biometric Data Processing', 'Processing of biometric data for identification', 'very_high', 'biometric_identification', TRUE, TRUE),
('LARGE_SCALE_PROFILING', 'Large Scale Profiling', 'Systematic profiling affecting large numbers', 'high', 'automated_profiling', TRUE, TRUE),
('SENSITIVE_DATA_LARGE', 'Large Scale Sensitive Data', 'Processing special categories at scale', 'high', 'sensitive_data', TRUE, TRUE),
('EMPLOYEE_MONITORING', 'Employee Monitoring', 'Systematic monitoring of employees', 'high', 'workplace_monitoring', TRUE, FALSE),
('LOCATION_TRACKING', 'Location Tracking', 'Systematic location data collection', 'medium', 'geolocation', TRUE, FALSE),
('CHILDREN_DATA', 'Children\'s Data Processing', 'Processing data of minors', 'high', 'minor_data', TRUE, FALSE),
('AUTOMATED_DECISIONS', 'Automated Decision Making', 'Decisions with legal/significant effects', 'high', 'automated_decisions', TRUE, TRUE),
('DATA_MATCHING', 'Data Matching/Combining', 'Combining datasets from different sources', 'medium', 'data_combination', TRUE, FALSE),
('NEW_TECHNOLOGY', 'New Technology Deployment', 'Using new or innovative technology', 'medium', 'new_tech', TRUE, FALSE),
('VULNERABLE_SUBJECTS', 'Vulnerable Data Subjects', 'Processing data of vulnerable individuals', 'high', 'vulnerable_groups', TRUE, FALSE);

-- Table: legitimate_interest_assessment
CREATE TABLE legitimate_interest_assessment (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    interest_type VARCHAR(200),
    purpose_description TEXT,
    necessity_test TEXT,
    balancing_factors JSON,
    safeguards JSON,
    opt_out_available BOOLEAN DEFAULT TRUE,
    transparency_measures TEXT,
    review_frequency_months INT DEFAULT 12,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_interest_type (interest_type),
    INDEX idx_opt_out (opt_out_available),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO legitimate_interest_assessment (code, name, interest_type, purpose_description, necessity_test, opt_out_available) VALUES
('FRAUD_PREVENTION_LIA', 'Fraud Prevention', 'security', 'Preventing fraudulent activities', 'Essential for platform integrity', FALSE),
('DIRECT_MARKETING_LIA', 'Direct Marketing', 'commercial', 'Marketing to existing customers', 'Business growth and customer engagement', TRUE),
('ANALYTICS_LIA', 'Analytics and Insights', 'improvement', 'Service improvement through analytics', 'Understanding user behavior', TRUE),
('SECURITY_MONITORING_LIA', 'Security Monitoring', 'security', 'Platform security monitoring', 'Protecting users and platform', FALSE),
('LEGAL_CLAIMS_LIA', 'Legal Claims Defense', 'legal', 'Establishing or defending legal claims', 'Legal protection necessity', FALSE),
('NETWORK_SECURITY_LIA', 'Network Security', 'technical', 'Information and network security', 'Technical infrastructure protection', FALSE),
('PRODUCT_DEVELOPMENT_LIA', 'Product Development', 'improvement', 'Developing new features', 'Innovation and user benefit', TRUE),
('CUSTOMER_SUPPORT_LIA', 'Customer Support History', 'service', 'Maintaining support history', 'Efficient customer service', TRUE),
('PAYMENT_PROCESSING_LIA', 'Payment Risk Management', 'financial', 'Payment fraud prevention', 'Financial security', FALSE),
('CONTENT_MODERATION_LIA', 'Content Moderation', 'safety', 'Platform safety and compliance', 'User protection and legal compliance', FALSE);

-- Table: privacy_policy_template
CREATE TABLE privacy_policy_template (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    jurisdiction_id INT UNSIGNED,
    framework_id INT UNSIGNED,
    template_name VARCHAR(200) NOT NULL,
    version VARCHAR(20),
    language_code VARCHAR(10),
    required_sections JSON,
    template_content TEXT,
    last_updated DATE,
    review_required_months INT DEFAULT 12,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_framework (framework_id),
    INDEX idx_language (language_code),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_jurisdiction_framework_code (jurisdiction_id, framework_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO privacy_policy_template (code, jurisdiction_id, framework_id, template_name, version, language_code, required_sections, last_updated) VALUES
('GDPR_EN_TEMPLATE', 2, 1, 'GDPR Privacy Policy Template', '2.0', 'en', '["controller_identity", "dpo_contact", "purposes", "legal_basis", "recipients", "retention", "rights", "lodge_complaint", "automated_decisions", "international_transfers"]', CURDATE()),
('CCPA_EN_TEMPLATE', 1, 2, 'CCPA Privacy Policy Template', '1.5', 'en', '["categories_collected", "sources", "purposes", "sharing", "sale_opt_out", "rights", "contact", "non_discrimination", "minors", "changes"]', CURDATE()),
('LGPD_PT_TEMPLATE', 7, 3, 'LGPD Privacy Policy Template', '1.0', 'pt', '["controller_identity", "dpo_contact", "purposes", "legal_basis", "sharing", "retention", "rights", "international_transfers", "security", "changes"]', CURDATE()),
('PIPEDA_EN_TEMPLATE', 4, 4, 'PIPEDA Privacy Policy Template', '1.2', 'en', '["purposes", "consent", "limiting_collection", "limiting_use", "retention", "accuracy", "safeguards", "openness", "access", "challenging_compliance"]', CURDATE()),
('PIPEDA_FR_TEMPLATE', 4, 4, 'PIPEDA Privacy Policy Template', '1.2', 'fr', '["purposes", "consent", "limiting_collection", "limiting_use", "retention", "accuracy", "safeguards", "openness", "access", "challenging_compliance"]', CURDATE()),
('APPI_JA_TEMPLATE', 6, 5, 'APPI Privacy Policy Template', '1.1', 'ja', '["purpose_of_use", "joint_use", "provision_to_third_parties", "disclosure_requests", "safety_measures", "contact", "complaints"]', CURDATE()),
('POPIA_EN_TEMPLATE', NULL, 6, 'POPIA Privacy Policy Template', '1.0', 'en', '["responsible_party", "purpose", "recipients", "cross_border", "security", "retention", "rights", "objection", "complaints"]', CURDATE()),
('GENERIC_EN_TEMPLATE', NULL, NULL, 'Generic Privacy Policy Template', '1.0', 'en', '["information_collected", "how_we_use", "sharing", "security", "retention", "your_rights", "contact", "changes"]', CURDATE()),
('COPPA_EN_TEMPLATE', 1, 12, 'COPPA Children\'s Privacy Policy', '1.0', 'en', '["information_collected_children", "parental_consent", "parental_rights", "disclosure", "security", "retention", "contact"]', CURDATE()),
('GDPR_SIMPLE_EN', 2, 1, 'GDPR Simplified Language', '1.0', 'en', '["who_we_are", "what_we_collect", "why_we_need_it", "who_we_share_with", "how_long_we_keep", "your_rights", "contact_us"]', CURDATE());

-- Table: compliance_certification  
CREATE TABLE compliance_certification (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    certification_body VARCHAR(500),
    certification_type VARCHAR(100), -- 'security', 'privacy', 'quality', 'industry'
    scope TEXT,
    requirements TEXT,
    audit_frequency_months INT,
    validity_period_months INT,
    cost_range VARCHAR(100),
    preparation_time_months INT,
    renewal_required BOOLEAN DEFAULT TRUE,
    is_internationally_recognized BOOLEAN DEFAULT TRUE,
    related_frameworks JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_certification_type (certification_type),
    INDEX idx_audit_frequency (audit_frequency_months),
    INDEX idx_international (is_internationally_recognized),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO compliance_certification (code, name, certification_body, certification_type, scope, audit_frequency_months, validity_period_months, is_internationally_recognized) VALUES
('ISO27001', 'ISO/IEC 27001', 'Accredited Certification Bodies', 'security', 'Information security management system', 12, 36, TRUE),
('ISO27701', 'ISO/IEC 27701', 'Accredited Certification Bodies', 'privacy', 'Privacy information management', 12, 36, TRUE),
('SOC2_TYPE1', 'SOC 2 Type I', 'AICPA Licensed CPA', 'security', 'Point-in-time assessment', 0, 12, TRUE),
('SOC2_TYPE2', 'SOC 2 Type II', 'AICPA Licensed CPA', 'security', 'Period of time assessment', 12, 12, TRUE),
('ISO9001', 'ISO 9001', 'Accredited Certification Bodies', 'quality', 'Quality management system', 12, 36, TRUE),
('PCI_DSS_L1', 'PCI DSS Level 1', 'Qualified Security Assessor', 'security', 'Payment card data security', 12, 12, TRUE),
('HIPAA', 'HIPAA Compliance', 'Third-party Assessor', 'privacy', 'Healthcare data protection', 12, 12, FALSE),
('TISAX', 'TISAX', 'ENX Association', 'security', 'Automotive industry security', 36, 36, TRUE),
('C5', 'BSI C5', 'BSI Qualified Auditor', 'security', 'Cloud security (Germany)', 12, 12, FALSE),
('ISAE3402', 'ISAE 3402', 'Certified Auditor', 'security', 'Service organization controls', 12, 12, TRUE);

-- Table: regulatory_authority
CREATE TABLE regulatory_authority (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(500) NOT NULL,
    acronym VARCHAR(50),
    jurisdiction_id INT UNSIGNED,
    authority_type VARCHAR(100), -- 'data_protection', 'copyright', 'telecommunications', 'competition'
    website VARCHAR(500),
    contact_email VARCHAR(255),
    contact_phone VARCHAR(50),
    complaint_process TEXT,
    enforcement_powers JSON,
    reporting_obligations JSON,
    is_lead_authority BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_authority_type (authority_type),
    INDEX idx_lead_authority (is_lead_authority),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO regulatory_authority (code, name, acronym, jurisdiction_id, authority_type, website, is_lead_authority) VALUES
('ICO_UK', 'Information Commissioner\'s Office', 'ICO', 3, 'data_protection', 'https://ico.org.uk', TRUE),
('CNIL_FR', 'Commission Nationale de l\'Informatique et des Libertés', 'CNIL', 9, 'data_protection', 'https://www.cnil.fr', TRUE),
('BfDI_DE', 'Federal Commissioner for Data Protection and Freedom of Information', 'BfDI', 8, 'data_protection', 'https://www.bfdi.bund.de', TRUE),
('AEPD_ES', 'Agencia Española de Protección de Datos', 'AEPD', NULL, 'data_protection', 'https://www.aepd.es', TRUE),
('EDPB', 'European Data Protection Board', 'EDPB', 2, 'data_protection', 'https://edpb.europa.eu', TRUE),
('FTC_US', 'Federal Trade Commission', 'FTC', 1, 'data_protection', 'https://www.ftc.gov', TRUE),
('CPPA_CA', 'California Privacy Protection Agency', 'CPPA', 1, 'data_protection', 'https://cppa.ca.gov', TRUE),
('OPC_CA', 'Office of the Privacy Commissioner of Canada', 'OPC', 4, 'data_protection', 'https://www.priv.gc.ca', TRUE),
('OAIC_AU', 'Office of the Australian Information Commissioner', 'OAIC', 5, 'data_protection', 'https://www.oaic.gov.au', TRUE),
('ANPD_BR', 'Autoridade Nacional de Proteção de Dados', 'ANPD', 7, 'data_protection', 'https://www.gov.br/anpd', TRUE);

-- Table: compliance_penalty
CREATE TABLE compliance_penalty (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    framework_id INT UNSIGNED,
    violation_category VARCHAR(200),
    penalty_type VARCHAR(100), -- 'monetary', 'criminal', 'administrative', 'reputational'
    calculation_method VARCHAR(200),
    maximum_fine_amount DECIMAL(20,2),
    maximum_fine_percentage DECIMAL(5,2),
    fine_currency CHAR(3),
    criminal_liability BOOLEAN DEFAULT FALSE,
    criminal_penalty_description TEXT,
    factors_considered JSON,
    mitigation_factors JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_framework (framework_id),
    INDEX idx_violation_category (violation_category),
    INDEX idx_penalty_type (penalty_type),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_framework_code (framework_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO compliance_penalty (code, framework_id, violation_category, penalty_type, calculation_method, maximum_fine_amount, maximum_fine_percentage, fine_currency, criminal_liability) VALUES
('GDPR_LOWER', 1, 'Lower tier violations', 'monetary', 'Up to 2% annual turnover or €10M', 10000000, 2.0, 'EUR', FALSE),
('GDPR_UPPER', 1, 'Upper tier violations', 'monetary', 'Up to 4% annual turnover or €20M', 20000000, 4.0, 'EUR', FALSE),
('CCPA_STANDARD', 2, 'Non-intentional violation', 'monetary', 'Per violation', 2500, NULL, 'USD', FALSE),
('CCPA_INTENTIONAL', 2, 'Intentional violation', 'monetary', 'Per violation', 7500, NULL, 'USD', FALSE),
('LGPD_SIMPLE', 3, 'Simple violation', 'monetary', 'Up to 2% revenue or R$50M', 50000000, 2.0, 'BRL', FALSE),
('LGPD_PERSONAL', 3, 'Per person affected', 'monetary', 'Daily fine', 50000, NULL, 'BRL', FALSE),
('PIPEDA_STANDARD', 4, 'Standard violation', 'monetary', 'Per violation', 100000, NULL, 'CAD', FALSE),
('COPPA_CIVIL', 12, 'Civil penalty', 'monetary', 'Per violation', 46517, NULL, 'USD', FALSE),
('DMCA_COPYRIGHT', 8, 'Copyright infringement', 'monetary', 'Statutory damages per work', 150000, NULL, 'USD', TRUE),
('ADA_FIRST', 11, 'First violation', 'monetary', 'Civil penalty', 75000, NULL, 'USD', FALSE);

-- Table: data_localization_requirement
CREATE TABLE data_localization_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    jurisdiction_id INT UNSIGNED,
    data_category_id INT UNSIGNED,
    requirement_type VARCHAR(100), -- 'storage', 'processing', 'access', 'copy_retention'
    description TEXT,
    allowed_locations JSON,
    prohibited_locations JSON,
    exceptions JSON,
    government_access_provisions TEXT,
    notification_requirements TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    FOREIGN KEY (data_category_id) REFERENCES data_category(id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_data_category (data_category_id),
    INDEX idx_requirement_type (requirement_type),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_jurisdiction_category_code (jurisdiction_id, data_category_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_localization_requirement (code, jurisdiction_id, data_category_id, requirement_type, description, allowed_locations) VALUES
('RU_PERSONAL', NULL, 1, 'storage', 'Russian personal data localization', '["RU"]'),
('CN_CRITICAL', 11, NULL, 'storage', 'China critical information infrastructure', '["CN"]'),
('CN_PERSONAL', 11, 1, 'copy_retention', 'China personal information copy', '["CN"]'),
('IN_SENSITIVE', 10, 3, 'storage', 'India sensitive personal data', '["IN"]'),
('IN_CRITICAL', 10, NULL, 'storage', 'India critical personal data', '["IN"]'),
('AU_HEALTH', 5, NULL, 'access', 'Australia health records access', '["AU"]'),
('CA_PUBLIC', 4, NULL, 'storage', 'Canada public sector data', '["CA"]'),
('DE_TELECOM', 8, 9, 'storage', 'Germany telecommunications metadata', '["DE","EU"]'),
('KR_LOCATION', 12, 5, 'processing', 'Korea location information', '["KR"]'),
('SWIFT_EU', 2, 2, 'processing', 'EU payment data processing', '["EU"]');

-- Table: third_party_processor_requirement
CREATE TABLE third_party_processor_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    framework_id INT UNSIGNED,
    requirement_category VARCHAR(100), -- 'contract', 'security', 'audit', 'notification'
    description TEXT,
    mandatory_clauses JSON,
    security_requirements JSON,
    audit_rights BOOLEAN DEFAULT TRUE,
    sub_processor_restrictions TEXT,
    breach_notification_hours INT,
    termination_requirements TEXT,
    data_return_requirements TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_framework (framework_id),
    INDEX idx_requirement_category (requirement_category),
    INDEX idx_audit_rights (audit_rights),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO third_party_processor_requirement (code, name, framework_id, requirement_category, description, audit_rights, breach_notification_hours) VALUES
('GDPR_DPA', 'GDPR Data Processing Agreement', 1, 'contract', 'Article 28 processor requirements', TRUE, 72),
('GDPR_SECURITY', 'GDPR Processor Security', 1, 'security', 'Article 32 security measures', TRUE, NULL),
('CCPA_CONTRACT', 'CCPA Service Provider Agreement', 2, 'contract', 'Service provider contractual requirements', TRUE, NULL),
('LGPD_OPERATOR', 'LGPD Data Operator Agreement', 3, 'contract', 'Data operator requirements', TRUE, 48),
('PIPEDA_COMPARABLE', 'PIPEDA Comparable Protection', 4, 'contract', 'Comparable level of protection', TRUE, NULL),
('APPI_OUTSOURCING', 'APPI Outsourcing Supervision', 5, 'contract', 'Necessary supervision requirements', TRUE, NULL),
('HIPAA_BAA', 'HIPAA Business Associate Agreement', NULL, 'contract', 'Healthcare data processor requirements', TRUE, 24),
('PCI_DSS_PROVIDER', 'PCI DSS Service Provider', NULL, 'security', 'Payment processor requirements', TRUE, 24),
('SOC2_VENDOR', 'SOC 2 Vendor Requirements', NULL, 'audit', 'Vendor security assessments', TRUE, NULL),
('ISO27001_SUPPLIER', 'ISO 27001 Supplier Requirements', NULL, 'security', 'Information security for suppliers', TRUE, NULL);

-- Add indexes for foreign key relationships
ALTER TABLE copyright_term_rule ADD INDEX idx_code (code);
ALTER TABLE data_retention_policy ADD INDEX idx_code (code);
ALTER TABLE privacy_policy_template ADD INDEX idx_version (version);
ALTER TABLE regulatory_authority ADD INDEX idx_acronym (acronym);

-- Add composite indexes for common query patterns
CREATE INDEX idx_framework_active ON compliance_framework (framework_type, is_active);
CREATE INDEX idx_jurisdiction_active ON legal_jurisdiction (jurisdiction_type, is_active);
CREATE INDEX idx_consent_active ON privacy_consent_type (consent_category, is_active);
CREATE INDEX idx_purpose_active ON data_processing_purpose (purpose_category, is_active);
CREATE INDEX idx_penalty_amount ON compliance_penalty (maximum_fine_amount, fine_currency);
CREATE INDEX idx_audit_mandatory ON audit_requirement (audit_type, is_mandatory, is_active);

-- =====================================================
-- SECTION 29: COMPLIANCE
-- =====================================================

-- Table: compliance_framework
CREATE TABLE compliance_framework (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    full_name VARCHAR(500),
    jurisdiction_scope VARCHAR(100), -- 'global', 'regional', 'national'
    framework_type VARCHAR(100), -- 'data_protection', 'copyright', 'accessibility', 'industry_specific'
    effective_date DATE,
    enforcement_date DATE,
    description TEXT,
    key_principles TEXT,
    regulatory_body VARCHAR(500),
    penalties_info TEXT,
    official_url VARCHAR(500),
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_framework_type (framework_type),
    INDEX idx_active_scope (is_active, jurisdiction_scope),
    INDEX idx_code (code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO compliance_framework (code, name, full_name, jurisdiction_scope, framework_type, effective_date, enforcement_date, description, regulatory_body, official_url, display_order) VALUES
('GDPR', 'GDPR', 'General Data Protection Regulation', 'regional', 'data_protection', '2016-04-27', '2018-05-25', 'EU data protection and privacy regulation', 'European Data Protection Board (EDPB)', 'https://gdpr.eu', 1),
('CCPA', 'CCPA', 'California Consumer Privacy Act', 'national', 'data_protection', '2018-06-28', '2020-01-01', 'California state privacy law', 'California Privacy Protection Agency', 'https://oag.ca.gov/privacy/ccpa', 2),
('LGPD', 'LGPD', 'Lei Geral de Proteção de Dados', 'national', 'data_protection', '2018-08-14', '2020-09-18', 'Brazilian General Data Protection Law', 'ANPD - Brazilian Data Protection Authority', 'https://www.gov.br/anpd', 3),
('PIPEDA', 'PIPEDA', 'Personal Information Protection and Electronic Documents Act', 'national', 'data_protection', '2000-04-13', '2001-01-01', 'Canadian federal privacy law', 'Office of the Privacy Commissioner of Canada', 'https://www.priv.gc.ca', 4),
('APPI', 'APPI', 'Act on the Protection of Personal Information', 'national', 'data_protection', '2003-05-30', '2005-04-01', 'Japanese personal information protection act', 'Personal Information Protection Commission', 'https://www.ppc.go.jp', 5),
('POPIA', 'POPIA', 'Protection of Personal Information Act', 'national', 'data_protection', '2013-11-26', '2021-07-01', 'South African data protection act', 'Information Regulator', 'https://www.justice.gov.za/inforeg', 6),
('PDPA_SG', 'PDPA Singapore', 'Personal Data Protection Act', 'national', 'data_protection', '2012-10-15', '2014-07-02', 'Singapore personal data protection act', 'PDPC - Personal Data Protection Commission', 'https://www.pdpc.gov.sg', 7),
('DMCA', 'DMCA', 'Digital Millennium Copyright Act', 'national', 'copyright', '1998-10-28', '1998-10-28', 'US copyright law for digital media', 'US Copyright Office', 'https://www.copyright.gov/dmca', 8),
('EUCD', 'EU Copyright Directive', 'Directive on Copyright in the Digital Single Market', 'regional', 'copyright', '2019-04-17', '2021-06-07', 'EU copyright framework for digital market', 'European Commission', 'https://eur-lex.europa.eu', 9),
('WCAG21', 'WCAG 2.1', 'Web Content Accessibility Guidelines 2.1', 'global', 'accessibility', '2018-06-05', '2018-06-05', 'W3C accessibility standards', 'W3C', 'https://www.w3.org/WAI/WCAG21', 10),
('ADA', 'ADA', 'Americans with Disabilities Act', 'national', 'accessibility', '1990-07-26', '1992-01-26', 'US disability rights law', 'US Department of Justice', 'https://www.ada.gov', 11),
('COPPA', 'COPPA', 'Children\'s Online Privacy Protection Act', 'national', 'data_protection', '1998-10-21', '2000-04-21', 'US children privacy protection', 'Federal Trade Commission', 'https://www.ftc.gov/coppa', 12),
('CAN_SPAM', 'CAN-SPAM', 'Controlling the Assault of Non-Solicited Pornography And Marketing Act', 'national', 'data_protection', '2003-12-16', '2004-01-01', 'US anti-spam law', 'Federal Trade Commission', 'https://www.ftc.gov', 13),
('CPRA', 'CPRA', 'California Privacy Rights Act', 'national', 'data_protection', '2020-11-03', '2023-01-01', 'Enhanced California privacy law', 'California Privacy Protection Agency', 'https://cppa.ca.gov', 14),
('VCDPA', 'VCDPA', 'Virginia Consumer Data Protection Act', 'national', 'data_protection', '2021-03-02', '2023-01-01', 'Virginia state privacy law', 'Virginia Attorney General', 'https://www.oag.state.va.us', 15);

-- Table: legal_jurisdiction
CREATE TABLE legal_jurisdiction (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    jurisdiction_type VARCHAR(50), -- 'country', 'state', 'province', 'region'
    parent_jurisdiction_id INT UNSIGNED,
    country_code CHAR(2),
    region_code VARCHAR(10),
    legal_system VARCHAR(100), -- 'common_law', 'civil_law', 'mixed'
    copyright_convention VARCHAR(200), -- 'berne', 'ucc', 'trips', 'wct'
    data_protection_framework_id INT UNSIGNED,
    copyright_term_rule_id INT UNSIGNED,
    moral_rights_recognized BOOLEAN DEFAULT TRUE,
    fair_use_doctrine VARCHAR(50), -- 'fair_use', 'fair_dealing', 'none'
    privacy_shield_adequate BOOLEAN DEFAULT FALSE,
    gdpr_adequate BOOLEAN DEFAULT FALSE,
    time_zone VARCHAR(50),
    official_languages JSON,
    currency_code CHAR(3),
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (parent_jurisdiction_id) REFERENCES legal_jurisdiction(id),
    FOREIGN KEY (data_protection_framework_id) REFERENCES compliance_framework(id),
    INDEX idx_country_code (country_code),
    INDEX idx_jurisdiction_type (jurisdiction_type),
    INDEX idx_parent (parent_jurisdiction_id),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO legal_jurisdiction (code, name, jurisdiction_type, country_code, legal_system, copyright_convention, moral_rights_recognized, fair_use_doctrine, privacy_shield_adequate, gdpr_adequate, time_zone, official_languages, currency_code) VALUES
('US', 'United States', 'country', 'US', 'common_law', 'berne,ucc,trips,wct', FALSE, 'fair_use', FALSE, FALSE, 'America/New_York', '["en"]', 'USD'),
('EU', 'European Union', 'region', NULL, 'mixed', 'berne,trips,wct', TRUE, 'fair_dealing', TRUE, TRUE, 'Europe/Brussels', '["en","fr","de","es","it","nl","pl"]', 'EUR'),
('UK', 'United Kingdom', 'country', 'GB', 'common_law', 'berne,trips,wct', TRUE, 'fair_dealing', TRUE, TRUE, 'Europe/London', '["en"]', 'GBP'),
('CA', 'Canada', 'country', 'CA', 'mixed', 'berne,ucc,trips,wct', TRUE, 'fair_dealing', FALSE, TRUE, 'America/Toronto', '["en","fr"]', 'CAD'),
('AU', 'Australia', 'country', 'AU', 'common_law', 'berne,trips,wct', TRUE, 'fair_dealing', FALSE, FALSE, 'Australia/Sydney', '["en"]', 'AUD'),
('JP', 'Japan', 'country', 'JP', 'civil_law', 'berne,ucc,trips,wct', TRUE, 'none', FALSE, TRUE, 'Asia/Tokyo', '["ja"]', 'JPY'),
('BR', 'Brazil', 'country', 'BR', 'civil_law', 'berne,trips,wct', TRUE, 'none', FALSE, FALSE, 'America/Sao_Paulo', '["pt"]', 'BRL'),
('DE', 'Germany', 'country', 'DE', 'civil_law', 'berne,trips,wct', TRUE, 'fair_dealing', TRUE, TRUE, 'Europe/Berlin', '["de"]', 'EUR'),
('FR', 'France', 'country', 'FR', 'civil_law', 'berne,trips,wct', TRUE, 'fair_dealing', TRUE, TRUE, 'Europe/Paris', '["fr"]', 'EUR'),
('IN', 'India', 'country', 'IN', 'common_law', 'berne,trips,wct', TRUE, 'fair_dealing', FALSE, FALSE, 'Asia/Kolkata', '["hi","en"]', 'INR'),
('CN', 'China', 'country', 'CN', 'civil_law', 'berne,trips,wct', TRUE, 'none', FALSE, FALSE, 'Asia/Shanghai', '["zh"]', 'CNY'),
('KR', 'South Korea', 'country', 'KR', 'civil_law', 'berne,trips,wct', TRUE, 'none', FALSE, TRUE, 'Asia/Seoul', '["ko"]', 'KRW'),
('MX', 'Mexico', 'country', 'MX', 'civil_law', 'berne,trips,wct', TRUE, 'none', FALSE, FALSE, 'America/Mexico_City', '["es"]', 'MXN'),
('SG', 'Singapore', 'country', 'SG', 'common_law', 'berne,trips,wct', TRUE, 'fair_dealing', FALSE, FALSE, 'Asia/Singapore', '["en","zh","ms","ta"]', 'SGD'),
('ZA', 'South Africa', 'country', 'ZA', 'mixed', 'berne,trips,wct', TRUE, 'fair_dealing', FALSE, FALSE, 'Africa/Johannesburg', '["en","af","zu","xh"]', 'ZAR');

-- Table: copyright_term_rule
CREATE TABLE copyright_term_rule (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    work_type VARCHAR(100), -- 'musical_work', 'sound_recording', 'literary_work', 'audiovisual'
    term_calculation VARCHAR(100), -- 'life_plus', 'fixed_term', 'publication_plus'
    base_term_years INT,
    life_plus_years INT,
    corporate_work_years INT,
    anonymous_work_years INT,
    sound_recording_years INT,
    performance_years INT,
    broadcast_years INT,
    publication_required BOOLEAN DEFAULT FALSE,
    registration_required BOOLEAN DEFAULT FALSE,
    renewal_required BOOLEAN DEFAULT FALSE,
    special_conditions TEXT,
    effective_date DATE,
    notes TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_work_type (work_type),
    INDEX idx_term_calc (term_calculation),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO copyright_term_rule (code, name, work_type, term_calculation, life_plus_years, corporate_work_years, anonymous_work_years, sound_recording_years, performance_years, broadcast_years, publication_required, registration_required, notes) VALUES
('US_GENERAL', 'US General Copyright Term', 'musical_work', 'life_plus', 70, 95, 95, 95, 0, 0, FALSE, FALSE, 'Life + 70 years, or 95 years from publication for works made for hire'),
('EU_GENERAL', 'EU General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 70, 50, 50, FALSE, FALSE, 'Life + 70 years harmonized across EU'),
('UK_GENERAL', 'UK General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 70, 50, 50, FALSE, FALSE, 'Life + 70 years, 50 years for sound recordings'),
('CA_GENERAL', 'Canada General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 75, 50, 50, FALSE, FALSE, 'Life + 70 years as of 2022'),
('AU_GENERAL', 'Australia General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 70, 50, 50, FALSE, FALSE, 'Life + 70 years'),
('JP_GENERAL', 'Japan General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 70, 70, 50, FALSE, FALSE, 'Life + 70 years as of 2018'),
('BR_GENERAL', 'Brazil General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 70, 70, 70, FALSE, FALSE, 'Life + 70 years'),
('IN_GENERAL', 'India General Copyright Term', 'musical_work', 'life_plus', 60, 60, 60, 60, 50, 25, FALSE, FALSE, 'Life + 60 years'),
('CN_GENERAL', 'China General Copyright Term', 'musical_work', 'life_plus', 50, 50, 50, 50, 50, 50, FALSE, FALSE, 'Life + 50 years'),
('MX_GENERAL', 'Mexico General Copyright Term', 'musical_work', 'life_plus', 100, 100, 100, 75, 75, 50, FALSE, FALSE, 'Life + 100 years, longest in world');

-- Table: fair_use_category
CREATE TABLE fair_use_category (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    jurisdiction_id INT UNSIGNED,
    category_type VARCHAR(100), -- 'criticism', 'comment', 'news', 'teaching', 'research', 'parody'
    description TEXT,
    factors_considered TEXT,
    examples TEXT,
    limitations TEXT,
    case_law_references TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_category_type (category_type),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO fair_use_category (code, name, jurisdiction_id, category_type, description, factors_considered) VALUES
('US_CRITICISM', 'Criticism and Comment', 1, 'criticism', 'Use for criticism, comment, or review', 'Purpose and character of use, nature of work, amount used, effect on market'),
('US_NEWS', 'News Reporting', 1, 'news', 'Use in news reporting', 'Transformative nature, public interest, commercial vs non-commercial'),
('US_TEACHING', 'Teaching', 1, 'teaching', 'Use for teaching in nonprofit educational institutions', 'Educational purpose, nonprofit nature, classroom use'),
('US_RESEARCH', 'Scholarship and Research', 1, 'research', 'Use for scholarship or research', 'Academic purpose, transformative use, attribution'),
('US_PARODY', 'Parody', 1, 'parody', 'Use for parody or satire', 'Transformative nature, commentary on original, commercial impact'),
('UK_CRITICISM', 'Criticism and Review', 3, 'criticism', 'Fair dealing for criticism or review', 'Sufficient acknowledgement, work made available to public'),
('UK_NEWS', 'News Reporting', 3, 'news', 'Fair dealing for reporting current events', 'Sufficient acknowledgement except for photographs'),
('UK_RESEARCH', 'Research and Private Study', 3, 'research', 'Fair dealing for non-commercial research', 'Non-commercial purpose, sufficient acknowledgement'),
('CA_RESEARCH', 'Research and Private Study', 4, 'research', 'Fair dealing for research or private study', 'Purpose, character, amount, alternatives, nature, effect'),
('CA_CRITICISM', 'Criticism and Review', 4, 'criticism', 'Fair dealing for criticism or review', 'Mention of source and author required');

-- Table: data_category
CREATE TABLE data_category (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    category_type VARCHAR(100), -- 'personal', 'sensitive', 'financial', 'behavioral', 'technical'
    gdpr_category VARCHAR(100), -- 'personal_data', 'special_category', 'criminal_data'
    ccpa_category VARCHAR(100),
    description TEXT,
    examples TEXT,
    requires_explicit_consent BOOLEAN DEFAULT FALSE,
    enhanced_protection BOOLEAN DEFAULT FALSE,
    encryption_required BOOLEAN DEFAULT FALSE,
    retention_limitation_days INT,
    purpose_limitation TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category_type (category_type),
    INDEX idx_gdpr_category (gdpr_category),
    INDEX idx_protection_level (enhanced_protection, encryption_required),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_category (code, name, category_type, gdpr_category, ccpa_category, description, examples, requires_explicit_consent, enhanced_protection, encryption_required) VALUES
('PERSONAL_ID', 'Personal Identifiers', 'personal', 'personal_data', 'identifiers', 'Data that directly identifies an individual', 'Name, email, phone, address, ID numbers', FALSE, FALSE, TRUE),
('FINANCIAL', 'Financial Information', 'financial', 'personal_data', 'financial', 'Financial account and payment data', 'Bank accounts, credit cards, payment history', TRUE, TRUE, TRUE),
('SENSITIVE', 'Sensitive Personal Data', 'sensitive', 'special_category', 'sensitive', 'Special category data requiring extra protection', 'Race, religion, health, sexual orientation', TRUE, TRUE, TRUE),
('BIOMETRIC', 'Biometric Data', 'sensitive', 'special_category', 'biometric', 'Biological characteristics data', 'Fingerprints, facial recognition, voice patterns', TRUE, TRUE, TRUE),
('LOCATION', 'Location Data', 'behavioral', 'personal_data', 'geolocation', 'Geographic location information', 'GPS coordinates, IP location, physical address', TRUE, FALSE, TRUE),
('BEHAVIORAL', 'Behavioral Data', 'behavioral', 'personal_data', 'inferences', 'Data about user behavior and preferences', 'Browsing history, purchase patterns, preferences', FALSE, FALSE, FALSE),
('PROFESSIONAL', 'Professional Information', 'personal', 'personal_data', 'professional', 'Employment and professional data', 'Job title, employer, work history, skills', FALSE, FALSE, TRUE),
('COMMUNICATION', 'Communication Data', 'personal', 'personal_data', 'electronic_network', 'Electronic communications content', 'Emails, messages, call logs', TRUE, TRUE, TRUE),
('TECHNICAL', 'Technical Data', 'technical', 'personal_data', 'internet_activity', 'Device and browser information', 'IP address, cookies, device IDs, user agent', FALSE, FALSE, FALSE),
('MINORS', 'Minor\'s Data', 'sensitive', 'special_category', 'minor', 'Data relating to children under 16/18', 'Any personal data of minors', TRUE, TRUE, TRUE);

-- Table: data_retention_policy
CREATE TABLE data_retention_policy (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(200) NOT NULL,
    jurisdiction_id INT UNSIGNED,
    data_category_id INT UNSIGNED,
    retention_period_days INT,
    retention_period_description VARCHAR(500),
    legal_basis VARCHAR(200),
    deletion_method VARCHAR(100), -- 'hard_delete', 'anonymization', 'pseudonymization'
    review_period_days INT,
    exceptions TEXT,
    automated_deletion BOOLEAN DEFAULT FALSE,
    requires_approval BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    FOREIGN KEY (data_category_id) REFERENCES data_category(id),
    INDEX idx_jurisdiction_category (jurisdiction_id, data_category_id),
    INDEX idx_retention_period (retention_period_days),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_jurisdiction_category (jurisdiction_id, data_category_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_retention_policy (code, name, jurisdiction_id, data_category_id, retention_period_days, retention_period_description, legal_basis, deletion_method, review_period_days, automated_deletion) VALUES
('EU_PERSONAL_ID', 'EU Personal Identifiers Retention', 2, 1, 2190, '6 years after last activity', 'Legitimate interest, legal obligation', 'anonymization', 365, TRUE),
('EU_FINANCIAL', 'EU Financial Data Retention', 2, 2, 3650, '10 years for tax compliance', 'Legal obligation', 'hard_delete', 365, FALSE),
('EU_SENSITIVE', 'EU Sensitive Data Retention', 2, 3, 1095, '3 years maximum unless consent renewed', 'Explicit consent', 'hard_delete', 180, TRUE),
('US_PERSONAL_ID', 'US Personal Identifiers Retention', 1, 1, 2555, '7 years standard retention', 'Business records', 'anonymization', 365, FALSE),
('US_FINANCIAL', 'US Financial Data Retention', 1, 2, 2555, '7 years for IRS requirements', 'Legal obligation', 'hard_delete', 365, FALSE),
('CA_PERSONAL_ID', 'Canada Personal Identifiers Retention', 4, 1, 2190, '6 years after relationship ends', 'PIPEDA requirements', 'hard_delete', 365, TRUE),
('UK_BIOMETRIC', 'UK Biometric Data Retention', 3, 4, 90, '3 months maximum', 'Explicit consent required', 'hard_delete', 30, TRUE),
('BR_PERSONAL_ID', 'Brazil Personal Identifiers Retention', 7, 1, 1825, '5 years after processing ends', 'LGPD compliance', 'anonymization', 180, TRUE),
('JP_PERSONAL_ID', 'Japan Personal Identifiers Retention', 6, 1, 1825, '5 years standard retention', 'APPI compliance', 'hard_delete', 365, FALSE),
('EU_MINORS', 'EU Minor Data Retention', 2, 10, 365, '1 year maximum, parental consent review', 'Parental consent', 'hard_delete', 90, TRUE);

-- Table: privacy_consent_type
CREATE TABLE privacy_consent_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    consent_category VARCHAR(100), -- 'processing', 'marketing', 'cookies', 'third_party', 'international_transfer'
    description TEXT,
    requirements TEXT,
    withdrawal_method VARCHAR(200),
    granular_options JSON,
    requires_explicit_action BOOLEAN DEFAULT TRUE,
    requires_double_optin BOOLEAN DEFAULT FALSE,
    age_verification_required BOOLEAN DEFAULT FALSE,
    renewal_period_days INT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_consent_category (consent_category),
    INDEX idx_requirements (requires_explicit_action, requires_double_optin),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO privacy_consent_type (code, name, consent_category, description, requirements, withdrawal_method, requires_explicit_action, requires_double_optin) VALUES
('ESSENTIAL_PROCESSING', 'Essential Data Processing', 'processing', 'Consent for essential service operation', 'Clear purpose, specific use, freely given', 'Account settings, email request', TRUE, FALSE),
('MARKETING_EMAIL', 'Email Marketing', 'marketing', 'Consent for promotional emails', 'Separate opt-in, clear description', 'Unsubscribe link, preference center', TRUE, TRUE),
('MARKETING_SMS', 'SMS Marketing', 'marketing', 'Consent for promotional SMS', 'Explicit opt-in, frequency disclosure', 'Text STOP, preference center', TRUE, TRUE),
('ANALYTICS_COOKIES', 'Analytics Cookies', 'cookies', 'Consent for analytics tracking', 'Cookie banner, granular control', 'Cookie settings, browser controls', TRUE, FALSE),
('THIRD_PARTY_SHARING', 'Third Party Data Sharing', 'third_party', 'Consent to share with partners', 'Named parties, specific purposes', 'Account settings, written request', TRUE, FALSE),
('INTERNATIONAL_TRANSFER', 'International Data Transfer', 'international_transfer', 'Consent for cross-border transfer', 'Country disclosure, risk information', 'Written request, account deletion', TRUE, FALSE),
('BEHAVIORAL_ADVERTISING', 'Behavioral Advertising', 'marketing', 'Consent for targeted advertising', 'Clear explanation, opt-out option', 'Ad preferences, industry opt-out', TRUE, FALSE),
('SENSITIVE_DATA', 'Sensitive Data Processing', 'processing', 'Explicit consent for special categories', 'Written or clear affirmative action', 'Written withdrawal, immediate effect', TRUE, FALSE),
('MINOR_CONSENT', 'Minor Data Processing', 'processing', 'Parental consent for minors', 'Age verification, parental approval', 'Parent request, immediate deletion', TRUE, TRUE),
('BIOMETRIC_PROCESSING', 'Biometric Data Processing', 'processing', 'Consent for biometric data use', 'Explicit written consent, specific use', 'Written request, complete deletion', TRUE, TRUE);

-- Table: data_processing_purpose
CREATE TABLE data_processing_purpose (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    purpose_category VARCHAR(100), -- 'service_delivery', 'legal_compliance', 'legitimate_interest', 'consent', 'vital_interest'
    legal_basis VARCHAR(100), -- GDPR Article 6 basis
    description TEXT,
    examples TEXT,
    requires_consent BOOLEAN DEFAULT FALSE,
    requires_lia BOOLEAN DEFAULT FALSE, -- Legitimate Interest Assessment
    retention_period_days INT,
    data_minimization_notes TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_purpose_category (purpose_category),
    INDEX idx_legal_basis (legal_basis),
    INDEX idx_requirements (requires_consent, requires_lia),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_processing_purpose (code, name, purpose_category, legal_basis, description, requires_consent, requires_lia) VALUES
('SERVICE_PROVISION', 'Service Provision', 'service_delivery', 'contract', 'Processing necessary for service delivery', FALSE, FALSE),
('ACCOUNT_MANAGEMENT', 'Account Management', 'service_delivery', 'contract', 'User account creation and management', FALSE, FALSE),
('PAYMENT_PROCESSING', 'Payment Processing', 'service_delivery', 'contract', 'Processing payments and billing', FALSE, FALSE),
('LEGAL_COMPLIANCE', 'Legal Compliance', 'legal_compliance', 'legal_obligation', 'Compliance with laws and regulations', FALSE, FALSE),
('TAX_REPORTING', 'Tax Reporting', 'legal_compliance', 'legal_obligation', 'Tax calculation and reporting', FALSE, FALSE),
('FRAUD_PREVENTION', 'Fraud Prevention', 'legitimate_interest', 'legitimate_interests', 'Preventing fraudulent activities', FALSE, TRUE),
('SECURITY', 'Security and Safety', 'legitimate_interest', 'legitimate_interests', 'Platform security and user safety', FALSE, TRUE),
('ANALYTICS', 'Analytics and Improvement', 'legitimate_interest', 'legitimate_interests', 'Service analytics and improvements', FALSE, TRUE),
('MARKETING_DIRECT', 'Direct Marketing', 'consent', 'consent', 'Direct marketing communications', TRUE, FALSE),
('PROFILING', 'User Profiling', 'consent', 'consent', 'Creating user profiles for personalization', TRUE, FALSE);

-- Table: data_subject_right
CREATE TABLE data_subject_right (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    framework_id INT UNSIGNED,
    right_category VARCHAR(100), -- 'access', 'rectification', 'erasure', 'portability', 'objection'
    description TEXT,
    response_deadline_days INT DEFAULT 30,
    can_extend_deadline BOOLEAN DEFAULT TRUE,
    extension_days INT DEFAULT 30,
    exceptions TEXT,
    verification_required BOOLEAN DEFAULT TRUE,
    fee_allowed BOOLEAN DEFAULT FALSE,
    automated_fulfillment BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_framework (framework_id),
    INDEX idx_right_category (right_category),
    INDEX idx_automated (automated_fulfillment),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_subject_right (code, name, framework_id, right_category, description, response_deadline_days, can_extend_deadline, verification_required) VALUES
('GDPR_ACCESS', 'Right of Access', 1, 'access', 'Right to obtain copy of personal data', 30, TRUE, TRUE),
('GDPR_RECTIFICATION', 'Right to Rectification', 1, 'rectification', 'Right to correct inaccurate data', 30, TRUE, TRUE),
('GDPR_ERASURE', 'Right to Erasure', 1, 'erasure', 'Right to be forgotten', 30, TRUE, TRUE),
('GDPR_PORTABILITY', 'Right to Data Portability', 1, 'portability', 'Right to receive data in portable format', 30, TRUE, TRUE),
('GDPR_OBJECTION', 'Right to Object', 1, 'objection', 'Right to object to processing', 30, FALSE, TRUE),
('GDPR_RESTRICTION', 'Right to Restrict Processing', 1, 'restriction', 'Right to limit processing', 30, TRUE, TRUE),
('CCPA_ACCESS', 'Right to Know', 2, 'access', 'Right to know what data is collected', 45, TRUE, TRUE),
('CCPA_DELETE', 'Right to Delete', 2, 'erasure', 'Right to request deletion', 45, TRUE, TRUE),
('CCPA_OPTOUT', 'Right to Opt-Out', 2, 'objection', 'Right to opt-out of sale', 15, FALSE, FALSE),
('CCPA_NONDISCRIM', 'Right to Non-Discrimination', 2, 'nondiscrimination', 'Right to equal service', 0, FALSE, FALSE);

-- Table: breach_notification_requirement
CREATE TABLE breach_notification_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    framework_id INT UNSIGNED,
    jurisdiction_id INT UNSIGNED,
    name VARCHAR(200) NOT NULL,
    breach_threshold VARCHAR(200), -- 'any_breach', 'risk_based', 'harm_based'
    authority_notification_hours INT,
    individual_notification_hours INT,
    public_notification_required BOOLEAN DEFAULT FALSE,
    public_notification_threshold TEXT,
    notification_contents TEXT,
    documentation_requirements TEXT,
    penalty_structure TEXT,
    exceptions TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_framework (framework_id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_notification_time (authority_notification_hours),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_framework_jurisdiction (framework_id, jurisdiction_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO breach_notification_requirement (code, framework_id, jurisdiction_id, name, breach_threshold, authority_notification_hours, individual_notification_hours, public_notification_required, notification_contents) VALUES
('GDPR_BREACH', 1, 2, 'GDPR Breach Notification', 'risk_based', 72, 72, FALSE, 'Nature of breach, categories of data, number affected, consequences, measures taken'),
('CCPA_BREACH', 2, 1, 'CCPA Breach Notification', 'harm_based', NULL, NULL, TRUE, 'Nature of breach, type of information, general description of incident'),
('LGPD_BREACH', 3, 7, 'LGPD Breach Notification', 'risk_based', NULL, 72, FALSE, 'Description of nature, data subjects affected, security measures, risk assessment'),
('PIPEDA_BREACH', 4, 4, 'PIPEDA Breach Notification', 'harm_based', NULL, NULL, TRUE, 'Circumstances, data involved, harm assessment, mitigation steps'),
('APPI_BREACH', 5, 6, 'APPI Breach Notification', 'any_breach', NULL, NULL, TRUE, 'Facts of breach, data categories, number affected, response measures'),
('HIPAA_BREACH', NULL, 1, 'HIPAA Breach Notification', 'harm_based', 1440, 1440, TRUE, 'Healthcare specific requirements'),
('PCI_DSS_BREACH', NULL, NULL, 'PCI DSS Breach Notification', 'any_breach', 24, NULL, FALSE, 'Payment card data breach requirements'),
('GLBA_BREACH', NULL, 1, 'GLBA Breach Notification', 'risk_based', NULL, NULL, FALSE, 'Financial data breach requirements'),
('STATE_BREACH_CA', NULL, 1, 'California Breach Notification', 'any_breach', NULL, NULL, TRUE, 'California state specific requirements'),
('STATE_BREACH_NY', NULL, 1, 'New York Breach Notification', 'harm_based', NULL, NULL, TRUE, 'New York state specific requirements');

-- Table: cross_border_transfer_mechanism
CREATE TABLE cross_border_transfer_mechanism (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    mechanism_type VARCHAR(100), -- 'adequacy', 'scc', 'bcr', 'consent', 'derogation'
    framework_id INT UNSIGNED,
    description TEXT,
    requirements TEXT,
    documentation_needed TEXT,
    approval_required BOOLEAN DEFAULT FALSE,
    approval_authority VARCHAR(500),
    validity_period_days INT,
    review_required BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_mechanism_type (mechanism_type),
    INDEX idx_framework (framework_id),
    INDEX idx_approval (approval_required),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO cross_border_transfer_mechanism (code, name, mechanism_type, framework_id, description, requirements, approval_required) VALUES
('EU_ADEQUACY', 'EU Adequacy Decision', 'adequacy', 1, 'European Commission adequacy decision', 'Country provides adequate protection', FALSE),
('EU_SCC', 'EU Standard Contractual Clauses', 'scc', 1, 'EU approved contract clauses', 'Signed SCCs, transfer impact assessment', FALSE),
('EU_BCR', 'Binding Corporate Rules', 'bcr', 1, 'Intra-group transfer rules', 'DPA approval, comprehensive policies', TRUE),
('GDPR_CONSENT', 'Explicit Consent', 'consent', 1, 'Individual explicit consent for transfer', 'Informed consent, specific countries', FALSE),
('GDPR_CONTRACT', 'Contract Performance', 'derogation', 1, 'Necessary for contract', 'Transfer necessary for contract with individual', FALSE),
('APEC_CBPR', 'APEC Cross-Border Privacy Rules', 'cbpr', NULL, 'Asia-Pacific privacy framework', 'CBPR certification', TRUE),
('PRIVACY_SHIELD', 'EU-US Privacy Shield (Invalidated)', 'adequacy', 1, 'Former EU-US transfer mechanism', 'No longer valid after Schrems II', FALSE),
('UK_ADEQUACY', 'UK Adequacy Decision', 'adequacy', NULL, 'UK specific adequacy decisions', 'Country provides adequate protection', FALSE),
('LGPD_CLAUSES', 'LGPD Standard Clauses', 'scc', 3, 'Brazil standard contractual clauses', 'ANPD approved clauses', FALSE),
('CONSENT_TRANSFER', 'Consent-Based Transfer', 'consent', NULL, 'Generic consent mechanism', 'Clear, specific, informed consent', FALSE);

-- Table: industry_regulation
CREATE TABLE industry_regulation (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    industry_sector VARCHAR(100), -- 'music', 'entertainment', 'digital_media', 'broadcasting'
    regulation_type VARCHAR(100), -- 'licensing', 'royalty', 'content', 'distribution'
    jurisdiction_id INT UNSIGNED,
    description TEXT,
    key_requirements TEXT,
    licensing_body VARCHAR(500),
    compliance_deadline DATE,
    penalties TEXT,
    related_frameworks JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_industry_sector (industry_sector),
    INDEX idx_regulation_type (regulation_type),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO industry_regulation (code, name, industry_sector, regulation_type, jurisdiction_id, description, key_requirements, licensing_body) VALUES
('MMA', 'Music Modernization Act', 'music', 'licensing', 1, 'US music licensing reform', 'Mechanical licensing, pre-1972 recordings', 'US Copyright Office, MLC'),
('CRB', 'Copyright Royalty Board', 'music', 'royalty', 1, 'US royalty rate setting', 'Statutory royalty rates for digital services', 'Copyright Royalty Board'),
('EUCD_ARTICLE17', 'EU Copyright Directive Article 17', 'digital_media', 'content', 2, 'Platform liability for user content', 'Content filtering, licensing obligations', 'EU Member State Authorities'),
('ONLINE_HARMS', 'UK Online Safety Act', 'digital_media', 'content', 3, 'Online platform safety requirements', 'Content moderation, age verification', 'Ofcom'),
('CRTC_ONLINE', 'Canada Online Streaming Act', 'broadcasting', 'content', 4, 'Regulation of online streamers', 'Canadian content requirements', 'CRTC'),
('NMPA_LICENSING', 'NMPA Model Licensing', 'music', 'licensing', 1, 'Publisher mechanical licensing', 'Model license agreements', 'NMPA'),
('IFPI_STANDARDS', 'IFPI Digital Music Standards', 'music', 'distribution', NULL, 'International recording standards', 'Metadata, distribution standards', 'IFPI'),
('CISAC_RULES', 'CISAC Professional Rules', 'music', 'licensing', NULL, 'Collective management standards', 'Transparency, governance, distribution', 'CISAC'),
('WIPO_TREATIES', 'WIPO Copyright Treaties', 'music', 'licensing', NULL, 'International copyright standards', 'Digital rights, protection measures', 'WIPO'),
('DSP_AGREEMENTS', 'DSP Standard Agreements', 'music', 'distribution', NULL, 'Digital service provider terms', 'Content delivery, reporting, payment', 'Various DSPs');

-- Table: accessibility_standard
CREATE TABLE accessibility_standard (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    standard_version VARCHAR(50),
    standard_type VARCHAR(100), -- 'web_content', 'mobile_app', 'document', 'multimedia'
    level VARCHAR(20), -- 'A', 'AA', 'AAA'
    jurisdiction_id INT UNSIGNED,
    description TEXT,
    key_requirements TEXT,
    testing_criteria TEXT,
    compliance_deadline DATE,
    enforcement_body VARCHAR(500),
    penalties TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_standard_type (standard_type),
    INDEX idx_level (level),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO accessibility_standard (code, name, standard_version, standard_type, level, jurisdiction_id, description, key_requirements, enforcement_body) VALUES
('WCAG21_A', 'WCAG 2.1 Level A', '2.1', 'web_content', 'A', NULL, 'Basic web accessibility', 'Perceivable, Operable, Understandable, Robust', 'W3C'),
('WCAG21_AA', 'WCAG 2.1 Level AA', '2.1', 'web_content', 'AA', NULL, 'Standard web accessibility', 'Level A plus additional criteria', 'W3C'),
('WCAG21_AAA', 'WCAG 2.1 Level AAA', '2.1', 'web_content', 'AAA', NULL, 'Enhanced web accessibility', 'Highest level of accessibility', 'W3C'),
('ADA_TITLE_III', 'ADA Title III', NULL, 'web_content', 'AA', 1, 'US public accommodation', 'Equal access to goods and services', 'US DOJ'),
('SECTION_508', 'Section 508', '2018', 'web_content', 'AA', 1, 'US federal accessibility', 'Federal agency compliance', 'US Access Board'),
('EN301549', 'EN 301 549', '3.2.1', 'web_content', 'AA', 2, 'EU accessibility standard', 'ICT procurement requirements', 'EU Standards Bodies'),
('AODA', 'AODA', NULL, 'web_content', 'AA', 4, 'Ontario accessibility', 'Phased compliance requirements', 'Ontario Government'),
('JIS_X_8341', 'JIS X 8341', NULL, 'web_content', 'AA', 6, 'Japanese accessibility', 'Web content accessibility', 'JISC'),
('PDF_UA', 'PDF/UA', 'ISO 14289-1', 'document', 'AA', NULL, 'PDF accessibility', 'Tagged PDF requirements', 'ISO'),
('EPUB_ACCESSIBILITY', 'EPUB Accessibility', '1.1', 'document', 'AA', NULL, 'EPUB accessibility', 'Digital publication access', 'W3C');

-- Table: age_verification_requirement
CREATE TABLE age_verification_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    jurisdiction_id INT UNSIGNED,
    minimum_age INT NOT NULL,
    verification_type VARCHAR(100), -- 'self_declaration', 'soft_verification', 'hard_verification'
    verification_methods JSON,
    parental_consent_age INT,
    parental_consent_method VARCHAR(200),
    data_retention_days INT,
    special_categories JSON, -- Different ages for different content
    penalties TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_minimum_age (minimum_age),
    INDEX idx_verification_type (verification_type),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_jurisdiction_code (jurisdiction_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO age_verification_requirement (code, jurisdiction_id, minimum_age, verification_type, verification_methods, parental_consent_age, parental_consent_method, data_retention_days) VALUES
('US_COPPA', 1, 13, 'hard_verification', '["credit_card", "government_id", "knowledge_test"]', 13, 'Verifiable parental consent', 365),
('EU_GDPR', 2, 16, 'soft_verification', '["birthdate", "checkbox", "account_verification"]', 16, 'Parental responsibility holder consent', 730),
('UK_AADC', 3, 13, 'soft_verification', '["birthdate", "self_declaration"]', 13, 'Parental consent required', 365),
('CA_PIPEDA', 4, 13, 'soft_verification', '["birthdate", "terms_acceptance"]', 13, 'Meaningful consent from parent', 730),
('AU_PRIVACY', 5, 15, 'self_declaration', '["checkbox", "birthdate"]', 15, 'Parent or guardian consent', 365),
('JP_APPI', 6, 15, 'soft_verification', '["birthdate", "parent_email"]', 15, 'Legal representative consent', 1095),
('BR_LGPD', 7, 12, 'hard_verification', '["parent_id", "notarized_consent"]', 12, 'Specific parental consent', 365),
('KR_PIPA', 12, 14, 'hard_verification', '["i_pin", "mobile_verification"]', 14, 'Legal representative consent', 1095),
('FR_SPECIFIC', 9, 15, 'soft_verification', '["birthdate", "parental_control"]', 15, 'Parental authority consent', 730),
('DE_SPECIFIC', 8, 16, 'soft_verification', '["birthdate", "account_verification"]', 16, 'Parental consent until 16', 730);

-- Table: sanctions_list
CREATE TABLE sanctions_list (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    issuing_authority VARCHAR(200),
    list_type VARCHAR(100), -- 'comprehensive', 'targeted', 'sectoral'
    jurisdiction_id INT UNSIGNED,
    target_type VARCHAR(100), -- 'country', 'entity', 'individual', 'sector'
    description TEXT,
    restrictions JSON,
    last_updated DATE,
    review_frequency_days INT,
    penalties TEXT,
    api_endpoint VARCHAR(500),
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_list_type (list_type),
    INDEX idx_target_type (target_type),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_last_updated (last_updated),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO sanctions_list (code, name, issuing_authority, list_type, jurisdiction_id, target_type, description, last_updated, review_frequency_days) VALUES
('OFAC_SDN', 'OFAC SDN List', 'US Treasury OFAC', 'targeted', 1, 'entity', 'Specially Designated Nationals', CURDATE(), 1),
('EU_CONSOLIDATED', 'EU Consolidated List', 'European Commission', 'targeted', 2, 'entity', 'EU sanctions list', CURDATE(), 7),
('UK_CONSOLIDATED', 'UK Consolidated List', 'HM Treasury', 'targeted', 3, 'entity', 'UK sanctions list', CURDATE(), 7),
('UN_CONSOLIDATED', 'UN Security Council List', 'United Nations', 'targeted', NULL, 'entity', 'UN sanctions list', CURDATE(), 30),
('OFAC_COUNTRIES', 'OFAC Country Sanctions', 'US Treasury OFAC', 'comprehensive', 1, 'country', 'Comprehensively sanctioned countries', CURDATE(), 30),
('EU_ARMS_EMBARGO', 'EU Arms Embargo', 'European Commission', 'sectoral', 2, 'sector', 'Arms trade restrictions', CURDATE(), 90),
('AUSTRAC', 'AUSTRAC Sanctions', 'Australian Government', 'targeted', 5, 'entity', 'Australian sanctions', CURDATE(), 30),
('CANADA_SEMA', 'Canada SEMA List', 'Global Affairs Canada', 'targeted', 4, 'entity', 'Canadian sanctions', CURDATE(), 30),
('JAPAN_METI', 'Japan METI List', 'METI', 'targeted', 6, 'entity', 'Japanese sanctions', CURDATE(), 30),
('SWITZERLAND_SECO', 'Switzerland SECO List', 'SECO', 'targeted', NULL, 'entity', 'Swiss sanctions', CURDATE(), 30);

-- Table: cookie_category
CREATE TABLE cookie_category (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    category_type VARCHAR(50), -- 'necessary', 'functional', 'analytics', 'advertising'
    description TEXT,
    examples TEXT,
    requires_consent BOOLEAN DEFAULT TRUE,
    can_reject BOOLEAN DEFAULT TRUE,
    default_enabled BOOLEAN DEFAULT FALSE,
    retention_period VARCHAR(200),
    third_party BOOLEAN DEFAULT FALSE,
    purpose TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category_type (category_type),
    INDEX idx_consent (requires_consent, can_reject),
    INDEX idx_third_party (third_party),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO cookie_category (code, name, category_type, description, examples, requires_consent, can_reject, default_enabled, retention_period, third_party) VALUES
('NECESSARY', 'Strictly Necessary', 'necessary', 'Essential for website operation', 'Session, authentication, security', FALSE, FALSE, TRUE, 'Session or up to 1 year', FALSE),
('FUNCTIONAL', 'Functional', 'functional', 'Enhanced functionality and personalization', 'Language, region, preferences', TRUE, TRUE, FALSE, '1 year typical', FALSE),
('ANALYTICS', 'Analytics', 'analytics', 'Usage statistics and performance', 'Google Analytics, Matomo', TRUE, TRUE, FALSE, '2 years typical', TRUE),
('ADVERTISING', 'Advertising', 'advertising', 'Targeted advertising and remarketing', 'Google Ads, Facebook Pixel', TRUE, TRUE, FALSE, '90 days typical', TRUE),
('SOCIAL_MEDIA', 'Social Media', 'advertising', 'Social media integration', 'Facebook, Twitter, LinkedIn widgets', TRUE, TRUE, FALSE, '2 years typical', TRUE),
('PERFORMANCE', 'Performance', 'analytics', 'Site performance monitoring', 'CDN cookies, load balancing', TRUE, TRUE, FALSE, '1 year typical', FALSE);

-- Table: audit_requirement
CREATE TABLE audit_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    framework_id INT UNSIGNED,
    name VARCHAR(200) NOT NULL,
    audit_type VARCHAR(100), -- 'internal', 'external', 'certification', 'regulatory'
    frequency_months INT,
    scope TEXT,
    auditor_requirements TEXT,
    documentation_required JSON,
    reporting_requirements TEXT,
    remediation_timeline_days INT,
    retention_period_years INT DEFAULT 7,
    is_mandatory BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_framework (framework_id),
    INDEX idx_audit_type (audit_type),
    INDEX idx_frequency (frequency_months),
    INDEX idx_mandatory (is_mandatory),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_framework_code (framework_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO audit_requirement (code, framework_id, name, audit_type, frequency_months, scope, auditor_requirements, remediation_timeline_days, is_mandatory) VALUES
('GDPR_DPO_AUDIT', 1, 'GDPR DPO Annual Audit', 'internal', 12, 'Data processing activities, consent, rights', 'DPO or qualified privacy professional', 90, TRUE),
('GDPR_SECURITY_AUDIT', 1, 'GDPR Security Audit', 'external', 24, 'Technical and organizational measures', 'ISO 27001 certified auditor', 60, TRUE),
('CCPA_PRIVACY_AUDIT', 2, 'CCPA Privacy Audit', 'internal', 12, 'Consumer rights, data inventory, opt-out', 'Privacy professional', 60, FALSE),
('SOC2_TYPE2', NULL, 'SOC 2 Type II', 'certification', 12, 'Security, availability, confidentiality', 'Licensed CPA firm', 90, FALSE),
('ISO27001_CERT', NULL, 'ISO 27001 Certification', 'certification', 36, 'Information security management', 'Accredited certification body', 90, FALSE),
('PCI_DSS_AUDIT', NULL, 'PCI DSS Audit', 'external', 12, 'Payment card data security', 'QSA certified auditor', 30, TRUE),
('LGPD_IMPACT', 3, 'LGPD Impact Assessment', 'internal', 24, 'High-risk processing activities', 'DPO or privacy expert', 60, TRUE),
('PIPEDA_REVIEW', 4, 'PIPEDA Compliance Review', 'internal', 24, 'Privacy policies and practices', 'Privacy officer', 90, FALSE),
('DMCA_COMPLIANCE', 8, 'DMCA Compliance Audit', 'internal', 12, 'Notice and takedown procedures', 'Legal or compliance team', 30, TRUE),
('ACCESSIBILITY_AUDIT', 10, 'WCAG 2.1 Audit', 'external', 24, 'Web accessibility compliance', 'Certified accessibility specialist', 180, FALSE);

-- Table: data_protection_impact_assessment
CREATE TABLE data_protection_impact_assessment (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    trigger_criteria VARCHAR(500),
    risk_level VARCHAR(50), -- 'low', 'medium', 'high', 'very_high'
    processing_type VARCHAR(200),
    assessment_required BOOLEAN DEFAULT TRUE,
    regulatory_consultation_required BOOLEAN DEFAULT FALSE,
    key_considerations JSON,
    mitigation_measures JSON,
    documentation_template TEXT,
    review_period_months INT DEFAULT 12,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_risk_level (risk_level),
    INDEX idx_processing_type (processing_type),
    INDEX idx_required (assessment_required, regulatory_consultation_required),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_protection_impact_assessment (code, name, trigger_criteria, risk_level, processing_type, assessment_required, regulatory_consultation_required) VALUES
('BIOMETRIC_PROCESSING', 'Biometric Data Processing', 'Processing of biometric data for identification', 'very_high', 'biometric_identification', TRUE, TRUE),
('LARGE_SCALE_PROFILING', 'Large Scale Profiling', 'Systematic profiling affecting large numbers', 'high', 'automated_profiling', TRUE, TRUE),
('SENSITIVE_DATA_LARGE', 'Large Scale Sensitive Data', 'Processing special categories at scale', 'high', 'sensitive_data', TRUE, TRUE),
('EMPLOYEE_MONITORING', 'Employee Monitoring', 'Systematic monitoring of employees', 'high', 'workplace_monitoring', TRUE, FALSE),
('LOCATION_TRACKING', 'Location Tracking', 'Systematic location data collection', 'medium', 'geolocation', TRUE, FALSE),
('CHILDREN_DATA', 'Children\'s Data Processing', 'Processing data of minors', 'high', 'minor_data', TRUE, FALSE),
('AUTOMATED_DECISIONS', 'Automated Decision Making', 'Decisions with legal/significant effects', 'high', 'automated_decisions', TRUE, TRUE),
('DATA_MATCHING', 'Data Matching/Combining', 'Combining datasets from different sources', 'medium', 'data_combination', TRUE, FALSE),
('NEW_TECHNOLOGY', 'New Technology Deployment', 'Using new or innovative technology', 'medium', 'new_tech', TRUE, FALSE),
('VULNERABLE_SUBJECTS', 'Vulnerable Data Subjects', 'Processing data of vulnerable individuals', 'high', 'vulnerable_groups', TRUE, FALSE);

-- Table: legitimate_interest_assessment
CREATE TABLE legitimate_interest_assessment (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    interest_type VARCHAR(200),
    purpose_description TEXT,
    necessity_test TEXT,
    balancing_factors JSON,
    safeguards JSON,
    opt_out_available BOOLEAN DEFAULT TRUE,
    transparency_measures TEXT,
    review_frequency_months INT DEFAULT 12,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_interest_type (interest_type),
    INDEX idx_opt_out (opt_out_available),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO legitimate_interest_assessment (code, name, interest_type, purpose_description, necessity_test, opt_out_available) VALUES
('FRAUD_PREVENTION_LIA', 'Fraud Prevention', 'security', 'Preventing fraudulent activities', 'Essential for platform integrity', FALSE),
('DIRECT_MARKETING_LIA', 'Direct Marketing', 'commercial', 'Marketing to existing customers', 'Business growth and customer engagement', TRUE),
('ANALYTICS_LIA', 'Analytics and Insights', 'improvement', 'Service improvement through analytics', 'Understanding user behavior', TRUE),
('SECURITY_MONITORING_LIA', 'Security Monitoring', 'security', 'Platform security monitoring', 'Protecting users and platform', FALSE),
('LEGAL_CLAIMS_LIA', 'Legal Claims Defense', 'legal', 'Establishing or defending legal claims', 'Legal protection necessity', FALSE),
('NETWORK_SECURITY_LIA', 'Network Security', 'technical', 'Information and network security', 'Technical infrastructure protection', FALSE),
('PRODUCT_DEVELOPMENT_LIA', 'Product Development', 'improvement', 'Developing new features', 'Innovation and user benefit', TRUE),
('CUSTOMER_SUPPORT_LIA', 'Customer Support History', 'service', 'Maintaining support history', 'Efficient customer service', TRUE),
('PAYMENT_PROCESSING_LIA', 'Payment Risk Management', 'financial', 'Payment fraud prevention', 'Financial security', FALSE),
('CONTENT_MODERATION_LIA', 'Content Moderation', 'safety', 'Platform safety and compliance', 'User protection and legal compliance', FALSE);

-- Table: privacy_policy_template
CREATE TABLE privacy_policy_template (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    jurisdiction_id INT UNSIGNED,
    framework_id INT UNSIGNED,
    template_name VARCHAR(200) NOT NULL,
    version VARCHAR(20),
    language_code VARCHAR(10),
    required_sections JSON,
    template_content TEXT,
    last_updated DATE,
    review_required_months INT DEFAULT 12,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_framework (framework_id),
    INDEX idx_language (language_code),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_jurisdiction_framework_code (jurisdiction_id, framework_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO privacy_policy_template (code, jurisdiction_id, framework_id, template_name, version, language_code, required_sections, last_updated) VALUES
('GDPR_EN_TEMPLATE', 2, 1, 'GDPR Privacy Policy Template', '2.0', 'en', '["controller_identity", "dpo_contact", "purposes", "legal_basis", "recipients", "retention", "rights", "lodge_complaint", "automated_decisions", "international_transfers"]', CURDATE()),
('CCPA_EN_TEMPLATE', 1, 2, 'CCPA Privacy Policy Template', '1.5', 'en', '["categories_collected", "sources", "purposes", "sharing", "sale_opt_out", "rights", "contact", "non_discrimination", "minors", "changes"]', CURDATE()),
('LGPD_PT_TEMPLATE', 7, 3, 'LGPD Privacy Policy Template', '1.0', 'pt', '["controller_identity", "dpo_contact", "purposes", "legal_basis", "sharing", "retention", "rights", "international_transfers", "security", "changes"]', CURDATE()),
('PIPEDA_EN_TEMPLATE', 4, 4, 'PIPEDA Privacy Policy Template', '1.2', 'en', '["purposes", "consent", "limiting_collection", "limiting_use", "retention", "accuracy", "safeguards", "openness", "access", "challenging_compliance"]', CURDATE()),
('PIPEDA_FR_TEMPLATE', 4, 4, 'PIPEDA Privacy Policy Template', '1.2', 'fr', '["purposes", "consent", "limiting_collection", "limiting_use", "retention", "accuracy", "safeguards", "openness", "access", "challenging_compliance"]', CURDATE()),
('APPI_JA_TEMPLATE', 6, 5, 'APPI Privacy Policy Template', '1.1', 'ja', '["purpose_of_use", "joint_use", "provision_to_third_parties", "disclosure_requests", "safety_measures", "contact", "complaints"]', CURDATE()),
('POPIA_EN_TEMPLATE', NULL, 6, 'POPIA Privacy Policy Template', '1.0', 'en', '["responsible_party", "purpose", "recipients", "cross_border", "security", "retention", "rights", "objection", "complaints"]', CURDATE()),
('GENERIC_EN_TEMPLATE', NULL, NULL, 'Generic Privacy Policy Template', '1.0', 'en', '["information_collected", "how_we_use", "sharing", "security", "retention", "your_rights", "contact", "changes"]', CURDATE()),
('COPPA_EN_TEMPLATE', 1, 12, 'COPPA Children\'s Privacy Policy', '1.0', 'en', '["information_collected_children", "parental_consent", "parental_rights", "disclosure", "security", "retention", "contact"]', CURDATE()),
('GDPR_SIMPLE_EN', 2, 1, 'GDPR Simplified Language', '1.0', 'en', '["who_we_are", "what_we_collect", "why_we_need_it", "who_we_share_with", "how_long_we_keep", "your_rights", "contact_us"]', CURDATE());

-- Table: compliance_certification  
CREATE TABLE compliance_certification (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    certification_body VARCHAR(500),
    certification_type VARCHAR(100), -- 'security', 'privacy', 'quality', 'industry'
    scope TEXT,
    requirements TEXT,
    audit_frequency_months INT,
    validity_period_months INT,
    cost_range VARCHAR(100),
    preparation_time_months INT,
    renewal_required BOOLEAN DEFAULT TRUE,
    is_internationally_recognized BOOLEAN DEFAULT TRUE,
    related_frameworks JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_certification_type (certification_type),
    INDEX idx_audit_frequency (audit_frequency_months),
    INDEX idx_international (is_internationally_recognized),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO compliance_certification (code, name, certification_body, certification_type, scope, audit_frequency_months, validity_period_months, is_internationally_recognized) VALUES
('ISO27001', 'ISO/IEC 27001', 'Accredited Certification Bodies', 'security', 'Information security management system', 12, 36, TRUE),
('ISO27701', 'ISO/IEC 27701', 'Accredited Certification Bodies', 'privacy', 'Privacy information management', 12, 36, TRUE),
('SOC2_TYPE1', 'SOC 2 Type I', 'AICPA Licensed CPA', 'security', 'Point-in-time assessment', 0, 12, TRUE),
('SOC2_TYPE2', 'SOC 2 Type II', 'AICPA Licensed CPA', 'security', 'Period of time assessment', 12, 12, TRUE),
('ISO9001', 'ISO 9001', 'Accredited Certification Bodies', 'quality', 'Quality management system', 12, 36, TRUE),
('PCI_DSS_L1', 'PCI DSS Level 1', 'Qualified Security Assessor', 'security', 'Payment card data security', 12, 12, TRUE),
('HIPAA', 'HIPAA Compliance', 'Third-party Assessor', 'privacy', 'Healthcare data protection', 12, 12, FALSE),
('TISAX', 'TISAX', 'ENX Association', 'security', 'Automotive industry security', 36, 36, TRUE),
('C5', 'BSI C5', 'BSI Qualified Auditor', 'security', 'Cloud security (Germany)', 12, 12, FALSE),
('ISAE3402', 'ISAE 3402', 'Certified Auditor', 'security', 'Service organization controls', 12, 12, TRUE);

-- Table: regulatory_authority
CREATE TABLE regulatory_authority (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(500) NOT NULL,
    acronym VARCHAR(50),
    jurisdiction_id INT UNSIGNED,
    authority_type VARCHAR(100), -- 'data_protection', 'copyright', 'telecommunications', 'competition'
    website VARCHAR(500),
    contact_email VARCHAR(255),
    contact_phone VARCHAR(50),
    complaint_process TEXT,
    enforcement_powers JSON,
    reporting_obligations JSON,
    is_lead_authority BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_authority_type (authority_type),
    INDEX idx_lead_authority (is_lead_authority),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO regulatory_authority (code, name, acronym, jurisdiction_id, authority_type, website, is_lead_authority) VALUES
('ICO_UK', 'Information Commissioner\'s Office', 'ICO', 3, 'data_protection', 'https://ico.org.uk', TRUE),
('CNIL_FR', 'Commission Nationale de l\'Informatique et des Libertés', 'CNIL', 9, 'data_protection', 'https://www.cnil.fr', TRUE),
('BfDI_DE', 'Federal Commissioner for Data Protection and Freedom of Information', 'BfDI', 8, 'data_protection', 'https://www.bfdi.bund.de', TRUE),
('AEPD_ES', 'Agencia Española de Protección de Datos', 'AEPD', NULL, 'data_protection', 'https://www.aepd.es', TRUE),
('EDPB', 'European Data Protection Board', 'EDPB', 2, 'data_protection', 'https://edpb.europa.eu', TRUE),
('FTC_US', 'Federal Trade Commission', 'FTC', 1, 'data_protection', 'https://www.ftc.gov', TRUE),
('CPPA_CA', 'California Privacy Protection Agency', 'CPPA', 1, 'data_protection', 'https://cppa.ca.gov', TRUE),
('OPC_CA', 'Office of the Privacy Commissioner of Canada', 'OPC', 4, 'data_protection', 'https://www.priv.gc.ca', TRUE),
('OAIC_AU', 'Office of the Australian Information Commissioner', 'OAIC', 5, 'data_protection', 'https://www.oaic.gov.au', TRUE),
('ANPD_BR', 'Autoridade Nacional de Proteção de Dados', 'ANPD', 7, 'data_protection', 'https://www.gov.br/anpd', TRUE);

-- Table: compliance_penalty
CREATE TABLE compliance_penalty (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    framework_id INT UNSIGNED,
    violation_category VARCHAR(200),
    penalty_type VARCHAR(100), -- 'monetary', 'criminal', 'administrative', 'reputational'
    calculation_method VARCHAR(200),
    maximum_fine_amount DECIMAL(20,2),
    maximum_fine_percentage DECIMAL(5,2),
    fine_currency CHAR(3),
    criminal_liability BOOLEAN DEFAULT FALSE,
    criminal_penalty_description TEXT,
    factors_considered JSON,
    mitigation_factors JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_framework (framework_id),
    INDEX idx_violation_category (violation_category),
    INDEX idx_penalty_type (penalty_type),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_framework_code (framework_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO compliance_penalty (code, framework_id, violation_category, penalty_type, calculation_method, maximum_fine_amount, maximum_fine_percentage, fine_currency, criminal_liability) VALUES
('GDPR_LOWER', 1, 'Lower tier violations', 'monetary', 'Up to 2% annual turnover or €10M', 10000000, 2.0, 'EUR', FALSE),
('GDPR_UPPER', 1, 'Upper tier violations', 'monetary', 'Up to 4% annual turnover or €20M', 20000000, 4.0, 'EUR', FALSE),
('CCPA_STANDARD', 2, 'Non-intentional violation', 'monetary', 'Per violation', 2500, NULL, 'USD', FALSE),
('CCPA_INTENTIONAL', 2, 'Intentional violation', 'monetary', 'Per violation', 7500, NULL, 'USD', FALSE),
('LGPD_SIMPLE', 3, 'Simple violation', 'monetary', 'Up to 2% revenue or R$50M', 50000000, 2.0, 'BRL', FALSE),
('LGPD_PERSONAL', 3, 'Per person affected', 'monetary', 'Daily fine', 50000, NULL, 'BRL', FALSE),
('PIPEDA_STANDARD', 4, 'Standard violation', 'monetary', 'Per violation', 100000, NULL, 'CAD', FALSE),
('COPPA_CIVIL', 12, 'Civil penalty', 'monetary', 'Per violation', 46517, NULL, 'USD', FALSE),
('DMCA_COPYRIGHT', 8, 'Copyright infringement', 'monetary', 'Statutory damages per work', 150000, NULL, 'USD', TRUE),
('ADA_FIRST', 11, 'First violation', 'monetary', 'Civil penalty', 75000, NULL, 'USD', FALSE);

-- Table: data_localization_requirement
CREATE TABLE data_localization_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    jurisdiction_id INT UNSIGNED,
    data_category_id INT UNSIGNED,
    requirement_type VARCHAR(100), -- 'storage', 'processing', 'access', 'copy_retention'
    description TEXT,
    allowed_locations JSON,
    prohibited_locations JSON,
    exceptions JSON,
    government_access_provisions TEXT,
    notification_requirements TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    FOREIGN KEY (data_category_id) REFERENCES data_category(id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_data_category (data_category_id),
    INDEX idx_requirement_type (requirement_type),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_jurisdiction_category_code (jurisdiction_id, data_category_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_localization_requirement (code, jurisdiction_id, data_category_id, requirement_type, description, allowed_locations) VALUES
('RU_PERSONAL', NULL, 1, 'storage', 'Russian personal data localization', '["RU"]'),
('CN_CRITICAL', 11, NULL, 'storage', 'China critical information infrastructure', '["CN"]'),
('CN_PERSONAL', 11, 1, 'copy_retention', 'China personal information copy', '["CN"]'),
('IN_SENSITIVE', 10, 3, 'storage', 'India sensitive personal data', '["IN"]'),
('IN_CRITICAL', 10, NULL, 'storage', 'India critical personal data', '["IN"]'),
('AU_HEALTH', 5, NULL, 'access', 'Australia health records access', '["AU"]'),
('CA_PUBLIC', 4, NULL, 'storage', 'Canada public sector data', '["CA"]'),
('DE_TELECOM', 8, 9, 'storage', 'Germany telecommunications metadata', '["DE","EU"]'),
('KR_LOCATION', 12, 5, 'processing', 'Korea location information', '["KR"]'),
('SWIFT_EU', 2, 2, 'processing', 'EU payment data processing', '["EU"]');

-- Table: third_party_processor_requirement
CREATE TABLE third_party_processor_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    framework_id INT UNSIGNED,
    requirement_category VARCHAR(100), -- 'contract', 'security', 'audit', 'notification'
    description TEXT,
    mandatory_clauses JSON,
    security_requirements JSON,
    audit_rights BOOLEAN DEFAULT TRUE,
    sub_processor_restrictions TEXT,
    breach_notification_hours INT,
    termination_requirements TEXT,
    data_return_requirements TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_framework (framework_id),
    INDEX idx_requirement_category (requirement_category),
    INDEX idx_audit_rights (audit_rights),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO third_party_processor_requirement (code, name, framework_id, requirement_category, description, audit_rights, breach_notification_hours) VALUES
('GDPR_DPA', 'GDPR Data Processing Agreement', 1, 'contract', 'Article 28 processor requirements', TRUE, 72),
('GDPR_SECURITY', 'GDPR Processor Security', 1, 'security', 'Article 32 security measures', TRUE, NULL),
('CCPA_CONTRACT', 'CCPA Service Provider Agreement', 2, 'contract', 'Service provider contractual requirements', TRUE, NULL),
('LGPD_OPERATOR', 'LGPD Data Operator Agreement', 3, 'contract', 'Data operator requirements', TRUE, 48),
('PIPEDA_COMPARABLE', 'PIPEDA Comparable Protection', 4, 'contract', 'Comparable level of protection', TRUE, NULL),
('APPI_OUTSOURCING', 'APPI Outsourcing Supervision', 5, 'contract', 'Necessary supervision requirements', TRUE, NULL),
('HIPAA_BAA', 'HIPAA Business Associate Agreement', NULL, 'contract', 'Healthcare data processor requirements', TRUE, 24),
('PCI_DSS_PROVIDER', 'PCI DSS Service Provider', NULL, 'security', 'Payment processor requirements', TRUE, 24),
('SOC2_VENDOR', 'SOC 2 Vendor Requirements', NULL, 'audit', 'Vendor security assessments', TRUE, NULL),
('ISO27001_SUPPLIER', 'ISO 27001 Supplier Requirements', NULL, 'security', 'Information security for suppliers', TRUE, NULL);

-- Add indexes for foreign key relationships
ALTER TABLE copyright_term_rule ADD INDEX idx_code (code);
ALTER TABLE data_retention_policy ADD INDEX idx_code (code);
ALTER TABLE privacy_policy_template ADD INDEX idx_version (version);
ALTER TABLE regulatory_authority ADD INDEX idx_acronym (acronym);

-- Add composite indexes for common query patterns
CREATE INDEX idx_framework_active ON compliance_framework (framework_type, is_active);
CREATE INDEX idx_jurisdiction_active ON legal_jurisdiction (jurisdiction_type, is_active);
CREATE INDEX idx_consent_active ON privacy_consent_type (consent_category, is_active);
CREATE INDEX idx_purpose_active ON data_processing_purpose (purpose_category, is_active);
CREATE INDEX idx_penalty_amount ON compliance_penalty (maximum_fine_amount, fine_currency);
CREATE INDEX idx_audit_mandatory ON audit_requirement (audit_type, is_mandatory, is_active);






























-- =====================================================================================
-- RESOURCE_DB LOOKUP TABLES (DDEX STANDARD CODE LISTS)
-- =====================================================================================

-- First, create the lookup tables in resource_db database
USE resource_db;

-- DDEX Standards
CREATE TABLE IF NOT EXISTS ddex_standards (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    standard_code VARCHAR(10) NOT NULL UNIQUE,
    standard_name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    current_version VARCHAR(10) NOT NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_ddex_standards_code (standard_code),
    INDEX idx_ddex_standards_active (is_active)
);

INSERT INTO ddex_standards (standard_code, standard_name, description, current_version) VALUES
('ERN', 'Electronic Release Notification', 'Release and resource information exchange', '4.3'),
('DSR', 'Digital Sales Reporting', 'Sales and usage reporting', '3.0'),
('MWN', 'Musical Work Notification', 'Musical work information exchange', '2.1'),
('MWL', 'Musical Work License', 'Musical work licensing', '1.0'),
('RDR', 'Recording Data and Revenue', 'Recording revenue reporting', '1.0'),
('CDM', 'Claim Detail Message', 'Rights claims and disputes', '1.0');

-- DDEX Release Types (Official ERN 4.3 Code List)
CREATE TABLE IF NOT EXISTS ddex_release_types (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    type_code VARCHAR(50) NOT NULL UNIQUE,
    type_name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    ddex_version VARCHAR(10) NOT NULL DEFAULT '4.3',
    deprecated_date DATE NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_ddex_release_types_code (type_code),
    INDEX idx_ddex_release_types_version (ddex_version),
    INDEX idx_ddex_release_types_active (is_active)
);

INSERT INTO ddex_release_types (type_code, type_name, description) VALUES
('Album', 'Album', 'A collection of tracks released together'),
('Single', 'Single', 'A release containing one to three tracks'),
('EP', 'EP', 'Extended Play - typically 4-6 tracks'),
('Compilation', 'Compilation', 'Collection of previously released tracks'),
('Soundtrack', 'Soundtrack', 'Music from film, TV, or other media'),
('Bootleg', 'Bootleg', 'Unofficial or unauthorized release'),
('Spokenword', 'Spokenword', 'Spoken word content'),
('Interview', 'Interview', 'Interview content'),
('Audiobook', 'Audiobook', 'Book in audio format'),
('Live', 'Live', 'Live performance recording'),
('Remix', 'Remix', 'Remixed version of existing content'),
('DJ-mix', 'DJ-mix', 'DJ mixed content'),
('MasterRingTone', 'Master Ring Tone', 'Full-length ringtone'),
('RingToneFromMaster', 'Ring Tone From Master', 'Ringtone excerpt from master');

-- DDEX Usage Types (Official Code List)
CREATE TABLE IF NOT EXISTS ddex_usage_types (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    type_code VARCHAR(50) NOT NULL UNIQUE,
    type_name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    ddex_version VARCHAR(10) NOT NULL DEFAULT '4.3',
    deprecated_date DATE NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_ddex_usage_types_code (type_code),
    INDEX idx_ddex_usage_types_version (ddex_version),
    INDEX idx_ddex_usage_types_active (is_active)
);

INSERT INTO ddex_usage_types (type_code, type_name, description) VALUES
('Stream', 'Stream', 'Streaming usage'),
('PermanentDownload', 'Permanent Download', 'Permanent download to own'),
('ConditionalDownload', 'Conditional Download', 'Temporary/conditional download'),
('NonInteractiveStream', 'Non-Interactive Stream', 'Radio-style streaming'),
('OnDemandStream', 'On-Demand Stream', 'User-initiated streaming'),
('UserMade', 'User Made', 'User-generated content'),
('Preview', 'Preview', 'Preview/sample usage'),
('Simulcast', 'Simulcast', 'Simultaneous broadcast'),
('Broadcast', 'Broadcast', 'Traditional broadcast'),
('PhysicalRental', 'Physical Rental', 'Physical media rental'),
('DigitalRental', 'Digital Rental', 'Digital content rental'),
('Synchronization', 'Synchronization', 'Sync licensing usage'),
('MobilePersonalization', 'Mobile Personalization', 'Mobile customization'),
('BackgroundMusic', 'Background Music', 'Background/ambient usage');

-- DDEX Commercial Model Types (Official Code List)
CREATE TABLE IF NOT EXISTS ddex_commercial_model_types (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    type_code VARCHAR(50) NOT NULL UNIQUE,
    type_name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    ddex_version VARCHAR(10) NOT NULL DEFAULT '4.3',
    deprecated_date DATE NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_ddex_commercial_model_types_code (type_code),
    INDEX idx_ddex_commercial_model_types_version (ddex_version),
    INDEX idx_ddex_commercial_model_types_active (is_active)
);

INSERT INTO ddex_commercial_model_types (type_code, type_name, description) VALUES
('SubscriptionModel', 'Subscription Model', 'Subscription-based access'),
('PayAsYouGoModel', 'Pay As You Go Model', 'Per-transaction payment'),
('AdvertisementSupportedModel', 'Advertisement Supported Model', 'Ad-supported free access'),
('PremiumModel', 'Premium Model', 'Premium tier access'),
('FreemiumModel', 'Freemium Model', 'Free with premium upgrades'),
('FreeOfChargeModel', 'Free Of Charge Model', 'Completely free access');

-- DDEX Party ID Types
CREATE TABLE IF NOT EXISTS ddex_party_id_types (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    type_code VARCHAR(50) NOT NULL UNIQUE,
    type_name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    validation_pattern VARCHAR(255) NULL,
    ddex_version VARCHAR(10) NOT NULL DEFAULT '4.3',
    deprecated_date DATE NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_ddex_party_id_types_code (type_code),
    INDEX idx_ddex_party_id_types_version (ddex_version),
    INDEX idx_ddex_party_id_types_active (is_active)
);

INSERT INTO ddex_party_id_types (type_code, type_name, description, validation_pattern) VALUES
('DPID', 'DDEX Party Identifier', 'DDEX Party Identifier', '^[A-Za-z0-9]{4,20}$'),
('IPI', 'Interested Parties Information number', 'IPI number for rights holders', '^[0-9]{9,11}$'),
('ISNI', 'International Standard Name Identifier', 'ISO 27729 identifier', '^[0-9]{15}[0-9X]$'),
('ProprietaryId', 'Proprietary identifier', 'Company-specific identifier', NULL),
('DunsNumber', 'Data Universal Numbering System', 'D-U-N-S Number', '^[0-9]{9}$'),
('IPN', 'Interested Party Number', 'Legacy IPI number format', '^[0-9]+$');

-- DDEX Resource Types
CREATE TABLE IF NOT EXISTS ddex_resource_types (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    type_code VARCHAR(50) NOT NULL UNIQUE,
    type_name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    ddex_version VARCHAR(10) NOT NULL DEFAULT '4.3',
    deprecated_date DATE NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_ddex_resource_types_code (type_code),
    INDEX idx_ddex_resource_types_version (ddex_version),
    INDEX idx_ddex_resource_types_active (is_active)
);

INSERT INTO ddex_resource_types (type_code, type_name, description) VALUES
('SoundRecording', 'Sound Recording', 'Audio recording'),
('MusicalWorkSoundRecording', 'Musical Work Sound Recording', 'Sound recording of musical work'),
('NonMusicalWorkSoundRecording', 'Non-Musical Work Sound Recording', 'Non-musical audio content'),
('MIDI', 'MIDI', 'MIDI file'),
('Video', 'Video', 'Video content'),
('MusicalWorkVideo', 'Musical Work Video', 'Video of musical work'),
('NonMusicalWorkVideo', 'Non-Musical Work Video', 'Non-musical video content'),
('Image', 'Image', 'Image/artwork'),
('Software', 'Software', 'Software application'),
('Text', 'Text', 'Text content'),
('SheetMusic', 'Sheet Music', 'Musical notation');

-- DDEX Resource ID Types
CREATE TABLE IF NOT EXISTS ddex_resource_id_types (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    type_code VARCHAR(50) NOT NULL UNIQUE,
    type_name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    validation_pattern VARCHAR(255) NULL,
    ddex_version VARCHAR(10) NOT NULL DEFAULT '4.3',
    deprecated_date DATE NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_ddex_resource_id_types_code (type_code),
    INDEX idx_ddex_resource_id_types_version (ddex_version),
    INDEX idx_ddex_resource_id_types_active (is_active)
);

INSERT INTO ddex_resource_id_types (type_code, type_name, description, validation_pattern) VALUES
('ISRC', 'International Standard Recording Code', 'ISO 3901 standard', '^[A-Z]{2}-[A-Z0-9]{3}-[0-9]{2}-[0-9]{5}$'),
('ProprietaryId', 'Proprietary Resource Identifier', 'Company-specific identifier', NULL),
('ISAN', 'International Standard Audiovisual Number', 'ISO 15706 standard', '^[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{1}$'),
('ISBN', 'International Standard Book Number', 'ISO 2108 standard', '^(97[89])?[0-9]{9}[0-9X]$'),
('ISSN', 'International Standard Serial Number', 'ISO 3297 standard', '^[0-9]{4}-[0-9]{3}[0-9X]$'),
('SICI', 'Serial Item and Contribution Identifier', 'ANSI/NISO Z39.56 standard', NULL),
('CatalogNumber', 'Catalog Number', 'Label catalog number', NULL);

-- DDEX Release ID Types
CREATE TABLE IF NOT EXISTS ddex_release_id_types (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    type_code VARCHAR(50) NOT NULL UNIQUE,
    type_name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    validation_pattern VARCHAR(255) NULL,
    ddex_version VARCHAR(10) NOT NULL DEFAULT '4.3',
    deprecated_date DATE NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_ddex_release_id_types_code (type_code),
    INDEX idx_ddex_release_id_types_version (ddex_version),
    INDEX idx_ddex_release_id_types_active (is_active)
);

INSERT INTO ddex_release_id_types (type_code, type_name, description, validation_pattern) VALUES
('ICPN', 'International Cataloguing of Published Notation', 'ICPN identifier', '^[0-9]{12}$'),
('GRID', 'Global Release Identifier', 'DDEX Global Release ID', '^A[0-9]-[0-9A-Z]{5}-[A-Z0-9]{11}-[A-Z]$'),
('CatalogNumber', 'Catalog Number', 'Label catalog number', NULL),
('ProprietaryId', 'Proprietary Release Identifier', 'Company-specific identifier', NULL),
('EAN', 'European Article Number', 'EAN-13 barcode', '^[0-9]{13}$'),
('UPC', 'Universal Product Code', 'UPC-A barcode', '^[0-9]{12}$');

-- ISO Territory Codes (Official ISO 3166)
CREATE TABLE IF NOT EXISTS iso_territory_codes (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    territory_code VARCHAR(10) NOT NULL UNIQUE,
    territory_name VARCHAR(255) NOT NULL,
    iso_alpha2 VARCHAR(2) NULL,
    iso_alpha3 VARCHAR(3) NULL,
    iso_numeric VARCHAR(3) NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_iso_territory_codes_code (territory_code),
    INDEX idx_iso_territory_codes_alpha2 (iso_alpha2),
    INDEX idx_iso_territory_codes_active (is_active)
);

INSERT INTO iso_territory_codes (territory_code, territory_name, iso_alpha2, iso_alpha3, iso_numeric) VALUES
('Worldwide', 'Worldwide', NULL, NULL, NULL),
('US', 'United States', 'US', 'USA', '840'),
('CA', 'Canada', 'CA', 'CAN', '124'),
('GB', 'United Kingdom', 'GB', 'GBR', '826'),
('DE', 'Germany', 'DE', 'DEU', '276'),
('FR', 'France', 'FR', 'FRA', '250'),
('IT', 'Italy', 'IT', 'ITA', '380'),
('ES', 'Spain', 'ES', 'ESP', '724'),
('JP', 'Japan', 'JP', 'JPN', '392'),
('AU', 'Australia', 'AU', 'AUS', '036'),
('BR', 'Brazil', 'BR', 'BRA', '076'),
('MX', 'Mexico', 'MX', 'MEX', '484'),
('CN', 'China', 'CN', 'CHN', '156'),
('IN', 'India', 'IN', 'IND', '356'),
('KR', 'South Korea', 'KR', 'KOR', '410'),
('NL', 'Netherlands', 'NL', 'NLD', '528'),
('SE', 'Sweden', 'SE', 'SWE', '752'),
('NO', 'Norway', 'NO', 'NOR', '578'),
('DK', 'Denmark', 'DK', 'DNK', '208'),
('FI', 'Finland', 'FI', 'FIN', '246');

-- ISO Currency Codes (Official ISO 4217)
CREATE TABLE IF NOT EXISTS iso_currency_codes (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    currency_code VARCHAR(3) NOT NULL UNIQUE,
    currency_name VARCHAR(255) NOT NULL,
    currency_number VARCHAR(3) NULL,
    minor_units INT NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_iso_currency_codes_code (currency_code),
    INDEX idx_iso_currency_codes_active (is_active)
);

INSERT INTO iso_currency_codes (currency_code, currency_name, currency_number, minor_units) VALUES
('USD', 'US Dollar', '840', 2),
('EUR', 'Euro', '978', 2),
('GBP', 'British Pound', '826', 2),
('CAD', 'Canadian Dollar', '124', 2),
('JPY', 'Japanese Yen', '392', 0),
('AUD', 'Australian Dollar', '036', 2),
('CHF', 'Swiss Franc', '756', 2),
('CNY', 'Chinese Yuan', '156', 2),
('SEK', 'Swedish Krona', '752', 2),
('NOK', 'Norwegian Krone', '578', 2),
('DKK', 'Danish Krone', '208', 2),
('PLN', 'Polish Zloty', '985', 2),
('CZK', 'Czech Koruna', '203', 2),
('HUF', 'Hungarian Forint', '348', 2),
('RUB', 'Russian Ruble', '643', 2);

-- DDEX Title Types
CREATE TABLE IF NOT EXISTS ddex_title_types (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    type_code VARCHAR(50) NOT NULL UNIQUE,
    type_name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    ddex_version VARCHAR(10) NOT NULL DEFAULT '4.3',
    deprecated_date DATE NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_ddex_title_types_code (type_code),
    INDEX idx_ddex_title_types_version (ddex_version),
    INDEX idx_ddex_title_types_active (is_active)
);

INSERT INTO ddex_title_types (type_code, type_name, description) VALUES
('DisplayTitle', 'Display Title', 'Title for display purposes'),
('GroupingTitle', 'Grouping Title', 'Title that groups related works'),
('VersionTitle', 'Version Title', 'Title indicating version or variant'),
('TransliteratedTitle', 'Transliterated Title', 'Title transliterated to Latin script'),
('FormalTitle', 'Formal Title', 'Official formal title'),
('AlternativeTitle', 'Alternative Title', 'Alternative or working title');

-- DDEX Artist Role Types
CREATE TABLE IF NOT EXISTS ddex_artist_role_types (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    type_code VARCHAR(50) NOT NULL UNIQUE,
    type_name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    ddex_version VARCHAR(10) NOT NULL DEFAULT '4.3',
    deprecated_date DATE NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_ddex_artist_role_types_code (type_code),
    INDEX idx_ddex_artist_role_types_version (ddex_version),
    INDEX idx_ddex_artist_role_types_active (is_active)
);

INSERT INTO ddex_artist_role_types (type_code, type_name, description) VALUES
('MainArtist', 'Main Artist', 'Primary performing artist'),
('FeaturedArtist', 'Featured Artist', 'Featured or guest artist'),
('Composer', 'Composer', 'Musical composition creator'),
('Producer', 'Producer', 'Recording producer'),
('Mixer', 'Mixer', 'Audio mixing engineer'),
('Conductor', 'Conductor', 'Orchestra or ensemble conductor'),
('Performer', 'Performer', 'General performer role');

-- DDEX Duration Precision Types
CREATE TABLE IF NOT EXISTS ddex_duration_precision_types (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    type_code VARCHAR(50) NOT NULL UNIQUE,
    type_name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    ddex_version VARCHAR(10) NOT NULL DEFAULT '4.3',
    deprecated_date DATE NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_ddex_duration_precision_types_code (type_code),
    INDEX idx_ddex_duration_precision_types_version (ddex_version),
    INDEX idx_ddex_duration_precision_types_active (is_active)
);

INSERT INTO ddex_duration_precision_types (type_code, type_name, description) VALUES
('Exact', 'Exact', 'Exact duration measurement'),
('Approximate', 'Approximate', 'Approximate duration measurement');

-- DDEX Processing Statuses
CREATE TABLE IF NOT EXISTS ddex_processing_statuses (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    status_code VARCHAR(50) NOT NULL UNIQUE,
    status_name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    is_final_status BOOLEAN NOT NULL DEFAULT FALSE,
    is_error_status BOOLEAN NOT NULL DEFAULT FALSE,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_ddex_processing_statuses_code (status_code),
    INDEX idx_ddex_processing_statuses_final (is_final_status),
    INDEX idx_ddex_processing_statuses_error (is_error_status),
    INDEX idx_ddex_processing_statuses_active (is_active)
);

INSERT INTO ddex_processing_statuses (status_code, status_name, description, is_final_status, is_error_status) VALUES
('RECEIVED', 'Received', 'Message received and queued', FALSE, FALSE),
('VALIDATING', 'Validating', 'Message validation in progress', FALSE, FALSE),
('VALIDATED', 'Validated', 'Message passed validation', FALSE, FALSE),
('PROCESSING', 'Processing', 'Message processing in progress', FALSE, FALSE),
('PROCESSED', 'Processed', 'Message successfully processed', TRUE, FALSE),
('XML_GENERATED', 'XML Generated', 'XML content generated successfully', FALSE, FALSE),
('TRANSMITTED', 'Transmitted', 'Message transmitted to recipient', TRUE, FALSE),
('ACKNOWLEDGED', 'Acknowledged', 'Message acknowledged by recipient', TRUE, FALSE),
('VALIDATION_FAILED', 'Validation Failed', 'Message failed validation', TRUE, TRUE),
('PROCESSING_FAILED', 'Processing Failed', 'Message processing failed', TRUE, TRUE),
('TRANSMISSION_FAILED', 'Transmission Failed', 'Message transmission failed', TRUE, TRUE),
('RETRY_SCHEDULED', 'Retry Scheduled', 'Message scheduled for retry', FALSE, FALSE);

-- DDEX Validation Statuses
CREATE TABLE IF NOT EXISTS ddex_validation_statuses (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    status_code VARCHAR(50) NOT NULL UNIQUE,
    status_name VARCHAR(100) NOT NULL,
    description TEXT NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    INDEX idx_ddex_validation_statuses_code (status_code),
    INDEX idx_ddex_validation_statuses_active (is_active)
);

INSERT INTO ddex_validation_statuses (status_code, status_name, description) VALUES
('PENDING', 'Pending', 'Validation not yet started'),
('VALIDATING', 'Validating', 'Validation in progress'),
('PASSED', 'Passed', 'Validation passed successfully'),
('FAILED', 'Failed', 'Validation failed'),
('WARNING', 'Warning', 'Validation passed with warnings');


-- =============================================
-- REFERENCE GUIDE FOR ALLOWED VALUES
-- =============================================

-- investment_type: PRE_RELEASE, POST_RELEASE, SECONDARY, CROWDFUND
-- investment_tier: BRONZE, SILVER, GOLD, PLATINUM, DIAMOND
-- status (investment): PENDING, CONFIRMED, FAILED, REFUNDED, MATURED
-- verification_status: PENDING, VERIFIED, REJECTED, EXPIRED
-- verification_level: BASIC, ENHANCED, ACCREDITED
-- risk_tolerance: CONSERVATIVE, MODERATE, AGGRESSIVE
-- aml_check_status: PENDING, CLEARED, FLAGGED, BLOCKED
-- token_standard: ERC20, ERC1155, SPL, BEP20
-- distribution_frequency: REAL_TIME, DAILY, WEEKLY, MONTHLY, QUARTERLY
-- offering_type: PRIVATE_SALE, PUBLIC_SALE, CROWDFUND, AUCTION, BONDING_CURVE
-- pricing_model: FIXED, DUTCH_AUCTION, BONDING_CURVE, DYNAMIC
-- distribution_type: AUTOMATIC, MANUAL, CLAIM_BASED
-- distribution_status: CALCULATING, READY, IN_PROGRESS, COMPLETED, FAILED
-- calculation_type: REVENUE_SHARE, PROFIT_SHARE, MILESTONE, BONUS
-- performance_tier: TOP_1, TOP_5, TOP_10, TOP_25, AVERAGE, BELOW_AVERAGE
-- wallet_type: CUSTODIAL, NON_CUSTODIAL, HARDWARE, MULTI_SIG
-- market_type: ORDER_BOOK, AMM, AUCTION, OTC
-- pool_type: UNISWAP_V2, UNISWAP_V3, BALANCER, CURVE, CUSTOM
-- agreement_type: SAFE, TOKEN_PURCHASE, REVENUE_SHARE, CONVERTIBLE_NOTE
-- dispute_resolution: ARBITRATION, COURT, MEDIATION
-- trigger_type: DATE, STREAMS, REVENUE, DELIVERABLE, MANUAL
-- verification_method: AUTOMATIC, ORACLE, MANUAL, DAO_VOTE
-- vote_choice: FOR, AGAINST, ABSTAIN
-- period_type: DAILY, WEEKLY, MONTHLY, QUARTERLY, ANNUAL
-- curve_type: LINEAR, POLYNOMIAL, EXPONENTIAL, SIGMOID, CUSTOM
-- referee_status: REGISTERED, KYC_COMPLETE, INVESTED, ACTIVE

-- =====================================================
-- SECTION 29: COMPLIANCE
-- =====================================================

-- Table: compliance_framework
CREATE TABLE compliance_framework (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    full_name VARCHAR(500),
    jurisdiction_scope VARCHAR(100), -- 'global', 'regional', 'national'
    framework_type VARCHAR(100), -- 'data_protection', 'copyright', 'accessibility', 'industry_specific'
    effective_date DATE,
    enforcement_date DATE,
    description TEXT,
    key_principles TEXT,
    regulatory_body VARCHAR(500),
    penalties_info TEXT,
    official_url VARCHAR(500),
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 999,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_framework_type (framework_type),
    INDEX idx_active_scope (is_active, jurisdiction_scope),
    INDEX idx_code (code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO compliance_framework (code, name, full_name, jurisdiction_scope, framework_type, effective_date, enforcement_date, description, regulatory_body, official_url, display_order) VALUES
('GDPR', 'GDPR', 'General Data Protection Regulation', 'regional', 'data_protection', '2016-04-27', '2018-05-25', 'EU data protection and privacy regulation', 'European Data Protection Board (EDPB)', 'https://gdpr.eu', 1),
('CCPA', 'CCPA', 'California Consumer Privacy Act', 'national', 'data_protection', '2018-06-28', '2020-01-01', 'California state privacy law', 'California Privacy Protection Agency', 'https://oag.ca.gov/privacy/ccpa', 2),
('LGPD', 'LGPD', 'Lei Geral de Proteção de Dados', 'national', 'data_protection', '2018-08-14', '2020-09-18', 'Brazilian General Data Protection Law', 'ANPD - Brazilian Data Protection Authority', 'https://www.gov.br/anpd', 3),
('PIPEDA', 'PIPEDA', 'Personal Information Protection and Electronic Documents Act', 'national', 'data_protection', '2000-04-13', '2001-01-01', 'Canadian federal privacy law', 'Office of the Privacy Commissioner of Canada', 'https://www.priv.gc.ca', 4),
('APPI', 'APPI', 'Act on the Protection of Personal Information', 'national', 'data_protection', '2003-05-30', '2005-04-01', 'Japanese personal information protection act', 'Personal Information Protection Commission', 'https://www.ppc.go.jp', 5),
('POPIA', 'POPIA', 'Protection of Personal Information Act', 'national', 'data_protection', '2013-11-26', '2021-07-01', 'South African data protection act', 'Information Regulator', 'https://www.justice.gov.za/inforeg', 6),
('PDPA_SG', 'PDPA Singapore', 'Personal Data Protection Act', 'national', 'data_protection', '2012-10-15', '2014-07-02', 'Singapore personal data protection act', 'PDPC - Personal Data Protection Commission', 'https://www.pdpc.gov.sg', 7),
('DMCA', 'DMCA', 'Digital Millennium Copyright Act', 'national', 'copyright', '1998-10-28', '1998-10-28', 'US copyright law for digital media', 'US Copyright Office', 'https://www.copyright.gov/dmca', 8),
('EUCD', 'EU Copyright Directive', 'Directive on Copyright in the Digital Single Market', 'regional', 'copyright', '2019-04-17', '2021-06-07', 'EU copyright framework for digital market', 'European Commission', 'https://eur-lex.europa.eu', 9),
('WCAG21', 'WCAG 2.1', 'Web Content Accessibility Guidelines 2.1', 'global', 'accessibility', '2018-06-05', '2018-06-05', 'W3C accessibility standards', 'W3C', 'https://www.w3.org/WAI/WCAG21', 10),
('ADA', 'ADA', 'Americans with Disabilities Act', 'national', 'accessibility', '1990-07-26', '1992-01-26', 'US disability rights law', 'US Department of Justice', 'https://www.ada.gov', 11),
('COPPA', 'COPPA', 'Children\'s Online Privacy Protection Act', 'national', 'data_protection', '1998-10-21', '2000-04-21', 'US children privacy protection', 'Federal Trade Commission', 'https://www.ftc.gov/coppa', 12),
('CAN_SPAM', 'CAN-SPAM', 'Controlling the Assault of Non-Solicited Pornography And Marketing Act', 'national', 'data_protection', '2003-12-16', '2004-01-01', 'US anti-spam law', 'Federal Trade Commission', 'https://www.ftc.gov', 13),
('CPRA', 'CPRA', 'California Privacy Rights Act', 'national', 'data_protection', '2020-11-03', '2023-01-01', 'Enhanced California privacy law', 'California Privacy Protection Agency', 'https://cppa.ca.gov', 14),
('VCDPA', 'VCDPA', 'Virginia Consumer Data Protection Act', 'national', 'data_protection', '2021-03-02', '2023-01-01', 'Virginia state privacy law', 'Virginia Attorney General', 'https://www.oag.state.va.us', 15);

-- Table: legal_jurisdiction
CREATE TABLE legal_jurisdiction (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    jurisdiction_type VARCHAR(50), -- 'country', 'state', 'province', 'region'
    parent_jurisdiction_id INT UNSIGNED,
    country_code CHAR(2),
    region_code VARCHAR(10),
    legal_system VARCHAR(100), -- 'common_law', 'civil_law', 'mixed'
    copyright_convention VARCHAR(200), -- 'berne', 'ucc', 'trips', 'wct'
    data_protection_framework_id INT UNSIGNED,
    copyright_term_rule_id INT UNSIGNED,
    moral_rights_recognized BOOLEAN DEFAULT TRUE,
    fair_use_doctrine VARCHAR(50), -- 'fair_use', 'fair_dealing', 'none'
    privacy_shield_adequate BOOLEAN DEFAULT FALSE,
    gdpr_adequate BOOLEAN DEFAULT FALSE,
    time_zone VARCHAR(50),
    official_languages JSON,
    currency_code CHAR(3),
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (parent_jurisdiction_id) REFERENCES legal_jurisdiction(id),
    FOREIGN KEY (data_protection_framework_id) REFERENCES compliance_framework(id),
    INDEX idx_country_code (country_code),
    INDEX idx_jurisdiction_type (jurisdiction_type),
    INDEX idx_parent (parent_jurisdiction_id),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO legal_jurisdiction (code, name, jurisdiction_type, country_code, legal_system, copyright_convention, moral_rights_recognized, fair_use_doctrine, privacy_shield_adequate, gdpr_adequate, time_zone, official_languages, currency_code) VALUES
('US', 'United States', 'country', 'US', 'common_law', 'berne,ucc,trips,wct', FALSE, 'fair_use', FALSE, FALSE, 'America/New_York', '["en"]', 'USD'),
('EU', 'European Union', 'region', NULL, 'mixed', 'berne,trips,wct', TRUE, 'fair_dealing', TRUE, TRUE, 'Europe/Brussels', '["en","fr","de","es","it","nl","pl"]', 'EUR'),
('UK', 'United Kingdom', 'country', 'GB', 'common_law', 'berne,trips,wct', TRUE, 'fair_dealing', TRUE, TRUE, 'Europe/London', '["en"]', 'GBP'),
('CA', 'Canada', 'country', 'CA', 'mixed', 'berne,ucc,trips,wct', TRUE, 'fair_dealing', FALSE, TRUE, 'America/Toronto', '["en","fr"]', 'CAD'),
('AU', 'Australia', 'country', 'AU', 'common_law', 'berne,trips,wct', TRUE, 'fair_dealing', FALSE, FALSE, 'Australia/Sydney', '["en"]', 'AUD'),
('JP', 'Japan', 'country', 'JP', 'civil_law', 'berne,ucc,trips,wct', TRUE, 'none', FALSE, TRUE, 'Asia/Tokyo', '["ja"]', 'JPY'),
('BR', 'Brazil', 'country', 'BR', 'civil_law', 'berne,trips,wct', TRUE, 'none', FALSE, FALSE, 'America/Sao_Paulo', '["pt"]', 'BRL'),
('DE', 'Germany', 'country', 'DE', 'civil_law', 'berne,trips,wct', TRUE, 'fair_dealing', TRUE, TRUE, 'Europe/Berlin', '["de"]', 'EUR'),
('FR', 'France', 'country', 'FR', 'civil_law', 'berne,trips,wct', TRUE, 'fair_dealing', TRUE, TRUE, 'Europe/Paris', '["fr"]', 'EUR'),
('IN', 'India', 'country', 'IN', 'common_law', 'berne,trips,wct', TRUE, 'fair_dealing', FALSE, FALSE, 'Asia/Kolkata', '["hi","en"]', 'INR'),
('CN', 'China', 'country', 'CN', 'civil_law', 'berne,trips,wct', TRUE, 'none', FALSE, FALSE, 'Asia/Shanghai', '["zh"]', 'CNY'),
('KR', 'South Korea', 'country', 'KR', 'civil_law', 'berne,trips,wct', TRUE, 'none', FALSE, TRUE, 'Asia/Seoul', '["ko"]', 'KRW'),
('MX', 'Mexico', 'country', 'MX', 'civil_law', 'berne,trips,wct', TRUE, 'none', FALSE, FALSE, 'America/Mexico_City', '["es"]', 'MXN'),
('SG', 'Singapore', 'country', 'SG', 'common_law', 'berne,trips,wct', TRUE, 'fair_dealing', FALSE, FALSE, 'Asia/Singapore', '["en","zh","ms","ta"]', 'SGD'),
('ZA', 'South Africa', 'country', 'ZA', 'mixed', 'berne,trips,wct', TRUE, 'fair_dealing', FALSE, FALSE, 'Africa/Johannesburg', '["en","af","zu","xh"]', 'ZAR');

-- Table: copyright_term_rule
CREATE TABLE copyright_term_rule (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    work_type VARCHAR(100), -- 'musical_work', 'sound_recording', 'literary_work', 'audiovisual'
    term_calculation VARCHAR(100), -- 'life_plus', 'fixed_term', 'publication_plus'
    base_term_years INT,
    life_plus_years INT,
    corporate_work_years INT,
    anonymous_work_years INT,
    sound_recording_years INT,
    performance_years INT,
    broadcast_years INT,
    publication_required BOOLEAN DEFAULT FALSE,
    registration_required BOOLEAN DEFAULT FALSE,
    renewal_required BOOLEAN DEFAULT FALSE,
    special_conditions TEXT,
    effective_date DATE,
    notes TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_work_type (work_type),
    INDEX idx_term_calc (term_calculation),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO copyright_term_rule (code, name, work_type, term_calculation, life_plus_years, corporate_work_years, anonymous_work_years, sound_recording_years, performance_years, broadcast_years, publication_required, registration_required, notes) VALUES
('US_GENERAL', 'US General Copyright Term', 'musical_work', 'life_plus', 70, 95, 95, 95, 0, 0, FALSE, FALSE, 'Life + 70 years, or 95 years from publication for works made for hire'),
('EU_GENERAL', 'EU General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 70, 50, 50, FALSE, FALSE, 'Life + 70 years harmonized across EU'),
('UK_GENERAL', 'UK General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 70, 50, 50, FALSE, FALSE, 'Life + 70 years, 50 years for sound recordings'),
('CA_GENERAL', 'Canada General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 75, 50, 50, FALSE, FALSE, 'Life + 70 years as of 2022'),
('AU_GENERAL', 'Australia General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 70, 50, 50, FALSE, FALSE, 'Life + 70 years'),
('JP_GENERAL', 'Japan General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 70, 70, 50, FALSE, FALSE, 'Life + 70 years as of 2018'),
('BR_GENERAL', 'Brazil General Copyright Term', 'musical_work', 'life_plus', 70, 70, 70, 70, 70, 70, FALSE, FALSE, 'Life + 70 years'),
('IN_GENERAL', 'India General Copyright Term', 'musical_work', 'life_plus', 60, 60, 60, 60, 50, 25, FALSE, FALSE, 'Life + 60 years'),
('CN_GENERAL', 'China General Copyright Term', 'musical_work', 'life_plus', 50, 50, 50, 50, 50, 50, FALSE, FALSE, 'Life + 50 years'),
('MX_GENERAL', 'Mexico General Copyright Term', 'musical_work', 'life_plus', 100, 100, 100, 75, 75, 50, FALSE, FALSE, 'Life + 100 years, longest in world');

-- Table: fair_use_category
CREATE TABLE fair_use_category (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    jurisdiction_id INT UNSIGNED,
    category_type VARCHAR(100), -- 'criticism', 'comment', 'news', 'teaching', 'research', 'parody'
    description TEXT,
    factors_considered TEXT,
    examples TEXT,
    limitations TEXT,
    case_law_references TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_category_type (category_type),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO fair_use_category (code, name, jurisdiction_id, category_type, description, factors_considered) VALUES
('US_CRITICISM', 'Criticism and Comment', 1, 'criticism', 'Use for criticism, comment, or review', 'Purpose and character of use, nature of work, amount used, effect on market'),
('US_NEWS', 'News Reporting', 1, 'news', 'Use in news reporting', 'Transformative nature, public interest, commercial vs non-commercial'),
('US_TEACHING', 'Teaching', 1, 'teaching', 'Use for teaching in nonprofit educational institutions', 'Educational purpose, nonprofit nature, classroom use'),
('US_RESEARCH', 'Scholarship and Research', 1, 'research', 'Use for scholarship or research', 'Academic purpose, transformative use, attribution'),
('US_PARODY', 'Parody', 1, 'parody', 'Use for parody or satire', 'Transformative nature, commentary on original, commercial impact'),
('UK_CRITICISM', 'Criticism and Review', 3, 'criticism', 'Fair dealing for criticism or review', 'Sufficient acknowledgement, work made available to public'),
('UK_NEWS', 'News Reporting', 3, 'news', 'Fair dealing for reporting current events', 'Sufficient acknowledgement except for photographs'),
('UK_RESEARCH', 'Research and Private Study', 3, 'research', 'Fair dealing for non-commercial research', 'Non-commercial purpose, sufficient acknowledgement'),
('CA_RESEARCH', 'Research and Private Study', 4, 'research', 'Fair dealing for research or private study', 'Purpose, character, amount, alternatives, nature, effect'),
('CA_CRITICISM', 'Criticism and Review', 4, 'criticism', 'Fair dealing for criticism or review', 'Mention of source and author required');

-- Table: data_category
CREATE TABLE data_category (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    category_type VARCHAR(100), -- 'personal', 'sensitive', 'financial', 'behavioral', 'technical'
    gdpr_category VARCHAR(100), -- 'personal_data', 'special_category', 'criminal_data'
    ccpa_category VARCHAR(100),
    description TEXT,
    examples TEXT,
    requires_explicit_consent BOOLEAN DEFAULT FALSE,
    enhanced_protection BOOLEAN DEFAULT FALSE,
    encryption_required BOOLEAN DEFAULT FALSE,
    retention_limitation_days INT,
    purpose_limitation TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category_type (category_type),
    INDEX idx_gdpr_category (gdpr_category),
    INDEX idx_protection_level (enhanced_protection, encryption_required),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_category (code, name, category_type, gdpr_category, ccpa_category, description, examples, requires_explicit_consent, enhanced_protection, encryption_required) VALUES
('PERSONAL_ID', 'Personal Identifiers', 'personal', 'personal_data', 'identifiers', 'Data that directly identifies an individual', 'Name, email, phone, address, ID numbers', FALSE, FALSE, TRUE),
('FINANCIAL', 'Financial Information', 'financial', 'personal_data', 'financial', 'Financial account and payment data', 'Bank accounts, credit cards, payment history', TRUE, TRUE, TRUE),
('SENSITIVE', 'Sensitive Personal Data', 'sensitive', 'special_category', 'sensitive', 'Special category data requiring extra protection', 'Race, religion, health, sexual orientation', TRUE, TRUE, TRUE),
('BIOMETRIC', 'Biometric Data', 'sensitive', 'special_category', 'biometric', 'Biological characteristics data', 'Fingerprints, facial recognition, voice patterns', TRUE, TRUE, TRUE),
('LOCATION', 'Location Data', 'behavioral', 'personal_data', 'geolocation', 'Geographic location information', 'GPS coordinates, IP location, physical address', TRUE, FALSE, TRUE),
('BEHAVIORAL', 'Behavioral Data', 'behavioral', 'personal_data', 'inferences', 'Data about user behavior and preferences', 'Browsing history, purchase patterns, preferences', FALSE, FALSE, FALSE),
('PROFESSIONAL', 'Professional Information', 'personal', 'personal_data', 'professional', 'Employment and professional data', 'Job title, employer, work history, skills', FALSE, FALSE, TRUE),
('COMMUNICATION', 'Communication Data', 'personal', 'personal_data', 'electronic_network', 'Electronic communications content', 'Emails, messages, call logs', TRUE, TRUE, TRUE),
('TECHNICAL', 'Technical Data', 'technical', 'personal_data', 'internet_activity', 'Device and browser information', 'IP address, cookies, device IDs, user agent', FALSE, FALSE, FALSE),
('MINORS', 'Minor\'s Data', 'sensitive', 'special_category', 'minor', 'Data relating to children under 16/18', 'Any personal data of minors', TRUE, TRUE, TRUE);

-- Table: data_retention_policy
CREATE TABLE data_retention_policy (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(200) NOT NULL,
    jurisdiction_id INT UNSIGNED,
    data_category_id INT UNSIGNED,
    retention_period_days INT,
    retention_period_description VARCHAR(500),
    legal_basis VARCHAR(200),
    deletion_method VARCHAR(100), -- 'hard_delete', 'anonymization', 'pseudonymization'
    review_period_days INT,
    exceptions TEXT,
    automated_deletion BOOLEAN DEFAULT FALSE,
    requires_approval BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    FOREIGN KEY (data_category_id) REFERENCES data_category(id),
    INDEX idx_jurisdiction_category (jurisdiction_id, data_category_id),
    INDEX idx_retention_period (retention_period_days),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_jurisdiction_category (jurisdiction_id, data_category_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_retention_policy (code, name, jurisdiction_id, data_category_id, retention_period_days, retention_period_description, legal_basis, deletion_method, review_period_days, automated_deletion) VALUES
('EU_PERSONAL_ID', 'EU Personal Identifiers Retention', 2, 1, 2190, '6 years after last activity', 'Legitimate interest, legal obligation', 'anonymization', 365, TRUE),
('EU_FINANCIAL', 'EU Financial Data Retention', 2, 2, 3650, '10 years for tax compliance', 'Legal obligation', 'hard_delete', 365, FALSE),
('EU_SENSITIVE', 'EU Sensitive Data Retention', 2, 3, 1095, '3 years maximum unless consent renewed', 'Explicit consent', 'hard_delete', 180, TRUE),
('US_PERSONAL_ID', 'US Personal Identifiers Retention', 1, 1, 2555, '7 years standard retention', 'Business records', 'anonymization', 365, FALSE),
('US_FINANCIAL', 'US Financial Data Retention', 1, 2, 2555, '7 years for IRS requirements', 'Legal obligation', 'hard_delete', 365, FALSE),
('CA_PERSONAL_ID', 'Canada Personal Identifiers Retention', 4, 1, 2190, '6 years after relationship ends', 'PIPEDA requirements', 'hard_delete', 365, TRUE),
('UK_BIOMETRIC', 'UK Biometric Data Retention', 3, 4, 90, '3 months maximum', 'Explicit consent required', 'hard_delete', 30, TRUE),
('BR_PERSONAL_ID', 'Brazil Personal Identifiers Retention', 7, 1, 1825, '5 years after processing ends', 'LGPD compliance', 'anonymization', 180, TRUE),
('JP_PERSONAL_ID', 'Japan Personal Identifiers Retention', 6, 1, 1825, '5 years standard retention', 'APPI compliance', 'hard_delete', 365, FALSE),
('EU_MINORS', 'EU Minor Data Retention', 2, 10, 365, '1 year maximum, parental consent review', 'Parental consent', 'hard_delete', 90, TRUE);

-- Table: privacy_consent_type
CREATE TABLE privacy_consent_type (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    consent_category VARCHAR(100), -- 'processing', 'marketing', 'cookies', 'third_party', 'international_transfer'
    description TEXT,
    requirements TEXT,
    withdrawal_method VARCHAR(200),
    granular_options JSON,
    requires_explicit_action BOOLEAN DEFAULT TRUE,
    requires_double_optin BOOLEAN DEFAULT FALSE,
    age_verification_required BOOLEAN DEFAULT FALSE,
    renewal_period_days INT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_consent_category (consent_category),
    INDEX idx_requirements (requires_explicit_action, requires_double_optin),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO privacy_consent_type (code, name, consent_category, description, requirements, withdrawal_method, requires_explicit_action, requires_double_optin) VALUES
('ESSENTIAL_PROCESSING', 'Essential Data Processing', 'processing', 'Consent for essential service operation', 'Clear purpose, specific use, freely given', 'Account settings, email request', TRUE, FALSE),
('MARKETING_EMAIL', 'Email Marketing', 'marketing', 'Consent for promotional emails', 'Separate opt-in, clear description', 'Unsubscribe link, preference center', TRUE, TRUE),
('MARKETING_SMS', 'SMS Marketing', 'marketing', 'Consent for promotional SMS', 'Explicit opt-in, frequency disclosure', 'Text STOP, preference center', TRUE, TRUE),
('ANALYTICS_COOKIES', 'Analytics Cookies', 'cookies', 'Consent for analytics tracking', 'Cookie banner, granular control', 'Cookie settings, browser controls', TRUE, FALSE),
('THIRD_PARTY_SHARING', 'Third Party Data Sharing', 'third_party', 'Consent to share with partners', 'Named parties, specific purposes', 'Account settings, written request', TRUE, FALSE),
('INTERNATIONAL_TRANSFER', 'International Data Transfer', 'international_transfer', 'Consent for cross-border transfer', 'Country disclosure, risk information', 'Written request, account deletion', TRUE, FALSE),
('BEHAVIORAL_ADVERTISING', 'Behavioral Advertising', 'marketing', 'Consent for targeted advertising', 'Clear explanation, opt-out option', 'Ad preferences, industry opt-out', TRUE, FALSE),
('SENSITIVE_DATA', 'Sensitive Data Processing', 'processing', 'Explicit consent for special categories', 'Written or clear affirmative action', 'Written withdrawal, immediate effect', TRUE, FALSE),
('MINOR_CONSENT', 'Minor Data Processing', 'processing', 'Parental consent for minors', 'Age verification, parental approval', 'Parent request, immediate deletion', TRUE, TRUE),
('BIOMETRIC_PROCESSING', 'Biometric Data Processing', 'processing', 'Consent for biometric data use', 'Explicit written consent, specific use', 'Written request, complete deletion', TRUE, TRUE);

-- Table: data_processing_purpose
CREATE TABLE data_processing_purpose (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    purpose_category VARCHAR(100), -- 'service_delivery', 'legal_compliance', 'legitimate_interest', 'consent', 'vital_interest'
    legal_basis VARCHAR(100), -- GDPR Article 6 basis
    description TEXT,
    examples TEXT,
    requires_consent BOOLEAN DEFAULT FALSE,
    requires_lia BOOLEAN DEFAULT FALSE, -- Legitimate Interest Assessment
    retention_period_days INT,
    data_minimization_notes TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_purpose_category (purpose_category),
    INDEX idx_legal_basis (legal_basis),
    INDEX idx_requirements (requires_consent, requires_lia),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_processing_purpose (code, name, purpose_category, legal_basis, description, requires_consent, requires_lia) VALUES
('SERVICE_PROVISION', 'Service Provision', 'service_delivery', 'contract', 'Processing necessary for service delivery', FALSE, FALSE),
('ACCOUNT_MANAGEMENT', 'Account Management', 'service_delivery', 'contract', 'User account creation and management', FALSE, FALSE),
('PAYMENT_PROCESSING', 'Payment Processing', 'service_delivery', 'contract', 'Processing payments and billing', FALSE, FALSE),
('LEGAL_COMPLIANCE', 'Legal Compliance', 'legal_compliance', 'legal_obligation', 'Compliance with laws and regulations', FALSE, FALSE),
('TAX_REPORTING', 'Tax Reporting', 'legal_compliance', 'legal_obligation', 'Tax calculation and reporting', FALSE, FALSE),
('FRAUD_PREVENTION', 'Fraud Prevention', 'legitimate_interest', 'legitimate_interests', 'Preventing fraudulent activities', FALSE, TRUE),
('SECURITY', 'Security and Safety', 'legitimate_interest', 'legitimate_interests', 'Platform security and user safety', FALSE, TRUE),
('ANALYTICS', 'Analytics and Improvement', 'legitimate_interest', 'legitimate_interests', 'Service analytics and improvements', FALSE, TRUE),
('MARKETING_DIRECT', 'Direct Marketing', 'consent', 'consent', 'Direct marketing communications', TRUE, FALSE),
('PROFILING', 'User Profiling', 'consent', 'consent', 'Creating user profiles for personalization', TRUE, FALSE);

-- Table: data_subject_right
CREATE TABLE data_subject_right (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    framework_id INT UNSIGNED,
    right_category VARCHAR(100), -- 'access', 'rectification', 'erasure', 'portability', 'objection'
    description TEXT,
    response_deadline_days INT DEFAULT 30,
    can_extend_deadline BOOLEAN DEFAULT TRUE,
    extension_days INT DEFAULT 30,
    exceptions TEXT,
    verification_required BOOLEAN DEFAULT TRUE,
    fee_allowed BOOLEAN DEFAULT FALSE,
    automated_fulfillment BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_framework (framework_id),
    INDEX idx_right_category (right_category),
    INDEX idx_automated (automated_fulfillment),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_subject_right (code, name, framework_id, right_category, description, response_deadline_days, can_extend_deadline, verification_required) VALUES
('GDPR_ACCESS', 'Right of Access', 1, 'access', 'Right to obtain copy of personal data', 30, TRUE, TRUE),
('GDPR_RECTIFICATION', 'Right to Rectification', 1, 'rectification', 'Right to correct inaccurate data', 30, TRUE, TRUE),
('GDPR_ERASURE', 'Right to Erasure', 1, 'erasure', 'Right to be forgotten', 30, TRUE, TRUE),
('GDPR_PORTABILITY', 'Right to Data Portability', 1, 'portability', 'Right to receive data in portable format', 30, TRUE, TRUE),
('GDPR_OBJECTION', 'Right to Object', 1, 'objection', 'Right to object to processing', 30, FALSE, TRUE),
('GDPR_RESTRICTION', 'Right to Restrict Processing', 1, 'restriction', 'Right to limit processing', 30, TRUE, TRUE),
('CCPA_ACCESS', 'Right to Know', 2, 'access', 'Right to know what data is collected', 45, TRUE, TRUE),
('CCPA_DELETE', 'Right to Delete', 2, 'erasure', 'Right to request deletion', 45, TRUE, TRUE),
('CCPA_OPTOUT', 'Right to Opt-Out', 2, 'objection', 'Right to opt-out of sale', 15, FALSE, FALSE),
('CCPA_NONDISCRIM', 'Right to Non-Discrimination', 2, 'nondiscrimination', 'Right to equal service', 0, FALSE, FALSE);

-- Table: breach_notification_requirement
CREATE TABLE breach_notification_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    framework_id INT UNSIGNED,
    jurisdiction_id INT UNSIGNED,
    name VARCHAR(200) NOT NULL,
    breach_threshold VARCHAR(200), -- 'any_breach', 'risk_based', 'harm_based'
    authority_notification_hours INT,
    individual_notification_hours INT,
    public_notification_required BOOLEAN DEFAULT FALSE,
    public_notification_threshold TEXT,
    notification_contents TEXT,
    documentation_requirements TEXT,
    penalty_structure TEXT,
    exceptions TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_framework (framework_id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_notification_time (authority_notification_hours),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_framework_jurisdiction (framework_id, jurisdiction_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO breach_notification_requirement (code, framework_id, jurisdiction_id, name, breach_threshold, authority_notification_hours, individual_notification_hours, public_notification_required, notification_contents) VALUES
('GDPR_BREACH', 1, 2, 'GDPR Breach Notification', 'risk_based', 72, 72, FALSE, 'Nature of breach, categories of data, number affected, consequences, measures taken'),
('CCPA_BREACH', 2, 1, 'CCPA Breach Notification', 'harm_based', NULL, NULL, TRUE, 'Nature of breach, type of information, general description of incident'),
('LGPD_BREACH', 3, 7, 'LGPD Breach Notification', 'risk_based', NULL, 72, FALSE, 'Description of nature, data subjects affected, security measures, risk assessment'),
('PIPEDA_BREACH', 4, 4, 'PIPEDA Breach Notification', 'harm_based', NULL, NULL, TRUE, 'Circumstances, data involved, harm assessment, mitigation steps'),
('APPI_BREACH', 5, 6, 'APPI Breach Notification', 'any_breach', NULL, NULL, TRUE, 'Facts of breach, data categories, number affected, response measures'),
('HIPAA_BREACH', NULL, 1, 'HIPAA Breach Notification', 'harm_based', 1440, 1440, TRUE, 'Healthcare specific requirements'),
('PCI_DSS_BREACH', NULL, NULL, 'PCI DSS Breach Notification', 'any_breach', 24, NULL, FALSE, 'Payment card data breach requirements'),
('GLBA_BREACH', NULL, 1, 'GLBA Breach Notification', 'risk_based', NULL, NULL, FALSE, 'Financial data breach requirements'),
('STATE_BREACH_CA', NULL, 1, 'California Breach Notification', 'any_breach', NULL, NULL, TRUE, 'California state specific requirements'),
('STATE_BREACH_NY', NULL, 1, 'New York Breach Notification', 'harm_based', NULL, NULL, TRUE, 'New York state specific requirements');

-- Table: cross_border_transfer_mechanism
CREATE TABLE cross_border_transfer_mechanism (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    mechanism_type VARCHAR(100), -- 'adequacy', 'scc', 'bcr', 'consent', 'derogation'
    framework_id INT UNSIGNED,
    description TEXT,
    requirements TEXT,
    documentation_needed TEXT,
    approval_required BOOLEAN DEFAULT FALSE,
    approval_authority VARCHAR(500),
    validity_period_days INT,
    review_required BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_mechanism_type (mechanism_type),
    INDEX idx_framework (framework_id),
    INDEX idx_approval (approval_required),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO cross_border_transfer_mechanism (code, name, mechanism_type, framework_id, description, requirements, approval_required) VALUES
('EU_ADEQUACY', 'EU Adequacy Decision', 'adequacy', 1, 'European Commission adequacy decision', 'Country provides adequate protection', FALSE),
('EU_SCC', 'EU Standard Contractual Clauses', 'scc', 1, 'EU approved contract clauses', 'Signed SCCs, transfer impact assessment', FALSE),
('EU_BCR', 'Binding Corporate Rules', 'bcr', 1, 'Intra-group transfer rules', 'DPA approval, comprehensive policies', TRUE),
('GDPR_CONSENT', 'Explicit Consent', 'consent', 1, 'Individual explicit consent for transfer', 'Informed consent, specific countries', FALSE),
('GDPR_CONTRACT', 'Contract Performance', 'derogation', 1, 'Necessary for contract', 'Transfer necessary for contract with individual', FALSE),
('APEC_CBPR', 'APEC Cross-Border Privacy Rules', 'cbpr', NULL, 'Asia-Pacific privacy framework', 'CBPR certification', TRUE),
('PRIVACY_SHIELD', 'EU-US Privacy Shield (Invalidated)', 'adequacy', 1, 'Former EU-US transfer mechanism', 'No longer valid after Schrems II', FALSE),
('UK_ADEQUACY', 'UK Adequacy Decision', 'adequacy', NULL, 'UK specific adequacy decisions', 'Country provides adequate protection', FALSE),
('LGPD_CLAUSES', 'LGPD Standard Clauses', 'scc', 3, 'Brazil standard contractual clauses', 'ANPD approved clauses', FALSE),
('CONSENT_TRANSFER', 'Consent-Based Transfer', 'consent', NULL, 'Generic consent mechanism', 'Clear, specific, informed consent', FALSE);

-- Table: industry_regulation
CREATE TABLE industry_regulation (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    industry_sector VARCHAR(100), -- 'music', 'entertainment', 'digital_media', 'broadcasting'
    regulation_type VARCHAR(100), -- 'licensing', 'royalty', 'content', 'distribution'
    jurisdiction_id INT UNSIGNED,
    description TEXT,
    key_requirements TEXT,
    licensing_body VARCHAR(500),
    compliance_deadline DATE,
    penalties TEXT,
    related_frameworks JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_industry_sector (industry_sector),
    INDEX idx_regulation_type (regulation_type),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO industry_regulation (code, name, industry_sector, regulation_type, jurisdiction_id, description, key_requirements, licensing_body) VALUES
('MMA', 'Music Modernization Act', 'music', 'licensing', 1, 'US music licensing reform', 'Mechanical licensing, pre-1972 recordings', 'US Copyright Office, MLC'),
('CRB', 'Copyright Royalty Board', 'music', 'royalty', 1, 'US royalty rate setting', 'Statutory royalty rates for digital services', 'Copyright Royalty Board'),
('EUCD_ARTICLE17', 'EU Copyright Directive Article 17', 'digital_media', 'content', 2, 'Platform liability for user content', 'Content filtering, licensing obligations', 'EU Member State Authorities'),
('ONLINE_HARMS', 'UK Online Safety Act', 'digital_media', 'content', 3, 'Online platform safety requirements', 'Content moderation, age verification', 'Ofcom'),
('CRTC_ONLINE', 'Canada Online Streaming Act', 'broadcasting', 'content', 4, 'Regulation of online streamers', 'Canadian content requirements', 'CRTC'),
('NMPA_LICENSING', 'NMPA Model Licensing', 'music', 'licensing', 1, 'Publisher mechanical licensing', 'Model license agreements', 'NMPA'),
('IFPI_STANDARDS', 'IFPI Digital Music Standards', 'music', 'distribution', NULL, 'International recording standards', 'Metadata, distribution standards', 'IFPI'),
('CISAC_RULES', 'CISAC Professional Rules', 'music', 'licensing', NULL, 'Collective management standards', 'Transparency, governance, distribution', 'CISAC'),
('WIPO_TREATIES', 'WIPO Copyright Treaties', 'music', 'licensing', NULL, 'International copyright standards', 'Digital rights, protection measures', 'WIPO'),
('DSP_AGREEMENTS', 'DSP Standard Agreements', 'music', 'distribution', NULL, 'Digital service provider terms', 'Content delivery, reporting, payment', 'Various DSPs');

-- Table: accessibility_standard
CREATE TABLE accessibility_standard (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    standard_version VARCHAR(50),
    standard_type VARCHAR(100), -- 'web_content', 'mobile_app', 'document', 'multimedia'
    level VARCHAR(20), -- 'A', 'AA', 'AAA'
    jurisdiction_id INT UNSIGNED,
    description TEXT,
    key_requirements TEXT,
    testing_criteria TEXT,
    compliance_deadline DATE,
    enforcement_body VARCHAR(500),
    penalties TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_standard_type (standard_type),
    INDEX idx_level (level),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO accessibility_standard (code, name, standard_version, standard_type, level, jurisdiction_id, description, key_requirements, enforcement_body) VALUES
('WCAG21_A', 'WCAG 2.1 Level A', '2.1', 'web_content', 'A', NULL, 'Basic web accessibility', 'Perceivable, Operable, Understandable, Robust', 'W3C'),
('WCAG21_AA', 'WCAG 2.1 Level AA', '2.1', 'web_content', 'AA', NULL, 'Standard web accessibility', 'Level A plus additional criteria', 'W3C'),
('WCAG21_AAA', 'WCAG 2.1 Level AAA', '2.1', 'web_content', 'AAA', NULL, 'Enhanced web accessibility', 'Highest level of accessibility', 'W3C'),
('ADA_TITLE_III', 'ADA Title III', NULL, 'web_content', 'AA', 1, 'US public accommodation', 'Equal access to goods and services', 'US DOJ'),
('SECTION_508', 'Section 508', '2018', 'web_content', 'AA', 1, 'US federal accessibility', 'Federal agency compliance', 'US Access Board'),
('EN301549', 'EN 301 549', '3.2.1', 'web_content', 'AA', 2, 'EU accessibility standard', 'ICT procurement requirements', 'EU Standards Bodies'),
('AODA', 'AODA', NULL, 'web_content', 'AA', 4, 'Ontario accessibility', 'Phased compliance requirements', 'Ontario Government'),
('JIS_X_8341', 'JIS X 8341', NULL, 'web_content', 'AA', 6, 'Japanese accessibility', 'Web content accessibility', 'JISC'),
('PDF_UA', 'PDF/UA', 'ISO 14289-1', 'document', 'AA', NULL, 'PDF accessibility', 'Tagged PDF requirements', 'ISO'),
('EPUB_ACCESSIBILITY', 'EPUB Accessibility', '1.1', 'document', 'AA', NULL, 'EPUB accessibility', 'Digital publication access', 'W3C');

-- Table: age_verification_requirement
CREATE TABLE age_verification_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    jurisdiction_id INT UNSIGNED,
    minimum_age INT NOT NULL,
    verification_type VARCHAR(100), -- 'self_declaration', 'soft_verification', 'hard_verification'
    verification_methods JSON,
    parental_consent_age INT,
    parental_consent_method VARCHAR(200),
    data_retention_days INT,
    special_categories JSON, -- Different ages for different content
    penalties TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_minimum_age (minimum_age),
    INDEX idx_verification_type (verification_type),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_jurisdiction_code (jurisdiction_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO age_verification_requirement (code, jurisdiction_id, minimum_age, verification_type, verification_methods, parental_consent_age, parental_consent_method, data_retention_days) VALUES
('US_COPPA', 1, 13, 'hard_verification', '["credit_card", "government_id", "knowledge_test"]', 13, 'Verifiable parental consent', 365),
('EU_GDPR', 2, 16, 'soft_verification', '["birthdate", "checkbox", "account_verification"]', 16, 'Parental responsibility holder consent', 730),
('UK_AADC', 3, 13, 'soft_verification', '["birthdate", "self_declaration"]', 13, 'Parental consent required', 365),
('CA_PIPEDA', 4, 13, 'soft_verification', '["birthdate", "terms_acceptance"]', 13, 'Meaningful consent from parent', 730),
('AU_PRIVACY', 5, 15, 'self_declaration', '["checkbox", "birthdate"]', 15, 'Parent or guardian consent', 365),
('JP_APPI', 6, 15, 'soft_verification', '["birthdate", "parent_email"]', 15, 'Legal representative consent', 1095),
('BR_LGPD', 7, 12, 'hard_verification', '["parent_id", "notarized_consent"]', 12, 'Specific parental consent', 365),
('KR_PIPA', 12, 14, 'hard_verification', '["i_pin", "mobile_verification"]', 14, 'Legal representative consent', 1095),
('FR_SPECIFIC', 9, 15, 'soft_verification', '["birthdate", "parental_control"]', 15, 'Parental authority consent', 730),
('DE_SPECIFIC', 8, 16, 'soft_verification', '["birthdate", "account_verification"]', 16, 'Parental consent until 16', 730);

-- Table: sanctions_list
CREATE TABLE sanctions_list (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    issuing_authority VARCHAR(200),
    list_type VARCHAR(100), -- 'comprehensive', 'targeted', 'sectoral'
    jurisdiction_id INT UNSIGNED,
    target_type VARCHAR(100), -- 'country', 'entity', 'individual', 'sector'
    description TEXT,
    restrictions JSON,
    last_updated DATE,
    review_frequency_days INT,
    penalties TEXT,
    api_endpoint VARCHAR(500),
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_list_type (list_type),
    INDEX idx_target_type (target_type),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_last_updated (last_updated),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO sanctions_list (code, name, issuing_authority, list_type, jurisdiction_id, target_type, description, last_updated, review_frequency_days) VALUES
('OFAC_SDN', 'OFAC SDN List', 'US Treasury OFAC', 'targeted', 1, 'entity', 'Specially Designated Nationals', CURDATE(), 1),
('EU_CONSOLIDATED', 'EU Consolidated List', 'European Commission', 'targeted', 2, 'entity', 'EU sanctions list', CURDATE(), 7),
('UK_CONSOLIDATED', 'UK Consolidated List', 'HM Treasury', 'targeted', 3, 'entity', 'UK sanctions list', CURDATE(), 7),
('UN_CONSOLIDATED', 'UN Security Council List', 'United Nations', 'targeted', NULL, 'entity', 'UN sanctions list', CURDATE(), 30),
('OFAC_COUNTRIES', 'OFAC Country Sanctions', 'US Treasury OFAC', 'comprehensive', 1, 'country', 'Comprehensively sanctioned countries', CURDATE(), 30),
('EU_ARMS_EMBARGO', 'EU Arms Embargo', 'European Commission', 'sectoral', 2, 'sector', 'Arms trade restrictions', CURDATE(), 90),
('AUSTRAC', 'AUSTRAC Sanctions', 'Australian Government', 'targeted', 5, 'entity', 'Australian sanctions', CURDATE(), 30),
('CANADA_SEMA', 'Canada SEMA List', 'Global Affairs Canada', 'targeted', 4, 'entity', 'Canadian sanctions', CURDATE(), 30),
('JAPAN_METI', 'Japan METI List', 'METI', 'targeted', 6, 'entity', 'Japanese sanctions', CURDATE(), 30),
('SWITZERLAND_SECO', 'Switzerland SECO List', 'SECO', 'targeted', NULL, 'entity', 'Swiss sanctions', CURDATE(), 30);

-- Table: cookie_category
CREATE TABLE cookie_category (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    category_type VARCHAR(50), -- 'necessary', 'functional', 'analytics', 'advertising'
    description TEXT,
    examples TEXT,
    requires_consent BOOLEAN DEFAULT TRUE,
    can_reject BOOLEAN DEFAULT TRUE,
    default_enabled BOOLEAN DEFAULT FALSE,
    retention_period VARCHAR(200),
    third_party BOOLEAN DEFAULT FALSE,
    purpose TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_category_type (category_type),
    INDEX idx_consent (requires_consent, can_reject),
    INDEX idx_third_party (third_party),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO cookie_category (code, name, category_type, description, examples, requires_consent, can_reject, default_enabled, retention_period, third_party) VALUES
('NECESSARY', 'Strictly Necessary', 'necessary', 'Essential for website operation', 'Session, authentication, security', FALSE, FALSE, TRUE, 'Session or up to 1 year', FALSE),
('FUNCTIONAL', 'Functional', 'functional', 'Enhanced functionality and personalization', 'Language, region, preferences', TRUE, TRUE, FALSE, '1 year typical', FALSE),
('ANALYTICS', 'Analytics', 'analytics', 'Usage statistics and performance', 'Google Analytics, Matomo', TRUE, TRUE, FALSE, '2 years typical', TRUE),
('ADVERTISING', 'Advertising', 'advertising', 'Targeted advertising and remarketing', 'Google Ads, Facebook Pixel', TRUE, TRUE, FALSE, '90 days typical', TRUE),
('SOCIAL_MEDIA', 'Social Media', 'advertising', 'Social media integration', 'Facebook, Twitter, LinkedIn widgets', TRUE, TRUE, FALSE, '2 years typical', TRUE),
('PERFORMANCE', 'Performance', 'analytics', 'Site performance monitoring', 'CDN cookies, load balancing', TRUE, TRUE, FALSE, '1 year typical', FALSE);

-- Table: audit_requirement
CREATE TABLE audit_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    framework_id INT UNSIGNED,
    name VARCHAR(200) NOT NULL,
    audit_type VARCHAR(100), -- 'internal', 'external', 'certification', 'regulatory'
    frequency_months INT,
    scope TEXT,
    auditor_requirements TEXT,
    documentation_required JSON,
    reporting_requirements TEXT,
    remediation_timeline_days INT,
    retention_period_years INT DEFAULT 7,
    is_mandatory BOOLEAN DEFAULT TRUE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_framework (framework_id),
    INDEX idx_audit_type (audit_type),
    INDEX idx_frequency (frequency_months),
    INDEX idx_mandatory (is_mandatory),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_framework_code (framework_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO audit_requirement (code, framework_id, name, audit_type, frequency_months, scope, auditor_requirements, remediation_timeline_days, is_mandatory) VALUES
('GDPR_DPO_AUDIT', 1, 'GDPR DPO Annual Audit', 'internal', 12, 'Data processing activities, consent, rights', 'DPO or qualified privacy professional', 90, TRUE),
('GDPR_SECURITY_AUDIT', 1, 'GDPR Security Audit', 'external', 24, 'Technical and organizational measures', 'ISO 27001 certified auditor', 60, TRUE),
('CCPA_PRIVACY_AUDIT', 2, 'CCPA Privacy Audit', 'internal', 12, 'Consumer rights, data inventory, opt-out', 'Privacy professional', 60, FALSE),
('SOC2_TYPE2', NULL, 'SOC 2 Type II', 'certification', 12, 'Security, availability, confidentiality', 'Licensed CPA firm', 90, FALSE),
('ISO27001_CERT', NULL, 'ISO 27001 Certification', 'certification', 36, 'Information security management', 'Accredited certification body', 90, FALSE),
('PCI_DSS_AUDIT', NULL, 'PCI DSS Audit', 'external', 12, 'Payment card data security', 'QSA certified auditor', 30, TRUE),
('LGPD_IMPACT', 3, 'LGPD Impact Assessment', 'internal', 24, 'High-risk processing activities', 'DPO or privacy expert', 60, TRUE),
('PIPEDA_REVIEW', 4, 'PIPEDA Compliance Review', 'internal', 24, 'Privacy policies and practices', 'Privacy officer', 90, FALSE),
('DMCA_COMPLIANCE', 8, 'DMCA Compliance Audit', 'internal', 12, 'Notice and takedown procedures', 'Legal or compliance team', 30, TRUE),
('ACCESSIBILITY_AUDIT', 10, 'WCAG 2.1 Audit', 'external', 24, 'Web accessibility compliance', 'Certified accessibility specialist', 180, FALSE);

-- Table: data_protection_impact_assessment
CREATE TABLE data_protection_impact_assessment (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    trigger_criteria VARCHAR(500),
    risk_level VARCHAR(50), -- 'low', 'medium', 'high', 'very_high'
    processing_type VARCHAR(200),
    assessment_required BOOLEAN DEFAULT TRUE,
    regulatory_consultation_required BOOLEAN DEFAULT FALSE,
    key_considerations JSON,
    mitigation_measures JSON,
    documentation_template TEXT,
    review_period_months INT DEFAULT 12,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_risk_level (risk_level),
    INDEX idx_processing_type (processing_type),
    INDEX idx_required (assessment_required, regulatory_consultation_required),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_protection_impact_assessment (code, name, trigger_criteria, risk_level, processing_type, assessment_required, regulatory_consultation_required) VALUES
('BIOMETRIC_PROCESSING', 'Biometric Data Processing', 'Processing of biometric data for identification', 'very_high', 'biometric_identification', TRUE, TRUE),
('LARGE_SCALE_PROFILING', 'Large Scale Profiling', 'Systematic profiling affecting large numbers', 'high', 'automated_profiling', TRUE, TRUE),
('SENSITIVE_DATA_LARGE', 'Large Scale Sensitive Data', 'Processing special categories at scale', 'high', 'sensitive_data', TRUE, TRUE),
('EMPLOYEE_MONITORING', 'Employee Monitoring', 'Systematic monitoring of employees', 'high', 'workplace_monitoring', TRUE, FALSE),
('LOCATION_TRACKING', 'Location Tracking', 'Systematic location data collection', 'medium', 'geolocation', TRUE, FALSE),
('CHILDREN_DATA', 'Children\'s Data Processing', 'Processing data of minors', 'high', 'minor_data', TRUE, FALSE),
('AUTOMATED_DECISIONS', 'Automated Decision Making', 'Decisions with legal/significant effects', 'high', 'automated_decisions', TRUE, TRUE),
('DATA_MATCHING', 'Data Matching/Combining', 'Combining datasets from different sources', 'medium', 'data_combination', TRUE, FALSE),
('NEW_TECHNOLOGY', 'New Technology Deployment', 'Using new or innovative technology', 'medium', 'new_tech', TRUE, FALSE),
('VULNERABLE_SUBJECTS', 'Vulnerable Data Subjects', 'Processing data of vulnerable individuals', 'high', 'vulnerable_groups', TRUE, FALSE);

-- Table: legitimate_interest_assessment
CREATE TABLE legitimate_interest_assessment (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    interest_type VARCHAR(200),
    purpose_description TEXT,
    necessity_test TEXT,
    balancing_factors JSON,
    safeguards JSON,
    opt_out_available BOOLEAN DEFAULT TRUE,
    transparency_measures TEXT,
    review_frequency_months INT DEFAULT 12,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_interest_type (interest_type),
    INDEX idx_opt_out (opt_out_available),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO legitimate_interest_assessment (code, name, interest_type, purpose_description, necessity_test, opt_out_available) VALUES
('FRAUD_PREVENTION_LIA', 'Fraud Prevention', 'security', 'Preventing fraudulent activities', 'Essential for platform integrity', FALSE),
('DIRECT_MARKETING_LIA', 'Direct Marketing', 'commercial', 'Marketing to existing customers', 'Business growth and customer engagement', TRUE),
('ANALYTICS_LIA', 'Analytics and Insights', 'improvement', 'Service improvement through analytics', 'Understanding user behavior', TRUE),
('SECURITY_MONITORING_LIA', 'Security Monitoring', 'security', 'Platform security monitoring', 'Protecting users and platform', FALSE),
('LEGAL_CLAIMS_LIA', 'Legal Claims Defense', 'legal', 'Establishing or defending legal claims', 'Legal protection necessity', FALSE),
('NETWORK_SECURITY_LIA', 'Network Security', 'technical', 'Information and network security', 'Technical infrastructure protection', FALSE),
('PRODUCT_DEVELOPMENT_LIA', 'Product Development', 'improvement', 'Developing new features', 'Innovation and user benefit', TRUE),
('CUSTOMER_SUPPORT_LIA', 'Customer Support History', 'service', 'Maintaining support history', 'Efficient customer service', TRUE),
('PAYMENT_PROCESSING_LIA', 'Payment Risk Management', 'financial', 'Payment fraud prevention', 'Financial security', FALSE),
('CONTENT_MODERATION_LIA', 'Content Moderation', 'safety', 'Platform safety and compliance', 'User protection and legal compliance', FALSE);

-- Table: privacy_policy_template
CREATE TABLE privacy_policy_template (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    jurisdiction_id INT UNSIGNED,
    framework_id INT UNSIGNED,
    template_name VARCHAR(200) NOT NULL,
    version VARCHAR(20),
    language_code VARCHAR(10),
    required_sections JSON,
    template_content TEXT,
    last_updated DATE,
    review_required_months INT DEFAULT 12,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_framework (framework_id),
    INDEX idx_language (language_code),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_jurisdiction_framework_code (jurisdiction_id, framework_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO privacy_policy_template (code, jurisdiction_id, framework_id, template_name, version, language_code, required_sections, last_updated) VALUES
('GDPR_EN_TEMPLATE', 2, 1, 'GDPR Privacy Policy Template', '2.0', 'en', '["controller_identity", "dpo_contact", "purposes", "legal_basis", "recipients", "retention", "rights", "lodge_complaint", "automated_decisions", "international_transfers"]', CURDATE()),
('CCPA_EN_TEMPLATE', 1, 2, 'CCPA Privacy Policy Template', '1.5', 'en', '["categories_collected", "sources", "purposes", "sharing", "sale_opt_out", "rights", "contact", "non_discrimination", "minors", "changes"]', CURDATE()),
('LGPD_PT_TEMPLATE', 7, 3, 'LGPD Privacy Policy Template', '1.0', 'pt', '["controller_identity", "dpo_contact", "purposes", "legal_basis", "sharing", "retention", "rights", "international_transfers", "security", "changes"]', CURDATE()),
('PIPEDA_EN_TEMPLATE', 4, 4, 'PIPEDA Privacy Policy Template', '1.2', 'en', '["purposes", "consent", "limiting_collection", "limiting_use", "retention", "accuracy", "safeguards", "openness", "access", "challenging_compliance"]', CURDATE()),
('PIPEDA_FR_TEMPLATE', 4, 4, 'PIPEDA Privacy Policy Template', '1.2', 'fr', '["purposes", "consent", "limiting_collection", "limiting_use", "retention", "accuracy", "safeguards", "openness", "access", "challenging_compliance"]', CURDATE()),
('APPI_JA_TEMPLATE', 6, 5, 'APPI Privacy Policy Template', '1.1', 'ja', '["purpose_of_use", "joint_use", "provision_to_third_parties", "disclosure_requests", "safety_measures", "contact", "complaints"]', CURDATE()),
('POPIA_EN_TEMPLATE', NULL, 6, 'POPIA Privacy Policy Template', '1.0', 'en', '["responsible_party", "purpose", "recipients", "cross_border", "security", "retention", "rights", "objection", "complaints"]', CURDATE()),
('GENERIC_EN_TEMPLATE', NULL, NULL, 'Generic Privacy Policy Template', '1.0', 'en', '["information_collected", "how_we_use", "sharing", "security", "retention", "your_rights", "contact", "changes"]', CURDATE()),
('COPPA_EN_TEMPLATE', 1, 12, 'COPPA Children\'s Privacy Policy', '1.0', 'en', '["information_collected_children", "parental_consent", "parental_rights", "disclosure", "security", "retention", "contact"]', CURDATE()),
('GDPR_SIMPLE_EN', 2, 1, 'GDPR Simplified Language', '1.0', 'en', '["who_we_are", "what_we_collect", "why_we_need_it", "who_we_share_with", "how_long_we_keep", "your_rights", "contact_us"]', CURDATE());

-- Table: compliance_certification  
CREATE TABLE compliance_certification (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    certification_body VARCHAR(500),
    certification_type VARCHAR(100), -- 'security', 'privacy', 'quality', 'industry'
    scope TEXT,
    requirements TEXT,
    audit_frequency_months INT,
    validity_period_months INT,
    cost_range VARCHAR(100),
    preparation_time_months INT,
    renewal_required BOOLEAN DEFAULT TRUE,
    is_internationally_recognized BOOLEAN DEFAULT TRUE,
    related_frameworks JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX idx_certification_type (certification_type),
    INDEX idx_audit_frequency (audit_frequency_months),
    INDEX idx_international (is_internationally_recognized),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO compliance_certification (code, name, certification_body, certification_type, scope, audit_frequency_months, validity_period_months, is_internationally_recognized) VALUES
('ISO27001', 'ISO/IEC 27001', 'Accredited Certification Bodies', 'security', 'Information security management system', 12, 36, TRUE),
('ISO27701', 'ISO/IEC 27701', 'Accredited Certification Bodies', 'privacy', 'Privacy information management', 12, 36, TRUE),
('SOC2_TYPE1', 'SOC 2 Type I', 'AICPA Licensed CPA', 'security', 'Point-in-time assessment', 0, 12, TRUE),
('SOC2_TYPE2', 'SOC 2 Type II', 'AICPA Licensed CPA', 'security', 'Period of time assessment', 12, 12, TRUE),
('ISO9001', 'ISO 9001', 'Accredited Certification Bodies', 'quality', 'Quality management system', 12, 36, TRUE),
('PCI_DSS_L1', 'PCI DSS Level 1', 'Qualified Security Assessor', 'security', 'Payment card data security', 12, 12, TRUE),
('HIPAA', 'HIPAA Compliance', 'Third-party Assessor', 'privacy', 'Healthcare data protection', 12, 12, FALSE),
('TISAX', 'TISAX', 'ENX Association', 'security', 'Automotive industry security', 36, 36, TRUE),
('C5', 'BSI C5', 'BSI Qualified Auditor', 'security', 'Cloud security (Germany)', 12, 12, FALSE),
('ISAE3402', 'ISAE 3402', 'Certified Auditor', 'security', 'Service organization controls', 12, 12, TRUE);

-- Table: regulatory_authority
CREATE TABLE regulatory_authority (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(500) NOT NULL,
    acronym VARCHAR(50),
    jurisdiction_id INT UNSIGNED,
    authority_type VARCHAR(100), -- 'data_protection', 'copyright', 'telecommunications', 'competition'
    website VARCHAR(500),
    contact_email VARCHAR(255),
    contact_phone VARCHAR(50),
    complaint_process TEXT,
    enforcement_powers JSON,
    reporting_obligations JSON,
    is_lead_authority BOOLEAN DEFAULT FALSE,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_authority_type (authority_type),
    INDEX idx_lead_authority (is_lead_authority),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO regulatory_authority (code, name, acronym, jurisdiction_id, authority_type, website, is_lead_authority) VALUES
('ICO_UK', 'Information Commissioner\'s Office', 'ICO', 3, 'data_protection', 'https://ico.org.uk', TRUE),
('CNIL_FR', 'Commission Nationale de l\'Informatique et des Libertés', 'CNIL', 9, 'data_protection', 'https://www.cnil.fr', TRUE),
('BfDI_DE', 'Federal Commissioner for Data Protection and Freedom of Information', 'BfDI', 8, 'data_protection', 'https://www.bfdi.bund.de', TRUE),
('AEPD_ES', 'Agencia Española de Protección de Datos', 'AEPD', NULL, 'data_protection', 'https://www.aepd.es', TRUE),
('EDPB', 'European Data Protection Board', 'EDPB', 2, 'data_protection', 'https://edpb.europa.eu', TRUE),
('FTC_US', 'Federal Trade Commission', 'FTC', 1, 'data_protection', 'https://www.ftc.gov', TRUE),
('CPPA_CA', 'California Privacy Protection Agency', 'CPPA', 1, 'data_protection', 'https://cppa.ca.gov', TRUE),
('OPC_CA', 'Office of the Privacy Commissioner of Canada', 'OPC', 4, 'data_protection', 'https://www.priv.gc.ca', TRUE),
('OAIC_AU', 'Office of the Australian Information Commissioner', 'OAIC', 5, 'data_protection', 'https://www.oaic.gov.au', TRUE),
('ANPD_BR', 'Autoridade Nacional de Proteção de Dados', 'ANPD', 7, 'data_protection', 'https://www.gov.br/anpd', TRUE);

-- Table: compliance_penalty
CREATE TABLE compliance_penalty (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    framework_id INT UNSIGNED,
    violation_category VARCHAR(200),
    penalty_type VARCHAR(100), -- 'monetary', 'criminal', 'administrative', 'reputational'
    calculation_method VARCHAR(200),
    maximum_fine_amount DECIMAL(20,2),
    maximum_fine_percentage DECIMAL(5,2),
    fine_currency CHAR(3),
    criminal_liability BOOLEAN DEFAULT FALSE,
    criminal_penalty_description TEXT,
    factors_considered JSON,
    mitigation_factors JSON,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_framework (framework_id),
    INDEX idx_violation_category (violation_category),
    INDEX idx_penalty_type (penalty_type),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_framework_code (framework_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO compliance_penalty (code, framework_id, violation_category, penalty_type, calculation_method, maximum_fine_amount, maximum_fine_percentage, fine_currency, criminal_liability) VALUES
('GDPR_LOWER', 1, 'Lower tier violations', 'monetary', 'Up to 2% annual turnover or €10M', 10000000, 2.0, 'EUR', FALSE),
('GDPR_UPPER', 1, 'Upper tier violations', 'monetary', 'Up to 4% annual turnover or €20M', 20000000, 4.0, 'EUR', FALSE),
('CCPA_STANDARD', 2, 'Non-intentional violation', 'monetary', 'Per violation', 2500, NULL, 'USD', FALSE),
('CCPA_INTENTIONAL', 2, 'Intentional violation', 'monetary', 'Per violation', 7500, NULL, 'USD', FALSE),
('LGPD_SIMPLE', 3, 'Simple violation', 'monetary', 'Up to 2% revenue or R$50M', 50000000, 2.0, 'BRL', FALSE),
('LGPD_PERSONAL', 3, 'Per person affected', 'monetary', 'Daily fine', 50000, NULL, 'BRL', FALSE),
('PIPEDA_STANDARD', 4, 'Standard violation', 'monetary', 'Per violation', 100000, NULL, 'CAD', FALSE),
('COPPA_CIVIL', 12, 'Civil penalty', 'monetary', 'Per violation', 46517, NULL, 'USD', FALSE),
('DMCA_COPYRIGHT', 8, 'Copyright infringement', 'monetary', 'Statutory damages per work', 150000, NULL, 'USD', TRUE),
('ADA_FIRST', 11, 'First violation', 'monetary', 'Civil penalty', 75000, NULL, 'USD', FALSE);

-- Table: data_localization_requirement
CREATE TABLE data_localization_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL,
    jurisdiction_id INT UNSIGNED,
    data_category_id INT UNSIGNED,
    requirement_type VARCHAR(100), -- 'storage', 'processing', 'access', 'copy_retention'
    description TEXT,
    allowed_locations JSON,
    prohibited_locations JSON,
    exceptions JSON,
    government_access_provisions TEXT,
    notification_requirements TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (jurisdiction_id) REFERENCES legal_jurisdiction(id),
    FOREIGN KEY (data_category_id) REFERENCES data_category(id),
    INDEX idx_jurisdiction (jurisdiction_id),
    INDEX idx_data_category (data_category_id),
    INDEX idx_requirement_type (requirement_type),
    INDEX idx_active (is_active),
    UNIQUE KEY uk_jurisdiction_category_code (jurisdiction_id, data_category_id, code)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO data_localization_requirement (code, jurisdiction_id, data_category_id, requirement_type, description, allowed_locations) VALUES
('RU_PERSONAL', NULL, 1, 'storage', 'Russian personal data localization', '["RU"]'),
('CN_CRITICAL', 11, NULL, 'storage', 'China critical information infrastructure', '["CN"]'),
('CN_PERSONAL', 11, 1, 'copy_retention', 'China personal information copy', '["CN"]'),
('IN_SENSITIVE', 10, 3, 'storage', 'India sensitive personal data', '["IN"]'),
('IN_CRITICAL', 10, NULL, 'storage', 'India critical personal data', '["IN"]'),
('AU_HEALTH', 5, NULL, 'access', 'Australia health records access', '["AU"]'),
('CA_PUBLIC', 4, NULL, 'storage', 'Canada public sector data', '["CA"]'),
('DE_TELECOM', 8, 9, 'storage', 'Germany telecommunications metadata', '["DE","EU"]'),
('KR_LOCATION', 12, 5, 'processing', 'Korea location information', '["KR"]'),
('SWIFT_EU', 2, 2, 'processing', 'EU payment data processing', '["EU"]');

-- Table: third_party_processor_requirement
CREATE TABLE third_party_processor_requirement (
    id INT UNSIGNED AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(200) NOT NULL,
    framework_id INT UNSIGNED,
    requirement_category VARCHAR(100), -- 'contract', 'security', 'audit', 'notification'
    description TEXT,
    mandatory_clauses JSON,
    security_requirements JSON,
    audit_rights BOOLEAN DEFAULT TRUE,
    sub_processor_restrictions TEXT,
    breach_notification_hours INT,
    termination_requirements TEXT,
    data_return_requirements TEXT,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (framework_id) REFERENCES compliance_framework(id),
    INDEX idx_framework (framework_id),
    INDEX idx_requirement_category (requirement_category),
    INDEX idx_audit_rights (audit_rights),
    INDEX idx_active (is_active)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO third_party_processor_requirement (code, name, framework_id, requirement_category, description, audit_rights, breach_notification_hours) VALUES
('GDPR_DPA', 'GDPR Data Processing Agreement', 1, 'contract', 'Article 28 processor requirements', TRUE, 72),
('GDPR_SECURITY', 'GDPR Processor Security', 1, 'security', 'Article 32 security measures', TRUE, NULL),
('CCPA_CONTRACT', 'CCPA Service Provider Agreement', 2, 'contract', 'Service provider contractual requirements', TRUE, NULL),
('LGPD_OPERATOR', 'LGPD Data Operator Agreement', 3, 'contract', 'Data operator requirements', TRUE, 48),
('PIPEDA_COMPARABLE', 'PIPEDA Comparable Protection', 4, 'contract', 'Comparable level of protection', TRUE, NULL),
('APPI_OUTSOURCING', 'APPI Outsourcing Supervision', 5, 'contract', 'Necessary supervision requirements', TRUE, NULL),
('HIPAA_BAA', 'HIPAA Business Associate Agreement', NULL, 'contract', 'Healthcare data processor requirements', TRUE, 24),
('PCI_DSS_PROVIDER', 'PCI DSS Service Provider', NULL, 'security', 'Payment processor requirements', TRUE, 24),
('SOC2_VENDOR', 'SOC 2 Vendor Requirements', NULL, 'audit', 'Vendor security assessments', TRUE, NULL),
('ISO27001_SUPPLIER', 'ISO 27001 Supplier Requirements', NULL, 'security', 'Information security for suppliers', TRUE, NULL);

-- Add indexes for foreign key relationships
ALTER TABLE copyright_term_rule ADD INDEX idx_code (code);
ALTER TABLE data_retention_policy ADD INDEX idx_code (code);
ALTER TABLE privacy_policy_template ADD INDEX idx_version (version);
ALTER TABLE regulatory_authority ADD INDEX idx_acronym (acronym);

-- Add composite indexes for common query patterns
CREATE INDEX idx_framework_active ON compliance_framework (framework_type, is_active);
CREATE INDEX idx_jurisdiction_active ON legal_jurisdiction (jurisdiction_type, is_active);
CREATE INDEX idx_consent_active ON privacy_consent_type (consent_category, is_active);
CREATE INDEX idx_purpose_active ON data_processing_purpose (purpose_category, is_active);
CREATE INDEX idx_penalty_amount ON compliance_penalty (maximum_fine_amount, fine_currency);
CREATE INDEX idx_audit_mandatory ON audit_requirement (audit_type, is_mandatory, is_active);

-- =====================================================
-- Reference Database - Section 30: SYSTEM
-- =====================================================

-- =====================================================
-- TABLE: environment_type
-- =====================================================
CREATE TABLE IF NOT EXISTS environment_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    base_url VARCHAR(255),
    is_production BOOLEAN DEFAULT FALSE,
    requires_vpn BOOLEAN DEFAULT FALSE,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_environment_type_code (code),
    KEY idx_environment_type_status (status_type_id),
    CONSTRAINT fk_environment_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Deployment environment configurations';

-- Insert environment types
INSERT INTO environment_type (code, name, description, base_url, is_production, requires_vpn) VALUES
('DEV', 'Development', 'Local development environment for coding and testing', 'http://localhost:3000', FALSE, FALSE),
('TEST', 'Testing', 'Automated testing environment for CI/CD', 'https://test.astrorightsadmin.com', FALSE, TRUE),
('STAGING', 'Staging', 'Pre-production environment mirroring production', 'https://staging.astrorightsadmin.com', FALSE, TRUE),
('UAT', 'User Acceptance Testing', 'Environment for client testing and approval', 'https://uat.astrorightsadmin.com', FALSE, TRUE),
('PROD', 'Production', 'Live production environment serving customers', 'https://app.astrorightsadmin.com', TRUE, FALSE),
('DR', 'Disaster Recovery', 'Backup production environment for failover', 'https://dr.astrorightsadmin.com', TRUE, TRUE),
('DEMO', 'Demo', 'Demonstration environment for sales and marketing', 'https://demo.astrorightsadmin.com', FALSE, FALSE),
('TRAINING', 'Training', 'Environment for user training and onboarding', 'https://training.astrorightsadmin.com', FALSE, FALSE);

-- =====================================================
-- TABLE: log_level
-- =====================================================
CREATE TABLE IF NOT EXISTS log_level (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    severity_order INT NOT NULL,
    color_code VARCHAR(7),
    icon_class VARCHAR(50),
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_log_level_code (code),
    UNIQUE KEY uk_log_level_severity (severity_order),
    KEY idx_log_level_status (status_type_id),
    CONSTRAINT fk_log_level_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='System logging severity levels';

-- Insert log levels
INSERT INTO log_level (code, name, description, severity_order, color_code, icon_class) VALUES
('TRACE', 'Trace', 'Most detailed information for debugging', 10, '#9E9E9E', 'fa-search'),
('DEBUG', 'Debug', 'Detailed information for diagnosing problems', 20, '#607D8B', 'fa-bug'),
('INFO', 'Information', 'General informational messages', 30, '#2196F3', 'fa-info-circle'),
('WARN', 'Warning', 'Warning messages for potential issues', 40, '#FF9800', 'fa-exclamation-triangle'),
('ERROR', 'Error', 'Error messages for failures', 50, '#F44336', 'fa-times-circle'),
('FATAL', 'Fatal', 'Critical errors causing system shutdown', 60, '#B71C1C', 'fa-skull-crossbones'),
('AUDIT', 'Audit', 'Security and compliance audit messages', 35, '#4CAF50', 'fa-shield-alt'),
('PERF', 'Performance', 'Performance monitoring messages', 25, '#9C27B0', 'fa-tachometer-alt');

-- =====================================================
-- TABLE: event_type
-- =====================================================
CREATE TABLE IF NOT EXISTS event_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50),
    requires_notification BOOLEAN DEFAULT FALSE,
    retention_days INT DEFAULT 90,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_event_type_code (code),
    KEY idx_event_type_category (category),
    KEY idx_event_type_status (status_type_id),
    CONSTRAINT fk_event_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='System event types for monitoring and tracking';

-- Insert event types
INSERT INTO event_type (code, name, description, category, requires_notification, retention_days) VALUES
-- User Events
('USER_LOGIN', 'User Login', 'User successfully logged into the system', 'USER', FALSE, 90),
('USER_LOGOUT', 'User Logout', 'User logged out of the system', 'USER', FALSE, 90),
('USER_REGISTER', 'User Registration', 'New user registered on the platform', 'USER', TRUE, 365),
('USER_PASSWORD_CHANGE', 'Password Change', 'User changed their password', 'USER', TRUE, 180),
('USER_MFA_ENABLE', 'MFA Enabled', 'User enabled multi-factor authentication', 'USER', TRUE, 365),
-- Catalog Events
('SONG_CREATE', 'Song Created', 'New song added to catalog', 'CATALOG', TRUE, 365),
('SONG_UPDATE', 'Song Updated', 'Song metadata updated', 'CATALOG', FALSE, 180),
('RECORDING_UPLOAD', 'Recording Uploaded', 'Audio file uploaded for song', 'CATALOG', TRUE, 365),
('WORK_REGISTER', 'Work Registered', 'Musical work registered with PRO', 'CATALOG', TRUE, 730),
-- Rights Events
('RIGHTS_SPLIT_CHANGE', 'Rights Split Changed', 'Ownership percentages modified', 'RIGHTS', TRUE, 730),
('AGREEMENT_SIGN', 'Agreement Signed', 'Digital agreement signed by party', 'RIGHTS', TRUE, 730),
('LICENSE_CREATE', 'License Created', 'New sync license created', 'RIGHTS', TRUE, 730),
('CONTRACT_EXPIRE', 'Contract Expired', 'Publishing or recording contract expired', 'RIGHTS', TRUE, 365),
-- Royalty Events
('ROYALTY_IMPORT', 'Royalty Import', 'Royalty statement imported', 'ROYALTY', TRUE, 730),
('ROYALTY_CALCULATE', 'Royalty Calculation', 'Royalties calculated for period', 'ROYALTY', FALSE, 365),
('PAYMENT_PROCESS', 'Payment Processed', 'Royalty payment processed', 'ROYALTY', TRUE, 730),
('DISPUTE_CREATE', 'Dispute Created', 'Royalty dispute raised', 'ROYALTY', TRUE, 365),
-- System Events
('SYSTEM_START', 'System Start', 'Application server started', 'SYSTEM', TRUE, 180),
('SYSTEM_SHUTDOWN', 'System Shutdown', 'Application server stopped', 'SYSTEM', TRUE, 180),
('BACKUP_COMPLETE', 'Backup Complete', 'Database backup completed', 'SYSTEM', FALSE, 90),
('MAINTENANCE_START', 'Maintenance Start', 'System maintenance begun', 'SYSTEM', TRUE, 180),
-- Security Events
('SECURITY_BREACH_ATTEMPT', 'Security Breach Attempt', 'Potential security breach detected', 'SECURITY', TRUE, 730),
('API_RATE_LIMIT', 'API Rate Limit', 'API rate limit exceeded', 'SECURITY', TRUE, 180),
('SUSPICIOUS_ACTIVITY', 'Suspicious Activity', 'Unusual user behavior detected', 'SECURITY', TRUE, 365),
('DATA_EXPORT', 'Data Export', 'Large data export performed', 'SECURITY', TRUE, 365);

-- =====================================================
-- TABLE: module_type
-- =====================================================
CREATE TABLE IF NOT EXISTS module_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    parent_module_id INT UNSIGNED,
    icon_class VARCHAR(50),
    route_path VARCHAR(255),
    requires_license BOOLEAN DEFAULT FALSE,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_module_type_code (code),
    KEY idx_module_type_parent (parent_module_id),
    KEY idx_module_type_status (status_type_id),
    CONSTRAINT fk_module_type_parent FOREIGN KEY (parent_module_id) 
        REFERENCES module_type(id) ON UPDATE CASCADE,
    CONSTRAINT fk_module_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='System modules and components';

-- Insert module types
INSERT INTO module_type (code, name, description, parent_module_id, icon_class, route_path, requires_license) VALUES
-- Core Modules
('DASHBOARD', 'Dashboard', 'Main dashboard and analytics', NULL, 'fa-chart-line', '/dashboard', FALSE),
('CATALOG', 'Catalog Management', 'Song and recording catalog', NULL, 'fa-music', '/catalog', FALSE),
('RIGHTS', 'Rights Management', 'Ownership and publishing rights', NULL, 'fa-balance-scale', '/rights', FALSE),
('ROYALTIES', 'Royalty Processing', 'Royalty calculation and distribution', NULL, 'fa-dollar-sign', '/royalties', TRUE),
('AGREEMENTS', 'Agreements', 'Digital contracts and licenses', NULL, 'fa-file-contract', '/agreements', TRUE),
-- Sub-modules
('SONGS', 'Songs', 'Musical compositions', 2, 'fa-music', '/catalog/songs', FALSE),
('RECORDINGS', 'Recordings', 'Master recordings', 2, 'fa-compact-disc', '/catalog/recordings', FALSE),
('SPLITS', 'Splits & Ownership', 'Rights splits management', 3, 'fa-percentage', '/rights/splits', FALSE),
('REGISTRATIONS', 'Registrations', 'PRO and DSP registrations', 3, 'fa-registered', '/rights/registrations', TRUE),
('STATEMENTS', 'Statements', 'Royalty statements', 4, 'fa-file-invoice-dollar', '/royalties/statements', TRUE),
('PAYMENTS', 'Payments', 'Payment processing', 4, 'fa-money-check', '/royalties/payments', TRUE),
-- Advanced Modules
('AI_TOOLS', 'AI Tools', 'Artificial intelligence features', NULL, 'fa-robot', '/ai-tools', TRUE),
('BLOCKCHAIN', 'Blockchain', 'Smart contracts and NFTs', NULL, 'fa-link', '/blockchain', TRUE),
('ANALYTICS', 'Analytics', 'Advanced analytics and reporting', NULL, 'fa-chart-pie', '/analytics', TRUE),
('SYNC', 'Sync Licensing', 'Synchronization licensing', NULL, 'fa-film', '/sync', TRUE);

-- =====================================================
-- TABLE: feature_category
-- =====================================================
CREATE TABLE IF NOT EXISTS feature_category (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    display_order INT DEFAULT 0,
    icon_class VARCHAR(50),
    color_theme VARCHAR(50),
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_feature_category_code (code),
    KEY idx_feature_category_order (display_order),
    KEY idx_feature_category_status (status_type_id),
    CONSTRAINT fk_feature_category_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Platform feature categories';

-- Insert feature categories
INSERT INTO feature_category (code, name, description, display_order, icon_class, color_theme) VALUES
('CORE', 'Core Features', 'Essential platform functionality', 10, 'fa-cube', 'primary'),
('CATALOG', 'Catalog Features', 'Music catalog management capabilities', 20, 'fa-music', 'info'),
('RIGHTS', 'Rights Features', 'Rights and ownership management', 30, 'fa-balance-scale', 'warning'),
('ROYALTY', 'Royalty Features', 'Royalty processing and distribution', 40, 'fa-dollar-sign', 'success'),
('COLLAB', 'Collaboration', 'Team and collaboration features', 50, 'fa-users', 'secondary'),
('ANALYTICS', 'Analytics & Reporting', 'Data analysis and insights', 60, 'fa-chart-bar', 'purple'),
('AI', 'AI & Automation', 'Artificial intelligence features', 70, 'fa-robot', 'danger'),
('BLOCKCHAIN', 'Blockchain & Web3', 'Decentralized features', 80, 'fa-link', 'dark'),
('INTEGRATION', 'Integrations', 'Third-party connections', 90, 'fa-plug', 'teal'),
('SECURITY', 'Security & Compliance', 'Security and regulatory features', 100, 'fa-shield-alt', 'indigo');

-- =====================================================
-- TABLE: system_status
-- =====================================================
CREATE TABLE IF NOT EXISTS system_status (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50),
    severity_level INT DEFAULT 0,
    color_code VARCHAR(7),
    icon_class VARCHAR(50),
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_system_status_code (code),
    KEY idx_system_status_category (category),
    KEY idx_system_status_severity (severity_level),
    KEY idx_system_status_status (status_type_id),
    CONSTRAINT fk_system_status_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='System operational status types';

-- Insert system status types
INSERT INTO system_status (code, name, description, category, severity_level, color_code, icon_class) VALUES
-- Operational Status
('OPERATIONAL', 'Fully Operational', 'All systems functioning normally', 'HEALTH', 0, '#4CAF50', 'fa-check-circle'),
('DEGRADED', 'Degraded Performance', 'System operational with reduced performance', 'HEALTH', 1, '#FF9800', 'fa-exclamation-triangle'),
('PARTIAL_OUTAGE', 'Partial Outage', 'Some services unavailable', 'HEALTH', 2, '#FF5722', 'fa-exclamation-circle'),
('MAJOR_OUTAGE', 'Major Outage', 'Critical services unavailable', 'HEALTH', 3, '#F44336', 'fa-times-circle'),
('MAINTENANCE', 'Under Maintenance', 'System under scheduled maintenance', 'HEALTH', 1, '#2196F3', 'fa-tools'),
-- Service Status
('STARTING', 'Starting Up', 'Service is initializing', 'SERVICE', 0, '#03A9F4', 'fa-play-circle'),
('RUNNING', 'Running', 'Service is active and running', 'SERVICE', 0, '#4CAF50', 'fa-circle'),
('STOPPING', 'Stopping', 'Service is shutting down', 'SERVICE', 1, '#FFC107', 'fa-stop-circle'),
('STOPPED', 'Stopped', 'Service is not running', 'SERVICE', 2, '#9E9E9E', 'fa-pause-circle'),
('FAILED', 'Failed', 'Service has encountered an error', 'SERVICE', 3, '#F44336', 'fa-exclamation-triangle'),
-- Job Status
('QUEUED', 'Queued', 'Job waiting to be processed', 'JOB', 0, '#9E9E9E', 'fa-clock'),
('PROCESSING', 'Processing', 'Job currently being executed', 'JOB', 0, '#2196F3', 'fa-spinner'),
('COMPLETED', 'Completed', 'Job finished successfully', 'JOB', 0, '#4CAF50', 'fa-check'),
('ERROR', 'Error', 'Job failed with errors', 'JOB', 2, '#F44336', 'fa-times'),
('CANCELLED', 'Cancelled', 'Job was cancelled', 'JOB', 1, '#FF9800', 'fa-ban');

-- =====================================================
-- TABLE: deployment_type
-- =====================================================
CREATE TABLE IF NOT EXISTS deployment_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    rollback_enabled BOOLEAN DEFAULT TRUE,
    requires_approval BOOLEAN DEFAULT FALSE,
    max_parallel_instances INT DEFAULT 1,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_deployment_type_code (code),
    KEY idx_deployment_type_status (status_type_id),
    CONSTRAINT fk_deployment_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Deployment strategies and configurations';

-- Insert deployment types
INSERT INTO deployment_type (code, name, description, rollback_enabled, requires_approval, max_parallel_instances) VALUES
('ROLLING', 'Rolling Deployment', 'Gradual replacement of instances', TRUE, FALSE, 2),
('BLUE_GREEN', 'Blue-Green Deployment', 'Switch between two identical environments', TRUE, TRUE, 2),
('CANARY', 'Canary Deployment', 'Gradual rollout to subset of users', TRUE, TRUE, 1),
('RECREATE', 'Recreate Deployment', 'Shut down old version then deploy new', TRUE, FALSE, 1),
('FEATURE_FLAG', 'Feature Flag', 'Deploy with features behind toggles', TRUE, FALSE, 3),
('HOTFIX', 'Hotfix Deployment', 'Emergency patch deployment', TRUE, TRUE, 1),
('A_B_TEST', 'A/B Test Deployment', 'Deploy for split testing', TRUE, FALSE, 2),
('SHADOW', 'Shadow Deployment', 'Deploy alongside production for testing', FALSE, FALSE, 1);

-- =====================================================
-- TABLE: backup_type
-- =====================================================
CREATE TABLE IF NOT EXISTS backup_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    frequency_hours INT,
    retention_days INT,
    compression_enabled BOOLEAN DEFAULT TRUE,
    encryption_required BOOLEAN DEFAULT TRUE,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_backup_type_code (code),
    KEY idx_backup_type_status (status_type_id),
    CONSTRAINT fk_backup_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Backup strategies and configurations';

-- Insert backup types
INSERT INTO backup_type (code, name, description, frequency_hours, retention_days, compression_enabled, encryption_required) VALUES
('FULL_DAILY', 'Daily Full Backup', 'Complete database backup every day', 24, 30, TRUE, TRUE),
('INCREMENTAL', 'Incremental Backup', 'Only changes since last backup', 6, 7, TRUE, TRUE),
('DIFFERENTIAL', 'Differential Backup', 'Changes since last full backup', 12, 14, TRUE, TRUE),
('SNAPSHOT', 'Snapshot Backup', 'Point-in-time system snapshot', 4, 3, FALSE, TRUE),
('ARCHIVE', 'Archive Backup', 'Long-term archival storage', 168, 2555, TRUE, TRUE),
('REALTIME', 'Real-time Replication', 'Continuous data replication', 0, 1, FALSE, TRUE),
('TRANSACTION_LOG', 'Transaction Log', 'Database transaction logs', 1, 7, TRUE, TRUE),
('COMPLIANCE', 'Compliance Backup', 'Regulatory compliance archives', 720, 2555, TRUE, TRUE);

-- =====================================================
-- TABLE: notification_type
-- =====================================================
CREATE TABLE IF NOT EXISTS notification_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50),
    default_channel VARCHAR(50) DEFAULT 'EMAIL',
    template_name VARCHAR(100),
    priority_level INT DEFAULT 0,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_notification_type_code (code),
    KEY idx_notification_type_category (category),
    KEY idx_notification_type_priority (priority_level),
    KEY idx_notification_type_status (status_type_id),
    CONSTRAINT fk_notification_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Notification types and templates';

-- Insert notification types
INSERT INTO notification_type (code, name, description, category, default_channel, template_name, priority_level) VALUES
-- Account Notifications
('WELCOME', 'Welcome Email', 'New user registration welcome', 'ACCOUNT', 'EMAIL', 'welcome_email', 1),
('PASSWORD_RESET', 'Password Reset', 'Password reset request', 'ACCOUNT', 'EMAIL', 'password_reset', 3),
('MFA_SETUP', 'MFA Setup', 'Multi-factor authentication setup', 'ACCOUNT', 'EMAIL', 'mfa_setup', 2),
('SUBSCRIPTION_RENEW', 'Subscription Renewal', 'Subscription renewal reminder', 'ACCOUNT', 'EMAIL', 'subscription_renewal', 2),
-- Catalog Notifications
('SONG_APPROVED', 'Song Approved', 'Song submission approved', 'CATALOG', 'IN_APP', 'song_approved', 1),
('METADATA_ERROR', 'Metadata Error', 'Metadata validation failed', 'CATALOG', 'IN_APP', 'metadata_error', 2),
('REGISTRATION_COMPLETE', 'Registration Complete', 'PRO registration completed', 'CATALOG', 'EMAIL', 'registration_complete', 1),
-- Rights Notifications
('SPLIT_REQUEST', 'Split Request', 'Rights split approval needed', 'RIGHTS', 'EMAIL', 'split_request', 3),
('AGREEMENT_EXPIRING', 'Agreement Expiring', 'Agreement expiration warning', 'RIGHTS', 'EMAIL', 'agreement_expiring', 2),
('LICENSE_APPROVED', 'License Approved', 'Sync license approved', 'RIGHTS', 'EMAIL', 'license_approved', 1),
-- Royalty Notifications
('STATEMENT_READY', 'Statement Ready', 'New royalty statement available', 'ROYALTY', 'EMAIL', 'statement_ready', 1),
('PAYMENT_SENT', 'Payment Sent', 'Royalty payment processed', 'ROYALTY', 'EMAIL', 'payment_sent', 1),
('DISPUTE_RESOLVED', 'Dispute Resolved', 'Royalty dispute resolved', 'ROYALTY', 'EMAIL', 'dispute_resolved', 2),
-- System Notifications
('MAINTENANCE_SCHEDULED', 'Maintenance Scheduled', 'Upcoming system maintenance', 'SYSTEM', 'EMAIL', 'maintenance_scheduled', 2),
('SECURITY_ALERT', 'Security Alert', 'Security issue detected', 'SYSTEM', 'SMS', 'security_alert', 3),
('API_LIMIT_WARNING', 'API Limit Warning', 'Approaching API rate limit', 'SYSTEM', 'IN_APP', 'api_limit_warning', 2);

-- =====================================================
-- TABLE: job_type
-- =====================================================
CREATE TABLE IF NOT EXISTS job_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50),
    max_retries INT DEFAULT 3,
    timeout_seconds INT DEFAULT 300,
    priority INT DEFAULT 0,
    cron_expression VARCHAR(100),
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_job_type_code (code),
    KEY idx_job_type_category (category),
    KEY idx_job_type_priority (priority),
    KEY idx_job_type_status (status_type_id),
    CONSTRAINT fk_job_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Background job types and configurations';

-- Insert job types
INSERT INTO job_type (code, name, description, category, max_retries, timeout_seconds, priority, cron_expression) VALUES
-- Import Jobs
('ROYALTY_IMPORT', 'Royalty Statement Import', 'Import royalty statements from PROs/DSPs', 'IMPORT', 3, 1800, 2, NULL),
('CATALOG_IMPORT', 'Catalog Import', 'Bulk import songs and recordings', 'IMPORT', 2, 3600, 1, NULL),
('METADATA_SYNC', 'Metadata Sync', 'Sync metadata from external sources', 'IMPORT', 5, 600, 1, '0 2 * * *'),
-- Processing Jobs
('ROYALTY_CALCULATE', 'Royalty Calculation', 'Calculate royalty distributions', 'PROCESSING', 2, 1800, 3, NULL),
('AUDIO_FINGERPRINT', 'Audio Fingerprinting', 'Generate audio fingerprints', 'PROCESSING', 3, 300, 1, NULL),
('AI_METADATA_VALIDATE', 'AI Metadata Validation', 'Validate metadata using AI', 'PROCESSING', 3, 600, 2, NULL),
-- Registration Jobs
('PRO_REGISTER', 'PRO Registration', 'Register works with PROs', 'REGISTRATION', 3, 900, 2, NULL),
('DSP_DELIVER', 'DSP Delivery', 'Deliver content to DSPs', 'REGISTRATION', 5, 1200, 2, NULL),
('BLOCKCHAIN_MINT', 'Blockchain Minting', 'Mint NFTs on blockchain', 'REGISTRATION', 2, 600, 1, NULL),
-- Maintenance Jobs
('DATABASE_BACKUP', 'Database Backup', 'Automated database backup', 'MAINTENANCE', 1, 3600, 3, '0 3 * * *'),
('LOG_CLEANUP', 'Log Cleanup', 'Clean old log entries', 'MAINTENANCE', 1, 600, 0, '0 4 * * *'),
('CACHE_WARM', 'Cache Warming', 'Pre-populate caches', 'MAINTENANCE', 2, 900, 1, '0 5 * * *'),
-- Reporting Jobs
('MONTHLY_REPORT', 'Monthly Report', 'Generate monthly reports', 'REPORTING', 2, 1800, 2, '0 6 1 * *'),
('ANALYTICS_AGGREGATE', 'Analytics Aggregation', 'Aggregate analytics data', 'REPORTING', 3, 1200, 1, '0 1 * * *'),
('COMPLIANCE_REPORT', 'Compliance Report', 'Generate compliance reports', 'REPORTING', 1, 2400, 3, '0 8 15 * *');

-- =====================================================
-- TABLE: queue_type
-- =====================================================
CREATE TABLE IF NOT EXISTS queue_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    max_size INT DEFAULT 10000,
    message_ttl_seconds INT DEFAULT 86400,
    priority_enabled BOOLEAN DEFAULT FALSE,
    dlq_enabled BOOLEAN DEFAULT TRUE,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_queue_type_code (code),
    KEY idx_queue_type_status (status_type_id),
    CONSTRAINT fk_queue_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Message queue configurations';

-- Insert queue types
INSERT INTO queue_type (code, name, description, max_size, message_ttl_seconds, priority_enabled, dlq_enabled) VALUES
('EMAIL', 'Email Queue', 'Outbound email messages', 50000, 3600, TRUE, TRUE),
('SMS', 'SMS Queue', 'SMS text messages', 10000, 300, TRUE, TRUE),
('WEBHOOK', 'Webhook Queue', 'Outbound webhook calls', 20000, 1800, FALSE, TRUE),
('IMPORT', 'Import Queue', 'File import processing', 5000, 7200, FALSE, TRUE),
('EXPORT', 'Export Queue', 'File export generation', 5000, 3600, FALSE, TRUE),
('NOTIFICATION', 'Notification Queue', 'In-app notifications', 100000, 86400, TRUE, FALSE),
('ANALYTICS', 'Analytics Queue', 'Analytics event processing', 50000, 3600, FALSE, TRUE),
('AUDIT', 'Audit Queue', 'Audit log events', 20000, 172800, FALSE, FALSE);

-- =====================================================
-- TABLE: cache_type
-- =====================================================
CREATE TABLE IF NOT EXISTS cache_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    ttl_seconds INT DEFAULT 3600,
    max_size_mb INT DEFAULT 100,
    eviction_policy VARCHAR(50) DEFAULT 'LRU',
    distributed BOOLEAN DEFAULT FALSE,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_cache_type_code (code),
    KEY idx_cache_type_status (status_type_id),
    CONSTRAINT fk_cache_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Cache configuration types';

-- Insert cache types
INSERT INTO cache_type (code, name, description, ttl_seconds, max_size_mb, eviction_policy, distributed) VALUES
('SESSION', 'Session Cache', 'User session data', 1800, 1000, 'LRU', TRUE),
('API_RESPONSE', 'API Response Cache', 'API response caching', 300, 500, 'LRU', TRUE),
('DATABASE', 'Database Query Cache', 'Database query results', 600, 2000, 'LFU', TRUE),
('STATIC', 'Static Asset Cache', 'Images, CSS, JS files', 86400, 5000, 'LRU', TRUE),
('METADATA', 'Metadata Cache', 'Song and artist metadata', 3600, 1000, 'LRU', TRUE),
('CALCULATION', 'Calculation Cache', 'Royalty calculations', 7200, 500, 'LFU', FALSE),
('SEARCH', 'Search Index Cache', 'Search query results', 900, 1000, 'LRU', TRUE),
('PERMISSION', 'Permission Cache', 'User permissions', 600, 200, 'LRU', TRUE);

-- =====================================================
-- TABLE: api_version
-- =====================================================
CREATE TABLE IF NOT EXISTS api_version (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    version_number VARCHAR(20) NOT NULL,
    release_date DATE,
    deprecation_date DATE,
    sunset_date DATE,
    is_current BOOLEAN DEFAULT FALSE,
    documentation_url VARCHAR(255),
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_api_version_code (code),
    UNIQUE KEY uk_api_version_number (version_number),
    KEY idx_api_version_current (is_current),
    KEY idx_api_version_status (status_type_id),
    CONSTRAINT fk_api_version_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='API version lifecycle management';

-- Insert API versions
INSERT INTO api_version (code, name, description, version_number, release_date, deprecation_date, sunset_date, is_current, documentation_url) VALUES
('V1', 'API Version 1.0', 'Initial API release', '1.0', '2025-01-01', '2025-12-31', '2026-06-30', FALSE, 'https://docs.astrorightsadmin.com/api/v1'),
('V1_1', 'API Version 1.1', 'Bug fixes and minor improvements', '1.1', '2025-03-01', '2026-03-01', '2026-09-01', FALSE, 'https://docs.astrorightsadmin.com/api/v1.1'),
('V2', 'API Version 2.0', 'Major update with new endpoints', '2.0', '2025-06-01', NULL, NULL, TRUE, 'https://docs.astrorightsadmin.com/api/v2'),
('V3_BETA', 'API Version 3.0 Beta', 'Next generation API (beta)', '3.0-beta', '2025-09-01', NULL, NULL, FALSE, 'https://docs.astrorightsadmin.com/api/v3-beta');

-- =====================================================
-- TABLE: feature_flag
-- =====================================================
CREATE TABLE IF NOT EXISTS feature_flag (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50),
    default_enabled BOOLEAN DEFAULT FALSE,
    rollout_percentage INT DEFAULT 0,
    target_environments VARCHAR(255),
    requires_restart BOOLEAN DEFAULT FALSE,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_feature_flag_code (code),
    KEY idx_feature_flag_category (category),
    KEY idx_feature_flag_status (status_type_id),
    CONSTRAINT fk_feature_flag_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Feature flag configurations';

-- Insert feature flags
INSERT INTO feature_flag (code, name, description, category, default_enabled, rollout_percentage, target_environments, requires_restart) VALUES
-- Core Features
('NEW_DASHBOARD', 'New Dashboard UI', 'Redesigned dashboard interface', 'UI', FALSE, 25, 'STAGING,UAT', FALSE),
('AI_METADATA', 'AI Metadata Validation', 'Enable AI-powered metadata validation', 'AI', TRUE, 100, 'ALL', FALSE),
('BLOCKCHAIN_NFT', 'Blockchain NFT Minting', 'Enable NFT minting features', 'BLOCKCHAIN', FALSE, 10, 'STAGING', FALSE),
-- Performance Features
('CACHE_V2', 'Enhanced Caching', 'New caching implementation', 'PERFORMANCE', FALSE, 50, 'STAGING,UAT', TRUE),
('PARALLEL_IMPORT', 'Parallel Import Processing', 'Enable parallel file imports', 'PERFORMANCE', TRUE, 75, 'ALL', FALSE),
-- Security Features
('MFA_REQUIRED', 'Mandatory MFA', 'Require MFA for all users', 'SECURITY', FALSE, 0, 'PROD', FALSE),
('API_RATE_LIMIT_V2', 'Enhanced API Rate Limiting', 'New rate limiting algorithm', 'SECURITY', TRUE, 100, 'ALL', FALSE),
-- Experimental Features
('VOICE_COMMANDS', 'Voice Command Interface', 'Voice-controlled operations', 'EXPERIMENTAL', FALSE, 5, 'DEV,STAGING', FALSE),
('ML_PREDICTIONS', 'ML Revenue Predictions', 'Machine learning revenue forecasts', 'EXPERIMENTAL', FALSE, 20, 'STAGING,UAT', FALSE);

-- =====================================================
-- TABLE: maintenance_type
-- =====================================================
CREATE TABLE IF NOT EXISTS maintenance_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    typical_duration_minutes INT,
    requires_downtime BOOLEAN DEFAULT FALSE,
    advance_notice_hours INT DEFAULT 24,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_maintenance_type_code (code),
    KEY idx_maintenance_type_status (status_type_id),
    CONSTRAINT fk_maintenance_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Maintenance operation types';

-- Insert maintenance types
INSERT INTO maintenance_type (code, name, description, typical_duration_minutes, requires_downtime, advance_notice_hours) VALUES
('ROUTINE', 'Routine Maintenance', 'Regular system maintenance', 30, FALSE, 24),
('SECURITY_PATCH', 'Security Patch', 'Critical security updates', 15, FALSE, 12),
('DATABASE_OPTIMIZE', 'Database Optimization', 'Database performance tuning', 60, TRUE, 48),
('SYSTEM_UPGRADE', 'System Upgrade', 'Major version upgrade', 120, TRUE, 72),
('EMERGENCY', 'Emergency Maintenance', 'Urgent fixes required', 30, TRUE, 0),
('BACKUP_RESTORE', 'Backup Restoration', 'Restore from backup', 180, TRUE, 1),
('INFRASTRUCTURE', 'Infrastructure Update', 'Hardware/network updates', 90, TRUE, 168),
('FEATURE_DEPLOY', 'Feature Deployment', 'New feature rollout', 45, FALSE, 24);

-- =====================================================
-- TABLE: monitoring_type
-- =====================================================
CREATE TABLE IF NOT EXISTS monitoring_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    check_interval_seconds INT DEFAULT 60,
    threshold_warning DECIMAL(10,2),
    threshold_critical DECIMAL(10,2),
    unit VARCHAR(20),
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_monitoring_type_code (code),
    KEY idx_monitoring_type_status (status_type_id),
    CONSTRAINT fk_monitoring_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='System monitoring metric types';

-- Insert monitoring types
INSERT INTO monitoring_type (code, name, description, check_interval_seconds, threshold_warning, threshold_critical, unit) VALUES
('CPU_USAGE', 'CPU Usage', 'Server CPU utilization', 30, 70.00, 90.00, 'percent'),
('MEMORY_USAGE', 'Memory Usage', 'RAM utilization', 30, 75.00, 90.00, 'percent'),
('DISK_USAGE', 'Disk Usage', 'Storage space utilization', 300, 80.00, 95.00, 'percent'),
('RESPONSE_TIME', 'API Response Time', 'Average API response time', 60, 1000.00, 3000.00, 'ms'),
('ERROR_RATE', 'Error Rate', 'Application error rate', 60, 1.00, 5.00, 'percent'),
('DATABASE_CONNECTIONS', 'Database Connections', 'Active DB connections', 30, 80.00, 95.00, 'percent'),
('QUEUE_SIZE', 'Queue Size', 'Message queue depth', 60, 1000.00, 5000.00, 'count'),
('LOGIN_FAILURES', 'Login Failures', 'Failed login attempts', 300, 10.00, 50.00, 'count');

-- =====================================================
-- TABLE: alert_severity
-- =====================================================
CREATE TABLE IF NOT EXISTS alert_severity (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    priority_order INT NOT NULL,
    response_time_minutes INT,
    escalation_required BOOLEAN DEFAULT FALSE,
    color_code VARCHAR(7),
    icon_class VARCHAR(50),
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_alert_severity_code (code),
    UNIQUE KEY uk_alert_severity_priority (priority_order),
    KEY idx_alert_severity_status (status_type_id),
    CONSTRAINT fk_alert_severity_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Alert severity classifications';

-- Insert alert severity levels
INSERT INTO alert_severity (code, name, description, priority_order, response_time_minutes, escalation_required, color_code, icon_class) VALUES
('INFO', 'Information', 'Informational alert only', 10, 1440, FALSE, '#2196F3', 'fa-info-circle'),
('LOW', 'Low', 'Low priority issue', 20, 480, FALSE, '#4CAF50', 'fa-check-circle'),
('MEDIUM', 'Medium', 'Medium priority issue', 30, 120, FALSE, '#FF9800', 'fa-exclamation-circle'),
('HIGH', 'High', 'High priority issue', 40, 30, TRUE, '#FF5722', 'fa-exclamation-triangle'),
('CRITICAL', 'Critical', 'Critical system issue', 50, 5, TRUE, '#F44336', 'fa-times-circle'),
('EMERGENCY', 'Emergency', 'Emergency requiring immediate action', 60, 1, TRUE, '#B71C1C', 'fa-bell');

-- =====================================================
-- TABLE: audit_action
-- =====================================================
CREATE TABLE IF NOT EXISTS audit_action (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50),
    requires_reason BOOLEAN DEFAULT FALSE,
    sensitive_action BOOLEAN DEFAULT FALSE,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_audit_action_code (code),
    KEY idx_audit_action_category (category),
    KEY idx_audit_action_sensitive (sensitive_action),
    KEY idx_audit_action_status (status_type_id),
    CONSTRAINT fk_audit_action_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Audit trail action types';

-- Insert audit action types
INSERT INTO audit_action (code, name, description, category, requires_reason, sensitive_action) VALUES
-- Data Actions
('CREATE', 'Create', 'Created new record', 'DATA', FALSE, FALSE),
('UPDATE', 'Update', 'Updated existing record', 'DATA', FALSE, FALSE),
('DELETE', 'Delete', 'Deleted record', 'DATA', TRUE, TRUE),
('RESTORE', 'Restore', 'Restored deleted record', 'DATA', TRUE, FALSE),
('EXPORT', 'Export', 'Exported data', 'DATA', FALSE, TRUE),
-- Access Actions
('LOGIN', 'Login', 'User logged in', 'ACCESS', FALSE, FALSE),
('LOGOUT', 'Logout', 'User logged out', 'ACCESS', FALSE, FALSE),
('VIEW', 'View', 'Viewed sensitive data', 'ACCESS', FALSE, TRUE),
('DOWNLOAD', 'Download', 'Downloaded file', 'ACCESS', FALSE, TRUE),
-- Permission Actions
('GRANT_ACCESS', 'Grant Access', 'Granted user access', 'PERMISSION', TRUE, TRUE),
('REVOKE_ACCESS', 'Revoke Access', 'Revoked user access', 'PERMISSION', TRUE, TRUE),
('ROLE_CHANGE', 'Role Change', 'Changed user role', 'PERMISSION', TRUE, TRUE),
-- System Actions
('CONFIG_CHANGE', 'Configuration Change', 'System configuration modified', 'SYSTEM', TRUE, TRUE),
('MAINTENANCE_MODE', 'Maintenance Mode', 'System maintenance mode toggled', 'SYSTEM', TRUE, FALSE),
('BACKUP_CREATE', 'Backup Created', 'Database backup created', 'SYSTEM', FALSE, FALSE);

-- =====================================================
-- TABLE: security_event_type
-- =====================================================
CREATE TABLE IF NOT EXISTS security_event_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    severity_level INT NOT NULL,
    auto_block BOOLEAN DEFAULT FALSE,
    notification_required BOOLEAN DEFAULT TRUE,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_security_event_type_code (code),
    KEY idx_security_event_type_severity (severity_level),
    KEY idx_security_event_type_status (status_type_id),
    CONSTRAINT fk_security_event_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Security event classifications';

-- Insert security event types
INSERT INTO security_event_type (code, name, description, severity_level, auto_block, notification_required) VALUES
('FAILED_LOGIN', 'Failed Login Attempt', 'Invalid login credentials', 1, FALSE, FALSE),
('BRUTE_FORCE', 'Brute Force Attack', 'Multiple failed login attempts', 3, TRUE, TRUE),
('SQL_INJECTION', 'SQL Injection Attempt', 'SQL injection detected', 5, TRUE, TRUE),
('XSS_ATTEMPT', 'XSS Attempt', 'Cross-site scripting attempt', 4, TRUE, TRUE),
('CSRF_ATTEMPT', 'CSRF Attempt', 'Cross-site request forgery', 4, TRUE, TRUE),
('UNAUTHORIZED_ACCESS', 'Unauthorized Access', 'Access to restricted resource', 3, FALSE, TRUE),
('SESSION_HIJACK', 'Session Hijacking', 'Potential session hijacking', 5, TRUE, TRUE),
('DATA_BREACH', 'Data Breach', 'Potential data breach detected', 5, TRUE, TRUE),
('MALWARE_UPLOAD', 'Malware Upload', 'Malicious file upload attempt', 5, TRUE, TRUE),
('API_ABUSE', 'API Abuse', 'Excessive API usage', 2, FALSE, TRUE);

-- =====================================================
-- TABLE: integration_type
-- =====================================================
CREATE TABLE IF NOT EXISTS integration_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50),
    provider VARCHAR(100),
    documentation_url VARCHAR(255),
    requires_api_key BOOLEAN DEFAULT TRUE,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_integration_type_code (code),
    KEY idx_integration_type_category (category),
    KEY idx_integration_type_provider (provider),
    KEY idx_integration_type_status (status_type_id),
    CONSTRAINT fk_integration_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Third-party service integrations';

-- Insert integration types
INSERT INTO integration_type (code, name, description, category, provider, documentation_url, requires_api_key) VALUES
-- Music Services
('SPOTIFY', 'Spotify', 'Spotify streaming platform', 'DSP', 'Spotify', 'https://developer.spotify.com', TRUE),
('APPLE_MUSIC', 'Apple Music', 'Apple Music streaming', 'DSP', 'Apple', 'https://developer.apple.com/musickit', TRUE),
('MUSICBRAINZ', 'MusicBrainz', 'Open music database', 'METADATA', 'MetaBrainz', 'https://musicbrainz.org/doc/MusicBrainz_API', FALSE),
-- PROs
('ASCAP', 'ASCAP', 'American Society of Composers', 'PRO', 'ASCAP', 'https://www.ascap.com/api', TRUE),
('BMI', 'BMI', 'Broadcast Music Inc', 'PRO', 'BMI', 'https://www.bmi.com/api', TRUE),
-- Payment
('STRIPE', 'Stripe', 'Payment processing', 'PAYMENT', 'Stripe', 'https://stripe.com/docs/api', TRUE),
('PAYPAL', 'PayPal', 'Payment processing', 'PAYMENT', 'PayPal', 'https://developer.paypal.com', TRUE),
-- Cloud Services
('AWS_S3', 'Amazon S3', 'Cloud storage', 'STORAGE', 'Amazon', 'https://docs.aws.amazon.com/s3', TRUE),
('DOCUSIGN', 'DocuSign', 'Digital signatures', 'CONTRACT', 'DocuSign', 'https://developers.docusign.com', TRUE),
-- Analytics
('GOOGLE_ANALYTICS', 'Google Analytics', 'Web analytics', 'ANALYTICS', 'Google', 'https://developers.google.com/analytics', TRUE);

-- =====================================================
-- TABLE: webhook_event_type
-- =====================================================
CREATE TABLE IF NOT EXISTS webhook_event_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50),
    payload_template TEXT,
    retry_enabled BOOLEAN DEFAULT TRUE,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_webhook_event_type_code (code),
    KEY idx_webhook_event_type_category (category),
    KEY idx_webhook_event_type_status (status_type_id),
    CONSTRAINT fk_webhook_event_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Webhook event configurations';

-- Insert webhook event types
INSERT INTO webhook_event_type (code, name, description, category, retry_enabled) VALUES
('CATALOG.SONG.CREATED', 'Song Created', 'New song added to catalog', 'CATALOG', TRUE),
('CATALOG.SONG.UPDATED', 'Song Updated', 'Song metadata updated', 'CATALOG', FALSE),
('RIGHTS.SPLIT.UPDATED', 'Rights Split Updated', 'Ownership split changed', 'RIGHTS', TRUE),
('ROYALTY.STATEMENT.READY', 'Statement Ready', 'New royalty statement available', 'ROYALTY', TRUE),
('ROYALTY.PAYMENT.SENT', 'Payment Sent', 'Royalty payment processed', 'ROYALTY', TRUE),
('USER.SUBSCRIPTION.UPDATED', 'Subscription Updated', 'User subscription changed', 'USER', TRUE),
('SYSTEM.MAINTENANCE.SCHEDULED', 'Maintenance Scheduled', 'System maintenance notification', 'SYSTEM', TRUE);

-- =====================================================
-- TABLE: rate_limit_type
-- =====================================================
CREATE TABLE IF NOT EXISTS rate_limit_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    requests_per_minute INT NOT NULL,
    requests_per_hour INT NOT NULL,
    requests_per_day INT NOT NULL,
    burst_size INT DEFAULT 10,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_rate_limit_type_code (code),
    KEY idx_rate_limit_type_status (status_type_id),
    CONSTRAINT fk_rate_limit_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='API rate limiting configurations';

-- Insert rate limit types
INSERT INTO rate_limit_type (code, name, description, requests_per_minute, requests_per_hour, requests_per_day, burst_size) VALUES
('FREE', 'Free Tier', 'Launchpad plan rate limits', 10, 100, 1000, 5),
('ASCEND', 'Ascend Tier', 'Ascend plan rate limits', 60, 1000, 10000, 20),
('PRO', 'Pro Tier', 'Pro plan rate limits', 300, 5000, 50000, 50),
('ENTERPRISE', 'Enterprise Tier', 'Enterprise plan rate limits', 1000, 20000, 500000, 100),
('INTERNAL', 'Internal Services', 'Internal API calls', 10000, 100000, 1000000, 1000);

-- =====================================================
-- TABLE: permission_type
-- =====================================================
CREATE TABLE IF NOT EXISTS permission_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    resource VARCHAR(50),
    action VARCHAR(50),
    scope VARCHAR(50) DEFAULT 'OWN',
    requires_mfa BOOLEAN DEFAULT FALSE,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_permission_type_code (code),
    KEY idx_permission_type_resource (resource),
    KEY idx_permission_type_action (action),
    KEY idx_permission_type_status (status_type_id),
    CONSTRAINT fk_permission_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='System permission definitions';

-- Insert permission types
INSERT INTO permission_type (code, name, description, resource, action, scope, requires_mfa) VALUES
-- Catalog Permissions
('CATALOG_VIEW_OWN', 'View Own Catalog', 'View own songs and recordings', 'CATALOG', 'VIEW', 'OWN', FALSE),
('CATALOG_VIEW_ALL', 'View All Catalog', 'View all catalog items', 'CATALOG', 'VIEW', 'ALL', TRUE),
('CATALOG_CREATE', 'Create Catalog Items', 'Add new songs and recordings', 'CATALOG', 'CREATE', 'OWN', FALSE),
('CATALOG_UPDATE_OWN', 'Update Own Catalog', 'Edit own catalog items', 'CATALOG', 'UPDATE', 'OWN', FALSE),
('CATALOG_DELETE_OWN', 'Delete Own Catalog', 'Delete own catalog items', 'CATALOG', 'DELETE', 'OWN', TRUE),
-- Rights Permissions
('RIGHTS_VIEW_OWN', 'View Own Rights', 'View own rights and splits', 'RIGHTS', 'VIEW', 'OWN', FALSE),
('RIGHTS_MANAGE_OWN', 'Manage Own Rights', 'Modify own rights splits', 'RIGHTS', 'UPDATE', 'OWN', TRUE),
('RIGHTS_APPROVE', 'Approve Rights Changes', 'Approve rights modifications', 'RIGHTS', 'APPROVE', 'ALL', TRUE),
-- Royalty Permissions
('ROYALTY_VIEW_OWN', 'View Own Royalties', 'View own royalty statements', 'ROYALTY', 'VIEW', 'OWN', FALSE),
('ROYALTY_VIEW_ALL', 'View All Royalties', 'View all royalty data', 'ROYALTY', 'VIEW', 'ALL', TRUE),
('ROYALTY_PROCESS', 'Process Royalties', 'Calculate and distribute royalties', 'ROYALTY', 'PROCESS', 'ALL', TRUE),
-- System Permissions
('SYSTEM_ADMIN', 'System Administration', 'Full system administration', 'SYSTEM', 'ADMIN', 'ALL', TRUE),
('USER_MANAGE', 'Manage Users', 'Create and manage users', 'USER', 'MANAGE', 'ALL', TRUE),
('REPORT_GENERATE', 'Generate Reports', 'Create system reports', 'REPORT', 'CREATE', 'ALL', FALSE);

-- =====================================================
-- TABLE: system_config_type
-- =====================================================
CREATE TABLE IF NOT EXISTS system_config_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50),
    data_type VARCHAR(20) DEFAULT 'STRING',
    default_value VARCHAR(255),
    validation_regex VARCHAR(255),
    requires_restart BOOLEAN DEFAULT FALSE,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_system_config_type_code (code),
    KEY idx_system_config_type_category (category),
    KEY idx_system_config_type_status (status_type_id),
    CONSTRAINT fk_system_config_type_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='System configuration parameter definitions';

-- Insert system config types
INSERT INTO system_config_type (code, name, description, category, data_type, default_value, validation_regex, requires_restart) VALUES
-- General Settings
('APP_NAME', 'Application Name', 'Platform display name', 'GENERAL', 'STRING', 'ASTRO', '^[A-Za-z0-9 ]+$', FALSE),
('DEFAULT_TIMEZONE', 'Default Timezone', 'System default timezone', 'GENERAL', 'STRING', 'UTC', '^[A-Za-z/_]+$', FALSE),
('DEFAULT_CURRENCY', 'Default Currency', 'Default currency code', 'GENERAL', 'STRING', 'USD', '^[A-Z]{3}$', FALSE),
-- Security Settings
('SESSION_TIMEOUT', 'Session Timeout', 'Session timeout in minutes', 'SECURITY', 'INTEGER', '30', '^[0-9]+$', FALSE),
('PASSWORD_MIN_LENGTH', 'Password Min Length', 'Minimum password length', 'SECURITY', 'INTEGER', '12', '^[0-9]+$', FALSE),
('MFA_REQUIRED', 'MFA Required', 'Require MFA for all users', 'SECURITY', 'BOOLEAN', 'false', '^(true|false)$', FALSE),
-- Performance Settings
('CACHE_TTL', 'Cache TTL', 'Default cache TTL in seconds', 'PERFORMANCE', 'INTEGER', '3600', '^[0-9]+$', FALSE),
('MAX_UPLOAD_SIZE', 'Max Upload Size', 'Maximum file upload size in MB', 'PERFORMANCE', 'INTEGER', '100', '^[0-9]+$', TRUE),
('WORKER_THREADS', 'Worker Threads', 'Number of worker threads', 'PERFORMANCE', 'INTEGER', '4', '^[0-9]+$', TRUE),
-- Email Settings
('SMTP_HOST', 'SMTP Host', 'Email server hostname', 'EMAIL', 'STRING', 'smtp.sendgrid.net', '^[a-zA-Z0-9.-]+$', FALSE),
('EMAIL_FROM', 'From Email', 'Default from email address', 'EMAIL', 'STRING', 'noreply@astrorightsadmin.com', '^[^@]+@[^@]+$', FALSE);

-- =====================================================
-- TABLE: error_code_category
-- =====================================================
CREATE TABLE IF NOT EXISTS error_code_category (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    http_status_code INT,
    user_message_template TEXT,
    log_level VARCHAR(20) DEFAULT 'ERROR',
    requires_support BOOLEAN DEFAULT FALSE,
    status_type_id INT UNSIGNED NOT NULL DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY uk_error_code_category_code (code),
    KEY idx_error_code_category_http (http_status_code),
    KEY idx_error_code_category_status (status_type_id),
    CONSTRAINT fk_error_code_category_status FOREIGN KEY (status_type_id) 
        REFERENCES status_type(id) ON UPDATE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci
COMMENT='Error code categories and handling';

-- Insert error code categories
INSERT INTO error_code_category (code, name, description, http_status_code, user_message_template, log_level, requires_support) VALUES
-- Client Errors (4xx)
('VALIDATION_ERROR', 'Validation Error', 'Input validation failed', 400, 'The information provided is invalid. Please check and try again.', 'WARN', FALSE),
('AUTH_ERROR', 'Authentication Error', 'Authentication failed', 401, 'Please log in to continue.', 'WARN', FALSE),
('PERMISSION_ERROR', 'Permission Denied', 'Insufficient permissions', 403, 'You don\'t have permission to perform this action.', 'WARN', FALSE),
('NOT_FOUND', 'Resource Not Found', 'Requested resource not found', 404, 'The requested item could not be found.', 'INFO', FALSE),
('RATE_LIMIT', 'Rate Limit Exceeded', 'Too many requests', 429, 'Too many requests. Please try again later.', 'WARN', FALSE),
-- Server Errors (5xx)
('INTERNAL_ERROR', 'Internal Server Error', 'Unexpected server error', 500, 'An unexpected error occurred. Please try again.', 'ERROR', TRUE),
('DATABASE_ERROR', 'Database Error', 'Database operation failed', 500, 'A system error occurred. Our team has been notified.', 'ERROR', TRUE),
('INTEGRATION_ERROR', 'Integration Error', 'Third-party service error', 502, 'External service is temporarily unavailable.', 'ERROR', FALSE),
('TIMEOUT_ERROR', 'Timeout Error', 'Operation timed out', 504, 'The operation took too long. Please try again.', 'ERROR', FALSE),
-- Business Logic Errors
('BUSINESS_RULE', 'Business Rule Violation', 'Business logic constraint', 422, 'This action violates business rules.', 'WARN', FALSE),
('DUPLICATE_ERROR', 'Duplicate Entry', 'Duplicate record exists', 409, 'This item already exists in the system.', 'WARN', FALSE),
('QUOTA_EXCEEDED', 'Quota Exceeded', 'User quota limit reached', 402, 'You have reached your plan limit. Please upgrade.', 'INFO', FALSE);

-- =====================================================
-- Add indexes for better query performance
-- =====================================================
CREATE INDEX idx_event_type_requires_notification ON event_type(requires_notification);
CREATE INDEX idx_module_type_requires_license ON module_type(requires_license);
CREATE INDEX idx_notification_type_channel ON notification_type(default_channel);
CREATE INDEX idx_job_type_cron ON job_type(cron_expression);
CREATE INDEX idx_feature_flag_enabled ON feature_flag(default_enabled);
CREATE INDEX idx_feature_flag_rollout ON feature_flag(rollout_percentage);
CREATE INDEX idx_integration_type_api_key ON integration_type(requires_api_key);
CREATE INDEX idx_permission_type_scope ON permission_type(scope);
CREATE INDEX idx_permission_type_mfa ON permission_type(requires_mfa);
CREATE INDEX idx_system_config_type_restart ON system_config_type(requires_restart);

-- =====================================================
-- Completion message
-- =====================================================
SELECT 'Section 30: SYSTEM tables created successfully!' AS status;
SELECT COUNT(*) AS total_tables FROM information_schema.tables 
WHERE table_schema = 'astro_reference_db' 
AND table_name IN (
    'environment_type', 'log_level', 'event_type', 'module_type', 
    'feature_category', 'system_status', 'deployment_type', 'backup_type',
    'notification_type', 'job_type', 'queue_type', 'cache_type',
    'api_version', 'feature_flag', 'maintenance_type', 'monitoring_type',
    'alert_severity', 'audit_action', 'security_event_type', 'integration_type',
    'webhook_event_type', 'rate_limit_type', 'permission_type', 'system_config_type',
    'error_code_category'
);

-- =====================================================
-- SECTION 31: UNION & PROFESSIONAL ORGS
-- =====================================================

-- Table: union
CREATE TABLE union (
    union_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    union_code VARCHAR(20) NOT NULL,
    union_name VARCHAR(255) NOT NULL,
    union_full_name VARCHAR(500),
    union_type VARCHAR(50) NOT NULL, -- 'musicians', 'actors', 'writers', 'producers', 'engineers', 'mixed'
    founding_year YEAR,
    headquarters_country_code VARCHAR(2),
    headquarters_city VARCHAR(100),
    parent_union_id INT UNSIGNED,
    website_url VARCHAR(255),
    member_count INT UNSIGNED,
    is_international BOOLEAN DEFAULT FALSE,
    accepts_music_professionals BOOLEAN DEFAULT TRUE,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (union_id),
    UNIQUE KEY idx_union_code (union_code),
    KEY idx_union_type (union_type),
    KEY idx_union_country (headquarters_country_code),
    KEY idx_parent_union (parent_union_id),
    KEY idx_union_status (status)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO union (union_code, union_name, union_full_name, union_type, founding_year, headquarters_country_code, headquarters_city, website_url, is_international, status) VALUES
('AFM', 'AFM', 'American Federation of Musicians of the United States and Canada', 'musicians', 1896, 'US', 'New York', 'afm.org', TRUE, 'active'),
('SAG-AFTRA', 'SAG-AFTRA', 'Screen Actors Guild - American Federation of Television and Radio Artists', 'actors', 2012, 'US', 'Los Angeles', 'sagaftra.org', FALSE, 'active'),
('MU', 'Musicians Union', 'Musicians Union of the United Kingdom', 'musicians', 1893, 'GB', 'London', 'musiciansunion.org.uk', FALSE, 'active'),
('EQUITY-US', 'Actors Equity', 'Actors Equity Association', 'actors', 1913, 'US', 'New York', 'actorsequity.org', FALSE, 'active'),
('EQUITY-UK', 'Equity UK', 'Equity United Kingdom', 'actors', 1930, 'GB', 'London', 'equity.org.uk', FALSE, 'active'),
('FIM', 'FIM', 'International Federation of Musicians', 'musicians', 1948, 'FR', 'Paris', 'fim-musicians.org', TRUE, 'active'),
('CFM', 'CFM', 'Canadian Federation of Musicians', 'musicians', 1887, 'CA', 'Toronto', 'cfmusicians.org', FALSE, 'active'),
('MEAA', 'MEAA', 'Media, Entertainment and Arts Alliance', 'mixed', 1992, 'AU', 'Sydney', 'meaa.org', FALSE, 'active'),
('ACTRA', 'ACTRA', 'Alliance of Canadian Cinema, Television and Radio Artists', 'actors', 1943, 'CA', 'Toronto', 'actra.ca', FALSE, 'active'),
('IATSE', 'IATSE', 'International Alliance of Theatrical Stage Employees', 'mixed', 1893, 'US', 'New York', 'iatse.net', TRUE, 'active'),
('DGA', 'DGA', 'Directors Guild of America', 'directors', 1936, 'US', 'Los Angeles', 'dga.org', FALSE, 'active'),
('WGA', 'WGA', 'Writers Guild of America', 'writers', 1954, 'US', 'Los Angeles', 'wga.org', FALSE, 'active'),
('PGA', 'PGA', 'Producers Guild of America', 'producers', 1962, 'US', 'Los Angeles', 'producersguild.org', FALSE, 'active'),
('AGMA', 'AGMA', 'American Guild of Musical Artists', 'musicians', 1936, 'US', 'New York', 'agmanatl.org', FALSE, 'active'),
('AGVA', 'AGVA', 'American Guild of Variety Artists', 'actors', 1939, 'US', 'New York', 'agvausa.com', FALSE, 'active'),
('GMB', 'GMB', 'General, Municipal, Boilermakers and Allied Trade Union', 'mixed', 1889, 'GB', 'London', 'gmb.org.uk', FALSE, 'active'),
('BECTU', 'BECTU', 'Broadcasting, Entertainment, Communications and Theatre Union', 'mixed', 1991, 'GB', 'London', 'bectu.org.uk', FALSE, 'active'),
('FIA', 'FIA', 'International Federation of Actors', 'actors', 1952, 'BE', 'Brussels', 'fia-actors.com', TRUE, 'active'),
('SNTM', 'SNTM', 'Syndicat National des Techniciens de la Musique', 'musicians', 1919, 'FR', 'Paris', 'sntm.fr', FALSE, 'active'),
('UNAC', 'UNAC', 'Union Nationale des Auteurs et Compositeurs', 'writers', 1977, 'FR', 'Paris', 'unac-auteurs-compositeurs.org', FALSE, 'active'),
('GMU', 'GMU', 'German Musicians Union', 'musicians', 1872, 'DE', 'Berlin', 'deutsche-orchestervereinigung.de', FALSE, 'active'),
('SINDIMUSI', 'SINDIMUSI', 'Sindicato dos Músicos do Estado de São Paulo', 'musicians', 1941, 'BR', 'São Paulo', 'sindimusi.org.br', FALSE, 'active'),
('JASRAC-UNION', 'JASRAC Workers', 'Japan Music Workers Union', 'mixed', 1965, 'JP', 'Tokyo', NULL, FALSE, 'active'),
('KOMCA-UNION', 'KOMCA Workers', 'Korea Music Workers Union', 'mixed', 1987, 'KR', 'Seoul', NULL, FALSE, 'active'),
('SOMA', 'SOMA', 'Society of Musicians and Artists', 'musicians', 1951, 'IN', 'Mumbai', NULL, FALSE, 'active'),
('SAMRO-UNION', 'SAMRO Workers', 'South African Music Rights Workers', 'mixed', 1975, 'ZA', 'Johannesburg', NULL, FALSE, 'active'),
('AMEX', 'AMEX', 'Asociación Mexicana de Músicos', 'musicians', 1945, 'MX', 'Mexico City', NULL, FALSE, 'active'),
('SUTERH', 'SUTERH', 'Sindicato Único de Trabajadores del Espectáculo', 'mixed', 1953, 'AR', 'Buenos Aires', NULL, FALSE, 'active'),
('MPGU', 'MPG', 'Music Producers Guild', 'producers', 2000, 'GB', 'London', 'mpg.org.uk', FALSE, 'active'),
('SPARS', 'SPARS', 'Society of Professional Audio Recording Services', 'engineers', 1979, 'US', 'Memphis', 'spars.com', FALSE, 'active');

-- Table: union_local
CREATE TABLE union_local (
    local_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    union_id INT UNSIGNED NOT NULL,
    local_number VARCHAR(20),
    local_name VARCHAR(255) NOT NULL,
    jurisdiction_area VARCHAR(500),
    country_code VARCHAR(2) NOT NULL,
    state_province VARCHAR(100),
    city VARCHAR(100),
    postal_code VARCHAR(20),
    address_line1 VARCHAR(255),
    address_line2 VARCHAR(255),
    phone VARCHAR(50),
    email VARCHAR(255),
    website_url VARCHAR(255),
    member_count INT UNSIGNED,
    charter_date DATE,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (local_id),
    UNIQUE KEY idx_union_local_number (union_id, local_number),
    KEY idx_local_country (country_code),
    KEY idx_local_state (state_province),
    KEY idx_local_city (city),
    KEY idx_local_status (status),
    CONSTRAINT fk_local_union FOREIGN KEY (union_id) REFERENCES union(union_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO union_local (union_id, local_number, local_name, jurisdiction_area, country_code, state_province, city, email, charter_date, status) VALUES
(1, '802', 'AFM Local 802', 'New York City Metropolitan Area', 'US', 'NY', 'New York', 'info@local802afm.org', '1921-08-21', 'active'),
(1, '47', 'AFM Local 47', 'Los Angeles County', 'US', 'CA', 'Los Angeles', 'info@afm47.org', '1897-07-15', 'active'),
(1, '10-208', 'AFM Local 10-208', 'Chicago', 'US', 'IL', 'Chicago', 'info@cfm10208.org', '1901-10-27', 'active'),
(1, '77', 'AFM Local 77', 'Philadelphia', 'US', 'PA', 'Philadelphia', 'info@afm77.org', '1900-06-01', 'active'),
(1, '257', 'AFM Local 257', 'Nashville', 'US', 'TN', 'Nashville', 'info@nashvillemusicians.org', '1902-03-15', 'active'),
(1, '9-535', 'AFM Local 9-535', 'Boston', 'US', 'MA', 'Boston', 'office@bostonmusicians.org', '1900-10-24', 'active'),
(1, '161-710', 'AFM Local 161-710', 'Washington DC', 'US', 'DC', 'Washington', 'office@dcfederation.org', '1896-11-01', 'active'),
(1, '5', 'AFM Local 5', 'Detroit', 'US', 'MI', 'Detroit', 'info@detroitmusicians.org', '1900-04-30', 'active'),
(1, '30-73', 'AFM Local 30-73', 'Twin Cities', 'US', 'MN', 'Minneapolis', 'info@mntwincitiesmusicans.org', '1901-01-01', 'active'),
(1, '369', 'AFM Local 369', 'Las Vegas', 'US', 'NV', 'Las Vegas', 'info@lvmusicians.org', '1954-03-18', 'active'),
(1, '148-462', 'AFM Local 148-462', 'Atlanta', 'US', 'GA', 'Atlanta', 'info@atlantamusicians.com', '1920-05-01', 'active'),
(1, '7', 'AFM Local 7', 'Orange County', 'US', 'CA', 'Santa Ana', 'info@ocmusicians.org', '1921-01-15', 'active'),
(1, '76-493', 'AFM Local 76-493', 'Seattle', 'US', 'WA', 'Seattle', 'info@seattlemusicians.org', '1900-09-08', 'active'),
(1, '180', 'CFM Local 180', 'Ottawa-Gatineau', 'CA', 'ON', 'Ottawa', 'info@musiciansottawa.org', '1905-03-10', 'active'),
(1, '149', 'CFM Local 149', 'Toronto', 'CA', 'ON', 'Toronto', 'info@torontomusicians.org', '1897-05-23', 'active'),
(1, '406', 'CFM Local 406', 'Montreal', 'CA', 'QC', 'Montreal', 'info@gmmq.com', '1903-04-15', 'active'),
(1, '145', 'CFM Local 145', 'Vancouver', 'CA', 'BC', 'Vancouver', 'info@musiciansvancouver.ca', '1901-11-30', 'active'),
(1, '571', 'CFM Local 571', 'Halifax', 'CA', 'NS', 'Halifax', 'info@halifaxmusicians.ca', '1909-06-01', 'active'),
(1, '247', 'CFM Local 247', 'Victoria', 'CA', 'BC', 'Victoria', 'info@cfm247.com', '1902-08-20', 'active'),
(1, '547', 'CFM Local 547', 'Calgary', 'CA', 'AB', 'Calgary', 'info@calgarymusicians.org', '1914-02-28', 'active'),
(1, '390', 'CFM Local 390', 'Edmonton', 'CA', 'AB', 'Edmonton', 'info@edmontonmusicians.org', '1911-09-15', 'active'),
(1, '518', 'CFM Local 518', 'Regina', 'CA', 'SK', 'Regina', 'info@reginamusicians.org', '1919-12-01', 'active'),
(1, '553', 'CFM Local 553', 'Saskatoon', 'CA', 'SK', 'Saskatoon', 'info@saskatoonmusicians.org', '1921-04-10', 'active'),
(1, '189', 'CFM Local 189', 'Winnipeg', 'CA', 'MB', 'Winnipeg', 'info@winnipegmusicians.org', '1901-07-01', 'active'),
(1, '855', 'AFM Local 855', 'Tucson', 'US', 'AZ', 'Tucson', 'info@tucsonmusicians.org', '1950-08-25', 'active'),
(1, '586', 'AFM Local 586', 'Phoenix', 'US', 'AZ', 'Phoenix', 'info@phoenixmusicians.org', '1913-10-12', 'active'),
(1, '20-623', 'AFM Local 20-623', 'Denver', 'US', 'CO', 'Denver', 'info@denvermusicians.org', '1908-01-20', 'active'),
(1, '655', 'AFM Local 655', 'Miami', 'US', 'FL', 'Miami', 'info@afm655.org', '1940-11-15', 'active'),
(1, '444', 'AFM Local 444', 'Jacksonville', 'US', 'FL', 'Jacksonville', 'info@afm444.org', '1935-05-30', 'active'),
(1, '427', 'AFM Local 427', 'Tampa Bay', 'US', 'FL', 'Tampa', 'info@afm427.org', '1924-03-01', 'active');

-- Table: professional_organization
CREATE TABLE professional_organization (
    org_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    org_code VARCHAR(20) NOT NULL,
    org_name VARCHAR(255) NOT NULL,
    org_full_name VARCHAR(500),
    org_type VARCHAR(50) NOT NULL, -- 'trade_association', 'professional_society', 'awards_body', 'standards_org', 'advocacy_group'
    industry_focus VARCHAR(100), -- 'recording', 'live_music', 'songwriting', 'production', 'engineering', 'business', 'education'
    founding_year YEAR,
    headquarters_country_code VARCHAR(2),
    headquarters_city VARCHAR(100),
    parent_org_id INT UNSIGNED,
    website_url VARCHAR(255),
    member_count INT UNSIGNED,
    membership_type VARCHAR(50), -- 'individual', 'corporate', 'both'
    is_international BOOLEAN DEFAULT FALSE,
    is_nonprofit BOOLEAN DEFAULT TRUE,
    annual_conference BOOLEAN DEFAULT FALSE,
    certification_provider BOOLEAN DEFAULT FALSE,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (org_id),
    UNIQUE KEY idx_org_code (org_code),
    KEY idx_org_type (org_type),
    KEY idx_industry_focus (industry_focus),
    KEY idx_org_country (headquarters_country_code),
    KEY idx_parent_org (parent_org_id),
    KEY idx_org_status (status)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO professional_organization (org_code, org_name, org_full_name, org_type, industry_focus, founding_year, headquarters_country_code, headquarters_city, website_url, membership_type, is_international, annual_conference, certification_provider, status) VALUES
('RIAA', 'RIAA', 'Recording Industry Association of America', 'trade_association', 'recording', 1952, 'US', 'Washington', 'riaa.com', 'corporate', FALSE, FALSE, FALSE, 'active'),
('NARAS', 'Recording Academy', 'The Recording Academy', 'awards_body', 'recording', 1957, 'US', 'Santa Monica', 'grammy.com', 'individual', FALSE, TRUE, FALSE, 'active'),
('AES', 'AES', 'Audio Engineering Society', 'professional_society', 'engineering', 1948, 'US', 'New York', 'aes.org', 'both', TRUE, TRUE, TRUE, 'active'),
('NMPA', 'NMPA', 'National Music Publishers Association', 'trade_association', 'songwriting', 1917, 'US', 'Washington', 'nmpa.org', 'corporate', FALSE, TRUE, FALSE, 'active'),
('NSAI', 'NSAI', 'Nashville Songwriters Association International', 'professional_society', 'songwriting', 1967, 'US', 'Nashville', 'nashvillesongwriters.com', 'individual', TRUE, TRUE, FALSE, 'active'),
('A2IM', 'A2IM', 'American Association of Independent Music', 'trade_association', 'recording', 2005, 'US', 'New York', 'a2im.org', 'corporate', FALSE, TRUE, FALSE, 'active'),
('CMA', 'CMA', 'Country Music Association', 'awards_body', 'recording', 1958, 'US', 'Nashville', 'cmaworld.com', 'both', FALSE, TRUE, FALSE, 'active'),
('IFPI', 'IFPI', 'International Federation of the Phonographic Industry', 'trade_association', 'recording', 1933, 'GB', 'London', 'ifpi.org', 'corporate', TRUE, TRUE, FALSE, 'active'),
('WIN', 'WIN', 'Worldwide Independent Network', 'trade_association', 'recording', 2006, 'GB', 'London', 'winformusic.org', 'corporate', TRUE, TRUE, FALSE, 'active'),
('IMPALA', 'IMPALA', 'Independent Music Companies Association', 'trade_association', 'recording', 2000, 'BE', 'Brussels', 'impalamusic.org', 'corporate', TRUE, FALSE, FALSE, 'active'),
('MMF', 'MMF', 'Music Managers Forum', 'professional_society', 'business', 1992, 'GB', 'London', 'themmf.net', 'individual', FALSE, TRUE, FALSE, 'active'),
('AARC', 'AARC', 'Alliance of Artists and Recording Companies', 'advocacy_group', 'recording', 1994, 'US', 'Washington', 'aarcroyalties.com', 'both', FALSE, FALSE, FALSE, 'active'),
('AFM-EPF', 'AFM-EPF', 'AFM & SAG-AFTRA Fund', 'advocacy_group', 'recording', 1959, 'US', 'Los Angeles', 'afmsagaftrafund.org', 'corporate', FALSE, FALSE, FALSE, 'active'),
('SGA', 'SGA', 'Songwriters Guild of America', 'professional_society', 'songwriting', 1931, 'US', 'Nashville', 'songwritersguild.com', 'individual', FALSE, TRUE, FALSE, 'active'),
('SCL', 'SCL', 'Society of Composers & Lyricists', 'professional_society', 'songwriting', 1945, 'US', 'Los Angeles', 'thescl.com', 'individual', FALSE, TRUE, FALSE, 'active'),
('LARAS', 'Latin Academy', 'Latin Academy of Recording Arts & Sciences', 'awards_body', 'recording', 1997, 'US', 'Miami', 'latingrammy.com', 'individual', TRUE, TRUE, FALSE, 'active'),
('BPI', 'BPI', 'British Phonographic Industry', 'trade_association', 'recording', 1973, 'GB', 'London', 'bpi.co.uk', 'corporate', FALSE, TRUE, FALSE, 'active'),
('SNEP', 'SNEP', 'Syndicat National de l\'Édition Phonographique', 'trade_association', 'recording', 1922, 'FR', 'Paris', 'snep.fr', 'corporate', FALSE, FALSE, FALSE, 'active'),
('BVMI', 'BVMI', 'Bundesverband Musikindustrie', 'trade_association', 'recording', 1958, 'DE', 'Berlin', 'musikindustrie.de', 'corporate', FALSE, TRUE, FALSE, 'active'),
('PROMUSICAE', 'PROMUSICAE', 'Productores de Música de España', 'trade_association', 'recording', 1958, 'ES', 'Madrid', 'promusicae.es', 'corporate', FALSE, FALSE, FALSE, 'active'),
('FIMI', 'FIMI', 'Federazione Industria Musicale Italiana', 'trade_association', 'recording', 1992, 'IT', 'Milan', 'fimi.it', 'corporate', FALSE, FALSE, FALSE, 'active'),
('RIAJ', 'RIAJ', 'Recording Industry Association of Japan', 'trade_association', 'recording', 1942, 'JP', 'Tokyo', 'riaj.or.jp', 'corporate', FALSE, FALSE, FALSE, 'active'),
('KMCA', 'KMCA', 'Korea Music Content Association', 'trade_association', 'recording', 2008, 'KR', 'Seoul', 'kmca.or.kr', 'corporate', FALSE, FALSE, FALSE, 'active'),
('ABPD', 'ABPD', 'Associação Brasileira dos Produtores de Discos', 'trade_association', 'recording', 1958, 'BR', 'Rio de Janeiro', 'pro-musicabrasil.org.br', 'corporate', FALSE, FALSE, FALSE, 'active'),
('IAMIC', 'IAMIC', 'International Association of Music Information Centres', 'professional_society', 'education', 1958, 'AT', 'Vienna', 'iamic.net', 'both', TRUE, TRUE, FALSE, 'active'),
('IMMF', 'IMMF', 'International Music Managers Forum', 'professional_society', 'business', 1993, 'GB', 'London', 'immf.com', 'individual', TRUE, TRUE, FALSE, 'active'),
('CIAM', 'CIAM', 'International Council of Music Creators', 'advocacy_group', 'songwriting', 1966, 'FR', 'Paris', 'ciamcreators.org', 'both', TRUE, TRUE, FALSE, 'active'),
('ECSA', 'ECSA', 'European Composer and Songwriter Alliance', 'advocacy_group', 'songwriting', 2007, 'BE', 'Brussels', 'composeralliance.org', 'both', TRUE, FALSE, FALSE, 'active'),
('IMPF', 'IMPF', 'Independent Music Publishers International Forum', 'trade_association', 'songwriting', 2000, 'BE', 'Brussels', 'impforum.org', 'corporate', TRUE, TRUE, FALSE, 'active'),
('MPA', 'MPA', 'Music Publishers Association', 'trade_association', 'songwriting', 1881, 'GB', 'London', 'mpagroup.org.uk', 'corporate', FALSE, FALSE, FALSE, 'active');

-- Table: union_jurisdiction
CREATE TABLE union_jurisdiction (
    jurisdiction_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    union_id INT UNSIGNED NOT NULL,
    local_id INT UNSIGNED,
    jurisdiction_type VARCHAR(50) NOT NULL, -- 'geographic', 'trade', 'venue', 'media_type', 'employment_type'
    jurisdiction_name VARCHAR(255) NOT NULL,
    country_code VARCHAR(2),
    state_province VARCHAR(100),
    cities TEXT, -- comma-separated list
    postal_codes TEXT, -- comma-separated list or ranges
    trade_categories TEXT, -- for trade jurisdictions
    venue_types TEXT, -- for venue jurisdictions
    media_types TEXT, -- for media jurisdictions
    employment_types TEXT, -- for employment jurisdictions
    notes TEXT,
    effective_date DATE,
    expiry_date DATE,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (jurisdiction_id),
    KEY idx_jurisdiction_union (union_id),
    KEY idx_jurisdiction_local (local_id),
    KEY idx_jurisdiction_type (jurisdiction_type),
    KEY idx_jurisdiction_country (country_code),
    KEY idx_jurisdiction_status (status),
    CONSTRAINT fk_jurisdiction_union FOREIGN KEY (union_id) REFERENCES union(union_id),
    CONSTRAINT fk_jurisdiction_local FOREIGN KEY (local_id) REFERENCES union_local(local_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO union_jurisdiction (union_id, local_id, jurisdiction_type, jurisdiction_name, country_code, state_province, cities, trade_categories, venue_types, media_types, employment_types, effective_date, status) VALUES
(1, 1, 'geographic', 'NYC Five Boroughs', 'US', 'NY', 'Manhattan,Brooklyn,Queens,Bronx,Staten Island', NULL, NULL, NULL, NULL, '1921-08-21', 'active'),
(1, 1, 'venue', 'Broadway Theaters', 'US', 'NY', 'Manhattan', NULL, 'broadway_theater,off_broadway', NULL, NULL, '1921-08-21', 'active'),
(1, 2, 'geographic', 'Los Angeles County', 'US', 'CA', 'Los Angeles,Burbank,Glendale,Pasadena,Long Beach', NULL, NULL, NULL, NULL, '1897-07-15', 'active'),
(1, 2, 'media_type', 'Film and TV Recording', 'US', 'CA', NULL, NULL, NULL, 'film_score,tv_score,film_soundtrack,tv_soundtrack', NULL, '1930-01-01', 'active'),
(1, 3, 'geographic', 'Chicago Metro', 'US', 'IL', 'Chicago,Evanston,Oak Park,Cicero', NULL, NULL, NULL, NULL, '1901-10-27', 'active'),
(1, 5, 'geographic', 'Nashville Davidson County', 'US', 'TN', 'Nashville,Brentwood,Franklin', NULL, NULL, NULL, NULL, '1902-03-15', 'active'),
(1, 5, 'trade', 'Recording Studios', 'US', 'TN', 'Nashville', 'recording_musician,studio_musician', 'recording_studio', NULL, NULL, '1950-01-01', 'active'),
(2, NULL, 'media_type', 'Television and Radio', 'US', NULL, NULL, NULL, NULL, 'television,radio,streaming,podcast', 'performer,voice_actor', '2012-03-30', 'active'),
(2, NULL, 'media_type', 'Motion Pictures', 'US', NULL, NULL, NULL, NULL, 'theatrical_film,direct_to_streaming', 'actor,singer,dancer', '2012-03-30', 'active'),
(3, NULL, 'geographic', 'United Kingdom', 'GB', NULL, NULL, NULL, NULL, NULL, NULL, '1893-01-01', 'active'),
(3, NULL, 'venue', 'UK Venues', 'GB', NULL, NULL, NULL, 'concert_hall,theater,club,festival,arena', NULL, NULL, '1893-01-01', 'active'),
(7, 15, 'geographic', 'Greater Toronto Area', 'CA', 'ON', 'Toronto,Mississauga,Brampton,Markham,Vaughan', NULL, NULL, NULL, NULL, '1897-05-23', 'active'),
(7, 16, 'geographic', 'Montreal Region', 'CA', 'QC', 'Montreal,Laval,Longueuil', NULL, NULL, NULL, NULL, '1903-04-15', 'active'),
(7, 17, 'geographic', 'Metro Vancouver', 'CA', 'BC', 'Vancouver,Burnaby,Richmond,Surrey', NULL, NULL, NULL, NULL, '1901-11-30', 'active'),
(10, NULL, 'trade', 'Stage and Production', 'US', NULL, NULL, 'stagehand,lighting,sound,rigging,wardrobe', NULL, NULL, NULL, '1893-01-01', 'active'),
(10, NULL, 'venue', 'Theatrical Venues', 'US', NULL, NULL, NULL, 'theater,concert_venue,convention_center,arena', NULL, NULL, '1893-01-01', 'active');

-- Table: union_membership_type
CREATE TABLE union_membership_type (
    membership_type_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    union_id INT UNSIGNED NOT NULL,
    type_code VARCHAR(20) NOT NULL,
    type_name VARCHAR(100) NOT NULL,
    description TEXT,
    eligibility_criteria TEXT,
    initiation_fee DECIMAL(10,2),
    annual_dues DECIMAL(10,2),
    work_dues_percentage DECIMAL(5,2), -- percentage of gross earnings
    voting_rights BOOLEAN DEFAULT TRUE,
    can_hold_office BOOLEAN DEFAULT TRUE,
    insurance_eligible BOOLEAN DEFAULT TRUE,
    pension_eligible BOOLEAN DEFAULT TRUE,
    min_earnings_requirement DECIMAL(10,2),
    probation_period_days INT,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (membership_type_id),
    UNIQUE KEY idx_union_type_code (union_id, type_code),
    KEY idx_membership_union (union_id),
    KEY idx_membership_status (status),
    CONSTRAINT fk_membership_type_union FOREIGN KEY (union_id) REFERENCES union(union_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO union_membership_type (union_id, type_code, type_name, description, eligibility_criteria, initiation_fee, annual_dues, work_dues_percentage, voting_rights, can_hold_office, insurance_eligible, pension_eligible, min_earnings_requirement, probation_period_days, status) VALUES
(1, 'REGULAR', 'Regular Member', 'Full membership with all rights and benefits', 'Professional musician with qualifying experience', 100.00, 210.00, 2.25, TRUE, TRUE, TRUE, TRUE, NULL, NULL, 'active'),
(1, 'LIFE', 'Life Member', 'Lifetime membership for qualifying members', '35+ years of membership in good standing', 0.00, 0.00, 2.25, TRUE, TRUE, TRUE, TRUE, NULL, NULL, 'active'),
(1, 'YOUTH', 'Youth Member', 'Membership for musicians under 21', 'Under 21 years of age', 50.00, 105.00, 2.25, FALSE, FALSE, FALSE, FALSE, NULL, NULL, 'active'),
(1, 'STUDENT', 'Student Member', 'Membership for music students', 'Enrolled in accredited music program', 35.00, 70.00, 2.25, FALSE, FALSE, FALSE, FALSE, NULL, NULL, 'active'),
(2, 'PRINCIPAL', 'Principal Performer', 'Full SAG-AFTRA membership', 'Worked under SAG-AFTRA jurisdiction', 3000.00, 224.00, 2.00, TRUE, TRUE, TRUE, TRUE, NULL, NULL, 'active'),
(2, 'BACKGROUND', 'Background Performer', 'Limited membership for extras', 'Worked as background in SAG-AFTRA production', 100.00, 224.00, 2.00, TRUE, FALSE, TRUE, TRUE, NULL, 30, 'active'),
(2, 'FI-CORE', 'Financial Core', 'Fee-paying non-member', 'Opted for financial core status', 3000.00, 224.00, 2.00, FALSE, FALSE, FALSE, FALSE, NULL, NULL, 'active'),
(3, 'FULL', 'Full Member', 'Complete MU membership', 'Professional musician in UK', 30.00, 215.00, NULL, TRUE, TRUE, TRUE, TRUE, NULL, NULL, 'active'),
(3, 'STUDENT', 'Student Member', 'Discounted student rate', 'Full-time music student', 0.00, 20.00, NULL, FALSE, FALSE, FALSE, FALSE, NULL, NULL, 'active'),
(3, 'RETIRED', 'Retired Member', 'For retired musicians', '20+ years membership, age 65+', 0.00, 53.75, NULL, TRUE, FALSE, TRUE, TRUE, NULL, NULL, 'active'),
(4, 'MEMBER', 'Member', 'Full Equity membership', 'Professional stage performer', 176.00, 176.00, 2.25, TRUE, TRUE, TRUE, TRUE, 15000.00, NULL, 'active'),
(4, 'EMC', 'EMC Candidate', 'Equity Membership Candidate', 'Working towards full membership', 200.00, 0.00, NULL, FALSE, FALSE, FALSE, FALSE, NULL, NULL, 'active'),
(7, 'REGULAR', 'Regular Member', 'Standard CFM membership', 'Professional musician in Canada', 185.00, 185.00, 1.00, TRUE, TRUE, TRUE, TRUE, NULL, NULL, 'active'),
(7, 'LIFE', 'Life Member', 'Honorary lifetime membership', '35+ years continuous membership', 0.00, 0.00, 1.00, TRUE, TRUE, TRUE, TRUE, NULL, NULL, 'active'),
(10, 'JOURNEYMAN', 'Journeyman', 'Full IATSE member', 'Completed apprenticeship', 1600.00, 300.00, 3.00, TRUE, TRUE, TRUE, TRUE, NULL, NULL, 'active'),
(10, 'APPRENTICE', 'Apprentice', 'Learning member', 'Accepted into apprentice program', 100.00, 150.00, 3.00, FALSE, FALSE, TRUE, FALSE, NULL, NULL, 'active');

-- Table: union_benefit
CREATE TABLE union_benefit (
    benefit_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    union_id INT UNSIGNED NOT NULL,
    benefit_code VARCHAR(20) NOT NULL,
    benefit_name VARCHAR(255) NOT NULL,
    benefit_type VARCHAR(50) NOT NULL, -- 'health', 'pension', 'insurance', 'legal', 'education', 'emergency', 'discount'
    provider_name VARCHAR(255),
    description TEXT,
    eligibility_requirements TEXT,
    coverage_details TEXT,
    enrollment_process TEXT,
    cost_to_member DECIMAL(10,2),
    employer_contribution DECIMAL(10,2),
    waiting_period_days INT,
    coverage_start_date DATE,
    coverage_end_date DATE,
    is_portable BOOLEAN DEFAULT FALSE,
    applies_to_dependents BOOLEAN DEFAULT FALSE,
    max_dependents INT,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (benefit_id),
    UNIQUE KEY idx_union_benefit_code (union_id, benefit_code),
    KEY idx_benefit_union (union_id),
    KEY idx_benefit_type (benefit_type),
    KEY idx_benefit_status (status),
    CONSTRAINT fk_benefit_union FOREIGN KEY (union_id) REFERENCES union(union_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO union_benefit (union_id, benefit_code, benefit_name, benefit_type, provider_name, description, eligibility_requirements, cost_to_member, employer_contribution, waiting_period_days, is_portable, applies_to_dependents, max_dependents, status) VALUES
(1, 'AFM-EPF', 'AFM-EP Fund', 'pension', 'AFM & Employers Pension Fund', 'Defined benefit pension plan', 'Work under AFM contracts', 0.00, NULL, 0, TRUE, FALSE, 0, 'active'),
(1, 'HEALTH', 'Health Insurance', 'health', 'Various providers', 'Group health insurance plans', 'Active membership', NULL, NULL, 90, TRUE, TRUE, NULL, 'active'),
(1, 'LIFE', 'Life Insurance', 'insurance', 'AFM Group Life', 'Group life insurance', 'Active membership', 26.00, 0.00, 180, TRUE, FALSE, 0, 'active'),
(1, 'INSTRUMENT', 'Instrument Insurance', 'insurance', 'Heritage Insurance', 'Musical instrument coverage', 'Active membership', NULL, 0.00, 0, TRUE, FALSE, 0, 'active'),
(1, 'LEGAL', 'Contract Administration', 'legal', 'AFM Legal Dept', 'Contract review and enforcement', 'Active membership', 0.00, 0.00, 0, TRUE, FALSE, 0, 'active'),
(2, 'HEALTH', 'SAG-AFTRA Health Plan', 'health', 'SAG-AFTRA Health Plan', 'Comprehensive health coverage', 'Meet earnings threshold', 0.00, NULL, 0, TRUE, TRUE, NULL, 'active'),
(2, 'PENSION', 'SAG-AFTRA Pension', 'pension', 'SAG-AFTRA Producers Pension Plan', 'Defined benefit pension', 'Vested after 5 years', 0.00, NULL, 0, TRUE, FALSE, 0, 'active'),
(2, 'DENTAL', 'Dental Coverage', 'health', 'SAG-AFTRA Health Plan', 'Dental insurance', 'Qualify for health plan', 0.00, NULL, 0, TRUE, TRUE, NULL, 'active'),
(2, 'VISION', 'Vision Coverage', 'health', 'SAG-AFTRA Health Plan', 'Vision insurance', 'Qualify for health plan', 0.00, NULL, 0, TRUE, TRUE, NULL, 'active'),
(3, 'INSURANCE', 'Instrument Insurance', 'insurance', 'MU Insurance Services', 'Comprehensive instrument cover', 'Active membership', NULL, 0.00, 0, TRUE, FALSE, 0, 'active'),
(3, 'LIABILITY', 'Public Liability', 'insurance', 'MU Insurance Services', '£10m public liability cover', 'Active membership', 0.00, 0.00, 0, TRUE, FALSE, 0, 'active'),
(3, 'LEGAL', 'Legal Assistance', 'legal', 'MU Legal Team', 'Contract and legal advice', 'Active membership', 0.00, 0.00, 0, TRUE, FALSE, 0, 'active'),
(3, 'CAREER', 'Career Development', 'education', 'MU Education', 'Professional development', 'Active membership', 0.00, 0.00, 0, TRUE, FALSE, 0, 'active'),
(4, 'HEALTH', 'Equity Health', 'health', 'The Actors Fund', 'Health insurance assistance', 'Working member', NULL, NULL, 0, TRUE, TRUE, NULL, 'active'),
(4, 'PENSION', 'Equity Pension', 'pension', 'Equity-League Pension', 'Defined contribution plan', 'Vested after 5 years', 0.00, NULL, 0, TRUE, FALSE, 0, 'active'),
(4, 'HOUSING', 'Housing Assistance', 'emergency', 'The Actors Fund', 'Emergency housing support', 'Member in need', 0.00, 0.00, 0, FALSE, TRUE, NULL, 'active'),
(7, 'PENSION', 'Musicians Pension', 'pension', 'Musicians Pension Fund Canada', 'Registered pension plan', 'CFM contracts', 0.00, NULL, 0, TRUE, FALSE, 0, 'active'),
(7, 'TRAVEL', 'Travel Insurance', 'insurance', 'CFM Insurance', 'Emergency travel medical', 'Active membership', 50.00, 0.00, 30, TRUE, TRUE, NULL, 'active'),
(10, 'HEALTH', 'IATSE Health', 'health', 'Motion Picture Health Plan', 'Comprehensive health', 'Hour bank qualified', 0.00, NULL, 0, TRUE, TRUE, NULL, 'active'),
(10, 'PENSION', 'IATSE Pension', 'pension', 'Motion Picture Pension', 'Defined benefit plan', 'Vested after 5 years', 0.00, NULL, 0, TRUE, FALSE, 0, 'active'),
(10, 'TRAINING', 'Safety Training', 'education', 'IATSE Training Trust', 'Professional safety courses', 'Active membership', 0.00, 0.00, 0, TRUE, FALSE, 0, 'active');

-- Table: union_rate_card
CREATE TABLE union_rate_card (
    rate_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    union_id INT UNSIGNED NOT NULL,
    local_id INT UNSIGNED,
    rate_category VARCHAR(100) NOT NULL, -- 'recording', 'live_performance', 'rehearsal', 'broadcast', 'streaming'
    rate_type VARCHAR(50) NOT NULL, -- 'minimum', 'scale', 'overtime', 'premium'
    description VARCHAR(500),
    base_rate DECIMAL(10,2) NOT NULL,
    rate_unit VARCHAR(20) NOT NULL, -- 'hourly', 'daily', 'weekly', 'per_service', 'per_song'
    currency_code VARCHAR(3) DEFAULT 'USD',
    overtime_multiplier DECIMAL(3,2) DEFAULT 1.5,
    double_time_multiplier DECIMAL(3,2) DEFAULT 2.0,
    minimum_call_hours DECIMAL(4,2),
    travel_rate DECIMAL(10,2),
    cartage_rate DECIMAL(10,2),
    meal_penalty DECIMAL(10,2),
    rest_penalty DECIMAL(10,2),
    holiday_multiplier DECIMAL(3,2) DEFAULT 1.5,
    effective_date DATE NOT NULL,
    expiry_date DATE,
    contract_reference VARCHAR(100),
    notes TEXT,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (rate_id),
    KEY idx_rate_union (union_id),
    KEY idx_rate_local (local_id),
    KEY idx_rate_category (rate_category),
    KEY idx_rate_type (rate_type),
    KEY idx_rate_dates (effective_date, expiry_date),
    KEY idx_rate_status (status),
    CONSTRAINT fk_rate_union FOREIGN KEY (union_id) REFERENCES union(union_id),
    CONSTRAINT fk_rate_local FOREIGN KEY (local_id) REFERENCES union_local(local_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO union_rate_card (union_id, local_id, rate_category, rate_type, description, base_rate, rate_unit, currency_code, overtime_multiplier, double_time_multiplier, minimum_call_hours, travel_rate, cartage_rate, meal_penalty, effective_date, expiry_date, contract_reference, status) VALUES
(1, 1, 'recording', 'scale', 'Basic Recording Session Scale', 472.37, 'per_service', 'USD', 1.5, 2.0, 3.0, 100.00, 50.00, 20.00, '2024-01-01', '2026-12-31', 'AFM Basic Agreement 2024', 'active'),
(1, 1, 'live_performance', 'minimum', 'Club Date Minimum', 188.00, 'per_service', 'USD', 1.5, 2.0, 3.0, 50.00, 30.00, NULL, '2024-01-01', '2026-12-31', 'Local 802 Club Date', 'active'),
(1, 1, 'broadcast', 'scale', 'TV/Radio Broadcast', 366.85, 'per_service', 'USD', 1.5, 2.0, 3.0, 100.00, 50.00, 20.00, '2024-01-01', '2026-12-31', 'AFM Broadcast Agreement', 'active'),
(1, 2, 'recording', 'scale', 'Motion Picture Recording', 512.98, 'per_service', 'USD', 1.5, 2.0, 3.0, 150.00, 75.00, 25.00, '2024-01-01', '2026-12-31', 'AFM Motion Picture', 'active'),
(1, 2, 'live_performance', 'minimum', 'Casual Engagement', 175.00, 'per_service', 'USD', 1.5, 2.0, 3.0, 50.00, 30.00, NULL, '2024-01-01', '2026-12-31', 'Local 47 Casual', 'active'),
(1, 5, 'recording', 'scale', 'Master Recording Scale', 412.50, 'per_service', 'USD', 1.5, 2.0, 3.0, 75.00, 40.00, 15.00, '2024-01-01', '2026-12-31', 'AFM Sound Recording', 'active'),
(1, 5, 'live_performance', 'minimum', 'Nashville Club Minimum', 150.00, 'per_service', 'USD', 1.5, 2.0, 3.0, 40.00, 25.00, NULL, '2024-01-01', '2026-12-31', 'Local 257 Club', 'active'),
(2, NULL, 'broadcast', 'scale', 'Network TV Day Rate', 1082.00, 'daily', 'USD', 1.5, 2.0, 8.0, NULL, NULL, 15.00, '2024-01-01', '2025-12-31', 'SAG-AFTRA TV Agreement', 'active'),
(2, NULL, 'broadcast', 'scale', 'Cable TV Day Rate', 737.00, 'daily', 'USD', 1.5, 2.0, 8.0, NULL, NULL, 15.00, '2024-01-01', '2025-12-31', 'SAG-AFTRA Cable Agreement', 'active'),
(2, NULL, 'streaming', 'scale', 'Streaming Platform Day Rate', 820.00, 'daily', 'USD', 1.5, 2.0, 8.0, NULL, NULL, 15.00, '2024-01-01', '2025-12-31', 'SAG-AFTRA New Media', 'active'),
(3, NULL, 'recording', 'minimum', 'Studio Session Minimum', 163.00, 'per_service', 'GBP', 1.5, 2.0, 3.0, 50.00, 30.00, NULL, '2024-01-01', '2025-12-31', 'MU Recording Agreement', 'active'),
(3, NULL, 'live_performance', 'minimum', 'Concert Minimum', 127.00, 'per_service', 'GBP', 1.5, 2.0, 3.0, 40.00, 25.00, NULL, '2024-01-01', '2025-12-31', 'MU Live Agreement', 'active'),
(7, 15, 'recording', 'scale', 'Toronto Recording Scale', 385.00, 'per_service', 'CAD', 1.5, 2.0, 3.0, 75.00, 40.00, 15.00, '2024-01-01', '2025-12-31', 'CFM Master Agreement', 'active'),
(7, 15, 'live_performance', 'minimum', 'Toronto Symphony Scale', 156.00, 'per_service', 'CAD', 1.5, 2.0, 2.5, 40.00, 25.00, NULL, '2024-01-01', '2025-12-31', 'Toronto Symphony CBA', 'active'),
(10, NULL, 'live_performance', 'hourly', 'Stagehand Hourly', 38.50, 'hourly', 'USD', 1.5, 2.0, 4.0, 38.50, NULL, 12.00, '2024-01-01', '2025-12-31', 'IATSE Basic Agreement', 'active'),
(10, NULL, 'broadcast', 'hourly', 'Broadcast Tech Hourly', 45.75, 'hourly', 'USD', 1.5, 2.0, 8.0, 45.75, NULL, 15.00, '2024-01-01', '2025-12-31', 'IATSE Broadcast', 'active');

-- Table: professional_certification
CREATE TABLE professional_certification (
    certification_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    org_id INT UNSIGNED NOT NULL,
    cert_code VARCHAR(20) NOT NULL,
    cert_name VARCHAR(255) NOT NULL,
    cert_level VARCHAR(50), -- 'entry', 'intermediate', 'advanced', 'specialist'
    description TEXT,
    prerequisites TEXT,
    exam_required BOOLEAN DEFAULT TRUE,
    exam_format VARCHAR(100), -- 'written', 'practical', 'both', 'portfolio'
    training_hours_required INT,
    experience_years_required INT,
    continuing_education_required BOOLEAN DEFAULT TRUE,
    ce_hours_per_year INT,
    certification_period_years INT DEFAULT 3,
    recertification_process TEXT,
    exam_fee DECIMAL(10,2),
    certification_fee DECIMAL(10,2),
    annual_maintenance_fee DECIMAL(10,2),
    accrediting_body VARCHAR(255),
    industry_recognition VARCHAR(50), -- 'high', 'moderate', 'emerging'
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (certification_id),
    UNIQUE KEY idx_org_cert_code (org_id, cert_code),
    KEY idx_cert_org (org_id),
    KEY idx_cert_level (cert_level),
    KEY idx_cert_status (status),
    CONSTRAINT fk_certification_org FOREIGN KEY (org_id) REFERENCES professional_organization(org_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO professional_certification (org_id, cert_code, cert_name, cert_level, description, prerequisites, exam_required, exam_format, training_hours_required, experience_years_required, continuing_education_required, ce_hours_per_year, certification_period_years, exam_fee, certification_fee, annual_maintenance_fee, industry_recognition, status) VALUES
(3, 'CAS', 'Certified Audio Specialist', 'intermediate', 'Professional audio system design certification', 'Bachelor degree or equivalent experience', TRUE, 'written', 40, 2, TRUE, 8, 3, 350.00, 150.00, 75.00, 'high', 'active'),
(3, 'CAS-D', 'CAS Designer', 'advanced', 'Advanced audio system design', 'CAS certification', TRUE, 'both', 80, 4, TRUE, 12, 3, 500.00, 200.00, 100.00, 'high', 'active'),
(3, 'CAAA', 'Certified Audio Analytics', 'specialist', 'Audio measurement and analysis', 'Engineering background', TRUE, 'practical', 60, 3, TRUE, 10, 3, 450.00, 175.00, 85.00, 'moderate', 'active'),
(29, 'RIAA-GOLD', 'Gold Record Auditor', 'specialist', 'Certification for sales auditing', 'Accounting background', TRUE, 'written', 40, 2, TRUE, 8, 2, 500.00, 250.00, 125.00, 'high', 'active'),
(30, 'CPD', 'Certified Producer', 'advanced', 'Music production certification', '100+ production credits', FALSE, 'portfolio', 0, 5, FALSE, 0, 5, 0.00, 500.00, 100.00, 'moderate', 'active');

-- Table: organization_affiliation
CREATE TABLE organization_affiliation (
    affiliation_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    org_id_1 INT UNSIGNED NOT NULL,
    org_id_2 INT UNSIGNED NOT NULL,
    union_id INT UNSIGNED,
    affiliation_type VARCHAR(50) NOT NULL, -- 'partnership', 'reciprocal', 'subsidiary', 'coalition', 'federation_member'
    affiliation_name VARCHAR(255),
    description TEXT,
    agreement_details TEXT,
    benefits_shared TEXT,
    start_date DATE,
    end_date DATE,
    auto_renew BOOLEAN DEFAULT FALSE,
    renewal_period_years INT,
    is_exclusive BOOLEAN DEFAULT FALSE,
    geographic_scope VARCHAR(50), -- 'global', 'regional', 'national', 'local'
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (affiliation_id),
    KEY idx_affiliation_org1 (org_id_1),
    KEY idx_affiliation_org2 (org_id_2),
    KEY idx_affiliation_union (union_id),
    KEY idx_affiliation_type (affiliation_type),
    KEY idx_affiliation_dates (start_date, end_date),
    KEY idx_affiliation_status (status),
    CONSTRAINT fk_affiliation_org1 FOREIGN KEY (org_id_1) REFERENCES professional_organization(org_id),
    CONSTRAINT fk_affiliation_org2 FOREIGN KEY (org_id_2) REFERENCES professional_organization(org_id),
    CONSTRAINT fk_affiliation_union FOREIGN KEY (union_id) REFERENCES union(union_id),
    CHECK (org_id_1 < org_id_2) -- Ensure consistent ordering
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO organization_affiliation (org_id_1, org_id_2, affiliation_type, affiliation_name, description, benefits_shared, start_date, auto_renew, geographic_scope, status) VALUES
(1, 13, 'partnership', 'RIAA-AARC Partnership', 'Royalty collection cooperation', 'Data sharing, joint advocacy', '1994-01-01', TRUE, 'national', 'active'),
(2, 17, 'subsidiary', 'Latin Recording Academy', 'LARAS as subsidiary of Recording Academy', 'Awards infrastructure, voting systems', '1997-09-01', TRUE, 'global', 'active'),
(3, 30, 'reciprocal', 'AES-SPARS Reciprocity', 'Member benefit sharing', 'Discounted events, publications', '1979-06-01', TRUE, 'global', 'active'),
(4, 29, 'coalition', 'Music Publishers Coalition', 'Joint advocacy for publishers', 'Legislative lobbying, industry standards', '2000-03-15', TRUE, 'national', 'active'),
(8, 9, 'partnership', 'IFPI-WIN Alliance', 'Major and indie label cooperation', 'Market data, anti-piracy efforts', '2006-10-01', TRUE, 'global', 'active'),
(8, 10, 'regional', 'IFPI Europe', 'European regional operations', 'EU policy coordination', '2000-01-01', TRUE, 'regional', 'active'),
(2, 7, 'partnership', 'Grammy-CMA Partnership', 'Country music representation', 'Category coordination, voter outreach', '1970-01-01', TRUE, 'national', 'active'),
(26, 27, 'federation_member', 'IAMIC Membership', 'Music information center network', 'Resource sharing, best practices', '1990-01-01', TRUE, 'global', 'active'),
(14, 15, 'reciprocal', 'SGA-SCL Agreement', 'Songwriter organization cooperation', 'Member benefits, advocacy', '1985-05-01', TRUE, 'national', 'active'),
(11, 27, 'partnership', 'Manager Forum Network', 'International manager cooperation', 'Global best practices, networking', '2000-09-01', TRUE, 'global', 'active');

-- Table: membership_requirement
CREATE TABLE membership_requirement (
    requirement_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    union_id INT UNSIGNED,
    org_id INT UNSIGNED,
    membership_type_id INT UNSIGNED,
    requirement_type VARCHAR(50) NOT NULL, -- 'experience', 'education', 'exam', 'sponsorship', 'portfolio', 'earnings', 'residency'
    requirement_name VARCHAR(255) NOT NULL,
    description TEXT,
    measurement_criteria TEXT,
    minimum_value VARCHAR(100), -- could be years, credits, dollars, etc.
    documentation_required TEXT,
    verification_process TEXT,
    waivable BOOLEAN DEFAULT FALSE,
    waiver_conditions TEXT,
    applies_to_renewal BOOLEAN DEFAULT FALSE,
    grandfathered_date DATE, -- existing members before this date exempt
    effective_date DATE,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (requirement_id),
    KEY idx_requirement_union (union_id),
    KEY idx_requirement_org (org_id),
    KEY idx_requirement_membership (membership_type_id),
    KEY idx_requirement_type (requirement_type),
    KEY idx_requirement_status (status),
    CONSTRAINT fk_requirement_union FOREIGN KEY (union_id) REFERENCES union(union_id),
    CONSTRAINT fk_requirement_org FOREIGN KEY (org_id) REFERENCES professional_organization(org_id),
    CONSTRAINT fk_requirement_membership FOREIGN KEY (membership_type_id) REFERENCES union_membership_type(membership_type_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO membership_requirement (union_id, org_id, membership_type_id, requirement_type, requirement_name, description, measurement_criteria, minimum_value, documentation_required, verification_process, waivable, applies_to_renewal, effective_date, status) VALUES
(1, NULL, 1, 'experience', 'Professional Experience', 'Professional music performance experience', 'Paid performances or recordings', '6 months', 'Contracts, pay stubs, tax forms', 'Local board review', TRUE, FALSE, '1950-01-01', 'active'),
(1, NULL, 1, 'sponsorship', 'Member Sponsorship', 'Sponsorship by current member', 'Member in good standing', '2 sponsors', 'Sponsor letters', 'Sponsor verification', FALSE, FALSE, '1950-01-01', 'active'),
(2, NULL, 5, 'earnings', 'SAG-AFTRA Earnings', 'Work under SAG-AFTRA jurisdiction', 'Covered earnings', '$5000', 'Pay stubs, contracts', 'Earnings verification', FALSE, FALSE, '2012-03-30', 'active'),
(2, NULL, 5, 'experience', 'Principal Work', 'Principal performer work', 'Speaking role or featured performer', '1 credit', 'Production documentation', 'Production verification', FALSE, FALSE, '2012-03-30', 'active'),
(NULL, 2, NULL, 'experience', 'Music Industry Experience', 'Professional music industry work', 'Credits in music industry', '2 years', 'Resume, credits, references', 'Membership committee', TRUE, FALSE, '1957-01-01', 'active'),
(NULL, 2, NULL, 'sponsorship', 'Voting Member Sponsors', 'Sponsorship by voting members', 'Current voting members', '2 sponsors', 'Sponsor forms', 'Member services verification', FALSE, FALSE, '1957-01-01', 'active'),
(NULL, 3, NULL, 'education', 'Audio Education', 'Formal audio education or equivalent', 'Degree or certification', 'Associate degree', 'Transcripts, certificates', 'Education verification', TRUE, FALSE, '1948-01-01', 'active'),
(NULL, 3, NULL, 'experience', 'Audio Experience', 'Professional audio work', 'Audio engineering credits', '2 years', 'Credit list, references', 'Membership review', TRUE, FALSE, '1948-01-01', 'active'),
(3, NULL, 8, 'residency', 'UK Residency', 'UK resident or work permit', 'Legal right to work in UK', 'Valid status', 'Visa, passport, work permit', 'Document verification', FALSE, TRUE, '1893-01-01', 'active'),
(4, NULL, 11, 'earnings', 'Equity Earnings', 'Minimum Equity earnings', 'Equity contract work', '$15000/year', 'Equity contracts', 'Contract verification', FALSE, TRUE, '1913-01-01', 'active'),
(4, NULL, 12, 'experience', 'EMC Points', 'Equity Membership Candidate points', 'Work weeks at Equity theaters', '50 points', 'EMC card stamps', 'EMC verification', FALSE, FALSE, '1978-01-01', 'active'),
(NULL, 4, NULL, 'portfolio', 'Publisher Catalog', 'Active music publishing catalog', 'Published compositions', '10 works', 'Copyright registrations', 'Catalog review', TRUE, FALSE, '1917-01-01', 'active'),
(NULL, 5, NULL, 'experience', 'Songwriting Credits', 'Professional songwriting credits', 'Released compositions', '1 commercial', 'Release documentation', 'Credit verification', FALSE, FALSE, '1967-01-01', 'active');

-- Table: organization_service
CREATE TABLE organization_service (
    service_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    org_id INT UNSIGNED,
    union_id INT UNSIGNED,
    service_code VARCHAR(20) NOT NULL,
    service_name VARCHAR(255) NOT NULL,
    service_type VARCHAR(50) NOT NULL, -- 'legal', 'financial', 'career', 'health', 'education', 'networking', 'advocacy'
    description TEXT,
    eligibility_criteria TEXT,
    service_delivery VARCHAR(50), -- 'in_person', 'online', 'phone', 'hybrid'
    availability VARCHAR(100), -- '24/7', 'business_hours', 'appointment', 'scheduled'
    languages_supported VARCHAR(500), -- comma-separated
    cost_to_member DECIMAL(10,2) DEFAULT 0.00,
    member_discount_percent DECIMAL(5,2),
    non_member_available BOOLEAN DEFAULT FALSE,
    non_member_cost DECIMAL(10,2),
    usage_limit_per_year INT,
    provider_name VARCHAR(255),
    contact_info TEXT,
    enrollment_required BOOLEAN DEFAULT FALSE,
    priority_order INT, -- for displaying services
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (service_id),
    UNIQUE KEY idx_org_service_code (org_id, union_id, service_code),
    KEY idx_service_org (org_id),
    KEY idx_service_union (union_id),
    KEY idx_service_type (service_type),
    KEY idx_service_delivery (service_delivery),
    KEY idx_service_priority (priority_order),
    KEY idx_service_status (status),
    CONSTRAINT fk_service_org FOREIGN KEY (org_id) REFERENCES professional_organization(org_id),
    CONSTRAINT fk_service_union FOREIGN KEY (union_id) REFERENCES union(union_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO organization_service (org_id, union_id, service_code, service_name, service_type, description, service_delivery, availability, languages_supported, cost_to_member, member_discount_percent, non_member_available, non_member_cost, priority_order, status) VALUES
(NULL, 1, 'CONTRACT', 'Contract Administration', 'legal', 'Review and enforce union contracts', 'hybrid', 'business_hours', 'English,Spanish', 0.00, NULL, FALSE, NULL, 1, 'active'),
(NULL, 1, 'REFERRAL', 'Musician Referral Service', 'career', 'Connect musicians with gigs', 'online', '24/7', 'English', 0.00, NULL, TRUE, 25.00, 2, 'active'),
(NULL, 1, 'REHEARSAL', 'Rehearsal Space', 'facility', 'Access to union rehearsal facilities', 'in_person', 'scheduled', 'English', 15.00, NULL, FALSE, NULL, 3, 'active'),
(NULL, 2, 'RESIDUALS', 'Residuals Processing', 'financial', 'Track and collect residual payments', 'online', '24/7', 'English,Spanish', 0.00, NULL, FALSE, NULL, 1, 'active'),
(NULL, 2, 'SAFETY', 'On-Set Safety', 'advocacy', 'Safety representatives and protocols', 'in_person', 'scheduled', 'English', 0.00, NULL, FALSE, NULL, 2, 'active'),
(2, NULL, 'MUSICARES', 'MusiCares', 'emergency', 'Emergency financial assistance', 'phone', 'business_hours', 'English,Spanish', 0.00, NULL, TRUE, 0.00, 1, 'active'),
(2, NULL, 'GRAMMY-U', 'Grammy U', 'education', 'Student membership program', 'hybrid', 'scheduled', 'English', 45.00, NULL, FALSE, NULL, 2, 'active'),
(3, NULL, 'STANDARDS', 'Standards Development', 'advocacy', 'Participate in audio standards', 'hybrid', 'scheduled', 'English', 0.00, NULL, TRUE, 150.00, 1, 'active'),
(3, NULL, 'JOURNAL', 'AES Journal', 'education', 'Access to technical publications', 'online', '24/7', 'English', 0.00, NULL, TRUE, 295.00, 2, 'active'),
(4, NULL, 'ADVOCACY', 'Legislative Advocacy', 'advocacy', 'Copyright and royalty lobbying', 'hybrid', 'business_hours', 'English', 0.00, NULL, FALSE, NULL, 1, 'active'),
(4, NULL, 'HFA-ACCESS', 'Harry Fox Access', 'financial', 'Mechanical licensing services', 'online', '24/7', 'English', 0.00, 50.00, TRUE, NULL, 2, 'active'),
(5, NULL, 'WORKSHOPS', 'Songwriting Workshops', 'education', 'Professional development workshops', 'hybrid', 'scheduled', 'English', 50.00, NULL, TRUE, 150.00, 1, 'active'),
(5, NULL, 'SONG-CAMPS', 'Song Camps', 'networking', 'Collaborative writing retreats', 'in_person', 'scheduled', 'English', 500.00, NULL, TRUE, 800.00, 2, 'active'),
(NULL, 3, 'LEGAL-ADVICE', 'Legal Helpline', 'legal', '24/7 legal advice service', 'phone', '24/7', 'English', 0.00, NULL, FALSE, NULL, 1, 'active'),
(NULL, 3, 'INSURANCE', 'Equipment Insurance', 'financial', 'Musical instrument insurance', 'online', 'business_hours', 'English', NULL, 30.00, FALSE, NULL, 2, 'active');

-- Table: union_agreement_template
CREATE TABLE union_agreement_template (
    template_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    union_id INT UNSIGNED NOT NULL,
    template_code VARCHAR(20) NOT NULL,
    template_name VARCHAR(255) NOT NULL,
    agreement_type VARCHAR(50) NOT NULL, -- 'cba', 'individual', 'venue', 'producer', 'label', 'broadcast'
    template_category VARCHAR(50), -- 'recording', 'live', 'broadcast', 'theatrical', 'new_media'
    description TEXT,
    minimum_terms TEXT,
    standard_clauses TEXT,
    variable_terms TEXT, -- terms that can be negotiated
    prohibited_terms TEXT, -- terms that violate union rules
    template_version VARCHAR(20),
    based_on_agreement VARCHAR(255), -- reference to master agreement
    jurisdiction_scope VARCHAR(100), -- 'local', 'national', 'international'
    applicable_locals TEXT, -- comma-separated local_ids
    effective_date DATE,
    expiry_date DATE,
    template_file_url VARCHAR(500),
    fillable_form_url VARCHAR(500),
    requires_approval BOOLEAN DEFAULT TRUE,
    approval_level VARCHAR(50), -- 'local', 'national', 'executive'
    notes TEXT,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (template_id),
    UNIQUE KEY idx_union_template_code (union_id, template_code),
    KEY idx_template_union (union_id),
    KEY idx_template_type (agreement_type),
    KEY idx_template_category (template_category),
    KEY idx_template_dates (effective_date, expiry_date),
    KEY idx_template_status (status),
    CONSTRAINT fk_template_union FOREIGN KEY (union_id) REFERENCES union(union_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO union_agreement_template (union_id, template_code, template_name, agreement_type, template_category, description, minimum_terms, template_version, based_on_agreement, jurisdiction_scope, effective_date, requires_approval, approval_level, status) VALUES
(1, 'SR-BASIC', 'Sound Recording Labor Agreement', 'producer', 'recording', 'Basic recording session agreement', 'Scale wages, pension contributions, cartage', '2024.1', 'AFM Basic Agreement', 'national', '2024-01-01', TRUE, 'local', 'active'),
(1, 'MP-SCORING', 'Motion Picture Scoring', 'producer', 'recording', 'Film and TV scoring agreement', 'Scoring rates, residuals, credits', '2024.1', 'AFM Motion Picture Agreement', 'national', '2024-01-01', TRUE, 'national', 'active'),
(1, 'LIVE-VENUE', 'Live Performance Venue', 'venue', 'live', 'Venue agreement for live performances', 'Minimum scale, sound check, breaks', '2024.1', 'AFM Live Performance', 'local', '2024-01-01', TRUE, 'local', 'active'),
(1, 'CBA-SYMPHONY', 'Symphony Orchestra CBA', 'cba', 'live', 'Collective bargaining for orchestras', 'Season length, per-service rates, touring', '2024.1', 'AFM Symphonic Agreement', 'local', '2024-01-01', TRUE, 'executive', 'active'),
(2, 'TV-SERIES', 'Television Series Performer', 'producer', 'broadcast', 'TV series performer agreement', 'Episode rates, residuals, options', '2024.1', 'SAG-AFTRA TV Agreement', 'national', '2024-01-01', TRUE, 'national', 'active'),
(2, 'COMMERCIAL', 'Commercial Agreement', 'producer', 'broadcast', 'Commercial performance agreement', 'Session fees, usage, exclusivity', '2024.1', 'SAG-AFTRA Commercials', 'national', '2024-01-01', TRUE, 'local', 'active'),
(2, 'NEW-MEDIA', 'New Media Agreement', 'producer', 'new_media', 'Streaming and digital content', 'Day rates, residuals, platform rights', '2024.1', 'SAG-AFTRA New Media', 'national', '2024-01-01', TRUE, 'national', 'active'),
(3, 'UK-RECORDING', 'UK Recording Agreement', 'producer', 'recording', 'Standard UK recording terms', 'MU rates, pension, portability', '2024.1', 'MU Recording Agreement', 'national', '2024-01-01', TRUE, 'local', 'active'),
(3, 'UK-LIVE', 'UK Live Performance', 'venue', 'live', 'UK venue performance agreement', 'Minimum fees, travel, accommodation', '2024.1', 'MU Live Agreement', 'national', '2024-01-01', TRUE, 'local', 'active'),
(4, 'BROADWAY-PROD', 'Broadway Production Contract', 'producer', 'theatrical', 'Broadway show agreement', 'Minimum salary, rehearsal pay, benefits', '2024.1', 'Equity Production Contract', 'local', '2024-01-01', TRUE, 'executive', 'active'),
(4, 'LORT', 'LORT Agreement', 'venue', 'theatrical', 'League of Resident Theatres', 'Category rates, housing, per diem', '2024.1', 'Equity LORT Agreement', 'national', '2024-01-01', TRUE, 'national', 'active'),
(7, 'CAN-BROADCAST', 'Canadian Broadcasting', 'broadcast', 'broadcast', 'CBC and broadcast agreement', 'Broadcast rates, replay fees', '2024.1', 'CFM Broadcast Agreement', 'national', '2024-01-01', TRUE, 'national', 'active'),
(10, 'BASIC-IATSE', 'Basic Agreement', 'producer', 'theatrical', 'Film and TV production', 'Hourly rates, turnaround, meal penalties', '2024.1', 'IATSE Basic Agreement', 'national', '2024-01-01', TRUE, 'national', 'active'),
(10, 'LIVE-NATION', 'Live Nation Touring', 'venue', 'live', 'Major venue touring agreement', 'Crew rates, per diem, travel', '2024.1', 'IATSE Touring Agreement', 'national', '2024-01-01', TRUE, 'local', 'active');

-- Table: professional_designation
CREATE TABLE professional_designation (
    designation_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    org_id INT UNSIGNED,
    union_id INT UNSIGNED,
    designation_code VARCHAR(20) NOT NULL,
    designation_title VARCHAR(100) NOT NULL,
    post_nominal VARCHAR(20), -- letters after name
    description TEXT,
    eligibility_criteria TEXT,
    nomination_process TEXT,
    selection_process TEXT,
    tenure_type VARCHAR(50), -- 'lifetime', 'annual', 'term'
    tenure_years INT,
    privileges TEXT,
    obligations TEXT,
    revocation_conditions TEXT,
    max_active_holders INT, -- NULL for unlimited
    current_holders INT DEFAULT 0,
    nomination_deadline VARCHAR(50), -- 'January 31', 'Q1', etc.
    announcement_date VARCHAR(50),
    ceremony_info TEXT,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (designation_id),
    UNIQUE KEY idx_designation_code (org_id, union_id, designation_code),
    KEY idx_designation_org (org_id),
    KEY idx_designation_union (union_id),
    KEY idx_designation_tenure (tenure_type),
    KEY idx_designation_status (status),
    CONSTRAINT fk_designation_org FOREIGN KEY (org_id) REFERENCES professional_organization(org_id),
    CONSTRAINT fk_designation_union FOREIGN KEY (union_id) REFERENCES union(union_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO professional_designation (org_id, union_id, designation_code, designation_title, post_nominal, description, eligibility_criteria, tenure_type, tenure_years, privileges, max_active_holders, nomination_deadline, announcement_date, status) VALUES
(2, NULL, 'TRUSTEE', 'Trustee', NULL, 'Recording Academy Board of Trustees', 'Voting member with leadership experience', 'term', 3, 'Governance, strategic direction', 45, 'March 31', 'June 1', 'active'),
(2, NULL, 'P&E-WING', 'P&E Wing Member', NULL, 'Producers & Engineers Wing', 'Professional producer or engineer', 'lifetime', NULL, 'Technical committees, special events', NULL, 'Rolling', NULL, 'active'),
(2, NULL, 'GRAMMY-U-MENTOR', 'Grammy U Mentor', NULL, 'Student program mentor', '5+ years professional experience', 'annual', 1, 'Mentor students, shape curriculum', 100, 'August 31', 'October 1', 'active'),
(3, NULL, 'FELLOW', 'Fellow', 'FAES', 'Fellow of the Audio Engineering Society', 'Distinguished contributions to audio', 'lifetime', NULL, 'Honorary recognition, special events', NULL, 'Nominations year-round', 'AES Convention', 'active'),
(3, NULL, 'HONOR-MEMBER', 'Honorary Member', NULL, 'Honorary lifetime membership', 'Exceptional service to audio industry', 'lifetime', NULL, 'Free lifetime membership, recognition', 10, 'Board discretion', 'Annual meeting', 'active'),
(NULL, 1, 'LIFE-MEMBER', 'Life Member', NULL, 'AFM Life Membership', '35 years continuous membership', 'lifetime', NULL, 'No dues, full voting rights', NULL, 'Automatic', NULL, 'active'),
(NULL, 1, 'OFFICER', 'Local Officer', NULL, 'Elected local union officer', 'Member in good standing', 'term', 3, 'Leadership, contract negotiation', NULL, 'Per bylaws', 'Election date', 'active'),
(NULL, 2, 'BOARD', 'National Board Member', NULL, 'SAG-AFTRA National Board', 'Elected by membership', 'term', 2, 'Governance, policy making', 75, 'July 31', 'September', 'active'),
(5, NULL, 'HALL-OF-FAME', 'Hall of Fame', NULL, 'Songwriters Hall of Fame', 'Exceptional songwriting career', 'lifetime', NULL, 'Permanent recognition, gala induction', 5, 'November 30', 'June Gala', 'active'),
(7, NULL, 'DIRECTOR', 'Board Director', NULL, 'CMA Board of Directors', 'Industry leader nomination', 'term', 3, 'Strategic leadership', 30, 'December 31', 'CMA Meeting', 'active');

-- Table: organization_chapter
CREATE TABLE organization_chapter (
    chapter_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    org_id INT UNSIGNED NOT NULL,
    chapter_code VARCHAR(20) NOT NULL,
    chapter_name VARCHAR(255) NOT NULL,
    chapter_type VARCHAR(50), -- 'regional', 'specialty', 'student', 'professional'
    geographic_scope VARCHAR(255),
    country_code VARCHAR(2),
    state_province VARCHAR(100),
    city VARCHAR(100),
    founding_date DATE,
    charter_number VARCHAR(50),
    parent_chapter_id INT UNSIGNED,
    member_count INT UNSIGNED,
    meeting_frequency VARCHAR(50), -- 'monthly', 'quarterly', 'annual'
    meeting_day_time VARCHAR(100), -- '3rd Thursday 7pm'
    primary_venue VARCHAR(255),
    website_url VARCHAR(255),
    contact_email VARCHAR(255),
    leadership_positions TEXT, -- JSON of positions
    election_cycle VARCHAR(50), -- 'annual', 'biennial'
    budget_autonomy BOOLEAN DEFAULT FALSE,
    event_autonomy BOOLEAN DEFAULT TRUE,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (chapter_id),
    UNIQUE KEY idx_org_chapter_code (org_id, chapter_code),
    KEY idx_chapter_org (org_id),
    KEY idx_chapter_type (chapter_type),
    KEY idx_chapter_country (country_code),
    KEY idx_chapter_parent (parent_chapter_id),
    KEY idx_chapter_status (status),
    CONSTRAINT fk_chapter_org FOREIGN KEY (org_id) REFERENCES professional_organization(org_id),
    CONSTRAINT fk_chapter_parent FOREIGN KEY (parent_chapter_id) REFERENCES organization_chapter(chapter_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO organization_chapter (org_id, chapter_code, chapter_name, chapter_type, geographic_scope, country_code, state_province, city, founding_date, member_count, meeting_frequency, meeting_day_time, contact_email, election_cycle, status) VALUES
(2, 'LA', 'Los Angeles Chapter', 'regional', 'Greater Los Angeles', 'US', 'CA', 'Los Angeles', '1957-08-01', 5000, 'monthly', '2nd Tuesday 6pm', 'la@recordingacademy.com', 'annual', 'active'),
(2, 'NASH', 'Nashville Chapter', 'regional', 'Middle Tennessee', 'US', 'TN', 'Nashville', '1964-03-15', 2500, 'monthly', '1st Thursday 6pm', 'nashville@recordingacademy.com', 'annual', 'active'),
(2, 'NYC', 'New York Chapter', 'regional', 'New York Metro', 'US', 'NY', 'New York', '1957-08-01', 3500, 'monthly', '3rd Wednesday 6pm', 'ny@recordingacademy.com', 'annual', 'active'),
(2, 'ATL', 'Atlanta Chapter', 'regional', 'Southeast Region', 'US', 'GA', 'Atlanta', '1970-05-20', 1200, 'monthly', '2nd Monday 6:30pm', 'atlanta@recordingacademy.com', 'annual', 'active'),
(3, 'NYC-AES', 'New York Section', 'regional', 'New York Metro', 'US', 'NY', 'New York', '1948-10-01', 800, 'monthly', '3rd Tuesday 6:30pm', 'nyc@aes.org', 'annual', 'active'),
(3, 'LA-AES', 'Los Angeles Section', 'regional', 'Southern California', 'US', 'CA', 'Los Angeles', '1952-09-15', 600, 'monthly', '4th Tuesday 7pm', 'la@aes.org', 'annual', 'active'),
(3, 'UK-AES', 'UK Section', 'regional', 'United Kingdom', 'GB', NULL, 'London', '1950-03-01', 400, 'monthly', '2nd Wednesday 6pm', 'uk@aes.org', 'annual', 'active'),
(3, 'JAPAN-AES', 'Japan Section', 'regional', 'Japan', 'JP', NULL, 'Tokyo', '1985-11-01', 300, 'quarterly', 'Varies', 'japan@aes.org', 'biennial', 'active'),
(5, 'NASH-NSAI', 'Nashville Chapter', 'regional', 'Nashville', 'US', 'TN', 'Nashville', '1967-09-28', 1500, 'weekly', 'Tuesday 6pm', 'nashville@nashvillesongwriters.com', 'annual', 'active'),
(5, 'LA-NSAI', 'Los Angeles Chapter', 'regional', 'Los Angeles', 'US', 'CA', 'Los Angeles', '1995-02-15', 400, 'monthly', '1st Wednesday 7pm', 'la@nashvillesongwriters.com', 'annual', 'active'),
(11, 'UK-MMF', 'UK Chapter', 'regional', 'United Kingdom', 'GB', NULL, 'London', '1992-01-01', 800, 'quarterly', 'Varies', 'uk@themmf.net', 'biennial', 'active'),
(11, 'US-MMF', 'US Chapter', 'regional', 'United States', 'US', NULL, 'Los Angeles', '2005-06-01', 300, 'quarterly', 'Varies', 'us@themmf.net', 'biennial', 'active'),
(26, 'STUDENT-LA', 'LA Student Chapter', 'student', 'Los Angeles Schools', 'US', 'CA', 'Los Angeles', '2010-09-01', 150, 'monthly', '1st Friday 5pm', 'students-la@iamic.net', 'annual', 'active'),
(26, 'EUROPE', 'European Division', 'regional', 'Continental Europe', 'AT', NULL, 'Vienna', '1958-06-15', 45, 'annual', 'Annual conference', 'europe@iamic.net', 'biennial', 'active');

-- Table: union_discipline
CREATE TABLE union_discipline (
    discipline_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    union_id INT UNSIGNED NOT NULL,
    discipline_code VARCHAR(20) NOT NULL,
    discipline_name VARCHAR(255) NOT NULL,
    category VARCHAR(50) NOT NULL, -- 'ethics', 'financial', 'performance', 'conduct', 'administrative'
    severity_level INT NOT NULL, -- 1-5, with 5 being most severe
    description TEXT,
    typical_violations TEXT,
    investigation_process TEXT,
    hearing_required BOOLEAN DEFAULT TRUE,
    appeal_available BOOLEAN DEFAULT TRUE,
    appeal_deadline_days INT DEFAULT 30,
    minimum_penalty TEXT,
    maximum_penalty TEXT,
    suspension_possible BOOLEAN DEFAULT TRUE,
    expulsion_possible BOOLEAN DEFAULT FALSE,
    fine_range_min DECIMAL(10,2),
    fine_range_max DECIMAL(10,2),
    remediation_available BOOLEAN DEFAULT TRUE,
    remediation_options TEXT,
    reporting_to_other_unions BOOLEAN DEFAULT FALSE,
    statute_of_limitations_days INT,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (discipline_id),
    UNIQUE KEY idx_union_discipline_code (union_id, discipline_code),
    KEY idx_discipline_union (union_id),
    KEY idx_discipline_category (category),
    KEY idx_discipline_severity (severity_level),
    KEY idx_discipline_status (status),
    CONSTRAINT fk_discipline_union FOREIGN KEY (union_id) REFERENCES union(union_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO union_discipline (union_id, discipline_code, discipline_name, category, severity_level, description, typical_violations, hearing_required, appeal_available, minimum_penalty, maximum_penalty, suspension_possible, expulsion_possible, fine_range_min, fine_range_max, remediation_available, statute_of_limitations_days, status) VALUES
(1, 'NONPAY-DUES', 'Non-Payment of Dues', 'financial', 2, 'Failure to pay dues on time', 'Overdue dues, work dues not remitted', FALSE, TRUE, 'Late fee', 'Suspension', TRUE, FALSE, 25.00, 500.00, TRUE, 180, 'active'),
(1, 'SCAB-WORK', 'Working Non-Union', 'ethics', 4, 'Accepting non-union engagements', 'Playing non-union gigs, recording sessions', TRUE, TRUE, 'Fine and warning', 'Expulsion', TRUE, TRUE, 500.00, 10000.00, TRUE, 365, 'active'),
(1, 'UNDERCUTTING', 'Wage Undercutting', 'ethics', 3, 'Working below union scale', 'Accepting below-scale payments', TRUE, TRUE, 'Fine', 'Suspension', TRUE, FALSE, 250.00, 5000.00, TRUE, 365, 'active'),
(1, 'CONDUCT', 'Unprofessional Conduct', 'conduct', 3, 'Behavior detrimental to union', 'Harassment, discrimination, violence', TRUE, TRUE, 'Censure', 'Expulsion', TRUE, TRUE, 100.00, 5000.00, TRUE, 730, 'active'),
(2, 'GLOBAL-RULE', 'Global Rule One', 'ethics', 5, 'Unauthorized work violation', 'Working without SAG-AFTRA contract', TRUE, TRUE, 'Fine and suspension', 'Expulsion', TRUE, TRUE, 1000.00, 100000.00, FALSE, NULL, 'active'),
(2, 'LATE-DUES', 'Late Dues Payment', 'financial', 1, 'Dues paid after deadline', 'Dues 30+ days overdue', FALSE, TRUE, 'Late fee', 'Good standing loss', FALSE, FALSE, 10.00, 100.00, TRUE, 90, 'active'),
(2, 'HARASSMENT', 'Harassment', 'conduct', 5, 'Harassment of members or others', 'Sexual harassment, bullying', TRUE, TRUE, 'Suspension', 'Expulsion', TRUE, TRUE, 500.00, 50000.00, TRUE, 1095, 'active'),
(3, 'BREACH', 'Breach of Rules', 'administrative', 2, 'Violation of union rules', 'Various rule infractions', TRUE, TRUE, 'Warning', 'Suspension', TRUE, FALSE, 50.00, 1000.00, TRUE, 365, 'active'),
(3, 'MISCONDUCT', 'Gross Misconduct', 'conduct', 4, 'Serious misconduct', 'Violence, theft, fraud', TRUE, TRUE, 'Suspension', 'Expulsion', TRUE, TRUE, 500.00, 5000.00, FALSE, 730, 'active'),
(4, 'ETHICS', 'Ethics Violation', 'ethics', 3, 'Violation of professional ethics', 'Conflict of interest, misrepresentation', TRUE, TRUE, 'Censure', 'Suspension', TRUE, FALSE, 250.00, 5000.00, TRUE, 365, 'active'),
(4, 'NONAPPEAR', 'Non-Appearance', 'performance', 4, 'Failure to appear for performance', 'Missing shows without notice', TRUE, TRUE, 'Fine and censure', 'Expulsion', TRUE, TRUE, 500.00, 10000.00, FALSE, 180, 'active'),
(10, 'SAFETY', 'Safety Violation', 'conduct', 4, 'Violation of safety protocols', 'Ignoring safety rules, endangering others', TRUE, TRUE, 'Retraining', 'Expulsion', TRUE, TRUE, 250.00, 5000.00, TRUE, 365, 'active'),
(10, 'JURISDICT', 'Jurisdiction Violation', 'administrative', 3, 'Working outside jurisdiction', 'Taking work in another local territory', TRUE, TRUE, 'Fine', 'Transfer required', FALSE, FALSE, 100.00, 2500.00, TRUE, 180, 'active');

-- Table: dues_structure
CREATE TABLE dues_structure (
    dues_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    union_id INT UNSIGNED,
    org_id INT UNSIGNED,
    local_id INT UNSIGNED,
    membership_type_id INT UNSIGNED,
    dues_type VARCHAR(50) NOT NULL, -- 'regular', 'initiation', 'reinstatement', 'work', 'assessment'
    dues_name VARCHAR(255) NOT NULL,
    description TEXT,
    calculation_method VARCHAR(50) NOT NULL, -- 'flat', 'percentage', 'tiered', 'sliding_scale'
    base_amount DECIMAL(10,2),
    percentage_rate DECIMAL(5,2),
    income_brackets TEXT, -- JSON for tiered structures
    minimum_amount DECIMAL(10,2),
    maximum_amount DECIMAL(10,2),
    currency_code VARCHAR(3) DEFAULT 'USD',
    payment_frequency VARCHAR(50), -- 'annual', 'quarterly', 'monthly', 'per_gig'
    billing_cycle_day INT, -- day of month/quarter
    proration_allowed BOOLEAN DEFAULT TRUE,
    auto_renewal BOOLEAN DEFAULT TRUE,
    late_fee_amount DECIMAL(10,2),
    late_fee_days INT DEFAULT 30,
    grace_period_days INT DEFAULT 0,
    payment_methods VARCHAR(500), -- comma-separated
    tax_deductible BOOLEAN DEFAULT FALSE,
    effective_date DATE NOT NULL,
    expiry_date DATE,
    notes TEXT,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (dues_id),
    KEY idx_dues_union (union_id),
    KEY idx_dues_org (org_id),
    KEY idx_dues_local (local_id),
    KEY idx_dues_membership (membership_type_id),
    KEY idx_dues_type (dues_type),
    KEY idx_dues_frequency (payment_frequency),
    KEY idx_dues_dates (effective_date, expiry_date),
    KEY idx_dues_status (status),
    CONSTRAINT fk_dues_union FOREIGN KEY (union_id) REFERENCES union(union_id),
    CONSTRAINT fk_dues_org FOREIGN KEY (org_id) REFERENCES professional_organization(org_id),
    CONSTRAINT fk_dues_local FOREIGN KEY (local_id) REFERENCES union_local(local_id),
    CONSTRAINT fk_dues_membership FOREIGN KEY (membership_type_id) REFERENCES union_membership_type(membership_type_id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO dues_structure (union_id, org_id, local_id, membership_type_id, dues_type, dues_name, description, calculation_method, base_amount, percentage_rate, minimum_amount, maximum_amount, currency_code, payment_frequency, billing_cycle_day, late_fee_amount, late_fee_days, payment_methods, effective_date, status) VALUES
(1, NULL, 1, 1, 'regular', 'Local 802 Annual Dues', 'Regular member annual dues', 'flat', 210.00, NULL, NULL, NULL, 'USD', 'annual', 1, 25.00, 30, 'credit_card,check,ach,cash', '2024-01-01', 'active'),
(1, NULL, 1, 1, 'work', 'Work Dues', 'Percentage of scale wages', 'percentage', NULL, 3.5, 0.00, NULL, 'USD', 'per_gig', NULL, NULL, 30, 'check,ach', '2024-01-01', 'active'),
(1, NULL, 2, 1, 'regular', 'Local 47 Annual Dues', 'Regular member annual dues', 'flat', 210.00, NULL, NULL, NULL, 'USD', 'annual', 1, 25.00, 30, 'credit_card,check,ach', '2024-01-01', 'active'),
(2, NULL, NULL, 5, 'regular', 'SAG-AFTRA Basic Dues', 'Semi-annual basic dues', 'flat', 112.00, NULL, NULL, NULL, 'USD', 'semi_annual', 1, 10.00, 30, 'credit_card,ach,payroll_deduction', '2024-01-01', 'active'),
(2, NULL, NULL, 5, 'work', 'Working Dues', 'Percentage of covered earnings', 'percentage', NULL, 1.575, 0.00, 7500.00, 'USD', 'quarterly', NULL, NULL, 45, 'payroll_deduction,check', '2024-01-01', 'active'),
(NULL, 2, NULL, NULL, 'regular', 'Voting Member Dues', 'Annual Recording Academy dues', 'flat', 100.00, NULL, NULL, NULL, 'USD', 'annual', 1, 0.00, 60, 'credit_card,ach', '2024-01-01', 'active'),
(NULL, 3, NULL, NULL, 'regular', 'AES Member Dues', 'Annual membership dues', 'tiered', 145.00, NULL, 75.00, 295.00, 'USD', 'annual', 1, 15.00, 30, 'credit_card,paypal', '2024-01-01', 'active'),
(NULL, 4, NULL, NULL, 'regular', 'NMPA Dues', 'Publisher member dues', 'sliding_scale', 500.00, NULL, 500.00, 50000.00, 'USD', 'annual', 1, 0.00, 90, 'check,wire,ach', '2024-01-01', 'active'),
(3, NULL, NULL, 8, 'regular', 'MU Annual Subscription', 'Full member annual fee', 'flat', 215.00, NULL, NULL, NULL, 'GBP', 'annual', 1, 10.00, 30, 'direct_debit,credit_card,bacs', '2024-01-01', 'active'),
(4, NULL, NULL, 11, 'regular', 'Equity Basic Dues', 'Member basic dues', 'flat', 176.00, NULL, NULL, NULL, 'USD', 'annual', 1, 15.00, 30, 'credit_card,check,money_order', '2024-01-01', 'active'),
(4, NULL, NULL, 11, 'work', 'Working Dues', 'Percentage of Equity earnings', 'percentage', NULL, 2.25, 0.00, NULL, 'USD', 'per_contract', NULL, NULL, 30, 'payroll_deduction', '2024-01-01', 'active'),
(7, NULL, NULL, 13, 'regular', 'CFM Annual Dues', 'Canadian Federation dues', 'flat', 185.00, NULL, NULL, NULL, 'CAD', 'annual', 1, 20.00, 30, 'credit_card,cheque,e-transfer', '2024-01-01', 'active'),
(10, NULL, NULL, 16, 'regular', 'IATSE Quarterly Dues', 'Journeyman quarterly dues', 'flat', 75.00, NULL, NULL, NULL, 'USD', 'quarterly', 1, 10.00, 30, 'payroll_deduction,check', '2024-01-01', 'active'),
(10, NULL, NULL, 16, 'assessment', 'Strike Fund Assessment', 'Special assessment for strike fund', 'percentage', NULL, 0.5, 0.00, 100.00, 'USD', 'quarterly', 1, 0.00, 60, 'payroll_deduction,check', '2024-01-01', 'active'),
(NULL, 5, NULL, NULL, 'regular', 'NSAI Professional', 'Professional writer membership', 'flat', 200.00, NULL, NULL, NULL, 'USD', 'annual', 1, 25.00, 30, 'credit_card,check,paypal', '2024-01-01', 'active');

-- Table: reciprocal_agreement
CREATE TABLE reciprocal_agreement (
    agreement_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    entity1_type VARCHAR(20) NOT NULL, -- 'union' or 'organization'
    entity1_id INT UNSIGNED NOT NULL,
    entity2_type VARCHAR(20) NOT NULL, -- 'union' or 'organization'
    entity2_id INT UNSIGNED NOT NULL,
    agreement_type VARCHAR(50) NOT NULL, -- 'membership', 'benefits', 'jurisdiction', 'rates', 'transfer'
    agreement_name VARCHAR(255) NOT NULL,
    description TEXT,
    reciprocal_benefits TEXT,
    transfer_provisions TEXT,
    recognition_terms TEXT,
    financial_arrangements TEXT,
    dispute_resolution TEXT,
    geographic_scope VARCHAR(100),
    industry_scope VARCHAR(100),
    start_date DATE NOT NULL,
    end_date DATE,
    auto_renewal BOOLEAN DEFAULT TRUE,
    renewal_period_years INT DEFAULT 1,
    renewal_notice_days INT DEFAULT 90,
    governing_law VARCHAR(100),
    agreement_document_url VARCHAR(500),
    amendment_history TEXT,
    termination_clause TEXT,
    status VARCHAR(20) DEFAULT 'active',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (agreement_id),
    KEY idx_reciprocal_entity1 (entity1_type, entity1_id),
    KEY idx_reciprocal_entity2 (entity2_type, entity2_id),
    KEY idx_reciprocal_type (agreement_type),
    KEY idx_reciprocal_dates (start_date, end_date),
    KEY idx_reciprocal_status (status)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO reciprocal_agreement (entity1_type, entity1_id, entity2_type, entity2_id, agreement_type, agreement_name, description, reciprocal_benefits, geographic_scope, start_date, auto_renewal, renewal_period_years, status) VALUES
('union', 1, 'union', 7, 'membership', 'AFM-CFM Reciprocal', 'US-Canada musician reciprocity', 'Members can work in both countries under home union rules', 'US and Canada', '1896-01-01', TRUE, 5, 'active'),
('union', 2, 'union', 4, 'jurisdiction', 'SAG-AFTRA/Equity Agreement', 'Stage vs screen jurisdiction', 'Clear delineation of covered work', 'United States', '2012-03-30', TRUE, 3, 'active'),
('union', 2, 'union', 9, 'membership', 'SAG-AFTRA/ACTRA Reciprocal', 'US-Canada performer agreement', 'Reciprocal working rights', 'US and Canada', '2013-01-01', TRUE, 3, 'active'),
('union', 3, 'union', 6, 'benefits', 'MU-FIM Agreement', 'UK union in international federation', 'Access to FIM global benefits', 'Global', '1950-01-01', TRUE, 5, 'active'),
('union', 4, 'union', 5, 'rates', 'Equity UK/US Rate Agreement', 'Minimum rates for visiting artists', 'Comparable rates in both countries', 'US and UK', '1980-01-01', TRUE, 2, 'active'),
('organization', 1, 'organization', 8, 'membership', 'RIAA-IFPI Cooperation', 'US in global recording federation', 'Data sharing, anti-piracy coordination', 'Global', '1985-01-01', TRUE, 5, 'active'),
('organization', 2, 'organization', 17, 'benefits', 'Recording/Latin Academy', 'Shared academy benefits', 'Cross-voting, shared resources', 'Americas', '1997-09-01', TRUE, 5, 'active'),
('organization', 3, 'organization', 30, 'membership', 'AES-SPARS Reciprocal', 'Engineering society cooperation', 'Member discounts, shared events', 'United States', '1985-01-01', TRUE, 3, 'active'),
('union', 10, 'union', 11, 'jurisdiction', 'IATSE-DGA Jurisdiction', 'Crew vs director jurisdiction', 'Clear work division on productions', 'United States', '1960-01-01', TRUE, 5, 'active'),
('organization', 4, 'organization', 29, 'transfer', 'NMPA-MPA Agreement', 'US-UK publisher cooperation', 'Simplified rights administration', 'US and UK', '2000-01-01', TRUE, 3, 'active'),
('union', 1, 'organization', 2, 'benefits', 'AFM-Recording Academy', 'Union members in Academy', 'Voting rights, MusiCares access', 'United States', '1960-01-01', TRUE, 5, 'active'),
('union', 2, 'organization', 13, 'rates', 'SAG-AFTRA/AARC Agreement', 'Performer royalty collection', 'AARC collects for SAG-AFTRA members', 'United States', '1994-01-01', TRUE, 5, 'active'),
('organization', 6, 'organization', 8, 'membership', 'A2IM-IFPI Associate', 'Independent label representation', 'Indies in global organization', 'Global', '2005-01-01', TRUE, 3, 'active'),
('organization', 9, 'organization', 10, 'benefits', 'WIN-IMPALA Partnership', 'Global-Europe indie cooperation', 'Shared advocacy, resources', 'Global', '2006-01-01', TRUE, 5, 'active'),
('union', 6, 'union', 18, 'transfer', 'FIM Member Transfer', 'International musician transfers', 'Seamless union transfers globally', 'Global', '1948-01-01', TRUE, 10, 'active');

-- Create indexes for performance
CREATE INDEX idx_union_type_status ON union(union_type, status);
CREATE INDEX idx_local_union_status ON union_local(union_id, status);
CREATE INDEX idx_org_type_focus ON professional_organization(org_type, industry_focus);
CREATE INDEX idx_benefit_union_type ON union_benefit(union_id, benefit_type);
CREATE INDEX idx_rate_effective ON union_rate_card(effective_date, status);
CREATE INDEX idx_service_delivery_type ON organization_service(service_delivery, service_type);
CREATE INDEX idx_template_dates_status ON union_agreement_template(effective_date, expiry_date, status);
CREATE INDEX idx_chapter_geo ON organization_chapter(country_code, state_province, city);
CREATE INDEX idx_dues_calc_method ON dues_structure(calculation_method, dues_type);
CREATE INDEX idx_reciprocal_scope ON reciprocal_agreement(geographic_scope, agreement_type);

-- =====================================================
-- SECTION 32: USER INTERFACE (NEW)
-- =====================================================

-- Pronoun preferences for user profiles
CREATE TABLE pronoun (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL,
    display_name VARCHAR(50) NOT NULL,
    formal_name VARCHAR(100),
    subject_pronoun VARCHAR(20),
    object_pronoun VARCHAR(20),
    possessive_pronoun VARCHAR(20),
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_pronoun_code (code),
    KEY idx_pronoun_active (is_active),
    KEY idx_pronoun_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO pronoun (code, display_name, formal_name, subject_pronoun, object_pronoun, possessive_pronoun, display_order) VALUES
('he_him', 'he/him', 'he/him/his', 'he', 'him', 'his', 1),
('she_her', 'she/her', 'she/her/hers', 'she', 'her', 'hers', 2),
('they_them', 'they/them', 'they/them/theirs', 'they', 'them', 'theirs', 3),
('he_they', 'he/they', 'he/they', 'he/they', 'him/them', 'his/theirs', 4),
('she_they', 'she/they', 'she/they', 'she/they', 'her/them', 'hers/theirs', 5),
('xe_xem', 'xe/xem', 'xe/xem/xyr', 'xe', 'xem', 'xyr', 6),
('ze_hir', 'ze/hir', 'ze/hir/hirs', 'ze', 'hir', 'hirs', 7),
('ask_me', 'Ask Me', 'Please ask for my pronouns', NULL, NULL, NULL, 8),
('any_pronouns', 'Any Pronouns', 'Any pronouns are fine', NULL, NULL, NULL, 9),
('prefer_not', 'Prefer Not to Say', 'Prefer not to specify', NULL, NULL, NULL, 10);

-- Contact types for user/organization contacts
CREATE TABLE contact_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    icon_name VARCHAR(50),
    color_code VARCHAR(7),
    requires_verification TINYINT(1) DEFAULT 0,
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_contact_type_code (code),
    KEY idx_contact_type_active (is_active),
    KEY idx_contact_type_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO contact_type (code, name, description, icon_name, color_code, requires_verification, display_order) VALUES
('business', 'Business', 'Primary business contact', 'briefcase', '#2196F3', 1, 1),
('personal', 'Personal', 'Personal contact information', 'user', '#4CAF50', 0, 2),
('emergency', 'Emergency', 'Emergency contact information', 'alert-circle', '#F44336', 0, 3),
('management', 'Management', 'Artist/label management contact', 'users', '#9C27B0', 1, 4),
('booking', 'Booking', 'Booking agent contact', 'calendar', '#FF9800', 1, 5),
('legal', 'Legal', 'Legal representative contact', 'scale', '#607D8B', 1, 6),
('accounting', 'Accounting', 'Accounting/finance contact', 'dollar-sign', '#795548', 1, 7),
('pr_marketing', 'PR/Marketing', 'Public relations and marketing contact', 'megaphone', '#E91E63', 0, 8),
('technical', 'Technical', 'Technical support contact', 'tool', '#00BCD4', 0, 9),
('royalty', 'Royalty', 'Royalty administration contact', 'trending-up', '#FFC107', 1, 10);

-- Address types for various address needs
CREATE TABLE address_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    icon_name VARCHAR(50),
    requires_validation TINYINT(1) DEFAULT 0,
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_address_type_code (code),
    KEY idx_address_type_active (is_active),
    KEY idx_address_type_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO address_type (code, name, description, icon_name, requires_validation, display_order) VALUES
('billing', 'Billing', 'Billing address for invoices and payments', 'credit-card', 1, 1),
('shipping', 'Shipping', 'Shipping address for physical deliveries', 'package', 1, 2),
('legal', 'Legal', 'Registered legal address', 'file-text', 1, 3),
('mailing', 'Mailing', 'General mailing address', 'mail', 0, 4),
('office', 'Office', 'Office/business location', 'building', 0, 5),
('studio', 'Studio', 'Recording studio address', 'mic', 0, 6),
('venue', 'Venue', 'Performance venue address', 'map-pin', 0, 7),
('residence', 'Residence', 'Personal residence address', 'home', 0, 8),
('correspondence', 'Correspondence', 'Correspondence address', 'send', 0, 9),
('tax', 'Tax', 'Tax registration address', 'percent', 1, 10);

-- Bank account types for payment processing
CREATE TABLE bank_account_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    icon_name VARCHAR(50),
    supports_ach TINYINT(1) DEFAULT 1,
    supports_wire TINYINT(1) DEFAULT 1,
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_bank_account_type_code (code),
    KEY idx_bank_account_type_active (is_active),
    KEY idx_bank_account_type_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO bank_account_type (code, name, description, icon_name, supports_ach, supports_wire, display_order) VALUES
('checking', 'Checking', 'Standard checking account', 'check-square', 1, 1, 1),
('savings', 'Savings', 'Savings account', 'piggy-bank', 1, 1, 2),
('business_checking', 'Business Checking', 'Business checking account', 'briefcase', 1, 1, 3),
('business_savings', 'Business Savings', 'Business savings account', 'building', 1, 1, 4),
('money_market', 'Money Market', 'Money market account', 'trending-up', 1, 1, 5),
('trust', 'Trust', 'Trust account', 'shield', 0, 1, 6),
('escrow', 'Escrow', 'Escrow account for royalty holdings', 'lock', 0, 1, 7),
('investment', 'Investment', 'Investment account', 'bar-chart', 0, 1, 8),
('paypal', 'PayPal', 'PayPal account', 'paypal', 0, 0, 9),
('venmo', 'Venmo', 'Venmo account', 'dollar-sign', 0, 0, 10);

-- Theme preferences for UI appearance
CREATE TABLE theme_preference (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    css_class VARCHAR(100),
    primary_color VARCHAR(7),
    secondary_color VARCHAR(7),
    background_color VARCHAR(7),
    text_color VARCHAR(7),
    is_dark_mode TINYINT(1) DEFAULT 0,
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_theme_preference_code (code),
    KEY idx_theme_preference_active (is_active),
    KEY idx_theme_preference_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO theme_preference (code, name, description, css_class, primary_color, secondary_color, background_color, text_color, is_dark_mode, display_order) VALUES
('light', 'Light', 'Default light theme', 'theme-light', '#1976D2', '#FFC107', '#FFFFFF', '#212121', 0, 1),
('dark', 'Dark', 'Dark theme for low light', 'theme-dark', '#90CAF9', '#FFD54F', '#121212', '#FFFFFF', 1, 2),
('auto', 'Auto', 'Automatically switch based on system', 'theme-auto', NULL, NULL, NULL, NULL, 0, 3),
('midnight', 'Midnight', 'Deep dark theme', 'theme-midnight', '#64B5F6', '#FFA726', '#000000', '#E0E0E0', 1, 4),
('sunset', 'Sunset', 'Warm evening colors', 'theme-sunset', '#FF7043', '#FFB74D', '#FFF3E0', '#3E2723', 0, 5),
('ocean', 'Ocean', 'Cool blue theme', 'theme-ocean', '#0288D1', '#00ACC1', '#E1F5FE', '#01579B', 0, 6),
('forest', 'Forest', 'Natural green theme', 'theme-forest', '#388E3C', '#689F38', '#F1F8E9', '#1B5E20', 0, 7),
('jazz', 'Jazz', 'Classic music industry theme', 'theme-jazz', '#6A1B9A', '#AB47BC', '#F3E5F5', '#4A148C', 0, 8),
('vinyl', 'Vinyl', 'Retro record theme', 'theme-vinyl', '#424242', '#616161', '#FAFAFA', '#212121', 0, 9),
('studio', 'Studio', 'Recording studio theme', 'theme-studio', '#D32F2F', '#F44336', '#1A1A1A', '#FFFFFF', 1, 10);

-- Language preferences for UI localization
CREATE TABLE language_preference (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(10) NOT NULL,
    name VARCHAR(100) NOT NULL,
    native_name VARCHAR(100),
    iso_639_1 VARCHAR(2),
    iso_639_2 VARCHAR(3),
    direction VARCHAR(3) DEFAULT 'ltr',
    date_format VARCHAR(20) DEFAULT 'MM/DD/YYYY',
    time_format VARCHAR(20) DEFAULT 'h:mm A',
    decimal_separator VARCHAR(1) DEFAULT '.',
    thousands_separator VARCHAR(1) DEFAULT ',',
    currency_position VARCHAR(10) DEFAULT 'before',
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_language_preference_code (code),
    KEY idx_language_preference_active (is_active),
    KEY idx_language_preference_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO language_preference (code, name, native_name, iso_639_1, iso_639_2, direction, date_format, time_format, decimal_separator, thousands_separator, currency_position, display_order) VALUES
('en-US', 'English (US)', 'English (US)', 'en', 'eng', 'ltr', 'MM/DD/YYYY', 'h:mm A', '.', ',', 'before', 1),
('en-GB', 'English (UK)', 'English (UK)', 'en', 'eng', 'ltr', 'DD/MM/YYYY', 'HH:mm', '.', ',', 'before', 2),
('es', 'Spanish', 'Español', 'es', 'spa', 'ltr', 'DD/MM/YYYY', 'HH:mm', ',', '.', 'after', 3),
('fr', 'French', 'Français', 'fr', 'fra', 'ltr', 'DD/MM/YYYY', 'HH:mm', ',', ' ', 'after', 4),
('de', 'German', 'Deutsch', 'de', 'deu', 'ltr', 'DD.MM.YYYY', 'HH:mm', ',', '.', 'after', 5),
('ja', 'Japanese', '日本語', 'ja', 'jpn', 'ltr', 'YYYY/MM/DD', 'HH:mm', '.', ',', 'before', 6),
('ko', 'Korean', '한국어', 'ko', 'kor', 'ltr', 'YYYY-MM-DD', 'HH:mm', '.', ',', 'before', 7),
('zh-CN', 'Chinese (Simplified)', '简体中文', 'zh', 'zho', 'ltr', 'YYYY-MM-DD', 'HH:mm', '.', ',', 'before', 8),
('pt-BR', 'Portuguese (Brazil)', 'Português (Brasil)', 'pt', 'por', 'ltr', 'DD/MM/YYYY', 'HH:mm', ',', '.', 'before', 9),
('ru', 'Russian', 'Русский', 'ru', 'rus', 'ltr', 'DD.MM.YYYY', 'HH:mm', ',', ' ', 'after', 10),
('ar', 'Arabic', 'العربية', 'ar', 'ara', 'rtl', 'DD/MM/YYYY', 'HH:mm', ',', '.', 'before', 11),
('hi', 'Hindi', 'हिन्दी', 'hi', 'hin', 'ltr', 'DD/MM/YYYY', 'HH:mm', '.', ',', 'before', 12),
('it', 'Italian', 'Italiano', 'it', 'ita', 'ltr', 'DD/MM/YYYY', 'HH:mm', ',', '.', 'after', 13),
('nl', 'Dutch', 'Nederlands', 'nl', 'nld', 'ltr', 'DD-MM-YYYY', 'HH:mm', ',', '.', 'before', 14),
('sv', 'Swedish', 'Svenska', 'sv', 'swe', 'ltr', 'YYYY-MM-DD', 'HH:mm', ',', ' ', 'after', 15),
('no', 'Norwegian', 'Norsk', 'no', 'nor', 'ltr', 'DD.MM.YYYY', 'HH:mm', ',', ' ', 'after', 16),
('da', 'Danish', 'Dansk', 'da', 'dan', 'ltr', 'DD-MM-YYYY', 'HH:mm', ',', '.', 'after', 17),
('fi', 'Finnish', 'Suomi', 'fi', 'fin', 'ltr', 'DD.MM.YYYY', 'HH:mm', ',', ' ', 'after', 18),
('pl', 'Polish', 'Polski', 'pl', 'pol', 'ltr', 'DD.MM.YYYY', 'HH:mm', ',', ' ', 'after', 19),
('tr', 'Turkish', 'Türkçe', 'tr', 'tur', 'ltr', 'DD.MM.YYYY', 'HH:mm', ',', '.', 'before', 20),
('he', 'Hebrew', 'עברית', 'he', 'heb', 'rtl', 'DD/MM/YYYY', 'HH:mm', '.', ',', 'before', 21),
('th', 'Thai', 'ไทย', 'th', 'tha', 'ltr', 'DD/MM/YYYY', 'HH:mm', '.', ',', 'before', 22),
('vi', 'Vietnamese', 'Tiếng Việt', 'vi', 'vie', 'ltr', 'DD/MM/YYYY', 'HH:mm', ',', '.', 'after', 23),
('id', 'Indonesian', 'Bahasa Indonesia', 'id', 'ind', 'ltr', 'DD/MM/YYYY', 'HH:mm', ',', '.', 'before', 24),
('ms', 'Malay', 'Bahasa Melayu', 'ms', 'msa', 'ltr', 'DD/MM/YYYY', 'HH:mm', '.', ',', 'before', 25),
('uk', 'Ukrainian', 'Українська', 'uk', 'ukr', 'ltr', 'DD.MM.YYYY', 'HH:mm', ',', ' ', 'after', 26),
('cs', 'Czech', 'Čeština', 'cs', 'ces', 'ltr', 'DD.MM.YYYY', 'HH:mm', ',', ' ', 'after', 27),
('el', 'Greek', 'Ελληνικά', 'el', 'ell', 'ltr', 'DD/MM/YYYY', 'HH:mm', ',', '.', 'after', 28),
('ro', 'Romanian', 'Română', 'ro', 'ron', 'ltr', 'DD.MM.YYYY', 'HH:mm', ',', '.', 'after', 29),
('hu', 'Hungarian', 'Magyar', 'hu', 'hun', 'ltr', 'YYYY.MM.DD', 'HH:mm', ',', ' ', 'after', 30);
-- Note: Additional languages can be added based on regional needs

-- Date format preferences
CREATE TABLE date_format (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    format_string VARCHAR(50) NOT NULL,
    example VARCHAR(50),
    javascript_format VARCHAR(50),
    php_format VARCHAR(50),
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_date_format_code (code),
    KEY idx_date_format_active (is_active),
    KEY idx_date_format_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO date_format (code, name, format_string, example, javascript_format, php_format, display_order) VALUES
('us_standard', 'US Standard', 'MM/DD/YYYY', '12/31/2025', 'MM/DD/YYYY', 'm/d/Y', 1),
('euro_standard', 'European Standard', 'DD/MM/YYYY', '31/12/2025', 'DD/MM/YYYY', 'd/m/Y', 2),
('iso_standard', 'ISO Standard', 'YYYY-MM-DD', '2025-12-31', 'YYYY-MM-DD', 'Y-m-d', 3),
('us_short', 'US Short', 'M/D/YY', '12/31/25', 'M/D/YY', 'n/j/y', 4),
('euro_short', 'European Short', 'D/M/YY', '31/12/25', 'D/M/YY', 'j/n/y', 5),
('dot_format', 'Dot Format', 'DD.MM.YYYY', '31.12.2025', 'DD.MM.YYYY', 'd.m.Y', 6),
('dash_format', 'Dash Format', 'DD-MM-YYYY', '31-12-2025', 'DD-MM-YYYY', 'd-m-Y', 7),
('long_us', 'US Long', 'MMMM D, YYYY', 'December 31, 2025', 'MMMM D, YYYY', 'F j, Y', 8),
('long_euro', 'European Long', 'D MMMM YYYY', '31 December 2025', 'D MMMM YYYY', 'j F Y', 9),
('compact', 'Compact', 'YYYYMMDD', '20251231', 'YYYYMMDD', 'Ymd', 10);

-- Time format preferences
CREATE TABLE time_format (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    format_string VARCHAR(50) NOT NULL,
    example VARCHAR(50),
    javascript_format VARCHAR(50),
    php_format VARCHAR(50),
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_time_format_code (code),
    KEY idx_time_format_active (is_active),
    KEY idx_time_format_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO time_format (code, name, format_string, example, javascript_format, php_format, display_order) VALUES
('12_hour', '12-hour', 'h:mm A', '3:30 PM', 'h:mm A', 'g:i A', 1),
('12_hour_seconds', '12-hour with seconds', 'h:mm:ss A', '3:30:45 PM', 'h:mm:ss A', 'g:i:s A', 2),
('24_hour', '24-hour', 'HH:mm', '15:30', 'HH:mm', 'H:i', 3),
('24_hour_seconds', '24-hour with seconds', 'HH:mm:ss', '15:30:45', 'HH:mm:ss', 'H:i:s', 4),
('military', 'Military', 'HHmm', '1530', 'HHmm', 'Hi', 5),
('decimal', 'Decimal Hours', 'H.h', '15.5', NULL, NULL, 6),
('beats', 'Swatch Internet Time', '@BBB', '@646', NULL, NULL, 7),
('12_hour_no_space', '12-hour compact', 'h:mmA', '3:30PM', 'h:mmA', 'g:iA', 8),
('iso_time', 'ISO Time', 'HH:mm:ssZ', '15:30:45+00:00', 'HH:mm:ssZ', 'H:i:sP', 9),
('relative', 'Relative', 'ago', '5 minutes ago', NULL, NULL, 10);

-- Number format preferences
CREATE TABLE number_format (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    decimal_separator VARCHAR(5) NOT NULL DEFAULT '.',
    thousands_separator VARCHAR(5) NOT NULL DEFAULT ',',
    decimal_places INT UNSIGNED DEFAULT 2,
    currency_symbol VARCHAR(10),
    currency_position VARCHAR(10) DEFAULT 'before',
    example VARCHAR(50),
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_number_format_code (code),
    KEY idx_number_format_active (is_active),
    KEY idx_number_format_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO number_format (code, name, decimal_separator, thousands_separator, decimal_places, currency_symbol, currency_position, example, display_order) VALUES
('us_standard', 'US Standard', '.', ',', 2, '$', 'before', '$1,234.56', 1),
('euro_standard', 'European Standard', ',', '.', 2, '€', 'after', '1.234,56 €', 2),
('uk_standard', 'UK Standard', '.', ',', 2, '£', 'before', '£1,234.56', 3),
('indian', 'Indian', '.', ',', 2, '₹', 'before', '₹12,34,567.89', 4),
('japanese', 'Japanese', '.', ',', 0, '¥', 'before', '¥1,234', 5),
('brazilian', 'Brazilian', ',', '.', 2, 'R$', 'before', 'R$ 1.234,56', 6),
('swiss', 'Swiss', '.', "'", 2, 'CHF', 'before', "CHF 1'234.56", 7),
('canadian', 'Canadian', '.', ',', 2, 'CA$', 'before', 'CA$1,234.56', 8),
('chinese', 'Chinese', '.', ',', 2, '¥', 'before', '¥1,234.56', 9),
('no_separator', 'No Separator', '.', '', 2, NULL, NULL, '1234.56', 10);

-- Dashboard layout configurations
CREATE TABLE dashboard_layout (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    grid_columns INT UNSIGNED DEFAULT 12,
    grid_rows INT UNSIGNED DEFAULT 12,
    widget_gap INT UNSIGNED DEFAULT 16,
    is_responsive TINYINT(1) DEFAULT 1,
    min_widget_width INT UNSIGNED DEFAULT 2,
    min_widget_height INT UNSIGNED DEFAULT 2,
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_dashboard_layout_code (code),
    KEY idx_dashboard_layout_active (is_active),
    KEY idx_dashboard_layout_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO dashboard_layout (code, name, description, grid_columns, grid_rows, widget_gap, is_responsive, min_widget_width, min_widget_height, display_order) VALUES
('default', 'Default', 'Standard 12-column responsive grid', 12, 12, 16, 1, 2, 2, 1),
('compact', 'Compact', 'Smaller gaps for more widgets', 12, 12, 8, 1, 2, 2, 2),
('wide', 'Wide', '16-column grid for wide screens', 16, 12, 16, 1, 2, 2, 3),
('fixed', 'Fixed', 'Non-responsive fixed layout', 12, 12, 16, 0, 3, 3, 4),
('mobile', 'Mobile', 'Single column mobile layout', 1, 20, 12, 1, 1, 2, 5),
('masonry', 'Masonry', 'Pinterest-style masonry layout', 12, 0, 16, 1, 2, 1, 6),
('executive', 'Executive', 'Key metrics focused layout', 12, 8, 20, 1, 3, 3, 7),
('artist', 'Artist', 'Artist-focused dashboard', 12, 12, 16, 1, 2, 2, 8),
('label', 'Label', 'Label management dashboard', 16, 12, 16, 1, 3, 3, 9),
('publisher', 'Publisher', 'Publishing focused layout', 12, 12, 16, 1, 2, 2, 10);

-- Widget types for dashboards
CREATE TABLE widget_type (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    icon_name VARCHAR(50),
    min_width INT UNSIGNED DEFAULT 2,
    min_height INT UNSIGNED DEFAULT 2,
    max_width INT UNSIGNED DEFAULT 12,
    max_height INT UNSIGNED DEFAULT 12,
    default_width INT UNSIGNED DEFAULT 4,
    default_height INT UNSIGNED DEFAULT 4,
    refresh_interval INT UNSIGNED DEFAULT 0,
    requires_data_source TINYINT(1) DEFAULT 1,
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_widget_type_code (code),
    KEY idx_widget_type_active (is_active),
    KEY idx_widget_type_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO widget_type (code, name, description, icon_name, min_width, min_height, max_width, max_height, default_width, default_height, refresh_interval, requires_data_source, display_order) VALUES
('revenue_chart', 'Revenue Chart', 'Line/bar chart showing revenue trends', 'trending-up', 4, 3, 12, 8, 6, 4, 300, 1, 1),
('royalty_summary', 'Royalty Summary', 'Summary of royalty earnings', 'dollar-sign', 3, 2, 6, 4, 4, 3, 600, 1, 2),
('recent_releases', 'Recent Releases', 'List of recent music releases', 'disc', 3, 3, 8, 8, 4, 4, 1800, 1, 3),
('top_songs', 'Top Songs', 'Top performing songs by revenue/streams', 'music', 3, 3, 8, 8, 4, 4, 3600, 1, 4),
('catalog_stats', 'Catalog Statistics', 'Overview of catalog metrics', 'bar-chart', 2, 2, 4, 4, 3, 3, 3600, 1, 5),
('pending_actions', 'Pending Actions', 'Items requiring attention', 'alert-circle', 3, 3, 6, 8, 4, 4, 300, 1, 6),
('stream_counter', 'Stream Counter', 'Real-time stream count', 'activity', 2, 2, 4, 3, 3, 2, 60, 1, 7),
('territory_map', 'Territory Map', 'Geographic revenue distribution', 'map', 4, 4, 12, 8, 6, 5, 3600, 1, 8),
('news_feed', 'Industry News', 'Music industry news feed', 'rss', 3, 3, 6, 8, 4, 5, 1800, 1, 9),
('calendar_widget', 'Calendar', 'Release calendar and events', 'calendar', 3, 3, 6, 6, 4, 4, 600, 1, 10),
('split_breakdown', 'Split Breakdown', 'Royalty split visualization', 'pie-chart', 3, 3, 6, 6, 4, 4, 3600, 1, 11),
('sync_opportunities', 'Sync Opportunities', 'Available sync licensing opportunities', 'film', 3, 3, 8, 6, 5, 4, 1800, 1, 12),
('registration_status', 'Registration Status', 'PRO/MRO registration tracking', 'check-circle', 3, 2, 6, 4, 4, 3, 3600, 1, 13),
('analytics_kpi', 'Key Performance Indicators', 'Main KPI metrics', 'target', 2, 2, 8, 4, 6, 2, 600, 1, 14),
('quick_actions', 'Quick Actions', 'Frequently used actions', 'zap', 2, 2, 4, 4, 3, 3, 0, 0, 15);

-- Menu position preferences
CREATE TABLE menu_position (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    css_class VARCHAR(100),
    icon_name VARCHAR(50),
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_menu_position_code (code),
    KEY idx_menu_position_active (is_active),
    KEY idx_menu_position_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO menu_position (code, name, description, css_class, icon_name, display_order) VALUES
('left', 'Left Sidebar', 'Traditional left sidebar navigation', 'menu-left', 'sidebar', 1),
('right', 'Right Sidebar', 'Right-side navigation panel', 'menu-right', 'sidebar', 2),
('top', 'Top Bar', 'Horizontal top navigation', 'menu-top', 'menu', 3),
('bottom', 'Bottom Bar', 'Bottom navigation (mobile-style)', 'menu-bottom', 'menu', 4),
('floating', 'Floating Menu', 'Floating action button menu', 'menu-floating', 'plus-circle', 5),
('left_collapsed', 'Left Collapsed', 'Collapsible left sidebar', 'menu-left-collapsed', 'chevron-left', 6),
('dual', 'Dual Navigation', 'Both top and left navigation', 'menu-dual', 'layout', 7),
('hidden', 'Hidden', 'Hidden menu with hamburger toggle', 'menu-hidden', 'menu', 8),
('mega', 'Mega Menu', 'Full-width dropdown mega menu', 'menu-mega', 'grid', 9),
('contextual', 'Contextual', 'Context-sensitive right-click menu', 'menu-contextual', 'more-vertical', 10);

-- Icon set preferences
CREATE TABLE icon_set (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    vendor VARCHAR(100),
    version VARCHAR(20),
    icon_count INT UNSIGNED,
    css_prefix VARCHAR(50),
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_icon_set_code (code),
    KEY idx_icon_set_active (is_active),
    KEY idx_icon_set_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO icon_set (code, name, description, vendor, version, icon_count, css_prefix, display_order) VALUES
('feather', 'Feather Icons', 'Clean and minimalist icon set', 'Feather', '4.29.0', 287, 'feather-', 1),
('fontawesome', 'Font Awesome', 'Popular comprehensive icon library', 'Fonticons', '6.4.0', 2020, 'fa-', 2),
('material', 'Material Icons', 'Google Material Design icons', 'Google', '1.13.0', 2100, 'material-icons-', 3),
('bootstrap', 'Bootstrap Icons', 'Official Bootstrap icon library', 'Bootstrap', '1.10.5', 1800, 'bi-', 4),
('tabler', 'Tabler Icons', 'Free SVG icons for web projects', 'Tabler', '2.40.0', 3455, 'ti-', 5),
('heroicons', 'Heroicons', 'Beautiful hand-crafted SVG icons', 'Tailwind', '2.0.18', 292, 'heroicon-', 6),
('lucide', 'Lucide', 'Community-driven Feather fork', 'Lucide', '0.292.0', 1000, 'lucide-', 7),
('remix', 'Remix Icon', 'Open source neutral icon system', 'Remix', '3.5.0', 2800, 'ri-', 8),
('phosphor', 'Phosphor', 'Flexible icon family', 'Phosphor', '2.0.0', 7000, 'ph-', 9),
('music_custom', 'Music Industry Icons', 'Custom icons for music industry', 'ASTRO', '1.0.0', 500, 'music-', 10);

-- Color scheme preferences
CREATE TABLE color_scheme (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    primary_color VARCHAR(7) NOT NULL,
    secondary_color VARCHAR(7) NOT NULL,
    accent_color VARCHAR(7),
    success_color VARCHAR(7) DEFAULT '#4CAF50',
    warning_color VARCHAR(7) DEFAULT '#FF9800',
    error_color VARCHAR(7) DEFAULT '#F44336',
    info_color VARCHAR(7) DEFAULT '#2196F3',
    background_color VARCHAR(7),
    text_color VARCHAR(7),
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_color_scheme_code (code),
    KEY idx_color_scheme_active (is_active),
    KEY idx_color_scheme_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO color_scheme (code, name, description, primary_color, secondary_color, accent_color, success_color, warning_color, error_color, info_color, background_color, text_color, display_order) VALUES
('astro_default', 'ASTRO Default', 'Default ASTRO brand colors', '#1976D2', '#FFC107', '#E91E63', '#4CAF50', '#FF9800', '#F44336', '#2196F3', '#FFFFFF', '#212121', 1),
('spotify_green', 'Spotify Green', 'Spotify-inspired color scheme', '#1DB954', '#191414', '#1ED760', '#1DB954', '#FFA000', '#E22134', '#509BF5', '#191414', '#FFFFFF', 2),
('soundcloud', 'SoundCloud', 'SoundCloud-inspired scheme', '#FF5500', '#FF7700', '#333333', '#13B955', '#F50', '#CF0A2C', '#0084FF', '#F2F2F2', '#333333', 3),
('apple_music', 'Apple Music', 'Apple Music inspired', '#FC3C44', '#000000', '#FA243C', '#34C759', '#FF9F0A', '#FF3B30', '#007AFF', '#000000', '#FFFFFF', 4),
('tidal', 'Tidal', 'Tidal-inspired dark theme', '#000000', '#FFFFFF', '#00FFFF', '#00E676', '#FFAB00', '#FF1744', '#00B0FF', '#000000', '#FFFFFF', 5),
('beatport', 'Beatport', 'Electronic music theme', '#00FF00', '#000000', '#FFFF00', '#00FF00', '#FF9800', '#FF0000', '#00FFFF', '#1A1A1A', '#FFFFFF', 6),
('bandcamp', 'Bandcamp', 'Indie artist friendly', '#629AA9', '#FFFFFF', '#408EA3', '#82C341', '#F4B643', '#E74C3C', '#3498DB', '#F8F8F8', '#333333', 7),
('mixcloud', 'Mixcloud', 'DJ and radio theme', '#52AAD8', '#7E3F8F', '#F8B918', '#5CB85C', '#F0AD4E', '#D9534F', '#5BC0DE', '#FFFFFF', '#333333', 8),
('high_contrast', 'High Contrast', 'Accessibility focused', '#000000', '#FFFFFF', '#FFFF00', '#00FF00', '#FFA500', '#FF0000', '#0080FF', '#FFFFFF', '#000000', 9),
('monochrome', 'Monochrome', 'Black and white only', '#000000', '#666666', '#333333', '#666666', '#666666', '#333333', '#666666', '#FFFFFF', '#000000', 10);

-- Font preferences
CREATE TABLE font_preference (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    font_family VARCHAR(200) NOT NULL,
    fallback_fonts VARCHAR(500),
    font_weight_regular INT DEFAULT 400,
    font_weight_bold INT DEFAULT 700,
    line_height DECIMAL(3,2) DEFAULT 1.5,
    is_web_font TINYINT(1) DEFAULT 1,
    font_url VARCHAR(500),
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_font_preference_code (code),
    KEY idx_font_preference_active (is_active),
    KEY idx_font_preference_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO font_preference (code, name, description, font_family, fallback_fonts, font_weight_regular, font_weight_bold, line_height, is_web_font, font_url, display_order) VALUES
('inter', 'Inter', 'Modern, highly legible UI font', 'Inter', '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif', 400, 700, 1.5, 1, 'https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700', 1),
('roboto', 'Roboto', 'Google Material Design font', 'Roboto', 'Arial, Helvetica, sans-serif', 400, 700, 1.5, 1, 'https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700', 2),
('open_sans', 'Open Sans', 'Friendly and readable', 'Open Sans', 'Arial, Helvetica, sans-serif', 400, 700, 1.5, 1, 'https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600;700', 3),
('lato', 'Lato', 'Warm and stable', 'Lato', 'Arial, Helvetica, sans-serif', 400, 700, 1.5, 1, 'https://fonts.googleapis.com/css2?family=Lato:wght@400;700;900', 4),
('poppins', 'Poppins', 'Geometric and modern', 'Poppins', 'Arial, Helvetica, sans-serif', 400, 700, 1.5, 1, 'https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700', 5),
('system', 'System Default', 'Native system fonts', '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif', 'sans-serif', 400, 700, 1.5, 0, NULL, 6),
('montserrat', 'Montserrat', 'Urban and modern', 'Montserrat', 'Arial, Helvetica, sans-serif', 400, 700, 1.5, 1, 'https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700', 7),
('source_sans', 'Source Sans Pro', 'Adobe open source font', 'Source Sans Pro', 'Arial, Helvetica, sans-serif', 400, 700, 1.5, 1, 'https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@400;600;700', 8),
('dyslexic', 'OpenDyslexic', 'Dyslexia-friendly font', 'OpenDyslexic', 'Arial, Helvetica, sans-serif', 400, 700, 1.75, 1, 'https://fonts.cdnfonts.com/css/opendyslexic', 9),
('mono', 'JetBrains Mono', 'Monospace for data', 'JetBrains Mono', 'Consolas, Monaco, "Courier New", monospace', 400, 700, 1.4, 1, 'https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;700', 10);

-- Accessibility settings
CREATE TABLE accessibility_setting (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    category VARCHAR(50),
    default_value VARCHAR(100),
    data_type VARCHAR(20),
    min_value DECIMAL(10,2),
    max_value DECIMAL(10,2),
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_accessibility_setting_code (code),
    KEY idx_accessibility_setting_active (is_active),
    KEY idx_accessibility_setting_category (category),
    KEY idx_accessibility_setting_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO accessibility_setting (code, name, description, category, default_value, data_type, min_value, max_value, display_order) VALUES
('high_contrast', 'High Contrast Mode', 'Enable high contrast colors', 'visual', 'false', 'boolean', NULL, NULL, 1),
('font_size', 'Font Size', 'Adjust base font size', 'visual', '16', 'number', 12, 24, 2),
('reduce_motion', 'Reduce Motion', 'Minimize animations and transitions', 'visual', 'false', 'boolean', NULL, NULL, 3),
('screen_reader', 'Screen Reader Support', 'Optimize for screen readers', 'visual', 'true', 'boolean', NULL, NULL, 4),
('keyboard_nav', 'Keyboard Navigation', 'Enable full keyboard navigation', 'navigation', 'true', 'boolean', NULL, NULL, 5),
('focus_indicator', 'Focus Indicators', 'Show clear focus indicators', 'visual', 'true', 'boolean', NULL, NULL, 6),
('captions', 'Captions', 'Show captions for media', 'audio', 'true', 'boolean', NULL, NULL, 7),
('audio_descriptions', 'Audio Descriptions', 'Enable audio descriptions', 'audio', 'false', 'boolean', NULL, NULL, 8),
('color_blind_mode', 'Color Blind Mode', 'Adjust colors for color blindness', 'visual', 'none', 'select', NULL, NULL, 9),
('text_to_speech', 'Text to Speech', 'Enable text to speech features', 'audio', 'false', 'boolean', NULL, NULL, 10);

-- Notification position preferences
CREATE TABLE notification_position (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    css_class VARCHAR(100),
    vertical_align VARCHAR(20),
    horizontal_align VARCHAR(20),
    offset_x INT DEFAULT 0,
    offset_y INT DEFAULT 0,
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_notification_position_code (code),
    KEY idx_notification_position_active (is_active),
    KEY idx_notification_position_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO notification_position (code, name, description, css_class, vertical_align, horizontal_align, offset_x, offset_y, display_order) VALUES
('top_right', 'Top Right', 'Traditional top right corner', 'toast-top-right', 'top', 'right', 20, 20, 1),
('top_left', 'Top Left', 'Top left corner', 'toast-top-left', 'top', 'left', 20, 20, 2),
('top_center', 'Top Center', 'Centered at top', 'toast-top-center', 'top', 'center', 0, 20, 3),
('bottom_right', 'Bottom Right', 'Bottom right corner', 'toast-bottom-right', 'bottom', 'right', 20, 20, 4),
('bottom_left', 'Bottom Left', 'Bottom left corner', 'toast-bottom-left', 'bottom', 'left', 20, 20, 5),
('bottom_center', 'Bottom Center', 'Centered at bottom', 'toast-bottom-center', 'bottom', 'center', 0, 20, 6),
('center', 'Center', 'Center of screen', 'toast-center', 'center', 'center', 0, 0, 7),
('top_full', 'Top Full Width', 'Full width at top', 'toast-top-full', 'top', 'full', 0, 0, 8),
('bottom_full', 'Bottom Full Width', 'Full width at bottom', 'toast-bottom-full', 'bottom', 'full', 0, 0, 9),
('custom', 'Custom Position', 'User-defined position', 'toast-custom', 'custom', 'custom', 0, 0, 10);

-- Avatar style preferences
CREATE TABLE avatar_style (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    shape VARCHAR(20),
    border_style VARCHAR(50),
    default_background VARCHAR(7),
    display_initials TINYINT(1) DEFAULT 1,
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_avatar_style_code (code),
    KEY idx_avatar_style_active (is_active),
    KEY idx_avatar_style_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO avatar_style (code, name, description, shape, border_style, default_background, display_initials, display_order) VALUES
('circle', 'Circle', 'Traditional circular avatar', 'circle', 'none', '#2196F3', 1, 1),
('square', 'Square', 'Square avatar', 'square', 'none', '#2196F3', 1, 2),
('rounded', 'Rounded Square', 'Square with rounded corners', 'rounded', 'none', '#2196F3', 1, 3),
('hexagon', 'Hexagon', 'Hexagonal avatar shape', 'hexagon', 'none', '#2196F3', 1, 4),
('badge', 'Badge', 'Badge-style with border', 'circle', '3px solid #FFFFFF', '#2196F3', 1, 5),
('gradient', 'Gradient', 'Gradient background avatar', 'circle', 'none', 'gradient', 1, 6),
('vinyl', 'Vinyl Record', 'Music industry vinyl style', 'circle', '2px solid #000000', '#000000', 0, 7),
('artist', 'Artist Style', 'Artistic irregular shape', 'organic', 'none', '#E91E63', 1, 8),
('minimal', 'Minimal', 'Minimal text only', 'none', 'none', 'transparent', 1, 9),
('custom', 'Custom', 'User uploaded image only', 'circle', 'none', NULL, 0, 10);

-- List density preferences
CREATE TABLE list_density (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    row_height INT UNSIGNED,
    padding_vertical INT UNSIGNED,
    padding_horizontal INT UNSIGNED,
    font_size INT UNSIGNED,
    show_thumbnails TINYINT(1) DEFAULT 1,
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_list_density_code (code),
    KEY idx_list_density_active (is_active),
    KEY idx_list_density_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO list_density (code, name, description, row_height, padding_vertical, padding_horizontal, font_size, show_thumbnails, display_order) VALUES
('compact', 'Compact', 'Maximum items visible', 36, 4, 12, 13, 0, 1),
('comfortable', 'Comfortable', 'Default balanced view', 48, 8, 16, 14, 1, 2),
('spacious', 'Spacious', 'Extra space for readability', 64, 12, 20, 16, 1, 3),
('cozy', 'Cozy', 'Slightly condensed', 44, 6, 14, 14, 1, 4),
('expanded', 'Expanded', 'Show all details', 80, 16, 24, 16, 1, 5);

-- Sidebar behavior preferences
CREATE TABLE sidebar_behavior (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    default_state VARCHAR(20),
    mobile_state VARCHAR(20),
    hover_behavior VARCHAR(20),
    width_expanded INT UNSIGNED DEFAULT 260,
    width_collapsed INT UNSIGNED DEFAULT 60,
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_sidebar_behavior_code (code),
    KEY idx_sidebar_behavior_active (is_active),
    KEY idx_sidebar_behavior_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO sidebar_behavior (code, name, description, default_state, mobile_state, hover_behavior, width_expanded, width_collapsed, display_order) VALUES
('always_expanded', 'Always Expanded', 'Sidebar always visible', 'expanded', 'overlay', 'none', 260, 260, 1),
('always_collapsed', 'Always Collapsed', 'Sidebar always minimized', 'collapsed', 'hidden', 'expand', 260, 60, 2),
('auto_collapse', 'Auto Collapse', 'Collapse on small screens', 'expanded', 'collapsed', 'none', 260, 60, 3),
('hover_expand', 'Hover Expand', 'Expand on mouse hover', 'collapsed', 'hidden', 'expand', 260, 60, 4),
('toggle', 'Manual Toggle', 'User controls state', 'expanded', 'hidden', 'none', 260, 60, 5),
('overlay', 'Overlay Mode', 'Sidebar overlays content', 'hidden', 'hidden', 'overlay', 280, 0, 6),
('push', 'Push Content', 'Sidebar pushes content', 'expanded', 'collapsed', 'none', 260, 60, 7),
('responsive', 'Responsive', 'Adapts to screen size', 'auto', 'auto', 'auto', 260, 60, 8),
('mini', 'Mini Sidebar', 'Always show icons only', 'collapsed', 'collapsed', 'tooltip', 200, 80, 9),
('off_canvas', 'Off Canvas', 'Slides in from side', 'hidden', 'hidden', 'slide', 300, 0, 10);

-- Keyboard shortcut sets
CREATE TABLE keyboard_shortcut (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    category VARCHAR(50),
    key_combination VARCHAR(50),
    action VARCHAR(100),
    is_global TINYINT(1) DEFAULT 0,
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_keyboard_shortcut_code (code),
    KEY idx_keyboard_shortcut_active (is_active),
    KEY idx_keyboard_shortcut_category (category),
    KEY idx_keyboard_shortcut_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO keyboard_shortcut (code, name, description, category, key_combination, action, is_global, display_order) VALUES
('search', 'Global Search', 'Open global search', 'navigation', 'Ctrl+K', 'openSearch', 1, 1),
('new_song', 'New Song', 'Create new song', 'creation', 'Ctrl+N', 'createSong', 1, 2),
('save', 'Save', 'Save current item', 'general', 'Ctrl+S', 'save', 0, 3),
('dashboard', 'Dashboard', 'Go to dashboard', 'navigation', 'Ctrl+D', 'gotoDashboard', 1, 4),
('catalog', 'Catalog', 'Go to catalog', 'navigation', 'Ctrl+C', 'gotoCatalog', 1, 5),
('royalties', 'Royalties', 'Go to royalties', 'navigation', 'Ctrl+R', 'gotoRoyalties', 1, 6),
('help', 'Help', 'Open help center', 'general', 'F1', 'openHelp', 1, 7),
('escape', 'Close/Cancel', 'Close modal or cancel', 'general', 'Esc', 'close', 0, 8),
('next_item', 'Next Item', 'Navigate to next item', 'navigation', 'Ctrl+Right', 'nextItem', 0, 9),
('prev_item', 'Previous Item', 'Navigate to previous item', 'navigation', 'Ctrl+Left', 'prevItem', 0, 10);

-- Tooltip preferences
CREATE TABLE tooltip_preference (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    show_delay INT UNSIGNED DEFAULT 500,
    hide_delay INT UNSIGNED DEFAULT 0,
    position VARCHAR(20) DEFAULT 'top',
    max_width INT UNSIGNED DEFAULT 300,
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_tooltip_preference_code (code),
    KEY idx_tooltip_preference_active (is_active),
    KEY idx_tooltip_preference_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO tooltip_preference (code, name, description, show_delay, hide_delay, position, max_width, display_order) VALUES
('instant', 'Instant', 'Show immediately', 0, 0, 'top', 300, 1),
('fast', 'Fast', 'Quick display', 200, 0, 'top', 300, 2),
('normal', 'Normal', 'Standard delay', 500, 0, 'top', 300, 3),
('slow', 'Slow', 'Longer delay', 1000, 0, 'top', 300, 4),
('disabled', 'Disabled', 'No tooltips', NULL, NULL, NULL, NULL, 5);

-- Animation preferences
CREATE TABLE animation_preference (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    transition_duration INT UNSIGNED DEFAULT 300,
    easing_function VARCHAR(50) DEFAULT 'ease-in-out',
    enable_page_transitions TINYINT(1) DEFAULT 1,
    enable_micro_animations TINYINT(1) DEFAULT 1,
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_animation_preference_code (code),
    KEY idx_animation_preference_active (is_active),
    KEY idx_animation_preference_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO animation_preference (code, name, description, transition_duration, easing_function, enable_page_transitions, enable_micro_animations, display_order) VALUES
('full', 'Full Animations', 'All animations enabled', 300, 'ease-in-out', 1, 1, 1),
('reduced', 'Reduced Motion', 'Minimal animations', 150, 'ease', 0, 0, 2),
('none', 'No Animations', 'All animations disabled', 0, 'none', 0, 0, 3),
('smooth', 'Smooth', 'Slower, smoother animations', 500, 'ease-in-out', 1, 1, 4),
('snappy', 'Snappy', 'Quick, responsive animations', 150, 'ease-out', 1, 1, 5);

-- Grid layout preferences for tables/lists
CREATE TABLE grid_layout (
    id INT UNSIGNED NOT NULL AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(500),
    columns_desktop INT UNSIGNED DEFAULT 4,
    columns_tablet INT UNSIGNED DEFAULT 2,
    columns_mobile INT UNSIGNED DEFAULT 1,
    gap_size INT UNSIGNED DEFAULT 16,
    aspect_ratio VARCHAR(20),
    display_order INT UNSIGNED DEFAULT 0,
    is_active TINYINT(1) DEFAULT 1,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by INT UNSIGNED,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    updated_by INT UNSIGNED,
    PRIMARY KEY (id),
    UNIQUE KEY uk_grid_layout_code (code),
    KEY idx_grid_layout_active (is_active),
    KEY idx_grid_layout_order (display_order)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

INSERT INTO grid_layout (code, name, description, columns_desktop, columns_tablet, columns_mobile, gap_size, aspect_ratio, display_order) VALUES
('cards', 'Card Grid', 'Standard card layout', 4, 2, 1, 16, '16:9', 1),
('tiles', 'Tile Grid', 'Square tile layout', 6, 3, 2, 8, '1:1', 2),
('list', 'List View', 'Traditional list', 1, 1, 1, 0, NULL, 3),
('gallery', 'Gallery View', 'Image-focused gallery', 5, 3, 2, 12, '4:3', 4),
('compact_grid', 'Compact Grid', 'Dense grid layout', 8, 4, 2, 4, '1:1', 5),
('masonry', 'Masonry', 'Variable height items', 4, 2, 1, 16, 'auto', 6),
('album_covers', 'Album Covers', 'Music album layout', 6, 4, 3, 12, '1:1', 7),
('table', 'Table View', 'Data table format', 1, 1, 1, 0, NULL, 8),
('kanban', 'Kanban Board', 'Column-based layout', 4, 2, 1, 20, 'auto', 9),
('timeline', 'Timeline View', 'Chronological layout', 1, 1, 1, 24, 'auto', 10);

-- Add foreign key constraints (if user table exists in astro_db)
-- ALTER TABLE pronoun ADD CONSTRAINT fk_pronoun_created_by FOREIGN KEY (created_by) REFERENCES astro_db.user(id);
-- ALTER TABLE pronoun ADD CONSTRAINT fk_pronoun_updated_by FOREIGN KEY (updated_by) REFERENCES astro_db.user(id);
-- Repeat for all tables...

-- Create indexes for performance
CREATE INDEX idx_ui_created_at ON pronoun(created_at);
CREATE INDEX idx_ui_updated_at ON pronoun(updated_at);
-- Repeat similar indexes for frequently queried columns















-- ============================================================
-- CORE REFERENCE TABLES
-- ============================================================

-- Status Types (Universal)
CREATE TABLE status (
    id TINYINT UNSIGNED PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    applies_to VARCHAR(100) NOT NULL, -- 'universal', 'work', 'recording', etc.
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_applies_to (applies_to),
    INDEX idx_active (is_active)
) ENGINE=InnoDB;

-- Asset Types
CREATE TABLE asset_type (
    id TINYINT UNSIGNED PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    table_name VARCHAR(64) NOT NULL,
    id_prefix CHAR(1) NOT NULL UNIQUE, -- W for Work, R for Recording, etc.
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;

-- Languages (ISO 639-1)
CREATE TABLE language (
    id CHAR(2) PRIMARY KEY, -- ISO 639-1 code
    iso_639_3 CHAR(3) NULL,
    name_english VARCHAR(100) NOT NULL,
    name_native VARCHAR(100) NOT NULL,
    is_supported BOOLEAN DEFAULT FALSE, -- For UI translations
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_supported (is_supported)
) ENGINE=InnoDB;

-- Countries (ISO 3166-1)
CREATE TABLE country (
    id CHAR(2) PRIMARY KEY, -- ISO 3166-1 alpha-2
    iso_alpha_3 CHAR(3) NOT NULL UNIQUE,
    iso_numeric CHAR(3) NOT NULL UNIQUE,
    name_english VARCHAR(100) NOT NULL,
    name_native VARCHAR(100) NULL,
    capital VARCHAR(100) NULL,
    continent VARCHAR(50) NOT NULL,
    currency_id CHAR(3) NULL,
    phone_code VARCHAR(10) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_continent (continent),
    INDEX idx_currency (currency_id)
) ENGINE=InnoDB;

-- Currencies (ISO 4217)
CREATE TABLE currency (
    id CHAR(3) PRIMARY KEY, -- ISO 4217 code
    numeric_code CHAR(3) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    symbol VARCHAR(10) NULL,
    decimals TINYINT DEFAULT 2,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_active (is_active)
) ENGINE=InnoDB;

-- ============================================================
-- MUSIC INDUSTRY SPECIFIC
-- ============================================================

-- Societies (PROs, MROs, etc.)
CREATE TABLE society (
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    acronym VARCHAR(20) NULL,
    country_id CHAR(2) NOT NULL,
    society_type VARCHAR(50) NOT NULL, -- PRO, MRO, CMO, etc.
    ipi_number VARCHAR(11) NULL UNIQUE,
    cae_number VARCHAR(9) NULL UNIQUE,
    website VARCHAR(255) NULL,
    email VARCHAR(255) NULL,
    phone VARCHAR(50) NULL,
    address TEXT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    supports_cwr BOOLEAN DEFAULT FALSE,
    cwr_version VARCHAR(10) NULL,
    supports_ddex BOOLEAN DEFAULT FALSE,
    ddex_version VARCHAR(10) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (country_id) REFERENCES country(id),
    INDEX idx_type (society_type),
    INDEX idx_active (is_active)
) ENGINE=InnoDB;

-- DSPs (Digital Service Providers)
CREATE TABLE dsp (
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    dsp_type VARCHAR(50) NOT NULL, -- streaming, download, social, etc.
    website VARCHAR(255) NULL,
    api_endpoint VARCHAR(255) NULL,
    supports_ddex BOOLEAN DEFAULT FALSE,
    ddex_version VARCHAR(10) NULL,
    reporting_currency_id CHAR(3) NULL,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (reporting_currency_id) REFERENCES currency(id),
    INDEX idx_type (dsp_type),
    INDEX idx_active (is_active)
) ENGINE=InnoDB;

-- Territory Groups
CREATE TABLE territory_group (
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(255) NOT NULL,
    description TEXT,
    is_standard BOOLEAN DEFAULT FALSE, -- CISAC standard territories
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;

    -- Insert Territory Groups
INSERT INTO territory_group (code, name, is_standard) VALUES
    ('WORLD', 'Worldwide', TRUE),
    ('EU', 'European Union', TRUE),
    ('NAFTA', 'North American Free Trade Agreement', TRUE),
    ('APAC', 'Asia-Pacific', TRUE),
    ('LATAM', 'Latin America', TRUE),
    ('MENA', 'Middle East and North Africa', TRUE),
    ('SSA', 'Sub-Saharan Africa', TRUE),
    ('COMMONWEALTH', 'Commonwealth Nations', TRUE),
    ('OECD', 'OECD Countries', TRUE),
    ('ASEAN', 'Association of Southeast Asian Nations', TRUE),
    ('BRICS', 'Brazil, Russia, India, China, South Africa', TRUE),
    ('ANZ', 'Australia and New Zealand', TRUE),
    ('CIS', 'Commonwealth of Independent States', TRUE),
    ('NORDIC', 'Nordic Countries', TRUE);

-- Territory Group Members
CREATE TABLE territory_group_member (
    territory_group_id INT UNSIGNED NOT NULL,
    country_id CHAR(2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (territory_group_id, country_id),
    FOREIGN KEY (territory_group_id) REFERENCES territory_group(id),
    FOREIGN KEY (country_id) REFERENCES country(id)
) ENGINE=InnoDB;

-- Roles (for contributors)
CREATE TABLE role (
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    role_type VARCHAR(50) NOT NULL, -- creator, performer, technical, business
    description TEXT,
    cwr_code VARCHAR(3) NULL,
    ddex_code VARCHAR(20) NULL,
    display_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_type (role_type)
) ENGINE=InnoDB;

-- Rights Types
CREATE TABLE rights_type (
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    category VARCHAR(50) NOT NULL, -- performance, mechanical, sync, etc.
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_category (category)
) ENGINE=InnoDB;

-- Musical Keys
CREATE TABLE musical_key (
    id TINYINT UNSIGNED PRIMARY KEY,
    code VARCHAR(3) NOT NULL UNIQUE,
    name VARCHAR(50) NOT NULL,
    is_major BOOLEAN NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;

-- Genres
CREATE TABLE genre (
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    parent_id INT UNSIGNED NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (parent_id) REFERENCES genre(id),
    INDEX idx_parent (parent_id)
) ENGINE=InnoDB;

-- Instruments
CREATE TABLE instrument (
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    category VARCHAR(50) NOT NULL, -- string, wind, percussion, etc.
    cisac_code VARCHAR(10) NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_category (category)
) ENGINE=InnoDB;

-- ============================================================
-- COMPLIANCE & STANDARDS
-- ============================================================

-- CWR Record Types
CREATE TABLE cwr_record_type (
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    code CHAR(3) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    group_type VARCHAR(50) NOT NULL, -- header, work, recording, etc.
    cwr_version VARCHAR(10) NOT NULL,
    field_count INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_group (group_type),
    INDEX idx_version (cwr_version)
) ENGINE=InnoDB;

-- DDEX Message Types
CREATE TABLE ddex_message_type (
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    namespace VARCHAR(255) NOT NULL,
    schema_version VARCHAR(10) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_version (schema_version)
) ENGINE=InnoDB;

-- ============================================================
-- BUSINESS RULES
-- ============================================================

-- Subscription Tiers
CREATE TABLE subscription_tier (
    id TINYINT UNSIGNED PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(50) NOT NULL,
    description TEXT,
    max_assets INT NOT NULL,
    max_users INT NOT NULL,
    max_api_calls_per_month INT NOT NULL,
    price_monthly DECIMAL(10,2) NOT NULL,
    price_yearly DECIMAL(10,2) NOT NULL,
    features JSON NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    display_order INT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_active (is_active)
) ENGINE=InnoDB;

-- Payment Methods
CREATE TABLE payment_method (
    id TINYINT UNSIGNED PRIMARY KEY,
    code VARCHAR(20) NOT NULL UNIQUE,
    name VARCHAR(50) NOT NULL,
    processor VARCHAR(50) NOT NULL, -- stripe, paypal, etc.
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;

-- ============================================================
-- SYSTEM CONFIGURATION
-- ============================================================

-- System Settings
CREATE TABLE system_setting (
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    category VARCHAR(50) NOT NULL,
    setting_key VARCHAR(100) NOT NULL,
    setting_value TEXT NOT NULL,
    data_type VARCHAR(20) NOT NULL, -- string, integer, boolean, json
    description TEXT,
    is_editable BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    UNIQUE KEY uk_category_key (category, setting_key),
    INDEX idx_category (category)
) ENGINE=InnoDB;

-- API Rate Limit Tiers
CREATE TABLE rate_limit_tier (
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    code VARCHAR(50) NOT NULL UNIQUE,
    name VARCHAR(100) NOT NULL,
    requests_per_minute INT NOT NULL,
    requests_per_hour INT NOT NULL,
    requests_per_day INT NOT NULL,
    burst_size INT DEFAULT 10,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;

-- ============================================================
-- STORED PROCEDURES & FUNCTIONS
-- ============================================================

DELIMITER $$

-- Function to get territory countries
CREATE FUNCTION get_territory_countries(p_territory_code VARCHAR(50))
RETURNS TEXT
DETERMINISTIC
READS SQL DATA
BEGIN
    DECLARE v_countries TEXT DEFAULT '';
    
    SELECT GROUP_CONCAT(tgm.country_id ORDER BY tgm.country_id SEPARATOR ',')
    INTO v_countries
    FROM territory_group tg
    JOIN territory_group_member tgm ON tg.id = tgm.territory_group_id
    WHERE tg.code = p_territory_code;
    
    RETURN v_countries;
END$$

-- Procedure to initialize reference data
CREATE PROCEDURE init_reference_data()
BEGIN
    -- Insert Status Types
    INSERT INTO status (id, code, name, applies_to) VALUES
    (1, 'ACTIVE', 'Active', 'universal'),
    (2, 'INACTIVE', 'Inactive', 'universal'),
    (3, 'DRAFT', 'Draft', 'universal'),
    (4, 'PENDING', 'Pending', 'universal'),
    (5, 'APPROVED', 'Approved', 'universal'),
    (6, 'REJECTED', 'Rejected', 'universal'),
    (7, 'PUBLISHED', 'Published', 'work,recording'),
    (8, 'UNPUBLISHED', 'Unpublished', 'work,recording'),
    (9, 'REGISTERED', 'Registered', 'work,recording'),
    (10, 'UNREGISTERED', 'Unregistered', 'work,recording');
    
    -- Insert Asset Types
    INSERT INTO asset_type (id, code, name, table_name, id_prefix) VALUES
    (1, 'WORK', 'Musical Work', 'work', 'W'),
    (2, 'RECORDING', 'Sound Recording', 'recording', 'R'),
    (3, 'RELEASE', 'Release', 'release', 'L'),
    (4, 'PERSON', 'Person', 'person', 'P'),
    (5, 'ORGANIZATION', 'Organization', 'organization', 'O'),
    (6, 'AGREEMENT', 'Agreement', 'agreement', 'A'),
    (7, 'ROYALTY', 'Royalty Statement', 'royalty_statement', 'Y'),
    (8, 'SYNC', 'Sync License', 'sync_license', 'S'),
    (9, 'NFT', 'NFT', 'nft', 'N'),
    (10, 'TOKEN', 'Fan Token', 'fan_token', 'T');
    
    -- Insert Languages
    INSERT INTO language (id, iso_639_3, name_english, name_native, is_supported) VALUES
    ('en', 'eng', 'English', 'English', TRUE),
    ('es', 'spa', 'Spanish', 'Español', TRUE),
    ('fr', 'fra', 'French', 'Français', TRUE),
    ('de', 'deu', 'German', 'Deutsch', TRUE),
    ('ja', 'jpn', 'Japanese', '日本語', TRUE),
    ('ko', 'kor', 'Korean', '한국어', TRUE),
    ('zh', 'zho', 'Chinese', '中文', TRUE),
    ('pt', 'por', 'Portuguese', 'Português', TRUE),
    ('ru', 'rus', 'Russian', 'Русский', TRUE),
    ('ar', 'ara', 'Arabic', 'العربية', TRUE),
    ('hi', 'hin', 'Hindi', 'हिन्दी', TRUE),
    ('it', 'ita', 'Italian', 'Italiano', TRUE),
    ('nl', 'nld', 'Dutch', 'Nederlands', TRUE),
    ('pl', 'pol', 'Polish', 'Polski', TRUE),
    ('tr', 'tur', 'Turkish', 'Türkçe', TRUE),
    ('sv', 'swe', 'Swedish', 'Svenska', TRUE),
    ('da', 'dan', 'Danish', 'Dansk', TRUE),
    ('no', 'nor', 'Norwegian', 'Norsk', TRUE),
    ('fi', 'fin', 'Finnish', 'Suomi', TRUE),
    ('he', 'heb', 'Hebrew', 'עברית', TRUE),
    ('vi', 'vie', 'Vietnamese', 'Tiếng Việt', TRUE),
    ('th', 'tha', 'Thai', 'ไทย', TRUE),
    ('id', 'ind', 'Indonesian', 'Bahasa Indonesia', TRUE),
    ('sw', 'swa', 'Swahili', 'Kiswahili', TRUE),
    ('ms', 'msa', 'Malay', 'Bahasa Melayu', TRUE),
    ('bn', 'ben', 'Bengali', 'বাংলা', TRUE),
    ('ta', 'tam', 'Tamil', 'தமிழ்', TRUE),
    ('te', 'tel', 'Telugu', 'తెలుగు', TRUE),
    ('mr', 'mar', 'Marathi', 'मराठी', TRUE),
    ('ur', 'urd', 'Urdu', 'اردو', TRUE),
    ('el', 'ell', 'Greek', 'Ελληνικά', TRUE),
    ('hu', 'hun', 'Hungarian', 'Magyar', TRUE),
    ('cs', 'ces', 'Czech', 'Čeština', TRUE),
    ('sk', 'slk', 'Slovak', 'Slovenčina', TRUE),
    ('ro', 'ron', 'Romanian', 'Română', TRUE),
    ('am', 'amh', 'Amharic', 'አማርኛ', TRUE),
    ('yo', 'yor', 'Yoruba', 'Yorùbá', TRUE),
    ('ig', 'ibo', 'Igbo', 'Igbo', TRUE),
    ('ha', 'hau', 'Hausa', 'Hausa', TRUE),
    ('uk', 'ukr', 'Ukrainian', 'Українська', TRUE),
    ('sr', 'srp', 'Serbian', 'Српски', TRUE),
    ('hr', 'hrv', 'Croatian', 'Hrvatski', TRUE),
    ('sl', 'slv', 'Slovenian', 'Slovenščina', TRUE),
    ('lt', 'lit', 'Lithuanian', 'Lietuvių', TRUE),
    ('lv', 'lav', 'Latvian', 'Latviešu', TRUE),
    ('et', 'est', 'Estonian', 'Eesti', TRUE),
    ('tl', 'tgl', 'Tagalog', 'Tagalog', TRUE),
    ('ka', 'kat', 'Georgian', 'ქართული', FALSE),
    ('gu', 'guj', 'Gujarati', 'ગુજરાતી', FALSE),
    ('kn', 'kan', 'Kannada', 'ಕನ್ನಡ', FALSE),
    ('ml', 'mal', 'Malayalam', 'മലയാളം', FALSE),
    ('pa', 'pan', 'Punjabi', 'ਪੰਜਾਬੀ', FALSE),
    ('si', 'sin', 'Sinhala', 'සිංහල', FALSE),
    ('af', 'afr', 'Afrikaans', 'Afrikaans', FALSE),
    ('zu', 'zul', 'Zulu', 'isiZulu', FALSE),
    ('xh', 'xho', 'Xhosa', 'isiXhosa', FALSE),
    ('bg', 'bul', 'Bulgarian', 'Български', FALSE),
    ('bs', 'bos', 'Bosnian', 'Bosanski', FALSE),
    ('mk', 'mkd', 'Macedonian', 'Македонски', FALSE),
    ('hy', 'hye', 'Armenian', 'Հայերեն', FALSE),
    ('az', 'aze', 'Azerbaijani', 'Azərbaycan', FALSE),
    ('kk', 'kaz', 'Kazakh', 'Қазақша', FALSE),
    ('uz', 'uzb', 'Uzbek', 'O‘zbek', FALSE);
    
    -- Insert Currencies
    INSERT INTO currency (id, numeric_code, name, symbol, decimals, is_active) VALUES
    ('USD', '840', 'US Dollar', '$', 2, TRUE),
    ('EUR', '978', 'Euro', '€', 2, TRUE),
    ('GBP', '826', 'British Pound', '£', 2, TRUE),
    ('JPY', '392', 'Japanese Yen', '¥', 0, TRUE),
    ('CNY', '156', 'Chinese Yuan', '¥', 2, TRUE),
    ('KRW', '410', 'South Korean Won', '₩', 0, TRUE),
    ('INR', '356', 'Indian Rupee', '₹', 2, TRUE),
    ('BRL', '986', 'Brazilian Real', 'R$', 2, TRUE),
    ('CAD', '124', 'Canadian Dollar', '$', 2, TRUE),
    ('AUD', '036', 'Australian Dollar', '$', 2, TRUE),
    ('MXN', '484', 'Mexican Peso', '$', 2, TRUE),
    ('RUB', '643', 'Russian Ruble', '₽', 2, TRUE),
    ('SGD', '702', 'Singapore Dollar', '$', 2, TRUE),
    ('HKD', '344', 'Hong Kong Dollar', '$', 2, TRUE),
    ('NZD', '554', 'New Zealand Dollar', '$', 2, TRUE),
    ('ZAR', '710', 'South African Rand', 'R', 2, TRUE),
    ('NGN', '566', 'Nigerian Naira', '₦', 2, TRUE),
    ('AED', '784', 'United Arab Emirates Dirham', 'د.إ', 2, TRUE),
    ('PHP', '608', 'Philippine Peso', '₱', 2, TRUE),
    ('VND', '704', 'Vietnamese Dong', '₫', 0, TRUE),
    ('THB', '764', 'Thai Baht', '฿', 2, TRUE),
    ('IDR', '360', 'Indonesian Rupiah', 'Rp', 2, TRUE),
    ('MYR', '458', 'Malaysian Ringgit', 'RM', 2, TRUE),
    ('KES', '404', 'Kenyan Shilling', 'KSh', 2, TRUE),
    ('PLN', '985', 'Polish Zloty', 'zł', 2, TRUE),
    ('TRY', '949', 'Turkish Lira', '₺', 2, TRUE),
    ('SEK', '752', 'Swedish Krona', 'kr', 2, TRUE),
    ('DKK', '208', 'Danish Krone', 'kr', 2, TRUE),
    ('NOK', '578', 'Norwegian Krone', 'kr', 2, TRUE),
    ('CHF', '756', 'Swiss Franc', 'CHF', 2, TRUE),
    ('ILS', '376', 'Israeli New Shekel', '₪', 2, TRUE),
    ('COP', '170', 'Colombian Peso', '$', 2, TRUE),
    ('ARS', '032', 'Argentine Peso', '$', 2, TRUE),
    ('CLP', '152', 'Chilean Peso', '$', 0, TRUE),
    ('PEN', '604', 'Peruvian Sol', 'S/', 2, TRUE),
    ('GHS', '936', 'Ghanaian Cedi', '₵', 2, TRUE),
    ('EGP', '818', 'Egyptian Pound', '£', 2, TRUE),
    ('UAH', '980', 'Ukrainian Hryvnia', '₴', 2, TRUE),
    ('SAR', '682', 'Saudi Riyal', '﷼', 2, TRUE),
    ('TWD', '901', 'New Taiwan Dollar', 'NT$', 2, TRUE),
    ('ETB', '230', 'Ethiopian Birr', 'Br', 2, FALSE),
    ('ZMW', '967', 'Zambian Kwacha', 'ZK', 2, FALSE),
    ('TZS', '834', 'Tanzanian Shilling', 'TSh', 2, FALSE),
    ('UGX', '800', 'Ugandan Shilling', 'USh', 0, FALSE),
    ('DZD', '012', 'Algerian Dinar', 'د.ج', 2, FALSE),
    ('MAD', '504', 'Moroccan Dirham', 'د.م.', 2, FALSE),
    ('BWP', '072', 'Botswana Pula', 'P', 2, FALSE),
    ('NAD', '516', 'Namibian Dollar', '$', 2, FALSE),
    ('BAM', '977', 'Bosnia-Herzegovina Convertible Mark', 'KM', 2, FALSE),
    ('GEL', '981', 'Georgian Lari', '₾', 2, FALSE),
    ('AMD', '051', 'Armenian Dram', '֏', 2, FALSE),
    ('AZN', '944', 'Azerbaijani Manat', '₼', 2, FALSE),
    ('KZT', '398', 'Kazakhstani Tenge', '₸', 2, FALSE),
    ('UZS', '860', 'Uzbekistani Som', 'сўм', 2, FALSE);
    
    -- Insert Major Countries
    INSERT INTO country (id, iso_alpha_3, iso_numeric, name_english, continent, currency_id, phone_code) VALUES
    ('US', 'USA', '840', 'United States', 'North America', 'USD', '+1'),
    ('GB', 'GBR', '826', 'United Kingdom', 'Europe', 'GBP', '+44'),
    ('CA', 'CAN', '124', 'Canada', 'North America', 'CAD', '+1'),
    ('AU', 'AUS', '036', 'Australia', 'Oceania', 'AUD', '+61'),
    ('DE', 'DEU', '276', 'Germany', 'Europe', 'EUR', '+49'),
    ('FR', 'FRA', '250', 'France', 'Europe', 'EUR', '+33'),
    ('ES', 'ESP', '724', 'Spain', 'Europe', 'EUR', '+34'),
    ('IT', 'ITA', '380', 'Italy', 'Europe', 'EUR', '+39'),
    ('JP', 'JPN', '392', 'Japan', 'Asia', 'JPY', '+81'),
    ('KR', 'KOR', '410', 'South Korea', 'Asia', 'KRW', '+82'),
    ('CN', 'CHN', '156', 'China', 'Asia', 'CNY', '+86'),
    ('IN', 'IND', '356', 'India', 'Asia', 'INR', '+91'),
    ('BR', 'BRA', '076', 'Brazil', 'South America', 'BRL', '+55'),
    ('MX', 'MEX', '484', 'Mexico', 'North America', 'MXN', '+52'),
    ('RU', 'RUS', '643', 'Russia', 'Europe/Asia', 'RUB', '+7'),
    ('NL', 'NLD', '528', 'Netherlands', 'Europe', 'EUR', '+31'),
    ('SE', 'SWE', '752', 'Sweden', 'Europe', 'SEK', '+46'),
    ('NO', 'NOR', '578', 'Norway', 'Europe', 'NOK', '+47'),
    ('DK', 'DNK', '208', 'Denmark', 'Europe', 'DKK', '+45'),
    ('BE', 'BEL', '056', 'Belgium', 'Europe', 'EUR', '+32');
    
    -- Insert Major Societies
    INSERT INTO society (code, name, acronym, country_id, society_type, supports_cwr, cwr_version, supports_ddex) VALUES
    ('ASCAP', 'American Society of Composers, Authors and Publishers', 'ASCAP', 'US', 'PRO', TRUE, '3.1', TRUE),
    ('BMI', 'Broadcast Music, Inc.', 'BMI', 'US', 'PRO', TRUE, '3.1', TRUE),
    ('SESAC', 'SESAC Inc.', 'SESAC', 'US', 'PRO', TRUE, '3.1', FALSE),
    ('SOCAN', 'Society of Composers, Authors and Music Publishers of Canada', 'SOCAN', 'CA', 'PRO', TRUE, '3.1', TRUE),
    ('PRS', 'Performing Right Society', 'PRS', 'GB', 'PRO', TRUE, '3.1', TRUE),
    ('MCPS', 'Mechanical-Copyright Protection Society', 'MCPS', 'GB', 'MRO', TRUE, '3.1', TRUE),
    ('SACEM', 'Société des auteurs, compositeurs et éditeurs de musique', 'SACEM', 'FR', 'PRO', TRUE, '3.1', TRUE),
    ('GEMA', 'Gesellschaft für musikalische Aufführungs- und mechanische Vervielfältigungsrechte', 'GEMA', 'DE', 'PRO', TRUE, '3.1', TRUE),
    ('JASRAC', 'Japanese Society for Rights of Authors, Composers and Publishers', 'JASRAC', 'JP', 'PRO', TRUE, '3.1', FALSE),
    ('KOMCA', 'Korea Music Copyright Association', 'KOMCA', 'KR', 'PRO', TRUE, '3.1', FALSE),
    ('APRA', 'Australasian Performing Right Association', 'APRA', 'AU', 'PRO', TRUE, '3.1', TRUE),
    ('AMCOS', 'Australasian Mechanical Copyright Owners Society', 'AMCOS', 'AU', 'MRO', TRUE, '3.1', TRUE),
    ('SIAE', 'Società Italiana degli Autori ed Editori', 'SIAE', 'IT', 'PRO', TRUE, '3.1', FALSE),
    ('SGAE', 'Sociedad General de Autores y Editores', 'SGAE', 'ES', 'PRO', TRUE, '3.1', FALSE),
    ('BUMA', 'Buma Association', 'BUMA', 'NL', 'PRO', TRUE, '3.1', TRUE),
    ('STEMRA', 'Stemra', 'STEMRA', 'NL', 'MRO', TRUE, '3.1', TRUE),
    ('STIM', 'Svenska Tonsättares Internationella Musikbyrå', 'STIM', 'SE', 'PRO', TRUE, '3.1', TRUE),
    ('SABAM', 'Société d\'Auteurs Belge', 'SABAM', 'BE', 'PRO', TRUE, '3.1', TRUE),
    ('HFA', 'Harry Fox Agency', 'HFA', 'US', 'MRO', TRUE, '3.1', TRUE),
    ('MLC', 'Mechanical Licensing Collective', 'MLC', 'US', 'MRO', FALSE, NULL, TRUE);
    
    -- Insert Major DSPs
    INSERT INTO dsp (code, name, dsp_type, supports_ddex, reporting_currency_id) VALUES
    ('SPOTIFY', 'Spotify', 'streaming', TRUE, 'USD'),
    ('APPLE_MUSIC', 'Apple Music', 'streaming', TRUE, 'USD'),
    ('YOUTUBE', 'YouTube', 'streaming', TRUE, 'USD'),
    ('AMAZON_MUSIC', 'Amazon Music', 'streaming', TRUE, 'USD'),
    ('DEEZER', 'Deezer', 'streaming', TRUE, 'EUR'),
    ('TIDAL', 'Tidal', 'streaming', TRUE, 'USD'),
    ('SOUNDCLOUD', 'SoundCloud', 'streaming', FALSE, 'USD'),
    ('PANDORA', 'Pandora', 'streaming', TRUE, 'USD'),
    ('QOBUZ', 'Qobuz', 'streaming', TRUE, 'EUR'),
    ('NAPSTER', 'Napster', 'streaming', TRUE, 'USD'),
    ('BANDCAMP', 'Bandcamp', 'download', FALSE, 'USD'),
    ('ITUNES', 'iTunes Store', 'download', TRUE, 'USD'),
    ('BEATPORT', 'Beatport', 'download', TRUE, 'USD'),
    ('TIKTOK', 'TikTok', 'social', FALSE, 'USD'),
    ('INSTAGRAM', 'Instagram', 'social', FALSE, 'USD'),
    ('FACEBOOK', 'Facebook', 'social', FALSE, 'USD'),
    ('TRILLER', 'Triller', 'social', FALSE, 'USD');
    
    -- Insert Roles
    INSERT INTO role (code, name, role_type, cwr_code, display_order) VALUES
    ('COMPOSER', 'Composer', 'creator', 'C', 1),
    ('LYRICIST', 'Lyricist', 'creator', 'A', 2),
    ('PUBLISHER', 'Publisher', 'business', 'E', 3),
    ('SUB_PUBLISHER', 'Sub-Publisher', 'business', 'SE', 4),
    ('ADMINISTRATOR', 'Administrator', 'business', 'AM', 5),
    ('PERFORMER', 'Performer', 'performer', NULL, 6),
    ('PRODUCER', 'Producer', 'technical', NULL, 7),
    ('ENGINEER', 'Engineer', 'technical', NULL, 8),
    ('MIXER', 'Mixing Engineer', 'technical', NULL, 9),
    ('MASTERING', 'Mastering Engineer', 'technical', NULL, 10),
    ('ARRANGER', 'Arranger', 'creator', 'AR', 11),
    ('REMIXER', 'Remixer', 'creator', NULL, 12),
    ('FEATURED', 'Featured Artist', 'performer', NULL, 13),
    ('MUSICIAN', 'Musician', 'performer', NULL, 14),
    ('VOCALIST', 'Vocalist', 'performer', NULL, 15);
    
    -- Insert Rights Types
    INSERT INTO rights_type (code, name, category) VALUES
    ('PERFORMANCE', 'Performance Rights', 'performance'),
    ('MECHANICAL', 'Mechanical Rights', 'mechanical'),
    ('SYNC', 'Synchronization Rights', 'sync'),
    ('MASTER', 'Master Recording Rights', 'master'),
    ('PRINT', 'Print Rights', 'print'),
    ('GRAND', 'Grand Rights', 'performance'),
    ('DIGITAL', 'Digital Rights', 'digital'),
    ('STREAMING', 'Streaming Rights', 'digital'),
    ('DOWNLOAD', 'Download Rights', 'digital'),
    ('RINGTONE', 'Ringtone Rights', 'digital'),
    ('KARAOKE', 'Karaoke Rights', 'mechanical'),
    ('SAMPLE', 'Sample Rights', 'master'),
    ('REMIX', 'Remix Rights', 'master'),
    ('BROADCAST', 'Broadcast Rights', 'performance'),
    ('ONLINE', 'Online Rights', 'digital');
    
    -- Insert Musical Keys
    INSERT INTO musical_key (id, code, name, is_major) VALUES
    (1, 'C', 'C Major', TRUE),
    (2, 'Am', 'A Minor', FALSE),
    (3, 'G', 'G Major', TRUE),
    (4, 'Em', 'E Minor', FALSE),
    (5, 'D', 'D Major', TRUE),
    (6, 'Bm', 'B Minor', FALSE),
    (7, 'A', 'A Major', TRUE),
    (8, 'F#m', 'F# Minor', FALSE),
    (9, 'E', 'E Major', TRUE),
    (10, 'C#m', 'C# Minor', FALSE),
    (11, 'B', 'B Major', TRUE),
    (12, 'G#m', 'G# Minor', FALSE),
    (13, 'F#', 'F# Major', TRUE),
    (14, 'D#m', 'D# Minor', FALSE),
    (15, 'Db', 'Db Major', TRUE),
    (16, 'Bbm', 'Bb Minor', FALSE),
    (17, 'Ab', 'Ab Major', TRUE),
    (18, 'Fm', 'F Minor', FALSE),
    (19, 'Eb', 'Eb Major', TRUE),
    (20, 'Cm', 'C Minor', FALSE),
    (21, 'Bb', 'Bb Major', TRUE),
    (22, 'Gm', 'G Minor', FALSE),
    (23, 'F', 'F Major', TRUE),
    (24, 'Dm', 'D Minor', FALSE);
    
    -- Insert Genres (hierarchical)
    INSERT INTO genre (code, name, parent_id) VALUES
    ('ROCK', 'Rock', NULL),
    ('POP', 'Pop', NULL),
    ('HIPHOP', 'Hip Hop', NULL),
    ('ELECTRONIC', 'Electronic', NULL),
    ('JAZZ', 'Jazz', NULL),
    ('CLASSICAL', 'Classical', NULL),
    ('COUNTRY', 'Country', NULL),
    ('RNB', 'R&B', NULL),
    ('LATIN', 'Latin', NULL),
    ('REGGAE', 'Reggae', NULL),
    ('BLUES', 'Blues', NULL),
    ('FOLK', 'Folk', NULL),
    ('METAL', 'Metal', NULL),
    ('SOUL', 'Soul', NULL),
    ('GOSPEL', 'Gospel', NULL),
    ('WORLD', 'World', NULL),
    ('INDIE', 'Indie', NULL),
    ('ALTERNATIVE', 'Alternative', NULL),
    ('SOUNDTRACK', 'Soundtrack', NULL),
    ('KPOP', 'K-Pop', NULL);
    
    -- Insert Subscription Tiers
    INSERT INTO subscription_tier (id, code, name, max_assets, max_users, max_api_calls_per_month, price_monthly, price_yearly, features) VALUES
    (1, 'LAUNCHPAD', 'Launchpad', 50, 1, 1000, 0.00, 0.00, 
        '{"catalog_management": true, "basic_royalties": true, "basic_analytics": true, "cwr_export": false, "api_access": false, "custom_agreements": false, "blockchain": false, "support": "community"}'),
    (2, 'ASCEND', 'Ascend', 500, 5, 10000, 29.00, 290.00,
        '{"catalog_management": true, "basic_royalties": true, "basic_analytics": true, "cwr_export": true, "api_access": true, "custom_agreements": true, "blockchain": false, "support": "email"}'),
    (3, 'PRO', 'Pro', 5000, 20, 100000, 199.00, 1990.00,
        '{"catalog_management": true, "advanced_royalties": true, "advanced_analytics": true, "cwr_export": true, "api_access": true, "custom_agreements": true, "blockchain": true, "support": "priority"}'),
    (4, 'ENTERPRISE', 'Enterprise', 999999, 999999, 999999999, 0.00, 0.00,
        '{"catalog_management": true, "advanced_royalties": true, "advanced_analytics": true, "cwr_export": true, "api_access": true, "custom_agreements": true, "blockchain": true, "support": "dedicated", "custom_features": true}');
    
    -- Insert CWR Record Types
    INSERT INTO cwr_record_type (code, name, group_type, cwr_version, field_count) VALUES
    -- Headers
    ('HDR', 'Header Record', 'header', '3.1', 20),
    ('GRH', 'Group Header', 'header', '3.1', 15),
    ('TRL', 'Group Trailer', 'header', '3.1', 10),
    -- Work Records
    ('NWR', 'New Work Registration', 'work', '3.1', 45),
    ('REV', 'Revised Work Registration', 'work', '3.1', 45),
    ('ISW', 'Notification of ISWC', 'work', '3.1', 20),
    ('EXC', 'Existing Work in Conflict', 'work', '3.1', 25),
    -- Work Detail Records
    ('ALT', 'Alternate Title', 'work_detail', '3.1', 15),
    ('PER', 'Performing Artist', 'work_detail', '3.1', 20),
    ('REC', 'Recording Detail', 'work_detail', '3.1', 25),
    ('ORN', 'Work Origin', 'work_detail', '3.1', 15),
    ('INS', 'Instrumentation', 'work_detail', '3.1', 20),
    ('COM', 'Component', 'work_detail', '3.1', 25),
    ('VER', 'Original Work', 'work_detail', '3.1', 20),
    -- Interested Party Records
    ('SPU', 'Publisher Controlled by Submitter', 'party', '3.1', 40),
    ('SPT', 'Publisher Controlled by Other Society', 'party', '3.1', 40),
    ('SWR', 'Writer Controlled by Submitter', 'party', '3.1', 35),
    ('SWT', 'Writer Controlled by Other Society', 'party', '3.1', 35),
    ('PWR', 'Publisher for Writer', 'party', '3.1', 30),
    ('OPU', 'Other Publisher', 'party', '3.1', 35),
    ('OWR', 'Other Writer', 'party', '3.1', 30),
    -- Territory Records
    ('TER', 'Territory of Control', 'territory', '3.1', 20),
    -- Agreement Records
    ('AGR', 'Agreement', 'agreement', '3.1', 30),
    ('IPA', 'Interested Party Agreement', 'agreement', '3.1', 25),
    -- Acknowledgement Records
    ('ACK', 'Acknowledgement', 'acknowledgement', '3.1', 20),
    ('ERR', 'Error', 'acknowledgement', '3.1', 25),
    ('MSG', 'Message', 'acknowledgement', '3.1', 15);
    
    -- Insert DDEX Message Types
    INSERT INTO ddex_message_type (code, name, namespace, schema_version) VALUES
    ('ERN', 'Electronic Release Notification', 'http://ddex.net/xml/ern/41', '4.1'),
    ('RIN', 'Recording Information Notification', 'http://ddex.net/xml/rin/11', '1.1'),
    ('DSR', 'Digital Sales Report', 'http://ddex.net/xml/dsr/11', '1.1'),
    ('LCR', 'License Request', 'http://ddex.net/xml/lcr/10', '1.0'),
    ('MWN', 'Musical Work Notification', 'http://ddex.net/xml/mwn/11', '1.1'),
    ('WSDC', 'Web Service Description', 'http://ddex.net/xml/wsdc/10', '1.0');
    
    -- Insert System Settings
    INSERT INTO system_setting (category, setting_key, setting_value, data_type, description) VALUES
    ('general', 'platform_name', 'ASTRO', 'string', 'Platform display name'),
    ('general', 'platform_url', 'https://astrorightsadmin.com', 'string', 'Platform URL'),
    ('general', 'support_email', 'support@astrorightsadmin.com', 'string', 'Support email address'),
    ('general', 'default_currency', 'USD', 'string', 'Default currency code'),
    ('general', 'default_language', 'en', 'string', 'Default language code'),
    ('security', 'password_min_length', '8', 'integer', 'Minimum password length'),
    ('security', 'password_require_uppercase', 'true', 'boolean', 'Require uppercase letter'),
    ('security', 'password_require_lowercase', 'true', 'boolean', 'Require lowercase letter'),
    ('security', 'password_require_number', 'true', 'boolean', 'Require number'),
    ('security', 'password_require_special', 'true', 'boolean', 'Require special character'),
    ('security', 'session_timeout_minutes', '30', 'integer', 'Session timeout in minutes'),
    ('security', 'max_login_attempts', '5', 'integer', 'Max login attempts before lockout'),
    ('security', 'lockout_duration_minutes', '30', 'integer', 'Account lockout duration'),
    ('api', 'rate_limit_enabled', 'true', 'boolean', 'Enable API rate limiting'),
    ('api', 'default_page_size', '50', 'integer', 'Default API page size'),
    ('api', 'max_page_size', '1000', 'integer', 'Maximum API page size'),
    ('royalty', 'minimum_payment_threshold', '10.00', 'decimal', 'Minimum payment threshold'),
    ('royalty', 'payment_processing_days', '7', 'integer', 'Days to process payments'),
    ('cwr', 'default_version', '3.1', 'string', 'Default CWR version'),
    ('cwr', 'sender_type', 'PB', 'string', 'CWR sender type code'),
    ('ddex', 'default_version', '4.1', 'string', 'Default DDEX version'),
    ('blockchain', 'ethereum_network', 'mainnet', 'string', 'Ethereum network'),
    ('blockchain', 'solana_network', 'mainnet-beta', 'string', 'Solana network'),
    ('ai', 'metadata_validation_enabled', 'true', 'boolean', 'Enable AI metadata validation'),
    ('ai', 'similarity_threshold', '0.85', 'decimal', 'Similarity threshold for matching');
    
    -- Insert Rate Limit Tiers
    INSERT INTO rate_limit_tier (code, name, requests_per_minute, requests_per_hour, requests_per_day) VALUES
    ('BASIC', 'Basic', 60, 1000, 10000),
    ('STANDARD', 'Standard', 120, 5000, 50000),
    ('PREMIUM', 'Premium', 300, 10000, 100000),
    ('UNLIMITED', 'Unlimited', 9999, 99999, 999999);
    
    -- Insert Payment Methods
    INSERT INTO payment_method (id, code, name, processor) VALUES
    (1, 'STRIPE_CARD', 'Credit/Debit Card', 'stripe'),
    (2, 'STRIPE_BANK', 'Bank Transfer', 'stripe'),
    (3, 'PAYPAL', 'PayPal', 'paypal'),
    (4, 'WIRE', 'Wire Transfer', 'manual'),
    (5, 'CRYPTO', 'Cryptocurrency', 'crypto');
    
END$$

DELIMITER ;

-- ============================================================
-- INITIAL DATA LOAD
-- ============================================================

CALL init_reference_data();

-- ============================================================
-- REFERENCE DATA VIEWS
-- ============================================================

-- View for active societies with contact info
CREATE VIEW v_active_societies AS
SELECT 
    s.id,
    s.code,
    s.name,
    s.acronym,
    s.country_id,
    c.name_english AS country_name,
    s.society_type,
    s.ipi_number,
    s.website,
    s.email,
    s.supports_cwr,
    s.cwr_version,
    s.supports_ddex,
    s.ddex_version
FROM society s
JOIN country c ON s.country_id = c.id
WHERE s.is_active = TRUE
ORDER BY s.name;

-- View for territories with countries
CREATE VIEW v_territory_countries AS
SELECT 
    tg.id AS territory_id,
    tg.code AS territory_code,
    tg.name AS territory_name,
    c.id AS country_id,
    c.name_english AS country_name,
    c.iso_alpha_3 AS country_code_3
FROM territory_group tg
JOIN territory_group_member tgm ON tg.id = tgm.territory_group_id
JOIN country c ON tgm.country_id = c.id
ORDER BY tg.name, c.name_english;

-- View for subscription features
CREATE VIEW v_subscription_features AS
SELECT 
    st.id,
    st.code,
    st.name,
    st.max_assets,
    st.max_users,
    st.max_api_calls_per_month,
    st.price_monthly,
    st.price_yearly,
    JSON_UNQUOTE(JSON_EXTRACT(st.features, '$.catalog_management')) AS catalog_management,
    JSON_UNQUOTE(JSON_EXTRACT(st.features, '$.basic_royalties')) AS basic_royalties,
    JSON_UNQUOTE(JSON_EXTRACT(st.features, '$.advanced_royalties')) AS advanced_royalties,
    JSON_UNQUOTE(JSON_EXTRACT(st.features, '$.basic_analytics')) AS basic_analytics,
    JSON_UNQUOTE(JSON_EXTRACT(st.features, '$.advanced_analytics')) AS advanced_analytics,
    JSON_UNQUOTE(JSON_EXTRACT(st.features, '$.cwr_export')) AS cwr_export,
    JSON_UNQUOTE(JSON_EXTRACT(st.features, '$.api_access')) AS api_access,
    JSON_UNQUOTE(JSON_EXTRACT(st.features, '$.custom_agreements')) AS custom_agreements,
    JSON_UNQUOTE(JSON_EXTRACT(st.features, '$.blockchain')) AS blockchain,
    JSON_UNQUOTE(JSON_EXTRACT(st.features, '$.support')) AS support_level
FROM subscription_tier st
WHERE st.is_active = TRUE
ORDER BY st.display_order;

-- ============================================================
-- GRANTS (adjust as needed for your setup)
-- ============================================================

-- Create application user if not exists
-- CREATE USER IF NOT EXISTS 'astro_app'@'%' IDENTIFIED BY 'your_secure_password';

-- Grant privileges
-- GRANT SELECT, INSERT, UPDATE ON reference_db.* TO 'astro_app'@'%';
-- GRANT DELETE ON reference_db.system_setting TO 'astro_app'@'%';
-- GRANT EXECUTE ON reference_db.* TO 'astro_app'@'%';

-- FLUSH PRIVILEGES;


-- NEW FROM GEMINI --

CREATE TABLE reference_db.tokens (
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE,
    symbol VARCHAR(10) NOT NULL UNIQUE,
    blockchain_network_id INT UNSIGNED NOT NULL, -- FK to reference_db.blockchain_networks
    contract_address VARCHAR(128) NULL,
    decimal_places INT NOT NULL DEFAULT 18,
    is_native BOOLEAN DEFAULT FALSE, -- e.g., ETH, MATIC
    description TEXT,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_tokens_blockchain_networks FOREIGN KEY (blockchain_network_id) REFERENCES reference_db.blockchain_networks(id) ON DELETE RESTRICT
) ENGINE=InnoDB;

INSERT INTO reference_db.tokens (name, symbol, blockchain_network_id, contract_address, is_native) VALUES
('ASTRO Coin', 'ASTRO', (SELECT id FROM reference_db.blockchain_networks WHERE name = 'Ethereum Mainnet'), '0x...', FALSE); -- Placeholder contract address

CREATE TABLE astro_db.token_transactions (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    transaction_hash VARCHAR(128) NOT NULL UNIQUE,
    token_id INT UNSIGNED NOT NULL, -- FK to reference_db.tokens (ASTRO Coin or other)
    sender_wallet_id BIGINT UNSIGNED NULL, -- FK to astro_db.fan_wallets or astro_db.wallets
    recipient_wallet_id BIGINT UNSIGNED NULL, -- FK to astro_db.fan_wallets or astro_db.wallets
    amount DECIMAL(19,8) NOT NULL,
    transaction_type VARCHAR(50) NOT NULL, -- e.g., 'MINT', 'TRANSFER', 'BURN', 'ROYALTY_PAYOUT', 'INVESTMENT'
    blockchain_network_id INT UNSIGNED NOT NULL, -- FK to reference_db.blockchain_networks
    transaction_date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    gas_fee DECIMAL(19,8) NULL,
    gas_currency_id INT UNSIGNED NULL, -- FK to reference_db.currencies
    status VARCHAR(20) NOT NULL, -- e.g., 'PENDING', 'CONFIRMED', 'FAILED'
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_token_tx_token FOREIGN KEY (token_id) REFERENCES reference_db.tokens(id) ON DELETE RESTRICT,
    CONSTRAINT fk_token_tx_sender_wallet FOREIGN KEY (sender_wallet_id) REFERENCES astro_db.fan_wallets(id) ON DELETE SET NULL, -- Assuming fan_wallets also handles artist/label wallets, or create a generic wallet table
    CONSTRAINT fk_token_tx_recipient_wallet FOREIGN KEY (recipient_wallet_id) REFERENCES astro_db.fan_wallets(id) ON DELETE SET NULL,
    CONSTRAINT fk_token_tx_network FOREIGN KEY (blockchain_network_id) REFERENCES reference_db.blockchain_networks(id) ON DELETE RESTRICT
) ENGINE=InnoDB;

CREATE TABLE reference_db.dsp_cpm_rates (
    id BIGINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    dsp_id INT UNSIGNED NOT NULL, -- FK to reference_db.dsps
    territory_id CHAR(3) NOT NULL, -- FK to reference_db.territories
    tier_type VARCHAR(50) NOT NULL, -- e.g., 'PREMIUM', 'FREE', 'AD_SUPPORTED'
    cpm_rate DECIMAL(10,6) NOT NULL, -- Cost Per Mille (rate per 1000 streams)
    effective_date DATE NOT NULL,
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT fk_cpm_rates_dsp FOREIGN KEY (dsp_id) REFERENCES reference_db.dsps(id) ON DELETE RESTRICT,
    CONSTRAINT fk_cpm_rates_territory FOREIGN KEY (territory_id) REFERENCES reference_db.territories(id) ON DELETE RESTRICT,
    UNIQUE KEY uk_cpm_rate (dsp_id, territory_id, tier_type, effective_date)
) ENGINE=InnoDB;

CREATE TABLE reference_db.catalog_decay_rates (
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    genre_id INT UNSIGNED NULL, -- FK to reference_db.genres
    catalog_type VARCHAR(50) NOT NULL, -- 'EVERGREEN', 'NEW_RELEASE', 'BACK_CATALOG'
    decay_factor DECIMAL(5,4) NOT NULL, -- e.g., 0.50 for 50% decay annually
    description TEXT,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_decay_rates_genre FOREIGN KEY (genre_id) REFERENCES reference_db.genre(id) ON DELETE SET NULL
) ENGINE=InnoDB;

CREATE TABLE reference_db.tax_treaties (
    id INT UNSIGNED PRIMARY KEY AUTO_INCREMENT,
    country_id_1 CHAR(3) NOT NULL,
    country_id_2 CHAR(3) NOT NULL,
    treaty_type VARCHAR(50) NOT NULL, -- e.g., 'DOUBLE_TAXATION_AVOIDANCE'
    royalty_withholding_rate DECIMAL(5,4) NULL, -- applicable rate
    effective_date DATE NOT NULL,
    description TEXT,
    created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UNIQUE KEY uk_tax_treaty (country_id_1, country_id_2, effective_date),
    CONSTRAINT fk_tax_treaty_country1 FOREIGN KEY (country_id_1) REFERENCES reference_db.country(id),
    CONSTRAINT fk_tax_treaty_country2 FOREIGN KEY (country_id_2) REFERENCES reference_db.country(id)
) ENGINE=InnoDB;

